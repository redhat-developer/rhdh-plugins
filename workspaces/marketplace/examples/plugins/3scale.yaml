# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: 3scale
  namespace: rhdh
  title: APIs with 3scale
  annotations:
    extensions.backstage.io/pre-installed: 'true'
  links:
    - url: https://red.ht/rhdh
      title: Homepage
    - url: https://issues.redhat.com/browse/RHIDP
      title: Bugs
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/backstage-community-plugin-3scale-backend-dynamic
    - title: Documentation for Red Hat Developer Hub
      url: https://docs.redhat.com/en/documentation/red_hat_developer_hub
  tags:
    - apis
  description: |
    3scale provides a comprehensive API management solution, enabling organizations to secure, manage, and monetize APIs. 
    Key features include access control, usage analytics, and policy enforcement. 
    The 3scale plugin synchronizes your 3scale content into the software catalog.
spec:
  author: Red Hat
  support:
    name: Red Hat
    level: tech-preview
  lifecycle: active
  publisher: Red Hat

  description: |
    The 3scale Backstage plugin surfaces critical API management data within the Backstage ecosystem, providing a read-only view of API usage, plans, 
    and policies, streamlining developer workflows and providing a unified view of software assets. The plugin does not manage the APIs, but rather 
    displays important information. Specifically, the plugin:

    * Presents API usage statistics, allowing developers to monitor API performance and consumption directly within Backstage.
    * Provides direct links to the 3scale management console, enabling users to quickly navigate to 3scale for detailed API management tasks.
    * The plugin aims to consolidate important API information, reducing context switching and improving developer efficiency by providing a 
      central point for API visibility.

    ## Adding The Plugin To Red Hat Developer Hub

    See the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub) 
    for further instructions on how to add, enable, configure, and remove plugins in your instance.

    ## Configuring The Plugin ##

    Plugins often need additional configuration to work correctly - particularly those that integrate with other 
    systems. See the original source code repository, the software vendor, or the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub)
    for further details regarding the configuration required.

    3scale Backstage provider allows configuration of one or multiple providers using the `app-config.yaml` configuration file of Backstage.

    ```yaml title="app-config.yaml"
    catalog:
      providers:
        threeScaleApiEntity:
          dev:
            baseUrl: https://<TENANT>-admin.3scale.net
            accessToken: <ACCESS_TOKEN>
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { minutes: 30 }
              # supports ISO duration, "human duration" as used in code
              timeout: { minutes: 3 }
    ```

    **NOTE:** Be sure to configure the schedule inside the `app-config.yaml` file. The default schedule is a frequency of 30 minutes and a timeout of 3 minutes.

  categories:
    - API Management

  highlights:
    - OpenShift support
    - Access Control & Security (Managed within 3scale)
    - Rate Limiting & Quotas (Managed within 3scale)
    - API Monetization Tools (Managed within 3scale)
    - Policy Enforcement (Managed within 3scale)

  icon: data:image/svg+xml;base64,
    PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJ1dWlkLTBkNzkz
    YTAzLWZjNjAtNGI1Yy05NDcwLTUxNGQ5OWVmYmY4NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3Jn
    LzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMzggMzgiPjxkZWZzPjxzdHlsZT4udXVpZC02NzgzYjhm
    MS0zMzQwLTRiOTUtYjQ3Yi1iZTQ5MWQ5MDI2ODB7ZmlsbDojZTAwO30udXVpZC1mODRhM2ZjMy1j
    NDczLTQ3MzQtODc3Yi01NGQ3NjlkMTViMDR7ZmlsbDojZmZmO30udXVpZC1kZjVmYzZhZS00YjZi
    LTRhZTEtODU0Yi0yNTExMDhlYzk5YTV7ZmlsbDojNGQ0ZDRkO308L3N0eWxlPjwvZGVmcz48cmVj
    dCB4PSIxIiB5PSIxIiB3aWR0aD0iMzYiIGhlaWdodD0iMzYiIHJ4PSI5IiByeT0iOSIvPjxwYXRo
    IGNsYXNzPSJ1dWlkLWRmNWZjNmFlLTRiNmItNGFlMS04NTRiLTI1MTEwOGVjOTlhNSIgZD0ibTI4
    LDIuMjVjNC4yNzMzOCwwLDcuNzUsMy40NzY2NCw3Ljc1LDcuNzV2MThjMCw0LjI3MzM2LTMuNDc2
    NjIsNy43NS03Ljc1LDcuNzVIMTBjLTQuMjczMzgsMC03Ljc1LTMuNDc2NjQtNy43NS03Ljc1VjEw
    YzAtNC4yNzMzNiwzLjQ3NjYyLTcuNzUsNy43NS03Ljc1aDE4bTAtMS4yNUgxMEM1LjAyOTQyLDEs
    MSw1LjAyOTQzLDEsMTB2MThjMCw0Ljk3MDU3LDQuMDI5NDIsOSw5LDloMThjNC45NzA1OCwwLDkt
    NC4wMjk0Myw5LTlWMTBjMC00Ljk3MDU3LTQuMDI5NDItOS05LTloMFoiLz48cGF0aCBjbGFzcz0i
    dXVpZC02NzgzYjhmMS0zMzQwLTRiOTUtYjQ3Yi1iZTQ5MWQ5MDI2ODAiIGQ9Im0yNS41LDIyLjg3
    NWMtLjk1Mjk0LDAtMS43NTE1OS42MzQ0LTIuMDIwMzksMS41aC0xLjg1NDYxdi0yLjM3NWMwLS4z
    NDUyMS0uMjgwMjctLjYyNS0uNjI1LS42MjVzLS42MjUuMjc5NzktLjYyNS42MjV2M2MwLC4zNDUy
    MS4yODAyNy42MjUuNjI1LjYyNWgyLjQ3OTYxYy4yNjg4Ljg2NTYsMS4wNjc1LDEuNSwyLjAyMDM5
    LDEuNSwxLjE3MTg4LDAsMi4xMjUtLjk1MzEyLDIuMTI1LTIuMTI1cy0uOTUzMTItMi4xMjUtMi4x
    MjUtMi4xMjVabTAsM2MtLjQ4MjQyLDAtLjg3NS0uMzkyNTgtLjg3NS0uODc1cy4zOTI1OC0uODc1
    Ljg3NS0uODc1Ljg3NS4zOTI1OC44NzUuODc1LS4zOTI1OC44NzUtLjg3NS44NzVaIi8+PHBhdGgg
    Y2xhc3M9InV1aWQtNjc4M2I4ZjEtMzM0MC00Yjk1LWI0N2ItYmU0OTFkOTAyNjgwIiBkPSJtMjEs
    MTYuNjI1Yy4zNDQ3MywwLC42MjUtLjI3OTc5LjYyNS0uNjI1di0yLjM3NWgxLjkxNDQzYy4zMjA5
    OC43NjcwMywxLjA3ODM3LDEuMzA3NjIsMS45NjA1NywxLjMwNzYyLDEuMTcxODgsMCwyLjEyNS0u
    OTUzMTIsMi4xMjUtMi4xMjVzLS45NTMxMi0yLjEyNS0yLjEyNS0yLjEyNWMtMS4wMjM2MiwwLTEu
    ODc5ODIuNzI3MzYtMi4wODAyLDEuNjkyMzhoLTIuNDE5OGMtLjM0NDczLDAtLjYyNS4yNzk3OS0u
    NjI1LjYyNXYzYzAsLjM0NTIxLjI4MDI3LjYyNS42MjUuNjI1Wm00LjUtNC42OTIzOGMuNDgyNDIs
    MCwuODc1LjM5MjU4Ljg3NS44NzVzLS4zOTI1OC44NzUtLjg3NS44NzUtLjg3NS0uMzkyNTgtLjg3
    NS0uODc1LjM5MjU4LS44NzUuODc1LS44NzVaIi8+PHBhdGggY2xhc3M9InV1aWQtNjc4M2I4ZjEt
    MzM0MC00Yjk1LWI0N2ItYmU0OTFkOTAyNjgwIiBkPSJtMjksMTYuODM2NDNoLTNjLS4zNDQ3Myww
    LS42MjUuMjc5NzktLjYyNS42MjV2LjkxMzU3aC0yLjM3NWMtLjM0NDczLDAtLjYyNS4yNzk3OS0u
    NjI1LjYyNXMuMjgwMjcuNjI1LjYyNS42MjVoMi4zNzV2LjgzNjQzYzAsLjM0NTIxLjI4MDI3LjYy
    NS42MjUuNjI1aDNjLjM0NDczLDAsLjYyNS0uMjc5NzkuNjI1LS42MjV2LTNjMC0uMzQ1MjEtLjI4
    MDI3LS42MjUtLjYyNS0uNjI1Wm0tLjYyNSwzaC0xLjc1di0xLjc1aDEuNzV2MS43NVoiLz48cGF0
    aCBjbGFzcz0idXVpZC02NzgzYjhmMS0zMzQwLTRiOTUtYjQ3Yi1iZTQ5MWQ5MDI2ODAiIGQ9Im0x
    Mi42MjUsMjAuNDYxNDN2LS44MzY0M2gyLjM3NWMuMzQ0NzMsMCwuNjI1LS4yNzk3OS42MjUtLjYy
    NXMtLjI4MDI3LS42MjUtLjYyNS0uNjI1aC0yLjM3NXYtLjkxMzU3YzAtLjM0NTIxLS4yODAyNy0u
    NjI1LS42MjUtLjYyNWgtM2MtLjM0NDczLDAtLjYyNS4yNzk3OS0uNjI1LjYyNXYzYzAsLjM0NTIx
    LjI4MDI3LjYyNS42MjUuNjI1aDNjLjM0NDczLDAsLjYyNS0uMjc5NzkuNjI1LS42MjVabS0xLjI1
    LS42MjVoLTEuNzV2LTEuNzVoMS43NXYxLjc1WiIvPjxwYXRoIGNsYXNzPSJ1dWlkLTY3ODNiOGYx
    LTMzNDAtNGI5NS1iNDdiLWJlNDkxZDkwMjY4MCIgZD0ibTE3LDIxLjM3NWMtLjM0NDczLDAtLjYy
    NS4yNzk3OS0uNjI1LjYyNXYyLjM3NWgtMS44NTQ1NWMtLjI2ODgtLjg2NTYtMS4wNjc1LTEuNS0y
    LjAyMDQ1LTEuNS0xLjE3MTg4LDAtMi4xMjUuOTUzMTItMi4xMjUsMi4xMjVzLjk1MzEyLDIuMTI1
    LDIuMTI1LDIuMTI1Yy45NTI4OCwwLDEuNzUxNjUtLjYzNDQsMi4wMjA0NS0xLjVoMi40Nzk1NWMu
    MzQ0NzMsMCwuNjI1LS4yNzk3OS42MjUtLjYyNXYtM2MwLS4zNDUyMS0uMjgwMjctLjYyNS0uNjI1
    LS42MjVabS00LjUsNC41Yy0uNDgyNDIsMC0uODc1LS4zOTI1OC0uODc1LS44NzVzLjM5MjU4LS44
    NzUuODc1LS44NzUuODc1LjM5MjU4Ljg3NS44NzUtLjM5MjU4Ljg3NS0uODc1Ljg3NVoiLz48cGF0
    aCBjbGFzcz0idXVpZC02NzgzYjhmMS0zMzQwLTRiOTUtYjQ3Yi1iZTQ5MWQ5MDI2ODAiIGQ9Im0x
    NywxMi4zNzVoLTIuNDE5NzRjLS4yMDAzOC0uOTY1MDMtMS4wNTY2NC0xLjY5MjM4LTIuMDgwMjYt
    MS42OTIzOC0xLjE3MTg4LDAtMi4xMjUuOTUzMTItMi4xMjUsMi4xMjVzLjk1MzEyLDIuMTI1LDIu
    MTI1LDIuMTI1Yy44ODIyLDAsMS42Mzk1OS0uNTQwNTksMS45NjA1Ny0xLjMwNzYyaDEuOTE0NDN2
    Mi4zNzVjMCwuMzQ1MjEuMjgwMjcuNjI1LjYyNS42MjVzLjYyNS0uMjc5NzkuNjI1LS42MjV2LTNj
    MC0uMzQ1MjEtLjI4MDI3LS42MjUtLjYyNS0uNjI1Wm0tNC41LDEuMzA3NjJjLS40ODI0MiwwLS44
    NzUtLjM5MjU4LS44NzUtLjg3NXMuMzkyNTgtLjg3NS44NzUtLjg3NS44NzUuMzkyNTguODc1Ljg3
    NS0uMzkyNTguODc1LS44NzUuODc1WiIvPjxwYXRoIGNsYXNzPSJ1dWlkLWY4NGEzZmMzLWM0NzMt
    NDczNC04NzdiLTU0ZDc2OWQxNWIwNCIgZD0ibTE5LDIzLjEyNWMtMi4yNzQ0MSwwLTQuMTI1LTEu
    ODUwNTktNC4xMjUtNC4xMjVzMS44NTA1OS00LjEyNSw0LjEyNS00LjEyNSw0LjEyNSwxLjg1MDU5
    LDQuMTI1LDQuMTI1LTEuODUwNTksNC4xMjUtNC4xMjUsNC4xMjVabTAtN2MtMS41ODQ5NiwwLTIu
    ODc1LDEuMjg5NTUtMi44NzUsMi44NzVzMS4yOTAwNCwyLjg3NSwyLjg3NSwyLjg3NSwyLjg3NS0x
    LjI4OTU1LDIuODc1LTIuODc1LTEuMjkwMDQtMi44NzUtMi44NzUtMi44NzVaIi8+PC9zdmc+

  # unused yet
  documentation:
    - type: configuration
      title: Configuration
      markdown: |
        # Configuration

        3scale Backstage provider allows configuration of one or multiple providers using the `app-config.yaml` configuration file of Backstage.

        ## New Backend Procedure

        1. Use a `threeScaleApiEntity` marker to start configuring the `app-config.yaml` file of Backstage:

          ```yaml title="app-config.yaml"
          catalog:
            providers:
              threeScaleApiEntity:
                dev:
                  baseUrl: https://<TENANT>-admin.3scale.net
                  accessToken: <ACCESS_TOKEN>
                  schedule: # optional; same options as in TaskScheduleDefinition
                    # supports cron, ISO duration, "human duration" as used in code
                    frequency: { minutes: 30 }
                    # supports ISO duration, "human duration" as used in code
                    timeout: { minutes: 3 }
          ```

          **NOTE**
          Make sure to configure the schedule inside the `app-config.yaml` file. The default schedule is a frequency of 30 minutes and a timeout of 3 minutes.

        2. Add the following code to the `packages/backend/src/index.ts` file:

          ```ts title="packages/backend/src/index.ts"
          const backend = createBackend();

          /* highlight-add-next-line */
          backend.add(import('@backstage-community/plugin-3scale-backend'));

          backend.start();
          ```
    - type: usage
      title: Troubleshooting
      markdown: |
        # Troubleshooting

        When you start your Backstage application, you can see some log lines as follows:

        ```log
        [1] 2023-02-13T15:26:09.356Z catalog info Discovered ApiEntity API type=plugin target=ThreeScaleApiEntityProvider:dev
        [1] 2023-02-13T15:26:09.423Z catalog info Discovered ApiEntity Red Hat Event (DEV, v1.2.0) type=plugin target=ThreeScaleApiEntityProvider:dev
        [1] 2023-02-13T15:26:09.620Z catalog info Discovered ApiEntity Red Hat Event (TEST, v1.1.0) type=plugin target=ThreeScaleApiEntityProvider:dev
        [1] 2023-02-13T15:26:09.819Z catalog info Discovered ApiEntity Red Hat Event (PROD, v1.1.0) type=plugin target=ThreeScaleApiEntityProvider:dev
        [1] 2023-02-13T15:26:09.819Z catalog info Applying the mutation with 3 entities type=plugin target=ThreeScaleApiEntityProvider:dev
        ```

  assets:
    - type: icon
      filename: img/3scale.svg
      originUri: https://github.com/backstage/backstage/blob/master/microsite/static/img/3scale.svg

  history:
    added: '2023-05-15'

  packages:
    - backstage-community-plugin-3scale-backend
