{"version":3,"file":"common.esm.js","sources":["../../../src/generated/client/common.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Orchestrator plugin\n * API to interact with orchestrator plugin\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from \"./configuration\";\nimport type { RequestArgs } from \"./base\";\nimport type { AxiosInstance, AxiosResponse } from 'axios';\nimport { RequiredError } from \"./base\";\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\nfunction setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = \"\"): void {\n    if (parameter == null) return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        } \n        else {\n            Object.keys(parameter).forEach(currentKey => \n                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)\n            );\n        }\n    } \n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        } \n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (axios.defaults.baseURL ? '' : configuration?.basePath ?? basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n"],"names":[],"mappings":";;AAwBO,MAAM,cAAA,GAAiB;AAOvB,MAAM,iBAAA,GAAoB,SAAU,YAAA,EAAsB,SAAA,EAAmB,UAAA,EAAqB;AACrG,EAAA,IAAI,UAAA,KAAe,IAAA,IAAQ,UAAA,KAAe,MAAA,EAAW;AACjD,IAAA,MAAM,IAAI,aAAA,CAAc,SAAA,EAAW,sBAAsB,SAAS,CAAA,oCAAA,EAAuC,YAAY,CAAA,CAAA,CAAG,CAAA;AAAA,EAC5H;AACJ;AAmDA,SAAS,uBAAA,CAAwB,eAAA,EAAkC,SAAA,EAAgB,GAAA,GAAc,EAAA,EAAU;AACvG,EAAA,IAAI,aAAa,IAAA,EAAM;AACvB,EAAA,IAAI,OAAO,cAAc,QAAA,EAAU;AAC/B,IAAA,IAAI,KAAA,CAAM,OAAA,CAAQ,SAAS,CAAA,EAAG;AAC1B,MAAC,UAAoB,OAAA,CAAQ,CAAA,IAAA,KAAQ,wBAAwB,eAAA,EAAiB,IAAA,EAAM,GAAG,CAAC,CAAA;AAAA,IAC5F,CAAA,MACK;AACD,MAAA,MAAA,CAAO,IAAA,CAAK,SAAS,CAAA,CAAE,OAAA;AAAA,QAAQ,CAAA,UAAA,KAC3B,uBAAA,CAAwB,eAAA,EAAiB,SAAA,CAAU,UAAU,CAAA,EAAG,CAAA,EAAG,GAAG,CAAA,EAAG,QAAQ,EAAA,GAAK,GAAA,GAAM,EAAE,CAAA,EAAG,UAAU,CAAA,CAAE;AAAA,OACjH;AAAA,IACJ;AAAA,EACJ,CAAA,MACK;AACD,IAAA,IAAI,eAAA,CAAgB,GAAA,CAAI,GAAG,CAAA,EAAG;AAC1B,MAAA,eAAA,CAAgB,MAAA,CAAO,KAAK,SAAS,CAAA;AAAA,IACzC,CAAA,MACK;AACD,MAAA,eAAA,CAAgB,GAAA,CAAI,KAAK,SAAS,CAAA;AAAA,IACtC;AAAA,EACJ;AACJ;AAMO,MAAM,eAAA,GAAkB,SAAU,GAAA,EAAA,GAAa,OAAA,EAAgB;AAClE,EAAA,MAAM,YAAA,GAAe,IAAI,eAAA,CAAgB,GAAA,CAAI,MAAM,CAAA;AACnD,EAAA,uBAAA,CAAwB,cAAc,OAAO,CAAA;AAC7C,EAAA,GAAA,CAAI,MAAA,GAAS,aAAa,QAAA,EAAS;AACvC;AAMO,MAAM,qBAAA,GAAwB,SAAU,KAAA,EAAY,cAAA,EAAqB,aAAA,EAA+B;AAC3G,EAAA,MAAM,SAAA,GAAY,OAAO,KAAA,KAAU,QAAA;AACnC,EAAA,MAAM,kBAAA,GAAqB,SAAA,IAAa,aAAA,IAAiB,aAAA,CAAc,UAAA,GACjE,aAAA,CAAc,UAAA,CAAW,cAAA,CAAe,OAAA,CAAQ,cAAc,CAAC,CAAA,GAC/D,SAAA;AACN,EAAA,OAAO,kBAAA,GACD,KAAK,SAAA,CAAU,KAAA,KAAU,SAAY,KAAA,GAAQ,EAAE,CAAA,GAC9C,KAAA,IAAS,EAAA;AACpB;AAMO,MAAM,YAAA,GAAe,SAAU,GAAA,EAAU;AAC5C,EAAA,OAAO,GAAA,CAAI,QAAA,GAAW,GAAA,CAAI,MAAA,GAAS,GAAA,CAAI,IAAA;AAC3C;AAMO,MAAM,qBAAA,GAAwB,SAAU,SAAA,EAAwB,WAAA,EAA4B,WAAmB,aAAA,EAA+B;AACjJ,EAAA,OAAO,CAAoC,KAAA,GAAuB,WAAA,EAAa,QAAA,GAAmB,SAAA,KAAc;AAC5G,IAAA,MAAM,gBAAA,GAAmB,EAAC,GAAG,SAAA,CAAU,SAAS,GAAA,EAAA,CAAM,KAAA,CAAM,QAAA,CAAS,OAAA,GAAU,EAAA,GAAK,aAAA,EAAe,QAAA,IAAY,QAAA,IAAY,UAAU,GAAA,EAAG;AACxI,IAAA,OAAO,KAAA,CAAM,QAAc,gBAAgB,CAAA;AAAA,EAC/C,CAAA;AACJ;;;;"}