{"version":3,"file":"base.cjs.js","sources":["../../../src/generated/client/base.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Orchestrator plugin\n * API to interact with orchestrator plugin\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport type { Configuration } from './configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';\nimport globalAxios from 'axios';\n\nexport const BASE_PATH = \"http://localhost\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: RawAxiosRequestConfig;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath ?? basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    constructor(public field: string, msg?: string) {\n        super(msg);\n        this.name = \"RequiredError\"\n    }\n}\n\ninterface ServerMap {\n    [key: string]: {\n        url: string,\n        description: string,\n    }[];\n}\n\n/**\n *\n * @export\n */\nexport const operationServerMap: ServerMap = {\n}\n"],"names":["globalAxios"],"mappings":";;;;;;;;AAqBO,MAAM,SAAA,GAAY,kBAAA,CAAmB,OAAA,CAAQ,MAAA,EAAQ,EAAE;AA4BvD,MAAM,OAAA,CAAQ;AAAA,EAGjB,WAAA,CAAY,aAAA,EAAyC,QAAA,GAAmB,SAAA,EAAqB,QAAuBA,4BAAA,EAAa;AAA5E,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AAAwC,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACzF,IAAA,IAAI,aAAA,EAAe;AACf,MAAA,IAAA,CAAK,aAAA,GAAgB,aAAA;AACrB,MAAA,IAAA,CAAK,QAAA,GAAW,cAAc,QAAA,IAAY,QAAA;AAAA,IAC9C;AAAA,EACJ;AAAA,EAPU,aAAA;AAQd;AAQO,MAAM,sBAAsB,KAAA,CAAM;AAAA,EACrC,WAAA,CAAmB,OAAe,GAAA,EAAc;AAC5C,IAAA,KAAA,CAAM,GAAG,CAAA;AADM,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAEf,IAAA,IAAA,CAAK,IAAA,GAAO,eAAA;AAAA,EAChB;AACJ;AAaO,MAAM,qBAAgC;;;;;;;"}