{"version":3,"file":"static/exposed-PluginRoot.f3edccbd.chunk.js","mappings":"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","sources":["webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/../orchestrator-form-api/src/api.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/../orchestrator-common/src/utils/isJsonObject.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/applySelector.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useTemplateUnitEvaluator.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/uiPropTypes.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useRetriggerEvaluate.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/errorUtils.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/constants.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/evaluateTemplate.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useRequestInit.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/constants.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useFetch.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/ErrorText.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/ActiveTextInput.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/ActiveDropdown.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/ActiveMultiSelect.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/safeSet.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useGetExtraErrors.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/FormWidgetsApi.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/SchemaUpdater.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/widgets/ActiveText.tsx","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/utils/useFetchAndEvaluate.ts","webpack://red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets/./src/plugin.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef, useApiHolder } from '@backstage/core-plugin-api';\nimport { JsonObject } from '@backstage/types';\n\nimport { FormProps } from '@rjsf/core';\nimport { ErrorSchema, UiSchema } from '@rjsf/utils';\nimport type { JSONSchema7 } from 'json-schema';\n\nimport { AuthTokenDescriptor } from '@redhat/backstage-plugin-orchestrator-common';\n\nimport { defaultFormExtensionsApi } from './DefaultFormApi';\n\n/**\n/**\n * @public\n *\n */\nexport type OrchestratorFormContextProps = {\n  schema: JSONSchema7;\n  updateSchema: OrchestratorFormSchemaUpdater;\n  numStepsInMultiStepSchema?: number;\n  uiSchema: UiSchema<JsonObject, JSONSchema7>;\n  formData: JsonObject;\n  setFormData: (data: JsonObject) => void;\n  children: React.ReactNode;\n  onSubmit: (formData: JsonObject) => void;\n  setAuthTokenDescriptors: (\n    authTokenDescriptors: AuthTokenDescriptor[],\n  ) => void;\n  getIsChangedByUser: (id: string) => boolean;\n  setIsChangedByUser: (id: string, isChangedByUser: boolean) => void;\n};\n\n/**\n * @public\n * FormDecoratorProps\n *\n * Type definition for properties passed to a form decorator component.\n * This interface extends selected fields from `FormProps` provided by `react-jsonschema-form`,\n * with additional custom functionality.\n *\n * @see {@link https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/form-props|RJSF Form Props Documentation}\n *\n * Core properties include:\n * - formData: The form's current data\n * - formContext: Contextual data shared across form components\n * - widgets: Custom widget components for form fields\n * - onChange: Handler for form data changes\n * - customValidate: Custom validation function\n *\n * Additional properties:\n * - getExtraErrors: Async function to fetch additional validation errors.\n *   This replaces the static 'extraErrors' prop from react-jsonschema-form, which can't be used as is, since onSubmit isn't exposed.\n *   The orchestrator form component will call getExtraErrors when running onSubmit.\n */\nexport type FormDecoratorProps = Pick<\n  FormProps<JsonObject, JSONSchema7, OrchestratorFormContextProps>,\n  | 'formData'\n  | 'formContext'\n  | 'widgets'\n  | 'onChange'\n  | 'customValidate'\n  | 'templates'\n> & {\n  getExtraErrors?: (\n    formData: JsonObject,\n    uiSchema: OrchestratorFormContextProps['uiSchema'],\n  ) => Promise<ErrorSchema<JsonObject>> | undefined;\n};\n\n/**\n * @public\n * OrchestratorFormDecorator\n *\n */\nexport type OrchestratorFormDecorator = (\n  FormComponent: React.ComponentType<FormDecoratorProps>,\n) => React.ComponentType<OrchestratorFormContextProps>;\n\n/**\n * @public\n *\n * Expected response received by fetch:url of the SchemaUpdater widget.\n *\n * Key is the JSON Schema placeholder identifier,\n * Value is content the key will be newly assigned to.\n */\nexport type SchemaChunksResponse = {\n  [key: string]: JsonObject;\n};\n\n/**\n * @public\n *\n * Function provided by the Orchestrator down to the OrchestratorFormApi to update the form's JSON Schema on the fly.\n */\nexport type OrchestratorFormSchemaUpdater = (\n  chunks: SchemaChunksResponse,\n) => void;\n\n/**\n * @public\n * OrchestratorFormApi\n * API to be implemented by factory in a custom plugin\n */\nexport interface OrchestratorFormApi {\n  /**\n   * @public\n   * Context wrapping the RJSF form on Workflow execution page, making it available for the custom widgets.\n   *\n   * Must be created by the API to share just a single instance within both the OrchestratorFormApi and\n   * the Orchestrator where the context is actually provided (see OrchestratorFormWrapper).\n   */\n  // getFormContext(): Context<OrchestratorFormContextProps | null>;\n\n  /**\n   * @public\n   * getFormDecorator\n   * return the form decorator\n   */\n  getFormDecorator(): OrchestratorFormDecorator;\n}\n\n/**\n * @public\n * OrchestratorFormApiRef\n *\n */\nexport const orchestratorFormApiRef = createApiRef<OrchestratorFormApi>({\n  id: 'plugin.orchestrator.form',\n});\n\nexport const useOrchestratorFormApiOrDefault = (): OrchestratorFormApi =>\n  useApiHolder().get(orchestratorFormApiRef) ?? defaultFormExtensionsApi;\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonObject, JsonValue } from '@backstage/types';\n\nexport function isJsonObject(value?: JsonValue): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport jsonata from 'jsonata';\nimport { JsonArray, JsonObject } from '@backstage/types';\nimport { isJsonObject } from '@redhat/backstage-plugin-orchestrator-common';\n\nexport const applySelectorArray = async (\n  data: JsonObject | JsonArray,\n  selector: string,\n  createArrayIfNeeded: boolean = false,\n  emptyArrayIfNeeded: boolean = false,\n): Promise<string[]> => {\n  const expression = jsonata(selector);\n  const value = await expression.evaluate(data);\n\n  if (emptyArrayIfNeeded && !value) {\n    return [];\n  }\n\n  if (typeof value === 'string' && createArrayIfNeeded) {\n    return [value];\n  }\n\n  if (Array.isArray(value) && value.every(item => typeof item === 'string')) {\n    return [...value];\n  }\n\n  throw new Error(\n    `Unexpected result of \"${selector}\" selector, expected string[] type. Value ${JSON.stringify(value)}`,\n  );\n};\n\nexport const applySelectorString = async (\n  data: JsonObject,\n  selector: string,\n): Promise<string> => {\n  const expression = jsonata(selector);\n  const value = await expression.evaluate(data);\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  throw new Error(\n    `Unexpected result of \"${selector}\" selector, expected string type. Value \"${JSON.stringify(value)}\"`,\n  );\n};\n\nexport const applySelectorObject = async (\n  data: JsonObject,\n  selector: string,\n): Promise<JsonObject> => {\n  const expression = jsonata(selector);\n  const value = await expression.evaluate(data);\n\n  if (isJsonObject(value)) {\n    return value;\n  }\n\n  throw new Error(\n    `Unexpected result of \"${selector}\" selector, expected object type. Value \"${JSON.stringify(value)}\"`,\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useMemo } from 'react';\nimport get from 'lodash/get';\nimport { JsonObject } from '@backstage/types';\nimport {\n  AnyApiFactory,\n  ApiHolder,\n  ApiRef,\n  atlassianAuthApiRef,\n  BackstagePlugin,\n  ConfigApi,\n  configApiRef,\n  githubAuthApiRef,\n  gitlabAuthApiRef,\n  googleAuthApiRef,\n  IdentityApi,\n  identityApiRef,\n  microsoftAuthApiRef,\n  OAuthApi,\n  OpenIdConnectApi,\n  ProfileInfoApi,\n  SessionApi,\n  useApi,\n  useApiHolder,\n  useApp,\n} from '@backstage/core-plugin-api';\nimport { isFetchResponseKey, UiProps } from '../uiPropTypes';\nimport { applySelectorString } from './applySelector';\n\nexport type ScmApi = OAuthApi & ProfileInfoApi;\nexport type ScmOpenIdApi = ScmApi & OpenIdConnectApi;\n\nconst templateUnitEvaluatorIdentityApi = async (\n  identityApi: IdentityApi,\n  key: string,\n) => {\n  if (key === 'token') {\n    return (await identityApi.getCredentials()).token;\n  }\n  if (key === 'userEntityRef') {\n    return (await identityApi.getBackstageIdentity()).userEntityRef;\n  }\n  if (key === 'profileEmail') {\n    return (await identityApi.getProfileInfo()).email;\n  }\n  if (key === 'displayName') {\n    return (await identityApi.getProfileInfo()).displayName;\n  }\n  throw new Error(`Unknown template key \"${key}\" in \"identityApi\"`);\n};\n\nconst templateUnitEvaluatorSCM = async (\n  scmApis: { [key: string]: ScmApi },\n  keyFamily: string,\n  key: string,\n) => {\n  if (key === 'token') {\n    return await scmApis[keyFamily].getAccessToken();\n  }\n  if (key === 'profileEmail') {\n    return (await scmApis[keyFamily].getProfile())?.email;\n  }\n  if (key === 'profileName') {\n    return (await scmApis[keyFamily].getProfile())?.displayName;\n  }\n  throw new Error(`Unknown template key \"${key}\" in \"${keyFamily}\"`);\n};\n\nconst templateUnitEvaluatorOpenId = async (\n  scmOpenIdApis: { [key: string]: ScmOpenIdApi },\n  keyFamily: string,\n  key: string,\n) => {\n  if (key === 'token') {\n    return await scmOpenIdApis[keyFamily].getAccessToken();\n  }\n  if (key === 'openIdToken') {\n    return await scmOpenIdApis[keyFamily].getIdToken();\n  }\n  if (key === 'profileEmail') {\n    return (await scmOpenIdApis[keyFamily].getProfile())?.email;\n  }\n  if (key === 'profileName') {\n    return (await scmOpenIdApis[keyFamily].getProfile())?.displayName;\n  }\n  throw new Error(`Unknown template key \"${key}\" in \"${keyFamily}\"`);\n};\n\nconst templateUnitEvaluatorCustomAuthApi = async (\n  apiHolder: ApiHolder,\n  allPlugins: BackstagePlugin[],\n  providerKey: string,\n) => {\n  const providerApiId = providerKey.substring(0, providerKey.lastIndexOf('.'));\n  const key = providerKey.substring(providerKey.lastIndexOf('.') + 1);\n\n  const apiRef = allPlugins\n    .flatMap(plugin => Array.from(plugin.getApis()))\n    .filter((api: AnyApiFactory) => api.api.id === providerApiId)\n    .at(0)?.api as\n    | ApiRef<OpenIdConnectApi & OAuthApi & ProfileInfoApi & SessionApi>\n    | undefined;\n\n  if (!apiRef) {\n    throw new Error(\n      `Unknown custom auth provider API of id \"${providerApiId}\". The provider id must match its ApiRef id, unit example: customAuthApi.my.auth.github-two.token , so: [KEY_FAMILY].[PLUGIN_ID].[PROVIDER_ID].[KEY] for provider id \"my.auth.github-two\".`,\n    );\n  }\n\n  const api = apiHolder.get(apiRef);\n  if (!api) {\n    throw new Error(`No implementation available for ${apiRef}`);\n  }\n\n  if (key === 'token') {\n    if (api.getAccessToken) {\n      return await api.getAccessToken();\n    }\n    throw new Error(\n      `The ${apiRef} API does not provide a getAccessToken method.`,\n    );\n  }\n\n  if (key === 'openIdToken') {\n    if (api.getIdToken) {\n      return await api.getIdToken();\n    }\n    throw new Error(\n      `The ${apiRef} API does not provide a OpenIdConnectApi method.`,\n    );\n  }\n\n  if (key === 'profileEmail') {\n    if (api.getProfile) {\n      return (await api.getProfile())?.email;\n    }\n    throw new Error(`The ${apiRef} API does not provide a getProfile method.`);\n  }\n\n  if (key === 'profileName') {\n    if (api.getProfile) {\n      return (await api.getProfile())?.displayName;\n    }\n    throw new Error(`The ${apiRef} API does not provide a getProfile method.`);\n  }\n\n  throw new Error(\n    `Unknown template key \"${key}\" for custom provider \"${providerApiId}\" API in \"${providerKey}\"`,\n  );\n};\n\nconst templateUnitEvaluatorBackend = (configApi: ConfigApi, key: string) => {\n  if (key === 'baseUrl') {\n    return configApi.getString('backend.baseUrl');\n  }\n  throw new Error(`Unknown template key \"${key}\" in \"backend\"`);\n};\n\nexport const useTemplateUnitEvaluator = () => {\n  const app = useApp();\n  const apiHolder = useApiHolder();\n  const configApi = useApi(configApiRef);\n  const identityApi = useApi(identityApiRef);\n  const githubAuthApi = useApi(githubAuthApiRef);\n  const atlassianAuthApi = useApi(atlassianAuthApiRef);\n  const googleAuthApi = useApi(googleAuthApiRef);\n  const microsoftAuthApi = useApi(microsoftAuthApiRef);\n  const gitlabAuthApi = useApi(gitlabAuthApiRef);\n\n  const scmApis = useMemo<{ [key: string]: ScmApi }>(\n    () => ({\n      githubAuthApi,\n      atlassianAuthApi,\n    }),\n    [githubAuthApi, atlassianAuthApi],\n  );\n\n  const scmOpenIdApis = useMemo<{ [key: string]: ScmOpenIdApi }>(\n    () => ({\n      googleAuthApi,\n      microsoftAuthApi,\n      gitlabAuthApi,\n    }),\n    [googleAuthApi, microsoftAuthApi, gitlabAuthApi],\n  );\n\n  const allPlugins = useMemo(() => app.getPlugins(), [app]);\n\n  return useCallback(\n    async (\n      unit: string,\n      formData: JsonObject,\n      responseData?: JsonObject,\n      uiProps?: UiProps,\n    ) => {\n      if (!unit) {\n        throw new Error('Template unit can not be empty');\n      }\n\n      const keyFamily = unit.substring(0, unit.indexOf('.'));\n      const key = unit.substring(unit.indexOf('.') + 1);\n      if (keyFamily === 'current') {\n        return get(formData, key);\n      }\n\n      if (keyFamily === 'backend') {\n        return templateUnitEvaluatorBackend(configApi, key);\n      }\n\n      if (keyFamily === 'rjsfConfig') {\n        // Mind setting frontend visibility in configuration: https://backstage.io/docs/conf/defining/#visibility\n        return configApi.getOptionalString(`orchestrator.rjsf-widgets.${key}`);\n      }\n\n      if (keyFamily === 'identityApi') {\n        return await templateUnitEvaluatorIdentityApi(identityApi, key);\n      }\n\n      if (keyFamily === 'customAuthApi') {\n        // unit example: customAuthApi.my.auth.github-two.token , so: [KEY_FAMILY].[PLUGIN_ID].[PROVIDER_ID].[KEY]\n        return await templateUnitEvaluatorCustomAuthApi(\n          apiHolder,\n          allPlugins,\n          key,\n        );\n      }\n\n      if (scmApis[keyFamily]) {\n        return await templateUnitEvaluatorSCM(scmApis, keyFamily, key);\n      }\n\n      if (scmOpenIdApis[keyFamily]) {\n        return await templateUnitEvaluatorOpenId(scmOpenIdApis, keyFamily, key);\n      }\n\n      if (isFetchResponseKey(unit)) {\n        if (!uiProps?.[unit]) {\n          throw new Error(\n            `Template evaluation error: The ui property '${unit}' does not exist in the schema ui:props.`,\n          );\n        }\n        if (!responseData) {\n          throw new Error(\n            `Template evaluation error: Attempting to access fetched data for ui property '${unit}', but the fetch response is undefined.`,\n          );\n        }\n        return await applySelectorString(responseData, uiProps[unit]);\n      }\n\n      throw new Error(`Unknown template unit \"${unit}\"`);\n    },\n    [configApi, identityApi, scmApis, scmOpenIdApis, apiHolder, allPlugins],\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonValue } from '@backstage/types/index';\nimport { TypographyVariant } from '@mui/material/styles';\n\nexport type UiProps = {\n  'ui:variant'?: TypographyVariant;\n  'ui:text'?: string;\n  'ui:allowNewItems'?: 'true' | 'false';\n  'fetch:url'?: string;\n  'fetch:method'?: 'GET' | 'POST';\n  'fetch:headers'?: Record<string, string>;\n  'fetch:body'?: Record<string, JsonValue>;\n  'fetch:retrigger'?: string[];\n  [key: `fetch:response:${string}`]: string;\n};\n\nexport const isFetchResponseKey = (\n  key: string,\n): key is `fetch:response:${string}` => {\n  return key.startsWith('fetch:response:');\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { isEqual } from 'lodash';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { evaluateTemplateProps } from './evaluateTemplate';\n\nconst EMPTY = [] as string[];\n\nexport const useRetriggerEvaluate = (\n  templateUnitEvaluator: evaluateTemplateProps['unitEvaluator'],\n  formData = {} as JsonObject,\n  conditions?: string[],\n): (string | undefined)[] | undefined => {\n  const [evaluated, setEvaluated] = useState<(string | undefined)[]>();\n  useEffect(() => {\n    if (!conditions) {\n      if (!evaluated || evaluated.length > 0) {\n        setEvaluated(EMPTY);\n      }\n    } else {\n      const doItAsync = async () => {\n        const actualJson: (JsonValue | undefined)[] = await Promise.all(\n          conditions.map((condition: string) => {\n            return templateUnitEvaluator(condition, formData).catch(err => {\n              // eslint-disable-next-line no-console\n              console.error(\n                'Can not evaluate retrigger condition: ',\n                condition,\n                err,\n              );\n              throw err;\n            });\n          }),\n        );\n\n        const actual = actualJson.map(v => v?.toString());\n        if (!isEqual(evaluated, actual)) {\n          setEvaluated(actual);\n        }\n      };\n\n      doItAsync();\n    }\n  }, [conditions, evaluated, templateUnitEvaluator, formData]);\n\n  return evaluated;\n};\n","export const getErrorMessage = (prefix: string, error: unknown): string => {\n  if (!error) {\n    return prefix;\n  }\n  if (error instanceof Error && error.message) {\n    return `${prefix}: ${error.message}`;\n  }\n  const errorString = String(error);\n  return errorString ? `${prefix}: ${errorString}` : prefix;\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the for the specific language governing permissions and\n */\nexport const UNDEFINED_VALUE = '___undefined___';\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect, useState } from 'react';\nimport { JsonObject, JsonPrimitive, JsonValue } from '@backstage/types';\nimport { isJsonObject } from '@redhat/backstage-plugin-orchestrator-common';\nimport { useTemplateUnitEvaluator } from './useTemplateUnitEvaluator';\nimport { UiProps } from '../uiPropTypes';\nimport { UNDEFINED_VALUE } from './constants';\n\nexport type evaluateTemplateProps = {\n  template?: JsonValue;\n  key: string;\n  unitEvaluator: (\n    unit: string,\n    formData: JsonObject,\n    responseData?: JsonObject,\n    uiProps?: UiProps,\n  ) => Promise<JsonValue | undefined>;\n  formData: JsonObject;\n  responseData?: JsonObject;\n  uiProps?: UiProps;\n  iteration?: number;\n};\n\nexport type evaluateTemplateStringProps = Omit<\n  evaluateTemplateProps,\n  'template'\n> & {\n  template?: JsonPrimitive;\n};\n\nexport const evaluateTemplateString = async (\n  props: evaluateTemplateStringProps,\n): Promise<JsonValue> => {\n  const {\n    template,\n    key,\n    unitEvaluator,\n    formData,\n    responseData,\n    uiProps,\n    iteration = 0,\n  } = props;\n\n  if (template === undefined || template === null) {\n    throw new Error(`Template can not be undefined, key: ${key}`);\n  }\n\n  if (typeof template !== 'string') {\n    return template;\n  }\n\n  let evaluated: JsonValue;\n  const startIndex = template.indexOf('$${{');\n  if (startIndex < 0) {\n    evaluated = template;\n  } else {\n    evaluated = template.substring(0, startIndex);\n    const stopIndex = template.indexOf('}}');\n    if (stopIndex < 0) {\n      throw new Error(`Template unit is not closed by }}`);\n    }\n    const isTheLastOne = template.length <= stopIndex + '}}'.length;\n\n    let evaluatedUnit = await unitEvaluator(\n      template.substring(startIndex + 4, stopIndex),\n      formData,\n      responseData,\n      uiProps,\n    );\n    if (evaluatedUnit === undefined) {\n      evaluatedUnit = UNDEFINED_VALUE;\n    }\n\n    if (\n      typeof evaluatedUnit === 'object' &&\n      isTheLastOne &&\n      startIndex === 0 &&\n      iteration === 0\n    ) {\n      // For both Arrays and JsonObjects\n      // Stays solo - not enclosed by additional text, so pass correct non-string type\n      evaluated = evaluatedUnit;\n    } else {\n      if (typeof evaluatedUnit === 'object') {\n        // For both Arrays and JsonObjects\n        // wrapped by additional text, so it must be serialized\n        evaluated += JSON.stringify(evaluatedUnit);\n      } else if (evaluated) {\n        evaluated += evaluatedUnit;\n      } else {\n        // avoid type conversion to string\n        evaluated = evaluatedUnit;\n      }\n\n      if (!isTheLastOne) {\n        const rest = await evaluateTemplateString({\n          ...props,\n          template: template.substring(stopIndex + '}}'.length),\n          iteration: iteration + 1,\n        });\n\n        if (['string', 'boolean', 'number'].includes(typeof rest)) {\n          evaluated += (rest ?? '').toString();\n        } else {\n          evaluated += JSON.stringify(rest);\n        }\n      }\n    }\n  }\n\n  return evaluated;\n};\n\nexport const evaluateTemplate = async (\n  props: evaluateTemplateProps,\n): Promise<JsonValue> => {\n  const { template, ...restProps } = props;\n  const { key } = restProps;\n\n  if (typeof template === 'boolean' || typeof template === 'number') {\n    return template;\n  }\n\n  if (typeof template === 'string') {\n    return evaluateTemplateString({ ...props, template: template.toString() });\n  }\n\n  if (Array.isArray(template)) {\n    return await Promise.all(\n      template.map(async item => {\n        if (Array.isArray(item)) {\n          return [\n            ...(await Promise.all(\n              item.map(nestedItem =>\n                evaluateTemplate({ ...props, template: nestedItem }),\n              ),\n            )),\n          ];\n        }\n\n        if (isJsonObject(item)) {\n          return evaluateTemplate({ ...props, template: item });\n        }\n\n        return evaluateTemplateString({ template: item, ...restProps });\n      }),\n    );\n  }\n\n  if (isJsonObject(template)) {\n    const evaluated = await Promise.all(\n      Object.keys(template).map(prop =>\n        evaluateTemplate({\n          ...props,\n          template: template[prop],\n        }),\n      ),\n    );\n\n    const result: JsonObject = {};\n    Object.keys(template).forEach((item, idx) => {\n      result[item] = evaluated[idx];\n    });\n    return result;\n  }\n\n  throw new Error(\n    `Template can be either a string, number, boolean, object or an array, key: ${key}`,\n  );\n};\n\nexport const useEvaluateTemplate = ({\n  template,\n  key,\n  formData,\n  setError,\n}: {\n  template?: string;\n  key: string;\n  formData: JsonObject;\n  setError: (e: string) => void;\n}): JsonValue | undefined => {\n  const unitEvaluator = useTemplateUnitEvaluator();\n  const [evaluated, setEvaluated] = useState<JsonValue>();\n\n  useEffect(() => {\n    evaluateTemplateString({ template, key, unitEvaluator, formData })\n      .then(setEvaluated)\n      .catch(reason => setError(reason.toString()));\n  }, [template, unitEvaluator, formData, key, setError]);\n\n  return evaluated;\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { isEqual } from 'lodash';\nimport { JsonObject } from '@backstage/types';\nimport {\n  evaluateTemplate,\n  evaluateTemplateProps,\n  evaluateTemplateString,\n} from './evaluateTemplate';\nimport { useTemplateUnitEvaluator } from './useTemplateUnitEvaluator';\nimport { UNDEFINED_VALUE } from './constants';\n\nconst ALLOWED_METHODS = ['GET', 'POST'];\n\nexport const getRequestInit = async (\n  uiProps: JsonObject,\n  prefix: string,\n  unitEvaluator: evaluateTemplateProps['unitEvaluator'],\n  formData: JsonObject,\n): Promise<RequestInit> => {\n  const requestInit: RequestInit = {};\n\n  const method = uiProps[`${prefix}:method`]?.toString().toLocaleUpperCase();\n  if (method) {\n    if (!ALLOWED_METHODS.includes(method)) {\n      throw new Error(\n        `Unsupported HTTP method, use one of ${ALLOWED_METHODS.join(', ')}`,\n      );\n    }\n    requestInit.method = method;\n  }\n\n  const body = uiProps[`${prefix}:body`];\n  if (body) {\n    if (method === 'POST') {\n      if (typeof body === 'object') {\n        const bodyObject = body as JsonObject;\n        const evaluated: JsonObject = {};\n\n        const keys = Object.keys(body);\n        const values = await Promise.all(\n          keys.map(key =>\n            evaluateTemplate({\n              unitEvaluator,\n              key,\n              formData,\n              template: bodyObject[key],\n            }),\n          ),\n        );\n        keys.forEach((key, idx) => {\n          if (values[idx] && values[idx] !== UNDEFINED_VALUE) {\n            // skip empty or undefined values\n            evaluated[key] = values[idx];\n          }\n        });\n\n        const bodyInit: BodyInit = JSON.stringify(evaluated);\n        requestInit.body = bodyInit;\n      } else {\n        throw new Error(`${prefix}:body must be object`);\n      }\n    } else {\n      throw new Error(`${prefix}:body can be used with POST requests only`);\n    }\n  }\n\n  const headersInit: HeadersInit = {\n    'Content-Type': 'application/json',\n  };\n\n  const headers = uiProps[`${prefix}:headers`];\n  if (headers) {\n    if (typeof headers === 'object') {\n      const headersObject = headers as JsonObject;\n\n      const keys = Object.keys(headers);\n      const values = await Promise.all(\n        keys.map(key => {\n          const value = headersObject[key];\n          if (typeof value !== 'string') {\n            throw new Error(\n              `HTTP header must be a string. See \"${key}\" header.`,\n            );\n          }\n\n          return evaluateTemplateString({\n            unitEvaluator,\n            key,\n            formData,\n            template: value,\n          });\n        }),\n      );\n      keys.forEach((key, idx) => {\n        // Header must be a string\n        const value = values[idx];\n        if (value && value !== UNDEFINED_VALUE) {\n          // skip empty or undefined values\n          headersInit[key] =\n            typeof value === 'string' ? value : JSON.stringify(value);\n        }\n      });\n    } else {\n      throw new Error('fetch:body must be object for POST requests');\n    }\n  }\n  requestInit.headers = headersInit;\n\n  return requestInit;\n};\n\nexport const useRequestInit = ({\n  uiProps,\n  prefix,\n  formData,\n  setError,\n}: {\n  uiProps: JsonObject;\n  prefix: string;\n  formData: JsonObject;\n  setError: (e: string) => void;\n}) => {\n  const [evaluatedRequestInit, setEvaluatedRequestInit] =\n    useState<RequestInit>();\n  const unitEvaluator = useTemplateUnitEvaluator();\n\n  useEffect(() => {\n    getRequestInit(uiProps, prefix, unitEvaluator, formData)\n      .then(evaluated =>\n        setEvaluatedRequestInit(actual =>\n          isEqual(actual, evaluated) ? actual : evaluated,\n        ),\n      )\n      .catch(reason => setError(reason.toString()));\n  }, [uiProps, unitEvaluator, formData, prefix, setError]);\n\n  return evaluatedRequestInit;\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const DEFAULT_DEBOUNCE_LIMIT = 1000;\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi, fetchApiRef } from '@backstage/core-plugin-api';\nimport { JsonObject } from '@backstage/types/index';\nimport { useState } from 'react';\nimport { UiProps } from '../uiPropTypes';\nimport { getErrorMessage } from './errorUtils';\nimport { useEvaluateTemplate } from './evaluateTemplate';\nimport { useRequestInit } from './useRequestInit';\nimport { useRetriggerEvaluate } from './useRetriggerEvaluate';\nimport { useDebounce } from 'react-use';\nimport { DEFAULT_DEBOUNCE_LIMIT } from '../widgets/constants';\n\nexport const useFetch = (\n  formData: JsonObject,\n  uiProps: UiProps,\n  retrigger: ReturnType<typeof useRetriggerEvaluate>,\n) => {\n  const fetchApi = useApi(fetchApiRef);\n\n  const [error, setError] = useState<string>();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<JsonObject>();\n\n  const fetchUrl = uiProps['fetch:url'];\n  const evaluatedRequestInit = useRequestInit({\n    uiProps,\n    prefix: 'fetch',\n    formData,\n    setError,\n  });\n  const evaluatedFetchUrl = useEvaluateTemplate({\n    template: fetchUrl ?? '',\n    key: 'fetch:url',\n    formData,\n    setError,\n  });\n\n  useDebounce(\n    () => {\n      if (\n        !fetchUrl ||\n        !evaluatedFetchUrl ||\n        !evaluatedRequestInit ||\n        !retrigger\n      ) {\n        setLoading(false);\n        return;\n      }\n\n      const fetchData = async () => {\n        try {\n          setError(undefined);\n          if (typeof evaluatedFetchUrl !== 'string') {\n            // eslint-disable-next-line no-console\n            console.error('The fetch:url is not evaluated to a string: ', {\n              fetchUrl,\n              evaluatedFetchUrl,\n            });\n            setError(\n              `The fetch:url is not evaluated to a string: \"${fetchUrl}\"`,\n            );\n            return;\n          }\n\n          setLoading(true);\n\n          const response = await fetchApi.fetch(\n            evaluatedFetchUrl,\n            evaluatedRequestInit,\n          );\n          if (!response.ok) {\n            throw new Error(\n              `Request ${evaluatedFetchUrl} returned status ${response.status}. Status text: ${response.statusText}.`,\n            );\n          }\n          const responseData = (await response.json()) as JsonObject;\n\n          // validate received response before updating\n          if (!responseData) {\n            throw new Error('Empty response received');\n          }\n          if (typeof responseData !== 'object') {\n            throw new Error('JSON object expected');\n          }\n\n          setData(responseData);\n        } catch (err) {\n          const prefix = `Failed to fetch data for url ${fetchUrl}.`;\n          // eslint-disable-next-line no-console\n          console.error(prefix, err);\n          setError(getErrorMessage(prefix, err));\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    },\n    DEFAULT_DEBOUNCE_LIMIT,\n    [\n      evaluatedFetchUrl,\n      evaluatedRequestInit,\n      fetchApi,\n      fetchUrl,\n      // no need to expand the \"retrigger\" array here since its identity changes only if an item changes\n      retrigger,\n    ],\n  );\n\n  return { data, error, loading };\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { makeStyles } from 'tss-react/mui';\n\nconst useStyles = makeStyles()(theme => ({\n  error: {\n    color: theme.palette.error.main,\n  },\n}));\n\nexport const ErrorText = ({ text, id }: { text: string; id: string }) => {\n  const { classes } = useStyles();\n\n  return (\n    <div className={classes.error} data-testid={`${id}-error-text`}>\n      {text}\n    </div>\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport clsx from 'clsx';\nimport { JsonObject } from '@backstage/types';\nimport { Widget } from '@rjsf/utils';\nimport { JSONSchema7 } from 'json-schema';\n\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles } from 'tss-react/mui';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, {\n  AutocompleteRenderInputParams,\n} from '@mui/material/Autocomplete';\n\nimport { OrchestratorFormContextProps } from '@redhat/backstage-plugin-orchestrator-form-api';\n\nimport {\n  useRetriggerEvaluate,\n  useTemplateUnitEvaluator,\n  useFetch,\n  applySelectorArray,\n  applySelectorString,\n} from '../utils';\nimport { ErrorText } from './ErrorText';\nimport { UiProps } from '../uiPropTypes';\n\nconst useStyles = makeStyles()((theme: Theme) => ({\n  autocompleteOptionSelected: {\n    backgroundColor: `${theme.palette.action.selected} !important`,\n  },\n}));\n\nexport const ActiveTextInput: Widget<\n  JsonObject,\n  JSONSchema7,\n  OrchestratorFormContextProps\n> = props => {\n  const { classes } = useStyles();\n  const templateUnitEvaluator = useTemplateUnitEvaluator();\n\n  const { id, label, value, onChange, formContext } = props;\n  const formData = formContext?.formData;\n  const isChangedByUser = !!formContext?.getIsChangedByUser(id);\n  const setIsChangedByUser = formContext?.setIsChangedByUser;\n\n  const uiProps = useMemo(\n    () => (props.options?.props ?? {}) as UiProps,\n    [props.options?.props],\n  );\n  const isReadOnly = !!props.readonly;\n\n  const defaultValueSelector = uiProps['fetch:response:value']?.toString();\n  const autocompleteSelector =\n    uiProps['fetch:response:autocomplete']?.toString();\n\n  const [localError] = useState<string | undefined>(\n    !defaultValueSelector\n      ? `The fetch:response:value needs to be set for ${props.id}.`\n      : undefined,\n  );\n  const [autocompleteOptions, setAutocompleteOptions] = useState<string[]>();\n\n  const retrigger = useRetriggerEvaluate(\n    templateUnitEvaluator,\n    formData,\n    /* This is safe retype, since proper checking of input value is done in the useRetriggerEvaluate() hook */\n    uiProps['fetch:retrigger'] as string[],\n  );\n\n  const { data, error, loading } = useFetch(formData ?? {}, uiProps, retrigger);\n\n  const handleChange = useCallback(\n    (changed: string, isByUser: boolean) => {\n      if (isByUser && setIsChangedByUser) {\n        // we must handle this change out of this component's state since the component can be (de)mounted on wizard transitions or by the SchemaUpdater\n        setIsChangedByUser(id, true);\n      }\n      onChange(changed);\n    },\n    [onChange, id, setIsChangedByUser],\n  );\n\n  useEffect(() => {\n    if (!data || !defaultValueSelector) {\n      return;\n    }\n\n    const doItAsync = async () => {\n      if (!isChangedByUser) {\n        // loading default so replace the value unless the user touched the field\n        const defaultValue = await applySelectorString(\n          data,\n          defaultValueSelector,\n        );\n\n        if (\n          value !== defaultValue &&\n          defaultValue &&\n          defaultValue !== null &&\n          defaultValue !== 'null'\n        ) {\n          handleChange(defaultValue, false);\n        }\n      }\n\n      if (autocompleteSelector) {\n        const autocompleteValues = await applySelectorArray(\n          data,\n          autocompleteSelector,\n        );\n        setAutocompleteOptions(autocompleteValues);\n      }\n    };\n\n    doItAsync();\n  }, [\n    defaultValueSelector,\n    autocompleteSelector,\n    data,\n    props.id,\n    value,\n    handleChange,\n    isChangedByUser,\n  ]);\n\n  if (localError ?? error) {\n    return <ErrorText text={localError ?? error ?? ''} id={id} />;\n  }\n\n  if (loading) {\n    return <CircularProgress size={20} />;\n  }\n\n  if (autocompleteOptions) {\n    const renderInput = (params: AutocompleteRenderInputParams) => (\n      <TextField\n        {...params}\n        data-testid={`${id}-textfield`}\n        onChange={event => handleChange(event.target.value, true)}\n        label={label}\n        disabled={isReadOnly}\n      />\n    );\n\n    return (\n      <FormControl variant=\"outlined\" fullWidth>\n        <Autocomplete\n          options={autocompleteOptions}\n          data-testid={`${id}-autocomplete`}\n          value={value}\n          onChange={(_, v) => handleChange(v, true)}\n          disabled={isReadOnly}\n          renderInput={renderInput}\n          renderOption={(liProps, item, state) => {\n            return (\n              <li\n                {...liProps}\n                key={item}\n                data-testid={`${id}-autocomplete-option-${item}`}\n                className={clsx(\n                  state.selected && classes.autocompleteOptionSelected,\n                  liProps.className,\n                )}\n              >\n                {item}\n              </li>\n            );\n          }}\n        />\n      </FormControl>\n    );\n  }\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <TextField\n        value={value ?? ''}\n        data-testid={`${id}-textfield`}\n        onChange={event => handleChange(event.target.value, true)}\n        label={label}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from 'tss-react/mui';\nimport { Widget } from '@rjsf/utils';\nimport { JsonObject } from '@backstage/types';\nimport { JSONSchema7 } from 'json-schema';\nimport { OrchestratorFormContextProps } from '@redhat/backstage-plugin-orchestrator-form-api';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport {\n  useFetch,\n  useRetriggerEvaluate,\n  useTemplateUnitEvaluator,\n  applySelectorArray,\n} from '../utils';\nimport { UiProps } from '../uiPropTypes';\nimport { ErrorText } from './ErrorText';\n\nconst useStyles = makeStyles()(theme => ({\n  menuItem: {\n    // Workaround, we still have mix of Material 4 and 5 CSS in production, conflict with MuiButtonBase-root\n    display: 'flex !important',\n    justifyContent: 'flex-start !important',\n    paddingTop: '8px !important',\n    paddingBottom: '8px !important',\n    paddingLeft: '16px !important',\n  },\n  menuItemSelected: {\n    backgroundColor: `${theme.palette.action.selected} !important`,\n  },\n}));\n\nexport const ActiveDropdown: Widget<\n  JsonObject,\n  JSONSchema7,\n  OrchestratorFormContextProps\n> = props => {\n  const { classes } = useStyles();\n  const templateUnitEvaluator = useTemplateUnitEvaluator();\n\n  const { id, label, value, onChange, formContext } = props;\n  const formData = formContext?.formData;\n  const isChangedByUser = !!formContext?.getIsChangedByUser(id);\n  const setIsChangedByUser = formContext?.setIsChangedByUser;\n\n  const labelId = `${props.id}-label`;\n\n  const uiProps = useMemo(\n    () => (props.options?.props ?? {}) as UiProps,\n    [props.options?.props],\n  );\n  const isReadOnly = !!props.readonly;\n\n  const labelSelector = uiProps['fetch:response:label']?.toString();\n  const valueSelector = uiProps['fetch:response:value']?.toString();\n\n  const [localError, setLocalError] = useState<string | undefined>(\n    !labelSelector || !valueSelector\n      ? `Both fetch:response:label and fetch:response:value needs to be set for ${props.id}.`\n      : undefined,\n  );\n  const [labels, setLabels] = useState<string[]>();\n  const [values, setValues] = useState<string[]>();\n\n  const retrigger = useRetriggerEvaluate(\n    templateUnitEvaluator,\n    formData,\n    /* This is safe retype, since proper checking of input value is done in the useRetriggerEvaluate() hook */\n    uiProps['fetch:retrigger'] as string[],\n  );\n\n  const { data, error, loading } = useFetch(formData ?? {}, uiProps, retrigger);\n\n  useEffect(() => {\n    if (!data || !labelSelector || !valueSelector) {\n      return;\n    }\n\n    const doItAsync = async () => {\n      const selectedLabels = await applySelectorArray(data, labelSelector);\n      const selectedValues = await applySelectorArray(data, valueSelector);\n\n      if (selectedLabels.length !== selectedValues.length) {\n        setLocalError(\n          `Selected labels and values have different count (${selectedLabels.length} and ${selectedValues.length}) for ${props.id}`,\n        );\n        return;\n      }\n\n      setLabels(selectedLabels);\n      setValues(selectedValues);\n    };\n\n    doItAsync();\n  }, [labelSelector, valueSelector, data, props.id]);\n\n  const handleChange = useCallback(\n    (changed: string, isByUser: boolean) => {\n      if (isByUser && setIsChangedByUser) {\n        // we must handle this change out of this component's state since the component can be (de)mounted on wizard transitions or by the SchemaUpdater\n        setIsChangedByUser(id, true);\n      }\n      onChange(changed);\n    },\n    [onChange, id, setIsChangedByUser],\n  );\n\n  // set default value to the first one\n  useEffect(() => {\n    if (!isChangedByUser && values && values.length > 0) {\n      handleChange(values[0], false);\n    }\n  }, [handleChange, value, values, isChangedByUser]);\n\n  if (localError ?? error) {\n    return <ErrorText text={localError ?? error ?? ''} id={id} />;\n  }\n\n  if (loading || !labels || !values) {\n    return <CircularProgress size={20} />;\n  }\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={labelId}>{label}</InputLabel>\n      <Select\n        labelId={labelId}\n        id={id}\n        data-testid={id}\n        value={value}\n        label={label}\n        disabled={isReadOnly}\n        onChange={event => handleChange(event.target.value as string, true)}\n        MenuProps={{\n          PaperProps: { sx: { maxHeight: '20rem' } },\n        }}\n      >\n        {labels.map((itemLabel, idx) => (\n          <MenuItem\n            key={values[idx]}\n            value={values[idx]}\n            data-testid={`${id}-menuitem-${values[idx]}`}\n            className={clsx(\n              classes.menuItem,\n              value === values[idx] && classes.menuItemSelected,\n            )}\n          >\n            {itemLabel}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SyntheticEvent, useEffect, useMemo, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from 'tss-react/mui';\nimport { Theme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Autocomplete, { AutocompleteValue } from '@mui/material/Autocomplete';\nimport FormControl from '@mui/material/FormControl';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\n\nimport { JsonObject } from '@backstage/types';\nimport { JSONSchema7 } from 'json-schema';\nimport { OrchestratorFormContextProps } from '@redhat/backstage-plugin-orchestrator-form-api';\nimport { Widget } from '@rjsf/utils';\n\nimport {\n  useTemplateUnitEvaluator,\n  applySelectorArray,\n  useFetch,\n  useRetriggerEvaluate,\n} from '../utils';\nimport { UiProps } from '../uiPropTypes';\nimport { ErrorText } from './ErrorText';\n\nconst useStyles = makeStyles()(\n  (theme: Theme & { rhdh?: { cardBorderColor: string } }) => ({\n    chip: {\n      // Workaround, we still have mix of Material 4 and 5 CSS in production, conflict with MuiButtonBase-root\n      borderRadius: `16px !important` /* theme.shape.borderRadius is ugly 8px */,\n      outline: `1px solid ${theme.rhdh?.cardBorderColor ?? '#A3A3A3'} !important`,\n    },\n  }),\n);\n\nexport const ActiveMultiSelect: Widget<\n  JsonObject,\n  JSONSchema7,\n  OrchestratorFormContextProps\n> = props => {\n  const { classes } = useStyles();\n  const templateUnitEvaluator = useTemplateUnitEvaluator();\n  const { id, name, label, value: rawValue, onChange, formContext } = props;\n  const value = rawValue as string[];\n  const formData = formContext?.formData;\n  const isChangedByUser = !!formContext?.getIsChangedByUser(id);\n  const setIsChangedByUser = formContext?.setIsChangedByUser;\n\n  const uiProps = useMemo(\n    () => (props.options.props ?? {}) as UiProps,\n    [props.options.props],\n  );\n  const isReadOnly = !!props.readonly;\n\n  const autocompleteSelector =\n    uiProps['fetch:response:autocomplete']?.toString();\n  const mandatorySelector = uiProps['fetch:response:mandatory']?.toString();\n  const defaultValueSelector = uiProps['fetch:response:value']?.toString();\n  const allowNewItems = uiProps['ui:allowNewItems'] === 'true';\n\n  const [localError] = useState<string | undefined>(\n    autocompleteSelector\n      ? undefined\n      : `Missing fetch:response:autocomplete selector for ${id}`,\n  );\n  const [inProgressItem, setInProgressItem] = useState<string | undefined>();\n\n  const [autocompleteOptions, setAutocompleteOptions] = useState<string[]>();\n  const [mandatoryValues, setMandatoryValues] = useState<string[]>();\n\n  const allOptions: string[] = useMemo(() => {\n    if (allowNewItems && inProgressItem) {\n      return [...new Set([inProgressItem, ...(autocompleteOptions ?? [])])];\n    }\n    return autocompleteOptions || [];\n  }, [inProgressItem, autocompleteOptions, allowNewItems]);\n\n  const retrigger = useRetriggerEvaluate(\n    templateUnitEvaluator,\n    formData,\n    /* This is safe retype, since proper checking of input value is done in the useRetriggerEvaluate() hook */\n    uiProps['fetch:retrigger'] as string[],\n  );\n\n  const { data, error, loading } = useFetch(formData ?? {}, uiProps, retrigger);\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n\n    const doItAsync = async () => {\n      if (autocompleteSelector) {\n        const autocompleteValues = await applySelectorArray(\n          data,\n          autocompleteSelector,\n          true,\n          true,\n        );\n        setAutocompleteOptions(autocompleteValues);\n      }\n\n      let defaults: string[] = [];\n      if (!isChangedByUser) {\n        // set this just once, when the user has not touched the field\n        if (defaultValueSelector) {\n          defaults = await applySelectorArray(\n            data,\n            defaultValueSelector,\n            true,\n            true,\n          );\n          // no need to persist the defaults, they are used only once\n        }\n      }\n\n      let mandatory: string[] = [];\n      if (mandatorySelector) {\n        mandatory = await applySelectorArray(data, mandatorySelector, true);\n        setMandatoryValues(mandatory);\n      }\n\n      if (\n        !mandatory.every(item => value.includes(item)) ||\n        !defaults.every(item => value.includes(item))\n      ) {\n        onChange([...new Set([...mandatory, ...value, ...defaults])]);\n      }\n    };\n\n    doItAsync();\n  }, [\n    autocompleteSelector,\n    mandatorySelector,\n    defaultValueSelector,\n    isChangedByUser,\n    data,\n    props.id,\n    value,\n    onChange,\n  ]);\n\n  const handleChange = (\n    _: SyntheticEvent,\n    changed: AutocompleteValue<string[], false, false, false>,\n  ) => {\n    if (setIsChangedByUser) {\n      setIsChangedByUser(id, true);\n    }\n    setInProgressItem(undefined);\n    onChange(changed);\n  };\n\n  if (localError ?? error) {\n    return <ErrorText text={localError ?? error ?? ''} id={id} />;\n  }\n\n  if (loading) {\n    return <CircularProgress size={20} />;\n  }\n\n  if (autocompleteOptions) {\n    return (\n      <Box>\n        <FormControl variant=\"outlined\" fullWidth>\n          <Autocomplete\n            multiple\n            data-testid={`${id}-autocomplete`}\n            disabled={isReadOnly}\n            options={allOptions}\n            isOptionEqualToValue={(option, selected) => option === selected}\n            value={value}\n            filterSelectedOptions\n            onChange={handleChange}\n            renderOption={(liProps, item) => {\n              return (\n                <li\n                  {...liProps}\n                  key={item}\n                  data-testid={`${id}-autocomplete-option-${item}`}\n                >\n                  {item}\n                </li>\n              );\n            }}\n            renderInput={params => (\n              <TextField\n                {...params}\n                data-testid={`${id}-text-field`}\n                name={name}\n                variant=\"outlined\"\n                label={label}\n                onChange={event => {\n                  setInProgressItem(event.target.value);\n                }}\n              />\n            )}\n            renderTags={(values, getTagProps) =>\n              values.map((item, index) => {\n                const tagProps = getTagProps({ index });\n                const {\n                  className,\n                  onDelete,\n                  key: _,\n                  ...restTagProps\n                } = tagProps;\n\n                return (\n                  <Box key={item} title={item}>\n                    <Chip\n                      data-testid={`${id}-chip-${item}`}\n                      variant=\"outlined\"\n                      label={item}\n                      className={clsx(tagProps.className, classes.chip)}\n                      onDelete={\n                        mandatoryValues?.includes(item)\n                          ? undefined /* mandatory - can not be deleted */\n                          : onDelete\n                      }\n                      {...restTagProps}\n                    />\n                  </Box>\n                );\n              })\n            }\n          />\n        </FormControl>\n      </Box>\n    );\n  }\n\n  // Will not happen - either error or loading state will be rendered instead.\n  return <></>;\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\n\nexport const safeSet: (\n  errors: JsonObject,\n  path: string,\n  value: JsonValue,\n) => void = (errors, path, value) => {\n  const steps = path.split('.', 2);\n  if (steps.length === 1) {\n    errors[steps[0]] = value;\n  } else {\n    const safeObject = (errors[steps[0]] ?? {}) as JsonObject;\n    errors[steps[0]] = safeObject;\n    safeSet(safeObject, steps[1], value);\n  }\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchApiRef, useApi } from '@backstage/core-plugin-api';\nimport { flatten, get } from 'lodash';\nimport {\n  OrchestratorFormContextProps,\n  // useWrapperFormPropsContext,\n} from '@redhat/backstage-plugin-orchestrator-form-api';\nimport { JsonObject } from '@backstage/types';\nimport { ERRORS_KEY, ErrorSchema } from '@rjsf/utils';\nimport { useTemplateUnitEvaluator } from './useTemplateUnitEvaluator';\nimport { evaluateTemplateString } from './evaluateTemplate';\nimport { getRequestInit } from './useRequestInit';\nimport { safeSet } from './safeSet';\n\n// Walks through the uiSchema and calls the \"callback\" for every field which is backed by the dynamic ui:widget.\n// The callback is provided with the uiSchema path, content of the uiSchema part and the corresponding entered formData value.\nconst walkThrough: (\n  uiSchema: OrchestratorFormContextProps['uiSchema'],\n  formData: JsonObject | undefined,\n  callback: (path: string, uiSchemaProperty: JsonObject) => Promise<void>,\n  pathPrefix: string,\n) => Promise<void>[] = (uiSchema, formData, callback, pathPrefix) => {\n  let dottedPathPrefix = pathPrefix;\n  if (pathPrefix) {\n    dottedPathPrefix += '.';\n  }\n\n  const all: (Promise<void>[] | undefined)[] = Object.keys(uiSchema).map(\n    key => {\n      // tune following condition to match just those fields which are relevant for the orchestrator-form-widget\n      if (typeof uiSchema[key] === 'object') {\n        if (uiSchema[key]?.['ui:widget']) {\n          return [callback(`${dottedPathPrefix}${key}`, uiSchema[key])];\n        }\n\n        return walkThrough(\n          uiSchema[key],\n          formData?.[key] as JsonObject,\n          callback,\n          `${dottedPathPrefix}${key}`,\n        );\n      }\n\n      return undefined;\n    },\n  );\n\n  const promises = all.filter(Boolean) as Promise<void>[][];\n  const result: Promise<void>[] = flatten(promises);\n  return result;\n};\n\nexport const useGetExtraErrors = () => {\n  const fetchApi = useApi(fetchApiRef);\n  const templateUnitEvaluator = useTemplateUnitEvaluator();\n  return async (\n    formData: JsonObject,\n    uiSchema: OrchestratorFormContextProps['uiSchema'],\n  ): Promise<ErrorSchema<JsonObject>> => {\n    // Asynchronous validation on wizard step transition or submit\n    const errors: ErrorSchema<JsonObject> = {};\n    const callback = async (path: string, uiSchemaProperty: JsonObject) => {\n      const uiProps = (uiSchemaProperty?.['ui:props'] ?? {}) as JsonObject;\n      const validateUrl = uiProps['validate:url']?.toString();\n\n      if (\n        validateUrl &&\n        ['ActiveTextInput', 'ActiveDropdown', 'ActiveMultiSelect'].includes(\n          uiSchemaProperty?.['ui:widget']?.toString() ?? '',\n        )\n      ) {\n        const value = get(formData, path);\n        if (value !== undefined) {\n          const evaluatedValidateUrl = await evaluateTemplateString({\n            template: validateUrl,\n            key: 'validate:url',\n            unitEvaluator: templateUnitEvaluator,\n            formData,\n          });\n\n          if (typeof evaluatedValidateUrl !== 'string') {\n            // eslint-disable-next-line no-console\n            console.error('The validate:url is not evaluated to a string: ', {\n              validateUrl,\n              evaluatedValidateUrl,\n            });\n            safeSet(errors, path, {\n              [ERRORS_KEY]: `The validate:url is not evaluated to a string: \"${validateUrl}\"`,\n            });\n          } else {\n            const evaluatedRequestInit = await getRequestInit(\n              uiProps,\n              'validate',\n              templateUnitEvaluator,\n              formData,\n            );\n\n            const response = await fetchApi.fetch(\n              evaluatedValidateUrl,\n              evaluatedRequestInit,\n            );\n            if (response.status !== 200) {\n              const data = (await response.json()) as JsonObject;\n\n              Object.keys(data).forEach(key => {\n                // @ts-ignore\n                const issues = data[key];\n                if (issues) {\n                  const array = (\n                    Array.isArray(issues) ? issues : [issues]\n                  ) as string[];\n\n                  safeSet(errors, path, {\n                    [ERRORS_KEY]: array.map(e => e?.toString()),\n                  });\n                }\n              });\n            }\n          }\n        }\n      }\n    };\n\n    const promises: Promise<void>[] = walkThrough(\n      uiSchema,\n      formData,\n      callback,\n      '',\n    );\n\n    await Promise.all(promises);\n    return errors;\n  };\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  FormDecoratorProps,\n  OrchestratorFormApi,\n  OrchestratorFormContextProps,\n} from '@redhat/backstage-plugin-orchestrator-form-api';\nimport { FormValidation } from '@rjsf/utils';\nimport { JsonObject } from '@backstage/types';\n\nimport {\n  SchemaUpdater,\n  ActiveTextInput,\n  ActiveText,\n  ActiveDropdown,\n  ActiveMultiSelect,\n} from './widgets';\nimport { useGetExtraErrors } from './utils';\n\nconst customValidate = (\n  _formData: JsonObject | undefined,\n  errors: FormValidation<JsonObject>,\n): FormValidation<JsonObject> => {\n  // Trigger synchronous field validation\n  return errors;\n};\n\nconst widgets = {\n  SchemaUpdater,\n  ActiveTextInput,\n  ActiveText,\n  ActiveDropdown,\n  ActiveMultiSelect,\n};\n\nexport class FormWidgetsApi implements OrchestratorFormApi {\n  getFormDecorator: OrchestratorFormApi['getFormDecorator'] = () => {\n    // eslint-disable-next-line no-console\n    console.log('Using FormWidgetsApi by RHDH orchestrator-form-widgets.');\n\n    return (FormComponent: React.ComponentType<FormDecoratorProps>) => {\n      return (props: OrchestratorFormContextProps) => {\n        const getExtraErrors = useGetExtraErrors();\n\n        return (\n          <FormComponent\n            widgets={widgets}\n            formContext={props}\n            customValidate={customValidate}\n            getExtraErrors={getExtraErrors}\n          />\n        );\n      };\n    };\n  };\n}\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport { Widget } from '@rjsf/utils';\nimport { JSONSchema7 } from 'json-schema';\nimport { JsonObject } from '@backstage/types';\nimport {\n  SchemaChunksResponse,\n  OrchestratorFormContextProps,\n} from '@redhat/backstage-plugin-orchestrator-form-api';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport {\n  useRetriggerEvaluate,\n  useTemplateUnitEvaluator,\n  useFetch,\n  applySelectorObject,\n} from '../utils';\nimport { ErrorText } from './ErrorText';\nimport { UiProps } from '../uiPropTypes';\n\nexport const SchemaUpdater: Widget<\n  JsonObject,\n  JSONSchema7,\n  OrchestratorFormContextProps\n> = props => {\n  const templateUnitEvaluator = useTemplateUnitEvaluator();\n\n  const { id, formContext } = props;\n  const formData = formContext?.formData;\n\n  const updateSchema = formContext?.updateSchema;\n\n  const uiProps = useMemo(\n    () => (props.options?.props ?? {}) as UiProps,\n    [props.options?.props],\n  );\n  const valueSelector = uiProps['fetch:response:value']?.toString();\n\n  const [localError, setLocalError] = useState<string>();\n\n  const retrigger = useRetriggerEvaluate(\n    templateUnitEvaluator,\n    formData,\n    /* This is safe retype, since proper checking of input value is done in the useRetriggerEvaluate() hook */\n    uiProps['fetch:retrigger'] as string[],\n  );\n\n  const { data, error, loading } = useFetch(formData ?? {}, uiProps, retrigger);\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n\n    if (!updateSchema) {\n      setLocalError('Missing the updateSchema() function in form context.');\n      return;\n    }\n\n    const doItAsync = async () => {\n      let typedData: SchemaChunksResponse =\n        data as unknown as SchemaChunksResponse;\n      if (valueSelector) {\n        typedData = (await applySelectorObject(\n          data,\n          valueSelector,\n        )) as unknown as SchemaChunksResponse;\n      }\n\n      // validate received response before updating\n      Object.keys(typedData).forEach(key => {\n        if (!typedData[key]?.type) {\n          // eslint-disable-next-line no-console\n          console.error('JSON response malformed: ', typedData);\n          setLocalError(\n            `JSON response malformed for SchemaUpdater, missing \"type\" field for \"${key}\" key.`,\n          );\n        }\n      });\n\n      try {\n        updateSchema(typedData);\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error('Error when updating schema', props.id, err);\n        setLocalError(\n          `Failed to update schema update by the ${props.id} SchemaUpdater`,\n        );\n      }\n    };\n    doItAsync();\n  }, [data, props.id, updateSchema, valueSelector]);\n\n  if (localError ?? error) {\n    return <ErrorText text={localError ?? error ?? ''} id={id} />;\n  }\n\n  if (loading) {\n    return <CircularProgress size={20} />;\n  }\n  // No need to render anything\n  return <></>;\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MarkdownContent } from '@backstage/core-components';\nimport { JsonObject } from '@backstage/types';\nimport { Widget } from '@rjsf/utils';\nimport type { JSONSchema7 } from 'json-schema';\nimport { UiProps } from '../uiPropTypes';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport { ErrorText } from './ErrorText';\nimport { OrchestratorFormContextProps } from '@redhat/backstage-plugin-orchestrator-form-api';\nimport { useFetchAndEvaluate } from '../utils';\n\nexport const ActiveText: Widget<\n  JsonObject,\n  JSONSchema7,\n  OrchestratorFormContextProps\n> = props => {\n  const { id, options, formContext } = props;\n  const uiProps = (options?.props ?? {}) as UiProps;\n\n  const formData = formContext?.formData;\n\n  const { text, error, loading } = useFetchAndEvaluate(\n    uiProps['ui:text'] ?? '',\n    formData ?? {},\n    uiProps,\n    id,\n  );\n\n  if (!uiProps['ui:text']) {\n    return (\n      <ErrorText\n        id={id}\n        text={`Field ${id} is configured to use ActiveText widget, but doesn't contain property ui:text.`}\n      />\n    );\n  }\n\n  if (error) {\n    return <ErrorText id={id} text={error} />;\n  }\n\n  return (\n    <Box data-testid={id}>\n      {loading ? (\n        <CircularProgress size={20} />\n      ) : (\n        <MarkdownContent content={text || ''} />\n      )}\n    </Box>\n  );\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types/index';\nimport React, { useState } from 'react';\nimport { UiProps } from '../uiPropTypes';\nimport { getErrorMessage } from './errorUtils';\nimport { evaluateTemplateString } from './evaluateTemplate';\nimport { useFetch } from './useFetch';\nimport { useRetriggerEvaluate } from './useRetriggerEvaluate';\nimport { useTemplateUnitEvaluator } from './useTemplateUnitEvaluator';\nimport { useDebounce } from 'react-use';\nimport { DEFAULT_DEBOUNCE_LIMIT } from '../widgets/constants';\n\nexport const useFetchAndEvaluate = (\n  template: string,\n  formData: JsonObject,\n  uiProps: UiProps,\n  fieldId: string,\n) => {\n  const unitEvaluator = useTemplateUnitEvaluator();\n  const retrigger = useRetriggerEvaluate(\n    unitEvaluator,\n    formData,\n    uiProps['fetch:retrigger'] as string[],\n  );\n  const {\n    data,\n    error: fetchError,\n    loading: fetchLoading,\n  } = useFetch(formData, uiProps, retrigger);\n  const [error, setError] = useState<string>();\n  const [loading, setLoading] = React.useState(true);\n  const [resultText, setResultText] = React.useState<string>();\n  useDebounce(\n    () => {\n      const evaluate = async () => {\n        if (!retrigger || fetchLoading || fetchError) {\n          return;\n        }\n        try {\n          setLoading(true);\n          setError(undefined);\n          const evaluatedText = await evaluateTemplateString({\n            template,\n            key: fieldId,\n            unitEvaluator,\n            formData,\n            responseData: data,\n            uiProps,\n          });\n          setResultText(evaluatedText?.toString());\n        } catch (err) {\n          const prefix = `Failed to evaluate text '${template}' for field ${fieldId}`;\n          const msg = getErrorMessage(prefix, err);\n          setError(msg);\n          // eslint-disable-next-line no-console\n          console.error(prefix, err);\n        } finally {\n          setLoading(false);\n        }\n      };\n      evaluate();\n    },\n    DEFAULT_DEBOUNCE_LIMIT,\n    [\n      retrigger,\n      fetchError,\n      fetchLoading,\n      fieldId,\n      data,\n      formData,\n      uiProps,\n      unitEvaluator,\n      template,\n    ],\n  );\n  return {\n    text: resultText,\n    loading: loading || fetchLoading,\n    error: error ?? fetchError,\n  };\n};\n","/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createApiFactory, createPlugin } from '@backstage/core-plugin-api';\nimport { orchestratorFormApiRef } from '@redhat/backstage-plugin-orchestrator-form-api';\nimport { FormWidgetsApi } from './FormWidgetsApi';\n\n/**\n * @public\n * Form API factory for the orchestratorFormWidgetsPlugin.\n */\nexport const orchestratorFormApiFactory = createApiFactory({\n  api: orchestratorFormApiRef,\n  deps: {},\n  factory() {\n    return new FormWidgetsApi();\n  },\n});\n\n/**\n * @public\n * Orchestrator Frontend Plugin providing decorator with default RJSF widgets for the Workflow Execution page.\n */\nexport const orchestratorFormWidgetsPlugin = createPlugin({\n  id: 'orchestrator-form-widgets',\n  routes: {},\n  apis: [orchestratorFormApiFactory],\n});\n"],"names":["orchestratorFormApiRef","createApiRef","id","isJsonObject","value","Array","isArray","applySelectorArray","async","data","selector","createArrayIfNeeded","emptyArrayIfNeeded","expression","jsonata","evaluate","every","item","Error","JSON","stringify","applySelectorString","useTemplateUnitEvaluator","app","useApp","apiHolder","useApiHolder","configApi","useApi","configApiRef","identityApi","identityApiRef","githubAuthApi","githubAuthApiRef","atlassianAuthApi","atlassianAuthApiRef","googleAuthApi","googleAuthApiRef","microsoftAuthApi","microsoftAuthApiRef","gitlabAuthApi","gitlabAuthApiRef","scmApis","useMemo","scmOpenIdApis","allPlugins","getPlugins","useCallback","unit","formData","responseData","uiProps","keyFamily","substring","indexOf","key","get","getString","templateUnitEvaluatorBackend","getOptionalString","getCredentials","token","getBackstageIdentity","userEntityRef","getProfileInfo","email","displayName","templateUnitEvaluatorIdentityApi","providerKey","providerApiId","lastIndexOf","apiRef","flatMap","plugin","from","getApis","filter","api","at","getAccessToken","getIdToken","getProfile","templateUnitEvaluatorCustomAuthApi","templateUnitEvaluatorSCM","templateUnitEvaluatorOpenId","startsWith","isFetchResponseKey","EMPTY","useRetriggerEvaluate","templateUnitEvaluator","conditions","evaluated","setEvaluated","useState","useEffect","actual","Promise","all","map","condition","catch","err","console","error","v","toString","isEqual","doItAsync","length","getErrorMessage","prefix","message","errorString","String","UNDEFINED_VALUE","evaluateTemplateString","props","template","unitEvaluator","iteration","startIndex","stopIndex","isTheLastOne","evaluatedUnit","undefined","rest","includes","evaluateTemplate","restProps","nestedItem","Object","keys","prop","result","forEach","idx","ALLOWED_METHODS","getRequestInit","requestInit","method","toLocaleUpperCase","join","body","bodyObject","values","bodyInit","headersInit","headers","headersObject","useFetch","retrigger","fetchApi","fetchApiRef","setError","loading","setLoading","setData","fetchUrl","evaluatedRequestInit","setEvaluatedRequestInit","then","reason","useRequestInit","evaluatedFetchUrl","useEvaluateTemplate","useDebounce","response","fetch","ok","status","statusText","json","fetchData","useStyles","makeStyles","theme","color","palette","main","ErrorText","text","classes","div","className","data-testid","autocompleteOptionSelected","backgroundColor","action","selected","menuItem","display","justifyContent","paddingTop","paddingBottom","paddingLeft","menuItemSelected","chip","borderRadius","outline","rhdh","cardBorderColor","safeSet","errors","path","steps","split","safeObject","walkThrough","uiSchema","callback","pathPrefix","dottedPathPrefix","promises","Boolean","flatten","customValidate","_formData","widgets","SchemaUpdater","formContext","updateSchema","options","valueSelector","localError","setLocalError","typedData","applySelectorObject","type","CircularProgress","size","ActiveTextInput","label","onChange","isChangedByUser","getIsChangedByUser","setIsChangedByUser","isReadOnly","readonly","defaultValueSelector","autocompleteSelector","autocompleteOptions","setAutocompleteOptions","handleChange","changed","isByUser","defaultValue","autocompleteValues","renderInput","params","TextField","event","target","disabled","FormControl","variant","fullWidth","Autocomplete","_","renderOption","liProps","state","li","clsx","ActiveText","fieldId","fetchError","fetchLoading","React","resultText","setResultText","evaluatedText","msg","useFetchAndEvaluate","Box","MarkdownContent","content","ActiveDropdown","labelId","labelSelector","labels","setLabels","setValues","selectedLabels","selectedValues","InputLabel","Select","MenuProps","PaperProps","sx","maxHeight","itemLabel","MenuItem","ActiveMultiSelect","name","rawValue","mandatorySelector","allowNewItems","inProgressItem","setInProgressItem","mandatoryValues","setMandatoryValues","allOptions","Set","defaults","mandatory","multiple","isOptionEqualToValue","option","filterSelectedOptions","renderTags","getTagProps","index","tagProps","onDelete","restTagProps","title","Chip","FormWidgetsApi","getFormDecorator","log","FormComponent","getExtraErrors","uiSchemaProperty","validateUrl","evaluatedValidateUrl","ERRORS_KEY","issues","array","e","useGetExtraErrors","orchestratorFormApiFactory","createApiFactory","deps","factory","orchestratorFormWidgetsPlugin","createPlugin","routes","apis"],"sourceRoot":""}