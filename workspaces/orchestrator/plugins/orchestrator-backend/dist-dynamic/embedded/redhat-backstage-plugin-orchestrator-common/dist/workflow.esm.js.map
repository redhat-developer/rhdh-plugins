{"version":3,"file":"workflow.esm.js","sources":["../src/workflow.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Specification } from '@severlessworkflow/sdk-typescript';\nimport { dump } from 'js-yaml';\n\nimport { WorkflowDefinition, WorkflowFormat } from './types';\n\nexport function fromWorkflowSource(content: string): WorkflowDefinition {\n  const parsed = Specification.Workflow.fromSource(content);\n  const workflow = parsed.sourceModel ?? parsed;\n  return removeProperty(workflow, 'normalize');\n}\n\nexport function toWorkflowString(\n  definition: WorkflowDefinition,\n  format: WorkflowFormat,\n): string {\n  switch (format) {\n    case 'json':\n      return toWorkflowJson(definition);\n    case 'yaml':\n      return toWorkflowYaml(definition);\n    default:\n      throw new Error(`Unsupported format ${format}`);\n  }\n}\n\nexport function toWorkflowJson(definition: WorkflowDefinition): string {\n  return JSON.stringify(definition, null, 2);\n}\n\nexport function toWorkflowYaml(definition: WorkflowDefinition): string {\n  return dump(definition);\n}\n\nexport function extractWorkflowFormatFromUri(uri: string): WorkflowFormat {\n  const match = RegExp(/\\.sw\\.(json|yaml|yml)$/).exec(uri);\n  if (match) {\n    if (match[1] === 'yml' || match[1] === 'yaml') {\n      return 'yaml';\n    }\n    if (match[1] === 'json') {\n      return 'json';\n    }\n  }\n  throw new Error(`Unsupported workflow format for uri ${uri}`);\n}\n\nfunction removeProperty<T>(obj: T, propToDelete: string): T {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => removeProperty(item, propToDelete)) as T;\n  }\n\n  const newObj: any = {};\n\n  for (const key in obj) {\n    if (key !== propToDelete) {\n      newObj[key] = removeProperty(obj[key], propToDelete); // Recurse into nested objects\n    }\n  }\n\n  return newObj;\n}\n\nexport function parseWorkflowVariables(variables?: object): object | undefined {\n  if (variables === undefined) {\n    return undefined;\n  }\n\n  if (typeof variables === 'string') {\n    try {\n      return JSON.parse(variables);\n    } catch {\n      throw new Error(\n        `Error when parsing process instance variables: ${variables}`,\n      );\n    }\n  }\n\n  return variables;\n}\n\nexport function extractWorkflowFormat(source: string): WorkflowFormat {\n  try {\n    JSON.parse(source);\n    return 'json';\n  } catch (_) {\n    return 'yaml';\n  }\n}\n"],"names":[],"mappings":";;;AAqBO,SAAS,mBAAmB,OAAA,EAAqC;AACtE,EAAA,MAAM,MAAA,GAAS,aAAA,CAAc,QAAA,CAAS,UAAA,CAAW,OAAO,CAAA;AACxD,EAAA,MAAM,QAAA,GAAW,OAAO,WAAA,IAAe,MAAA;AACvC,EAAA,OAAO,cAAA,CAAe,UAAU,WAAW,CAAA;AAC7C;AAEO,SAAS,gBAAA,CACd,YACA,MAAA,EACQ;AACR,EAAA,QAAQ,MAAA;AAAQ,IACd,KAAK,MAAA;AACH,MAAA,OAAO,eAAe,UAAU,CAAA;AAAA,IAClC,KAAK,MAAA;AACH,MAAA,OAAO,eAAe,UAAU,CAAA;AAAA,IAClC;AACE,MAAA,MAAM,IAAI,KAAA,CAAM,CAAA,mBAAA,EAAsB,MAAM,CAAA,CAAE,CAAA;AAAA;AAEpD;AAEO,SAAS,eAAe,UAAA,EAAwC;AACrE,EAAA,OAAO,IAAA,CAAK,SAAA,CAAU,UAAA,EAAY,IAAA,EAAM,CAAC,CAAA;AAC3C;AAEO,SAAS,eAAe,UAAA,EAAwC;AACrE,EAAA,OAAO,KAAK,UAAU,CAAA;AACxB;AAEO,SAAS,6BAA6B,GAAA,EAA6B;AACxE,EAAA,MAAM,KAAA,GAAQ,MAAA,CAAO,wBAAwB,CAAA,CAAE,KAAK,GAAG,CAAA;AACvD,EAAA,IAAI,KAAA,EAAO;AACT,IAAA,IAAI,MAAM,CAAC,CAAA,KAAM,SAAS,KAAA,CAAM,CAAC,MAAM,MAAA,EAAQ;AAC7C,MAAA,OAAO,MAAA;AAAA,IACT;AACA,IAAA,IAAI,KAAA,CAAM,CAAC,CAAA,KAAM,MAAA,EAAQ;AACvB,MAAA,OAAO,MAAA;AAAA,IACT;AAAA,EACF;AACA,EAAA,MAAM,IAAI,KAAA,CAAM,CAAA,oCAAA,EAAuC,GAAG,CAAA,CAAE,CAAA;AAC9D;AAEA,SAAS,cAAA,CAAkB,KAAQ,YAAA,EAAyB;AAC1D,EAAA,IAAI,OAAO,GAAA,KAAQ,QAAA,IAAY,GAAA,KAAQ,IAAA,EAAM;AAC3C,IAAA,OAAO,GAAA;AAAA,EACT;AAEA,EAAA,IAAI,KAAA,CAAM,OAAA,CAAQ,GAAG,CAAA,EAAG;AACtB,IAAA,OAAO,IAAI,GAAA,CAAI,CAAA,IAAA,KAAQ,cAAA,CAAe,IAAA,EAAM,YAAY,CAAC,CAAA;AAAA,EAC3D;AAEA,EAAA,MAAM,SAAc,EAAC;AAErB,EAAA,KAAA,MAAW,OAAO,GAAA,EAAK;AACrB,IAAA,IAAI,QAAQ,YAAA,EAAc;AACxB,MAAA,MAAA,CAAO,GAAG,CAAA,GAAI,cAAA,CAAe,GAAA,CAAI,GAAG,GAAG,YAAY,CAAA;AAAA,IACrD;AAAA,EACF;AAEA,EAAA,OAAO,MAAA;AACT;AAEO,SAAS,uBAAuB,SAAA,EAAwC;AAC7E,EAAA,IAAI,cAAc,MAAA,EAAW;AAC3B,IAAA,OAAO,MAAA;AAAA,EACT;AAEA,EAAA,IAAI,OAAO,cAAc,QAAA,EAAU;AACjC,IAAA,IAAI;AACF,MAAA,OAAO,IAAA,CAAK,MAAM,SAAS,CAAA;AAAA,IAC7B,CAAA,CAAA,MAAQ;AACN,MAAA,MAAM,IAAI,KAAA;AAAA,QACR,kDAAkD,SAAS,CAAA;AAAA,OAC7D;AAAA,IACF;AAAA,EACF;AAEA,EAAA,OAAO,SAAA;AACT;AAEO,SAAS,sBAAsB,MAAA,EAAgC;AACpE,EAAA,IAAI;AACF,IAAA,IAAA,CAAK,MAAM,MAAM,CAAA;AACjB,IAAA,OAAO,MAAA;AAAA,EACT,SAAS,CAAA,EAAG;AACV,IAAA,OAAO,MAAA;AAAA,EACT;AACF;;;;"}