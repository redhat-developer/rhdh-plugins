{"version":3,"file":"queryBuilder.cjs.js","sources":["../../src/helpers/queryBuilder.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Pagination } from '../types/pagination';\n\nexport function buildGraphQlQuery(args: {\n  type: 'ProcessDefinitions' | 'ProcessInstances' | 'Jobs';\n  queryBody: string;\n  whereClause?: string;\n  pagination?: Pagination;\n}): string {\n  let query = `{${args.type}`;\n\n  const whereClause = buildWhereClause(args.whereClause);\n  const paginationClause = buildPaginationClause(args.pagination);\n\n  if (whereClause || paginationClause) {\n    query += ' (';\n    query += [whereClause, paginationClause].filter(Boolean).join(', ');\n    query += ') ';\n  }\n\n  query += ` {${args.queryBody} } }`;\n\n  return query.replace(/\\s+/g, ' ').trim();\n}\n\nfunction buildWhereClause(whereClause?: string): string {\n  return whereClause ? `where: {${whereClause}}` : '';\n}\n\nfunction buildPaginationClause(pagination?: Pagination): string {\n  if (!pagination) return '';\n\n  const parts = [];\n\n  if (pagination.sortField !== undefined) {\n    parts.push(\n      `orderBy: {${pagination.sortField}: ${\n        pagination.order !== undefined ? pagination.order?.toUpperCase() : 'ASC'\n      }}`,\n    );\n  }\n\n  const paginationParts = [];\n  if (pagination.limit !== undefined) {\n    paginationParts.push(`limit: ${pagination.limit}`);\n  }\n  if (pagination.offset !== undefined) {\n    paginationParts.push(`offset: ${pagination.offset}`);\n  }\n  if (paginationParts.length) {\n    parts.push(`pagination: {${paginationParts.join(', ')}}`);\n  }\n\n  return parts.join(', ');\n}\n"],"names":[],"mappings":";;AAiBO,SAAS,kBAAkB,IAAA,EAKvB;AACT,EAAA,IAAI,KAAA,GAAQ,CAAA,CAAA,EAAI,IAAA,CAAK,IAAI,CAAA,CAAA;AAEzB,EAAA,MAAM,WAAA,GAAc,gBAAA,CAAiB,IAAA,CAAK,WAAW,CAAA;AACrD,EAAA,MAAM,gBAAA,GAAmB,qBAAA,CAAsB,IAAA,CAAK,UAAU,CAAA;AAE9D,EAAA,IAAI,eAAe,gBAAA,EAAkB;AACnC,IAAA,KAAA,IAAS,IAAA;AACT,IAAA,KAAA,IAAS,CAAC,aAAa,gBAAgB,CAAA,CAAE,OAAO,OAAO,CAAA,CAAE,KAAK,IAAI,CAAA;AAClE,IAAA,KAAA,IAAS,IAAA;AAAA,EACX;AAEA,EAAA,KAAA,IAAS,CAAA,EAAA,EAAK,KAAK,SAAS,CAAA,IAAA,CAAA;AAE5B,EAAA,OAAO,KAAA,CAAM,OAAA,CAAQ,MAAA,EAAQ,GAAG,EAAE,IAAA,EAAK;AACzC;AAEA,SAAS,iBAAiB,WAAA,EAA8B;AACtD,EAAA,OAAO,WAAA,GAAc,CAAA,QAAA,EAAW,WAAW,CAAA,CAAA,CAAA,GAAM,EAAA;AACnD;AAEA,SAAS,sBAAsB,UAAA,EAAiC;AAC9D,EAAA,IAAI,CAAC,YAAY,OAAO,EAAA;AAExB,EAAA,MAAM,QAAQ,EAAC;AAEf,EAAA,IAAI,UAAA,CAAW,cAAc,MAAA,EAAW;AACtC,IAAA,KAAA,CAAM,IAAA;AAAA,MACJ,CAAA,UAAA,EAAa,UAAA,CAAW,SAAS,CAAA,EAAA,EAC/B,UAAA,CAAW,KAAA,KAAU,MAAA,GAAY,UAAA,CAAW,KAAA,EAAO,WAAA,EAAY,GAAI,KACrE,CAAA,CAAA;AAAA,KACF;AAAA,EACF;AAEA,EAAA,MAAM,kBAAkB,EAAC;AACzB,EAAA,IAAI,UAAA,CAAW,UAAU,MAAA,EAAW;AAClC,IAAA,eAAA,CAAgB,IAAA,CAAK,CAAA,OAAA,EAAU,UAAA,CAAW,KAAK,CAAA,CAAE,CAAA;AAAA,EACnD;AACA,EAAA,IAAI,UAAA,CAAW,WAAW,MAAA,EAAW;AACnC,IAAA,eAAA,CAAgB,IAAA,CAAK,CAAA,QAAA,EAAW,UAAA,CAAW,MAAM,CAAA,CAAE,CAAA;AAAA,EACrD;AACA,EAAA,IAAI,gBAAgB,MAAA,EAAQ;AAC1B,IAAA,KAAA,CAAM,KAAK,CAAA,aAAA,EAAgB,eAAA,CAAgB,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA,CAAG,CAAA;AAAA,EAC1D;AAEA,EAAA,OAAO,KAAA,CAAM,KAAK,IAAI,CAAA;AACxB;;;;"}