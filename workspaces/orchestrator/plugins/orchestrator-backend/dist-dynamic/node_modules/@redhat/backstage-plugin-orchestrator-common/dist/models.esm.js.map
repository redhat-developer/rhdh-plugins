{"version":3,"file":"models.esm.js","sources":["../src/models.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WorkflowDefinition } from './types';\n\nexport enum ProcessInstanceState {\n  Active = 'ACTIVE',\n  Completed = 'COMPLETED',\n  Aborted = 'ABORTED',\n  Suspended = 'SUSPENDED',\n  Error = 'ERROR',\n  Pending = 'PENDING',\n}\n\nexport type ProcessInstanceStateValues = Uppercase<\n  keyof typeof ProcessInstanceState\n>;\n\nexport enum MilestoneStatus {\n  Available = 'AVAILABLE',\n  Active = 'ACTIVE',\n  Completed = 'COMPLETED',\n}\n\nexport interface NodeInstance {\n  __typename?: 'NodeInstance';\n  id: string;\n  name: string;\n  type: string;\n  enter: string;\n  exit?: string;\n  definitionId: string;\n  nodeId: string;\n  errorMessage: string;\n  retrigger: boolean;\n}\n\nexport interface TriggerableNode {\n  id: number;\n  name: string;\n  type: string;\n  uniqueId: string;\n  nodeDefinitionId: string;\n}\n\nexport interface Milestone {\n  __typename?: 'Milestone';\n  id: string;\n  name: string;\n  status: MilestoneStatus;\n}\n\nexport interface ProcessInstanceError {\n  __typename?: 'ProcessInstanceError';\n  nodeDefinitionId: string;\n  nodeInstanceId: string;\n  message?: string;\n}\n\nexport type ProcessInstanceVariables = Record<string, unknown>;\n\nexport interface ProcessInstance {\n  id: string;\n  processId: string;\n  processName?: string;\n  parentProcessInstanceId?: string;\n  rootProcessInstanceId?: string;\n  rootProcessId?: string;\n  roles?: string[];\n  state?: ProcessInstanceStateValues;\n  endpoint: string;\n  serviceUrl?: string;\n  nodes: NodeInstance[];\n  milestones?: Milestone[];\n  variables?: ProcessInstanceVariables | string;\n  /** Format: date-time */\n  start?: string;\n  /** Format: date-time */\n  end?: string;\n  parentProcessInstance?: ProcessInstance;\n  childProcessInstances?: ProcessInstance[];\n  error?: ProcessInstanceError;\n  addons?: string[];\n  executionSummary?: string[];\n  isSelected?: boolean;\n  errorMessage?: string;\n  isOpen?: boolean;\n  diagram?: string;\n  nodeDefinitions?: TriggerableNode[];\n  source?: string;\n  description?: WorkflowDefinition['description'];\n}\nexport interface IntrospectionQuery {\n  __type: IntrospectionType | null;\n}\n\nexport interface IntrospectionType {\n  name: string;\n  kind: TypeKind;\n  description: string | null;\n  fields: IntrospectionField[] | null;\n}\n\nexport interface IntrospectionField {\n  name: string;\n  type: IntrospectionTypeRef;\n}\n\nexport interface IntrospectionTypeRef {\n  kind: TypeKind;\n  name: TypeName;\n  ofType: IntrospectionTypeRef | null;\n}\n\nexport enum TypeKind {\n  InputObject = 'INPUT_OBJECT',\n}\n\nexport enum TypeName {\n  Id = 'IdArgument',\n  String = 'StringArgument',\n  Date = 'DateArgument',\n}\n"],"names":["ProcessInstanceState","MilestoneStatus","TypeKind","TypeName"],"mappings":"AAkBO,IAAK,oBAAA,qBAAAA,qBAAAA,KAAL;AACL,EAAAA,sBAAA,QAAA,CAAA,GAAS,QAAA;AACT,EAAAA,sBAAA,WAAA,CAAA,GAAY,WAAA;AACZ,EAAAA,sBAAA,SAAA,CAAA,GAAU,SAAA;AACV,EAAAA,sBAAA,WAAA,CAAA,GAAY,WAAA;AACZ,EAAAA,sBAAA,OAAA,CAAA,GAAQ,OAAA;AACR,EAAAA,sBAAA,SAAA,CAAA,GAAU,SAAA;AANA,EAAA,OAAAA,qBAAAA;AAAA,CAAA,EAAA,oBAAA,IAAA,EAAA;AAaL,IAAK,eAAA,qBAAAC,gBAAAA,KAAL;AACL,EAAAA,iBAAA,WAAA,CAAA,GAAY,WAAA;AACZ,EAAAA,iBAAA,QAAA,CAAA,GAAS,QAAA;AACT,EAAAA,iBAAA,WAAA,CAAA,GAAY,WAAA;AAHF,EAAA,OAAAA,gBAAAA;AAAA,CAAA,EAAA,eAAA,IAAA,EAAA;AAgGL,IAAK,QAAA,qBAAAC,SAAAA,KAAL;AACL,EAAAA,UAAA,aAAA,CAAA,GAAc,cAAA;AADJ,EAAA,OAAAA,SAAAA;AAAA,CAAA,EAAA,QAAA,IAAA,EAAA;AAIL,IAAK,QAAA,qBAAAC,SAAAA,KAAL;AACL,EAAAA,UAAA,IAAA,CAAA,GAAK,YAAA;AACL,EAAAA,UAAA,QAAA,CAAA,GAAS,gBAAA;AACT,EAAAA,UAAA,MAAA,CAAA,GAAO,cAAA;AAHG,EAAA,OAAAA,SAAAA;AAAA,CAAA,EAAA,QAAA,IAAA,EAAA;;;;"}