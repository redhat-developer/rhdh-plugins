(function() {
  var colors, scriptName, toExport;

  colors = require('colors');

  toExport = {};

  scriptName = void 0;

  /*
   Console Log.
  
   Passes the parameters to `console.log`.
  
   Outputs:
  
       $ [phonegap] message
  */


  toExport.log = function() {
    var args;
    args = Array.prototype.slice.call(arguments);
    args.unshift(("[" + scriptName + "]").cyan);
    return console.log.apply(this, args);
  };

  /*
  Console Warning.
  
  Passes the parameters to `console.warn`.
  
  Outputs:
  
      $ [warning] message
  */


  toExport.warn = function() {
    var args;
    args = Array.prototype.slice.call(arguments);
    args.unshift(' [warning]'.yellow);
    return console.log.apply(this, args);
  };

  /*
  Console Error.
  
  Passes the parameters to `console.error`.
  
  Outputs:
  
      $ [error] message
  */


  toExport.error = function() {
    var args;
    args = Array.prototype.slice.call(arguments);
    args.unshift('   [error]'.red);
    return console.log.apply(this, args);
  };

  /*
  RAW Console Log.
  
  Passes the parameters to `console.log` with no prefix.
  
  Outputs:
  
      $ message
  */


  toExport.raw = function() {
    var args;
    args = Array.prototype.slice.call(arguments);
    return console.log.apply(this, args);
  };

  module.exports = function($scriptName) {
    if (!$scriptName) {
      throw new Error("Missing argument 'scriptName'!");
    }
    scriptName = $scriptName;
    return toExport;
  };

  if (require.main === module) {
    console.error("" + module.filename + " must not be the main module!");
    console.info("" + module.filename + " is an implementation module only!");
  }

}).call(this);
