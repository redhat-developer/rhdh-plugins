{"version":3,"file":"Scheduler.cjs.js","sources":["../src/Scheduler.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LoggerService,\n  SchedulerServiceTaskRunner,\n  SchedulerServiceTaskFunction,\n} from '@backstage/backend-plugin-api';\n\ntype TaskEnvelope = {\n  task: SchedulerServiceTaskFunction;\n  scheduledRunner: SchedulerServiceTaskRunner;\n};\n\n/**\n * ScheduleTaskParameters\n * @public\n */\nexport type ScheduleTaskParameters = {\n  id: string;\n  task: SchedulerServiceTaskFunction;\n  scheduledRunner: SchedulerServiceTaskRunner;\n};\n\n/**\n * Scheduler responsible for all search tasks.\n * @public\n */\nexport class Scheduler {\n  private logger: LoggerService;\n  private schedule: { [id: string]: TaskEnvelope };\n  private abortControllers: AbortController[];\n  private isRunning: boolean;\n\n  constructor(options: { logger: LoggerService }) {\n    this.logger = options.logger;\n    this.schedule = {};\n    this.abortControllers = [];\n    this.isRunning = false;\n  }\n\n  /**\n   * Adds each task and interval to the schedule.\n   * When running the tasks, the scheduler waits at least for the time specified\n   * in the interval once the task was completed, before running it again.\n   */\n  addToSchedule(options: ScheduleTaskParameters) {\n    const { id, task, scheduledRunner } = options;\n\n    if (this.isRunning) {\n      throw new Error(\n        'Cannot add task to schedule that has already been started.',\n      );\n    }\n\n    if (this.schedule[id]) {\n      throw new Error(`Task with id ${id} already exists.`);\n    }\n\n    this.schedule[id] = { task, scheduledRunner };\n  }\n\n  /**\n   * Starts the scheduling process for each task\n   */\n  start() {\n    this.logger.info('Starting all scheduled search tasks.');\n    this.isRunning = true;\n    Object.keys(this.schedule).forEach(id => {\n      const abortController = new AbortController();\n      this.abortControllers.push(abortController);\n      const { task, scheduledRunner } = this.schedule[id];\n      scheduledRunner.run({\n        id,\n        fn: task,\n        signal: abortController.signal,\n      });\n    });\n  }\n\n  /**\n   * Stop all scheduled tasks.\n   */\n  stop() {\n    this.logger.info('Stopping all scheduled search tasks.');\n    for (const abortController of this.abortControllers) {\n      abortController.abort();\n    }\n    this.abortControllers = [];\n    this.isRunning = false;\n  }\n}\n"],"names":[],"mappings":";;AAyCO,MAAM,SAAA,CAAU;AAAA,EACb,MAAA;AAAA,EACA,QAAA;AAAA,EACA,gBAAA;AAAA,EACA,SAAA;AAAA,EAER,YAAY,OAAA,EAAoC;AAC9C,IAAA,IAAA,CAAK,SAAS,OAAA,CAAQ,MAAA;AACtB,IAAA,IAAA,CAAK,WAAW,EAAC;AACjB,IAAA,IAAA,CAAK,mBAAmB,EAAC;AACzB,IAAA,IAAA,CAAK,SAAA,GAAY,KAAA;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,OAAA,EAAiC;AAC7C,IAAA,MAAM,EAAE,EAAA,EAAI,IAAA,EAAM,eAAA,EAAgB,GAAI,OAAA;AAEtC,IAAA,IAAI,KAAK,SAAA,EAAW;AAClB,MAAA,MAAM,IAAI,KAAA;AAAA,QACR;AAAA,OACF;AAAA,IACF;AAEA,IAAA,IAAI,IAAA,CAAK,QAAA,CAAS,EAAE,CAAA,EAAG;AACrB,MAAA,MAAM,IAAI,KAAA,CAAM,CAAA,aAAA,EAAgB,EAAE,CAAA,gBAAA,CAAkB,CAAA;AAAA,IACtD;AAEA,IAAA,IAAA,CAAK,QAAA,CAAS,EAAE,CAAA,GAAI,EAAE,MAAM,eAAA,EAAgB;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAKA,KAAA,GAAQ;AACN,IAAA,IAAA,CAAK,MAAA,CAAO,KAAK,sCAAsC,CAAA;AACvD,IAAA,IAAA,CAAK,SAAA,GAAY,IAAA;AACjB,IAAA,MAAA,CAAO,IAAA,CAAK,IAAA,CAAK,QAAQ,CAAA,CAAE,QAAQ,CAAA,EAAA,KAAM;AACvC,MAAA,MAAM,eAAA,GAAkB,IAAI,eAAA,EAAgB;AAC5C,MAAA,IAAA,CAAK,gBAAA,CAAiB,KAAK,eAAe,CAAA;AAC1C,MAAA,MAAM,EAAE,IAAA,EAAM,eAAA,EAAgB,GAAI,IAAA,CAAK,SAAS,EAAE,CAAA;AAClD,MAAA,eAAA,CAAgB,GAAA,CAAI;AAAA,QAClB,EAAA;AAAA,QACA,EAAA,EAAI,IAAA;AAAA,QACJ,QAAQ,eAAA,CAAgB;AAAA,OACzB,CAAA;AAAA,IACH,CAAC,CAAA;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,IAAA,GAAO;AACL,IAAA,IAAA,CAAK,MAAA,CAAO,KAAK,sCAAsC,CAAA;AACvD,IAAA,KAAA,MAAW,eAAA,IAAmB,KAAK,gBAAA,EAAkB;AACnD,MAAA,eAAA,CAAgB,KAAA,EAAM;AAAA,IACxB;AACA,IAAA,IAAA,CAAK,mBAAmB,EAAC;AACzB,IAAA,IAAA,CAAK,SAAA,GAAY,KAAA;AAAA,EACnB;AACF;;;;"}