import { jsx, jsxs } from 'react/jsx-runtime';
import Grid from '@material-ui/core/Grid';
import { makeStyles, alpha } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';
import { Link } from '../../components/Link/Link.esm.js';

const useStyles = makeStyles(
  (theme) => ({
    root: {
      textAlign: "left"
    },
    label: {
      color: theme.page.fontColor,
      fontWeight: theme.typography.fontWeightBold,
      letterSpacing: 0,
      fontSize: theme.typography.fontSize,
      marginBottom: theme.spacing(1) / 2,
      lineHeight: 1
    },
    value: {
      color: alpha(theme.page.fontColor, 0.8),
      fontSize: theme.typography.fontSize,
      lineHeight: 1
    }
  }),
  { name: "BackstageHeaderLabel" }
);
const HeaderLabelContent = ({
  value,
  className,
  typographyRootComponent
}) => {
  return /* @__PURE__ */ jsx(
    Typography,
    {
      component: typographyRootComponent ?? (typeof value === "string" ? "p" : "span"),
      className,
      children: value
    }
  );
};
function HeaderLabel(props) {
  const { label, value, url, contentTypograpyRootComponent } = props;
  const classes = useStyles();
  const content = /* @__PURE__ */ jsx(
    HeaderLabelContent,
    {
      className: classes.value,
      value: value || "<Unknown>",
      typographyRootComponent: contentTypograpyRootComponent
    }
  );
  return /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsxs(Typography, { component: "span", className: classes.root, children: [
    /* @__PURE__ */ jsx(Typography, { className: classes.label, children: label }),
    url ? /* @__PURE__ */ jsx(Link, { to: url, children: content }) : content
  ] }) });
}

export { HeaderLabel };
//# sourceMappingURL=HeaderLabel.esm.js.map
