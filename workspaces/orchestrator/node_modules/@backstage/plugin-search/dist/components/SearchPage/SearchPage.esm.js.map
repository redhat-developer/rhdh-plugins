{"version":3,"file":"SearchPage.esm.js","sources":["../../../src/components/SearchPage/SearchPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from 'react';\nimport usePrevious from 'react-use/esm/usePrevious';\nimport qs from 'qs';\nimport { useLocation, useOutlet } from 'react-router-dom';\nimport {\n  SearchContextProvider,\n  useSearch,\n} from '@backstage/plugin-search-react';\nimport { JsonObject } from '@backstage/types';\n\nexport const UrlUpdater = () => {\n  const location = useLocation();\n  const {\n    term,\n    setTerm,\n    types,\n    setTypes,\n    pageCursor,\n    setPageCursor,\n    filters,\n    setFilters,\n  } = useSearch();\n\n  const prevQueryParams = usePrevious(location.search);\n  useEffect(() => {\n    // Only respond to changes to url query params\n    if (location.search === prevQueryParams) {\n      return;\n    }\n\n    const query =\n      qs.parse(location.search.substring(1), { arrayLimit: 0 }) || {};\n\n    if (query.filters) {\n      setFilters(query.filters as JsonObject);\n    }\n\n    if (query.query) {\n      setTerm(query.query as string);\n    }\n\n    if (query.pageCursor) {\n      setPageCursor(query.pageCursor as string);\n    }\n\n    if (query.types) {\n      setTypes(query.types as string[]);\n    }\n  }, [prevQueryParams, location, setTerm, setTypes, setPageCursor, setFilters]);\n\n  useEffect(() => {\n    const newParams = qs.stringify(\n      {\n        query: term,\n        types,\n        pageCursor,\n        filters,\n      },\n      { arrayFormat: 'brackets' },\n    );\n    const newUrl = `${window.location.pathname}?${newParams}`;\n\n    // We directly manipulate window history here in order to not re-render\n    // infinitely (state => location => state => etc). The intention of this\n    // code is just to ensure the right query/filters are loaded when a user\n    // clicks the \"back\" button after clicking a result.\n    window.history.replaceState(null, document.title, newUrl);\n  }, [term, types, pageCursor, filters]);\n\n  return null;\n};\n\n/**\n * @public\n */\nexport const SearchPage = () => {\n  const outlet = useOutlet();\n\n  return (\n    <SearchContextProvider>\n      <UrlUpdater />\n      {outlet}\n    </SearchContextProvider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;AA0BO,MAAM,aAAa,MAAM;AAC9B,EAAA,MAAM,WAAW,WAAA,EAAY;AAC7B,EAAA,MAAM;AAAA,IACJ,IAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA,QAAA;AAAA,IACA,UAAA;AAAA,IACA,aAAA;AAAA,IACA,OAAA;AAAA,IACA;AAAA,MACE,SAAA,EAAU;AAEd,EAAA,MAAM,eAAA,GAAkB,WAAA,CAAY,QAAA,CAAS,MAAM,CAAA;AACnD,EAAA,SAAA,CAAU,MAAM;AAEd,IAAA,IAAI,QAAA,CAAS,WAAW,eAAA,EAAiB;AACvC,MAAA;AAAA,IACF;AAEA,IAAA,MAAM,KAAA,GACJ,EAAA,CAAG,KAAA,CAAM,QAAA,CAAS,MAAA,CAAO,SAAA,CAAU,CAAC,CAAA,EAAG,EAAE,UAAA,EAAY,CAAA,EAAG,KAAK,EAAC;AAEhE,IAAA,IAAI,MAAM,OAAA,EAAS;AACjB,MAAA,UAAA,CAAW,MAAM,OAAqB,CAAA;AAAA,IACxC;AAEA,IAAA,IAAI,MAAM,KAAA,EAAO;AACf,MAAA,OAAA,CAAQ,MAAM,KAAe,CAAA;AAAA,IAC/B;AAEA,IAAA,IAAI,MAAM,UAAA,EAAY;AACpB,MAAA,aAAA,CAAc,MAAM,UAAoB,CAAA;AAAA,IAC1C;AAEA,IAAA,IAAI,MAAM,KAAA,EAAO;AACf,MAAA,QAAA,CAAS,MAAM,KAAiB,CAAA;AAAA,IAClC;AAAA,EACF,CAAA,EAAG,CAAC,eAAA,EAAiB,QAAA,EAAU,SAAS,QAAA,EAAU,aAAA,EAAe,UAAU,CAAC,CAAA;AAE5E,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,YAAY,EAAA,CAAG,SAAA;AAAA,MACnB;AAAA,QACE,KAAA,EAAO,IAAA;AAAA,QACP,KAAA;AAAA,QACA,UAAA;AAAA,QACA;AAAA,OACF;AAAA,MACA,EAAE,aAAa,UAAA;AAAW,KAC5B;AACA,IAAA,MAAM,SAAS,CAAA,EAAG,MAAA,CAAO,QAAA,CAAS,QAAQ,IAAI,SAAS,CAAA,CAAA;AAMvD,IAAA,MAAA,CAAO,OAAA,CAAQ,YAAA,CAAa,IAAA,EAAM,QAAA,CAAS,OAAO,MAAM,CAAA;AAAA,EAC1D,GAAG,CAAC,IAAA,EAAM,KAAA,EAAO,UAAA,EAAY,OAAO,CAAC,CAAA;AAErC,EAAA,OAAO,IAAA;AACT;AAKO,MAAM,aAAa,MAAM;AAC9B,EAAA,MAAM,SAAS,SAAA,EAAU;AAEzB,EAAA,4BACG,qBAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,UAAA,EAAA,EAAW,CAAA;AAAA,IACX;AAAA,GAAA,EACH,CAAA;AAEJ;;;;"}