{"version":3,"file":"SearchType.esm.js","sources":["../../../src/components/SearchType/SearchType.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ChangeEvent } from 'react';\nimport useEffectOnce from 'react-use/esm/useEffectOnce';\nimport {\n  SearchTypeAccordion,\n  SearchTypeAccordionProps,\n} from './SearchType.Accordion';\nimport { SearchTypeTabs, SearchTypeTabsProps } from './SearchType.Tabs';\nimport { useSearch } from '@backstage/plugin-search-react';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { searchTranslationRef } from '../../translation';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    textTransform: 'capitalize',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing(1),\n  },\n  chip: {\n    margin: 2,\n  },\n}));\n\n/**\n * Props for {@link SearchType}.\n *\n * @public\n */\nexport type SearchTypeProps = {\n  className?: string;\n  name: string;\n  values?: string[];\n  defaultValue?: string[] | string | null;\n};\n\n/**\n * @public\n */\nconst SearchType = (props: SearchTypeProps) => {\n  const { className, defaultValue, name, values = [] } = props;\n  const classes = useStyles();\n  const { types, setTypes } = useSearch();\n  const { t } = useTranslationRef(searchTranslationRef);\n\n  useEffectOnce(() => {\n    if (!types.length) {\n      if (defaultValue && Array.isArray(defaultValue)) {\n        setTypes(defaultValue);\n      } else if (defaultValue) {\n        setTypes([defaultValue]);\n      }\n    }\n  });\n\n  const handleChange = (e: ChangeEvent<{ value: unknown }>) => {\n    const value = e.target.value as string[];\n    setTypes(value as string[]);\n  };\n\n  return (\n    <FormControl\n      className={className}\n      variant=\"filled\"\n      fullWidth\n      data-testid=\"search-typefilter-next\"\n    >\n      <InputLabel className={classes.label} margin=\"dense\">\n        {name}\n      </InputLabel>\n      <Select\n        multiple\n        variant=\"outlined\"\n        value={types}\n        onChange={handleChange}\n        placeholder={t('searchType.allResults')}\n        renderValue={selected => (\n          <div className={classes.chips}>\n            {(selected as string[]).map(value => (\n              <Chip\n                key={value}\n                label={value}\n                className={classes.chip}\n                size=\"small\"\n              />\n            ))}\n          </div>\n        )}\n      >\n        {values.map((value: string) => (\n          <MenuItem key={value} value={value}>\n            <Checkbox checked={types.indexOf(value) > -1} />\n            <ListItemText primary={value} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\n/**\n * A control surface for the search query's \"types\" property, displayed as a\n * single-select collapsible accordion suitable for use in faceted search UIs.\n * @public\n */\nSearchType.Accordion = (props: SearchTypeAccordionProps) => {\n  return <SearchTypeAccordion {...props} />;\n};\n\n/**\n * A control surface for the search query's \"types\" property, displayed as a\n * tabs suitable for use in faceted search UIs.\n * @public\n */\nSearchType.Tabs = (props: SearchTypeTabsProps) => {\n  return <SearchTypeTabs {...props} />;\n};\n\nexport { SearchType };\nexport type { SearchTypeAccordionProps, SearchTypeTabsProps };\n"],"names":[],"mappings":"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"}