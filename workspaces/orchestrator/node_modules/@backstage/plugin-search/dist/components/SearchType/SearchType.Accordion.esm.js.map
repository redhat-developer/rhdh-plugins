{"version":3,"file":"SearchType.Accordion.esm.js","sources":["../../../src/components/SearchType/SearchType.Accordion.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { cloneElement, Fragment, useEffect, useState } from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { searchApiRef, useSearch } from '@backstage/plugin-search-react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AllIcon from '@material-ui/icons/FontDownload';\nimport useAsync from 'react-use/esm/useAsync';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { searchTranslationRef } from '../../translation';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.primary,\n  },\n  list: {\n    width: '100%',\n  },\n  listItemIcon: {\n    width: '24px',\n    height: '24px',\n  },\n  accordion: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  accordionSummary: {\n    minHeight: 'auto',\n    '&.Mui-expanded': {\n      minHeight: 'auto',\n    },\n  },\n  accordionSummaryContent: {\n    margin: theme.spacing(2, 0),\n    '&.Mui-expanded': {\n      margin: theme.spacing(2, 0),\n    },\n  },\n  accordionDetails: {\n    padding: theme.spacing(0, 0, 1),\n  },\n}));\n\n/**\n * @public\n */\nexport type SearchTypeAccordionProps = {\n  name: string;\n  types: Array<{\n    value: string;\n    name: string;\n    icon: JSX.Element;\n  }>;\n  defaultValue?: string;\n  showCounts?: boolean;\n};\n\nexport const SearchTypeAccordion = (props: SearchTypeAccordionProps) => {\n  const classes = useStyles();\n  const { filters, setPageCursor, setTypes, term, types } = useSearch();\n  const searchApi = useApi(searchApiRef);\n  const [expanded, setExpanded] = useState(true);\n  const { defaultValue, name, showCounts, types: givenTypes } = props;\n  const { t } = useTranslationRef(searchTranslationRef);\n\n  const toggleExpanded = () => setExpanded(prevState => !prevState);\n  const handleClick = (type: string) => {\n    return () => {\n      setTypes(type !== '' ? [type] : []);\n      setPageCursor(undefined);\n    };\n  };\n\n  // Handle any provided defaultValue\n  useEffect(() => {\n    if (defaultValue) {\n      setTypes([defaultValue]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const definedTypes = [\n    {\n      value: '',\n      name: t('searchType.accordion.allTitle'),\n      icon: <AllIcon />,\n    },\n    ...givenTypes,\n  ];\n  const selected = types[0] || '';\n\n  const { value: resultCounts } = useAsync(async () => {\n    if (!showCounts) {\n      return {};\n    }\n\n    const counts = await Promise.all(\n      definedTypes\n        .map(type => type.value)\n        .map(async type => {\n          const { numberOfResults } = await searchApi.query({\n            term,\n            types: type ? [type] : [],\n            filters:\n              types.includes(type) || (!types.length && !type) ? filters : {},\n            pageLimit: 0,\n          });\n\n          return [\n            type,\n            numberOfResults !== undefined\n              ? t('searchType.accordion.numberOfResults', {\n                  number:\n                    numberOfResults >= 10000 ? `>10000` : `${numberOfResults}`,\n                })\n              : ' -- ',\n          ];\n        }),\n    );\n\n    return Object.fromEntries(counts);\n  }, [filters, showCounts, term, types]);\n\n  return (\n    <Box>\n      <Typography variant=\"body2\" component=\"h2\">\n        {name}\n      </Typography>\n      <Accordion\n        className={classes.accordion}\n        expanded={expanded}\n        onChange={toggleExpanded}\n      >\n        <AccordionSummary\n          classes={{\n            root: classes.accordionSummary,\n            content: classes.accordionSummaryContent,\n          }}\n          expandIcon={<ExpandMoreIcon className={classes.icon} />}\n          IconButtonProps={{ size: 'small' }}\n        >\n          {expanded\n            ? t('searchType.accordion.collapse')\n            : definedTypes.filter(type => type.value === selected)[0]!.name}\n        </AccordionSummary>\n        <AccordionDetails classes={{ root: classes.accordionDetails }}>\n          <List\n            className={classes.list}\n            component=\"nav\"\n            aria-label=\"filter by type\"\n            disablePadding\n            dense\n          >\n            {definedTypes.map(type => (\n              <Fragment key={type.value}>\n                <Divider />\n                <ListItem\n                  selected={\n                    types[0] === type.value ||\n                    (types.length === 0 && type.value === '')\n                  }\n                  onClick={handleClick(type.value)}\n                  button\n                >\n                  <ListItemIcon>\n                    {cloneElement(type.icon, {\n                      className: classes.listItemIcon,\n                    })}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={type.name}\n                    secondary={resultCounts && resultCounts[type.value]}\n                  />\n                </ListItem>\n              </Fragment>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n"],"names":[],"mappings":"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"}