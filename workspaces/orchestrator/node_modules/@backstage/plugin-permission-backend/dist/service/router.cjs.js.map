{"version":3,"file":"router.cjs.js","sources":["../../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'zod';\nimport express, { Request, Response } from 'express';\nimport Router from 'express-promise-router';\nimport { InputError } from '@backstage/errors';\nimport { IdentityApi } from '@backstage/plugin-auth-node';\nimport {\n  AuthorizeResult,\n  EvaluatePermissionResponse,\n  IdentifiedPermissionMessage,\n  isResourcePermission,\n  PermissionAttributes,\n  PermissionMessageBatch,\n} from '@backstage/plugin-permission-common';\nimport {\n  ApplyConditionsRequestEntry,\n  ApplyConditionsResponseEntry,\n  PermissionPolicy,\n  PolicyQueryUser,\n} from '@backstage/plugin-permission-node';\nimport { PermissionIntegrationClient } from './PermissionIntegrationClient';\nimport { memoize } from 'lodash';\nimport DataLoader from 'dataloader';\nimport {\n  AuthService,\n  BackstageCredentials,\n  BackstageNonePrincipal,\n  BackstageUserPrincipal,\n  DiscoveryService,\n  HttpAuthService,\n  LoggerService,\n  RootConfigService,\n  UserInfoService,\n} from '@backstage/backend-plugin-api';\n\nconst attributesSchema: z.ZodSchema<PermissionAttributes> = z.object({\n  action: z\n    .union([\n      z.literal('create'),\n      z.literal('read'),\n      z.literal('update'),\n      z.literal('delete'),\n    ])\n    .optional(),\n});\n\nconst basicPermissionSchema = z.object({\n  type: z.literal('basic'),\n  name: z.string(),\n  attributes: attributesSchema,\n});\n\nconst resourcePermissionSchema = z.object({\n  type: z.literal('resource'),\n  name: z.string(),\n  attributes: attributesSchema,\n  resourceType: z.string(),\n});\n\nconst evaluatePermissionRequestSchema = z.union([\n  z.object({\n    id: z.string(),\n    resourceRef: z.undefined().optional(),\n    permission: basicPermissionSchema,\n  }),\n  z.object({\n    id: z.string(),\n    resourceRef: z\n      .union([z.string(), z.array(z.string()).nonempty()])\n      .optional(),\n    permission: resourcePermissionSchema,\n  }),\n]);\n\nconst evaluatePermissionRequestBatchSchema = z.object({\n  items: z.array(evaluatePermissionRequestSchema),\n});\n\n/**\n * Options required when constructing a new {@link express#Router} using\n * {@link createRouter}.\n *\n * @internal\n */\nexport interface RouterOptions {\n  logger: LoggerService;\n  discovery: DiscoveryService;\n  policy: PermissionPolicy;\n  identity?: IdentityApi;\n  config: RootConfigService;\n  auth: AuthService;\n  httpAuth: HttpAuthService;\n  userInfo: UserInfoService;\n}\n\nconst handleRequest = async (\n  requests: z.infer<typeof evaluatePermissionRequestBatchSchema>['items'],\n  policy: PermissionPolicy,\n  permissionIntegrationClient: PermissionIntegrationClient,\n  credentials: BackstageCredentials<\n    BackstageNonePrincipal | BackstageUserPrincipal\n  >,\n  auth: AuthService,\n  userInfo: UserInfoService,\n): Promise<\n  IdentifiedPermissionMessage<InternalEvaluatePermissionResponse>[]\n> => {\n  const applyConditionsLoaderFor = memoize((pluginId: string) => {\n    return new DataLoader<\n      ApplyConditionsRequestEntry,\n      ApplyConditionsResponseEntry\n    >(batch =>\n      permissionIntegrationClient.applyConditions(pluginId, credentials, batch),\n    );\n  });\n\n  let user: PolicyQueryUser | undefined;\n  if (auth.isPrincipal(credentials, 'user')) {\n    const info = await userInfo.getUserInfo(credentials);\n    const { token } = await auth.getPluginRequestToken({\n      onBehalfOf: credentials,\n      targetPluginId: 'catalog', // TODO: unknown at this point\n    });\n    user = {\n      identity: {\n        type: 'user',\n        userEntityRef: credentials.principal.userEntityRef,\n        ownershipEntityRefs: info.ownershipEntityRefs,\n      },\n      token,\n      credentials,\n      info,\n    };\n  }\n\n  return Promise.all(\n    requests.map(request =>\n      policy\n        .handle({ permission: request.permission }, user)\n        .then(async decision => {\n          if (decision.result !== AuthorizeResult.CONDITIONAL) {\n            return {\n              id: request.id,\n              ...decision,\n            };\n          }\n\n          if (!isResourcePermission(request.permission)) {\n            throw new Error(\n              `Conditional decision returned from permission policy for non-resource permission ${request.permission.name}`,\n            );\n          }\n\n          if (decision.resourceType !== request.permission.resourceType) {\n            throw new Error(\n              `Invalid resource conditions returned from permission policy for permission ${request.permission.name}`,\n            );\n          }\n\n          if (!request.resourceRef) {\n            return {\n              id: request.id,\n              ...decision,\n            };\n          }\n\n          return applyConditionsLoaderFor(decision.pluginId).load({\n            id: request.id,\n            resourceRef: request.resourceRef,\n            ...decision,\n          });\n        }),\n    ),\n  );\n};\n\n/**\n * Creates a new {@link express#Router} which provides the backend API\n * for the permission system.\n *\n * @internal\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { policy, discovery, config, logger, auth, httpAuth, userInfo } =\n    options;\n\n  if (!config.getOptionalBoolean('permission.enabled')) {\n    logger.warn(\n      'Permission backend started with permissions disabled. Enable permissions by setting permission.enabled=true.',\n    );\n  }\n\n  const disabledDefaultAuthPolicy =\n    config.getOptionalBoolean(\n      'backend.auth.dangerouslyDisableDefaultAuthPolicy',\n    ) ?? false;\n\n  const permissionIntegrationClient = new PermissionIntegrationClient({\n    discovery,\n    auth,\n  });\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/health', (_, response) => {\n    response.json({ status: 'ok' });\n  });\n\n  router.post(\n    '/authorize',\n    async (\n      req: Request,\n      res: Response<PermissionMessageBatch<InternalEvaluatePermissionResponse>>,\n    ) => {\n      const credentials = await httpAuth.credentials(req, {\n        allow: ['user', 'none'],\n      });\n\n      const parseResult = evaluatePermissionRequestBatchSchema.safeParse(\n        req.body,\n      );\n\n      if (!parseResult.success) {\n        throw new InputError(parseResult.error.toString());\n      }\n\n      const body = parseResult.data;\n\n      if (\n        (auth.isPrincipal(credentials, 'none') && !disabledDefaultAuthPolicy) ||\n        (auth.isPrincipal(credentials, 'user') && !credentials.principal.actor)\n      ) {\n        if (\n          body.items.some(\n            r =>\n              isResourcePermission(r.permission) && r.resourceRef === undefined,\n          )\n        ) {\n          throw new InputError(\n            'Resource permissions require a resourceRef to be set. Direct user requests without a resourceRef are not allowed.',\n          );\n        }\n      }\n\n      res.json({\n        items: await handleRequest(\n          body.items,\n          policy,\n          permissionIntegrationClient,\n          credentials,\n          auth,\n          userInfo,\n        ),\n      });\n    },\n  );\n\n  return router;\n}\n\n/**\n * @internal\n */\ntype InternalEvaluatePermissionResponse =\n  | EvaluatePermissionResponse\n  | {\n      result: Array<AuthorizeResult.ALLOW | AuthorizeResult.DENY>;\n    };\n"],"names":["z","memoize","DataLoader","AuthorizeResult","isResourcePermission","PermissionIntegrationClient","Router","express","InputError"],"mappings":"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"}