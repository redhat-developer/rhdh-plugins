function createErrorCollector(context) {
  const errors = [];
  const children = [];
  return {
    report(report) {
      errors.push({
        ...report,
        context: { ...context, ...report.context }
      });
    },
    collectErrors() {
      const allErrors = [
        ...errors,
        ...children.flatMap((child) => child.collectErrors() ?? [])
      ];
      errors.length = 0;
      if (allErrors.length === 0) {
        return void 0;
      }
      return allErrors;
    },
    child(childContext) {
      const child = createErrorCollector({ ...context, ...childContext });
      children.push(child);
      return child;
    }
  };
}

export { createErrorCollector };
//# sourceMappingURL=createErrorCollector.esm.js.map
