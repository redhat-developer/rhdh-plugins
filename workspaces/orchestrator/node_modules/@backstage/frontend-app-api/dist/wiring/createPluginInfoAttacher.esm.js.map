{"version":3,"file":"createPluginInfoAttacher.esm.js","sources":["../../src/wiring/createPluginInfoAttacher.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigApi } from '@backstage/core-plugin-api';\nimport {\n  FrontendFeature,\n  FrontendPluginInfo,\n} from '@backstage/frontend-plugin-api';\nimport { OpaqueFrontendPlugin } from '@internal/frontend';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport once from 'lodash/once';\n// Avoid full dependency on catalog-model\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  parseEntityRef,\n  stringifyEntityRef,\n} from '../../../catalog-model/src/entity/ref';\n\n/**\n * A function that resolves plugin info from a plugin manifest and package.json.\n *\n * @public\n */\nexport type FrontendPluginInfoResolver = (ctx: {\n  packageJson(): Promise<JsonObject | undefined>;\n  manifest(): Promise<JsonObject | undefined>;\n  defaultResolver(sources: {\n    packageJson: JsonObject | undefined;\n    manifest: JsonObject | undefined;\n  }): Promise<{ info: FrontendPluginInfo }>;\n}) => Promise<{ info: FrontendPluginInfo }>;\n\nexport function createPluginInfoAttacher(\n  config: ConfigApi,\n  infoResolver: FrontendPluginInfoResolver = async ctx =>\n    ctx.defaultResolver({\n      packageJson: await ctx.packageJson(),\n      manifest: await ctx.manifest(),\n    }),\n): (feature: FrontendFeature) => FrontendFeature {\n  const applyInfoOverrides = createPluginInfoOverrider(config);\n\n  return (feature: FrontendFeature) => {\n    if (!OpaqueFrontendPlugin.isType(feature)) {\n      return feature;\n    }\n\n    const plugin = OpaqueFrontendPlugin.toInternal(feature);\n\n    return {\n      ...plugin,\n      info: once(async () => {\n        const manifestLoader = plugin.infoOptions?.manifest;\n        const packageJsonLoader = plugin.infoOptions?.packageJson;\n\n        const { info: resolvedInfo } = await infoResolver({\n          manifest: async () => manifestLoader?.(),\n          packageJson: async () => packageJsonLoader?.(),\n          defaultResolver: async sources => ({\n            info: {\n              ...resolvePackageInfo(sources.packageJson),\n              ...resolveManifestInfo(sources.manifest),\n            },\n          }),\n        });\n\n        const infoWithOverrides = applyInfoOverrides(plugin.id, resolvedInfo);\n        return normalizePluginInfo(infoWithOverrides);\n      }),\n    };\n  };\n}\n\nfunction normalizePluginInfo(info: FrontendPluginInfo) {\n  return {\n    ...info,\n    ownerEntityRefs: info.ownerEntityRefs?.map(ref =>\n      stringifyEntityRef(\n        parseEntityRef(ref, {\n          defaultKind: 'Group',\n        }),\n      ),\n    ),\n  };\n}\n\nfunction createPluginInfoOverrider(config: ConfigApi) {\n  const overrideConfigs =\n    config.getOptionalConfigArray('app.pluginOverrides') ?? [];\n\n  const overrideMatchers = overrideConfigs.map(overrideConfig => {\n    const pluginIdMatcher = makeStringMatcher(\n      overrideConfig.getOptionalString('match.pluginId'),\n    );\n    const packageNameMatcher = makeStringMatcher(\n      overrideConfig.getOptionalString('match.packageName'),\n    );\n    const description = overrideConfig.getOptionalString('info.description');\n    const ownerEntityRefs = overrideConfig.getOptionalStringArray(\n      'info.ownerEntityRefs',\n    );\n    const links = overrideConfig\n      .getOptionalConfigArray('info.links')\n      ?.map(linkConfig => ({\n        title: linkConfig.getString('title'),\n        url: linkConfig.getString('url'),\n      }));\n\n    return {\n      test(pluginId: string, packageName?: string) {\n        return packageNameMatcher(packageName) && pluginIdMatcher(pluginId);\n      },\n      info: {\n        description,\n        ownerEntityRefs,\n        links,\n      },\n    };\n  });\n\n  return (pluginId: string, info: FrontendPluginInfo) => {\n    const { packageName } = info;\n    for (const matcher of overrideMatchers) {\n      if (matcher.test(pluginId, packageName)) {\n        if (matcher.info.description) {\n          info.description = matcher.info.description;\n        }\n        if (matcher.info.ownerEntityRefs) {\n          info.ownerEntityRefs = matcher.info.ownerEntityRefs;\n        }\n        if (matcher.info.links) {\n          info.links = matcher.info.links;\n        }\n      }\n    }\n    return info;\n  };\n}\n\nfunction resolveManifestInfo(manifest?: JsonValue) {\n  if (!isJsonObject(manifest) || !isJsonObject(manifest.metadata)) {\n    return undefined;\n  }\n\n  const info: FrontendPluginInfo = {};\n\n  if (isJsonObject(manifest.spec) && typeof manifest.spec.owner === 'string') {\n    info.ownerEntityRefs = [\n      stringifyEntityRef(\n        parseEntityRef(manifest.spec.owner, {\n          defaultKind: 'Group',\n          defaultNamespace: manifest.metadata.namespace?.toString(),\n        }),\n      ),\n    ];\n  }\n\n  if (Array.isArray(manifest.metadata.links)) {\n    info.links = manifest.metadata.links.filter(isJsonObject).map(link => ({\n      title: String(link.title),\n      url: String(link.url),\n    }));\n  }\n\n  return info;\n}\n\nfunction resolvePackageInfo(packageJson?: JsonObject) {\n  if (!packageJson) {\n    return undefined;\n  }\n\n  const info: FrontendPluginInfo = {\n    packageName: packageJson?.name?.toString(),\n    version: packageJson?.version?.toString(),\n    description: packageJson?.description?.toString(),\n  };\n\n  const links: { title: string; url: string }[] = [];\n\n  if (typeof packageJson.homepage === 'string') {\n    links.push({\n      title: 'Homepage',\n      url: packageJson.homepage,\n    });\n  }\n\n  if (\n    isJsonObject(packageJson.repository) &&\n    typeof packageJson.repository?.url === 'string'\n  ) {\n    try {\n      const url = new URL(packageJson.repository?.url);\n      if (url.protocol === 'http:' || url.protocol === 'https:') {\n        // TODO(Rugvip): Support more variants\n        if (\n          url.hostname === 'github.com' &&\n          typeof packageJson.repository.directory === 'string'\n        ) {\n          const path = `${url.pathname}/tree/-/${packageJson.repository.directory}`;\n          url.pathname = path.replaceAll('//', '/');\n        }\n\n        links.push({\n          title: 'Repository',\n          url: url.toString(),\n        });\n      }\n    } catch {\n      /* ignored */\n    }\n  }\n\n  if (links.length > 0) {\n    info.links = links;\n  }\n  return info;\n}\n\nfunction makeStringMatcher(pattern: string | undefined) {\n  if (!pattern) {\n    return () => true;\n  }\n  if (pattern.startsWith('/') && pattern.endsWith('/') && pattern.length > 2) {\n    const regex = new RegExp(pattern.slice(1, -1));\n    return (str?: string) => (str ? regex.test(str) : false);\n  }\n\n  return (str?: string) => str === pattern;\n}\n\nfunction isJsonObject(value?: JsonValue): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n"],"names":[],"mappings":"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"}