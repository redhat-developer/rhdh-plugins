{"version":3,"file":"createErrorCollector.esm.js","sources":["../../src/wiring/createErrorCollector.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppNode, FrontendPlugin } from '@backstage/frontend-plugin-api';\n\n/**\n * @public\n */\nexport type AppErrorTypes = {\n  // resolveAppNodeSpecs\n  EXTENSION_IGNORED: {\n    context: { plugin: FrontendPlugin; extensionId: string };\n  };\n  INVALID_EXTENSION_CONFIG_KEY: {\n    context: { extensionId: string };\n  };\n  // resolveAppTree\n  EXTENSION_INPUT_REDIRECT_CONFLICT: {\n    context: { node: AppNode; inputName: string };\n  };\n  // instantiateAppNodeTree\n  EXTENSION_INPUT_DATA_IGNORED: {\n    context: { node: AppNode; inputName: string };\n  };\n  EXTENSION_INPUT_DATA_MISSING: {\n    context: { node: AppNode; inputName: string };\n  };\n  EXTENSION_ATTACHMENT_CONFLICT: {\n    context: { node: AppNode; inputName: string };\n  };\n  EXTENSION_ATTACHMENT_MISSING: {\n    context: { node: AppNode; inputName: string };\n  };\n  EXTENSION_CONFIGURATION_INVALID: {\n    context: { node: AppNode };\n  };\n  EXTENSION_INVALID: {\n    context: { node: AppNode };\n  };\n  EXTENSION_OUTPUT_CONFLICT: {\n    context: { node: AppNode; dataRefId: string };\n  };\n  EXTENSION_OUTPUT_MISSING: {\n    context: { node: AppNode; dataRefId: string };\n  };\n  EXTENSION_OUTPUT_IGNORED: {\n    context: { node: AppNode; dataRefId: string };\n  };\n  EXTENSION_FACTORY_ERROR: {\n    context: { node: AppNode };\n  };\n  // createSpecializedApp\n  API_EXTENSION_INVALID: {\n    context: { node: AppNode };\n  };\n  // routing\n  ROUTE_DUPLICATE: {\n    context: { routeId: string };\n  };\n  ROUTE_BINDING_INVALID_VALUE: {\n    context: { routeId: string };\n  };\n  ROUTE_NOT_FOUND: {\n    context: { routeId: string };\n  };\n};\n\n/**\n * @public\n */\nexport type AppError =\n  keyof AppErrorTypes extends infer ICode extends keyof AppErrorTypes\n    ? ICode extends any\n      ? {\n          code: ICode;\n          message: string;\n          context: AppErrorTypes[ICode]['context'];\n        }\n      : never\n    : never;\n\n/** @internal */\nexport interface ErrorCollector<TContext extends {} = {}> {\n  report<TCode extends keyof AppErrorTypes>(\n    report: Omit<\n      AppErrorTypes[TCode]['context'],\n      keyof TContext\n    > extends infer IContext extends {}\n      ? {} extends IContext\n        ? {\n            code: TCode;\n            message: string;\n          }\n        : {\n            code: TCode;\n            message: string;\n            context: IContext;\n          }\n      : never,\n  ): void;\n  child<TAdditionalContext extends {}>(\n    context: TAdditionalContext,\n  ): ErrorCollector<TContext & TAdditionalContext>;\n  collectErrors(): AppError[] | undefined;\n}\n\n/** @internal */\nexport function createErrorCollector(\n  context?: Partial<AppError['context']>,\n): ErrorCollector {\n  const errors: AppError[] = [];\n  const children: ErrorCollector[] = [];\n  return {\n    report(report: { code: string; message: string; context?: {} }) {\n      errors.push({\n        ...report,\n        context: { ...context, ...report.context },\n      } as AppError);\n    },\n    collectErrors() {\n      const allErrors = [\n        ...errors,\n        ...children.flatMap(child => child.collectErrors() ?? []),\n      ];\n      errors.length = 0;\n      if (allErrors.length === 0) {\n        return undefined;\n      }\n      return allErrors;\n    },\n    child(childContext) {\n      const child = createErrorCollector({ ...context, ...childContext });\n      children.push(child);\n      return child as ErrorCollector<any>;\n    },\n  };\n}\n"],"names":[],"mappings":"AAwHO,SAAS,qBACd,OAAA,EACgB;AAChB,EAAA,MAAM,SAAqB,EAAC;AAC5B,EAAA,MAAM,WAA6B,EAAC;AACpC,EAAA,OAAO;AAAA,IACL,OAAO,MAAA,EAAyD;AAC9D,MAAA,MAAA,CAAO,IAAA,CAAK;AAAA,QACV,GAAG,MAAA;AAAA,QACH,SAAS,EAAE,GAAG,OAAA,EAAS,GAAG,OAAO,OAAA;AAAQ,OAC9B,CAAA;AAAA,IACf,CAAA;AAAA,IACA,aAAA,GAAgB;AACd,MAAA,MAAM,SAAA,GAAY;AAAA,QAChB,GAAG,MAAA;AAAA,QACH,GAAG,SAAS,OAAA,CAAQ,CAAA,KAAA,KAAS,MAAM,aAAA,EAAc,IAAK,EAAE;AAAA,OAC1D;AACA,MAAA,MAAA,CAAO,MAAA,GAAS,CAAA;AAChB,MAAA,IAAI,SAAA,CAAU,WAAW,CAAA,EAAG;AAC1B,QAAA,OAAO,MAAA;AAAA,MACT;AACA,MAAA,OAAO,SAAA;AAAA,IACT,CAAA;AAAA,IACA,MAAM,YAAA,EAAc;AAClB,MAAA,MAAM,QAAQ,oBAAA,CAAqB,EAAE,GAAG,OAAA,EAAS,GAAG,cAAc,CAAA;AAClE,MAAA,QAAA,CAAS,KAAK,KAAK,CAAA;AACnB,MAAA,OAAO,KAAA;AAAA,IACT;AAAA,GACF;AACF;;;;"}