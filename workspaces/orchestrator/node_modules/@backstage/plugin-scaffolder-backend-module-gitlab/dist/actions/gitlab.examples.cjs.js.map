{"version":3,"file":"gitlab.examples.cjs.js","sources":["../../src/actions/gitlab.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a git repository with the content in the workspace, and publishes it to GitLab with the default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Add a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            description: 'Initialize a git repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with an initial commit message, if not set defaults to `initial commit`.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            description: 'Initialize a git repository',\n            gitCommitMessage: 'Started a project.',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with additional settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              ci_config_path: '.gitlab-ci.yml',\n              visibility: 'public',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with fast forward merge and always squash settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              merge_method: 'ff',\n              squash_option: 'always',\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with branch settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            branches: [\n              {\n                name: 'dev',\n                create: true,\n                protect: true,\n                ref: 'master',\n              },\n              {\n                name: 'master',\n                protect: true,\n              },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a GitLab repository with environment variables.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            projectVariables: [\n              {\n                key: 'key1',\n                value: 'value1',\n                protected: true,\n                masked: false,\n              },\n              {\n                key: 'key2',\n                value: 'value2',\n                protected: true,\n                masked: false,\n              },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with pipeline must succeed and allow merge on skipped pipeline settings.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              only_allow_merge_if_pipeline_succeeds: true,\n              allow_merge_on_skipped_pipeline: true,\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with setting to require all threads (discussions) on merge request to be resolved before merging.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            settings: {\n              only_allow_merge_if_all_discussions_are_resolved: true,\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitLab repository with the default readme and no files from workspace only if this repository does not exist yet.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitlab',\n          name: 'Publish to GitLab',\n          input: {\n            repoUrl: 'gitlab.com?repo=project_name&owner=group_name',\n            skipExisting: true,\n            initialize_with_readme: true,\n            sourcePath: false,\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}