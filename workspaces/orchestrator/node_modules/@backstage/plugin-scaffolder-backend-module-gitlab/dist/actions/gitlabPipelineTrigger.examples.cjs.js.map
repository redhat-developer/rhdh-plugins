{"version":3,"file":"gitlabPipelineTrigger.examples.cjs.js","sources":["../../src/actions/gitlabPipelineTrigger.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\nimport { commonGitlabConfigExample } from '../commonGitlabConfig';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Trigger a GitLab Project Pipeline',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'triggerPipeline',\n          name: 'Trigger Project Pipeline',\n          action: 'gitlab:pipeline:trigger',\n          input: {\n            ...commonGitlabConfigExample,\n            projectId: 12,\n            tokenDescription:\n              'This is the text that will appear in the pipeline token',\n            token: 'glpt-xxxxxxxxxxxx',\n            branch: 'main',\n            variables: { var_one: 'one', var_two: 'two' },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a GitLab Project Pipeline with No Variables',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'triggerPipeline',\n          name: 'Trigger Project Pipeline',\n          action: 'gitlab:pipeline:trigger',\n          input: {\n            ...commonGitlabConfigExample,\n            projectId: 12,\n            tokenDescription:\n              'This is the text that will appear in the pipeline token',\n            token: 'glpt-xxxxxxxxxxxx',\n            branch: 'main',\n            variables: {},\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a GitLab Project Pipeline with Single Variables',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'triggerPipeline',\n          name: 'Trigger Project Pipeline',\n          action: 'gitlab:pipeline:trigger',\n          input: {\n            ...commonGitlabConfigExample,\n            projectId: 12,\n            tokenDescription:\n              'This is the text that will appear in the pipeline token',\n            token: 'glpt-xxxxxxxxxxxx',\n            branch: 'main',\n            variables: { var_one: 'one' },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a GitLab Project Pipeline with Multiple Variables',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'triggerPipeline',\n          name: 'Trigger Project Pipeline',\n          action: 'gitlab:pipeline:trigger',\n          input: {\n            ...commonGitlabConfigExample,\n            projectId: 12,\n            tokenDescription:\n              'This is the text that will appear in the pipeline token',\n            token: 'glpt-xxxxxxxxxxxx',\n            branch: 'main',\n            variables: { var_one: 'one', var_two: 'two', var_three: 'three' },\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml","commonGitlabConfigExample"],"mappings":";;;;;;;;;AAmBO,MAAM,QAAA,GAA8B;AAAA,EACzC;AAAA,IACE,WAAA,EAAa,mCAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,EAAA,EAAI,iBAAA;AAAA,UACJ,IAAA,EAAM,0BAAA;AAAA,UACN,MAAA,EAAQ,yBAAA;AAAA,UACR,KAAA,EAAO;AAAA,YACL,GAAGC,4CAAA;AAAA,YACH,SAAA,EAAW,EAAA;AAAA,YACX,gBAAA,EACE,yDAAA;AAAA,YACF,KAAA,EAAO,mBAAA;AAAA,YACP,MAAA,EAAQ,MAAA;AAAA,YACR,SAAA,EAAW,EAAE,OAAA,EAAS,KAAA,EAAO,SAAS,KAAA;AAAM;AAC9C;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,qDAAA;AAAA,IACb,OAAA,EAASD,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,EAAA,EAAI,iBAAA;AAAA,UACJ,IAAA,EAAM,0BAAA;AAAA,UACN,MAAA,EAAQ,yBAAA;AAAA,UACR,KAAA,EAAO;AAAA,YACL,GAAGC,4CAAA;AAAA,YACH,SAAA,EAAW,EAAA;AAAA,YACX,gBAAA,EACE,yDAAA;AAAA,YACF,KAAA,EAAO,mBAAA;AAAA,YACP,MAAA,EAAQ,MAAA;AAAA,YACR,WAAW;AAAC;AACd;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,yDAAA;AAAA,IACb,OAAA,EAASD,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,EAAA,EAAI,iBAAA;AAAA,UACJ,IAAA,EAAM,0BAAA;AAAA,UACN,MAAA,EAAQ,yBAAA;AAAA,UACR,KAAA,EAAO;AAAA,YACL,GAAGC,4CAAA;AAAA,YACH,SAAA,EAAW,EAAA;AAAA,YACX,gBAAA,EACE,yDAAA;AAAA,YACF,KAAA,EAAO,mBAAA;AAAA,YACP,MAAA,EAAQ,MAAA;AAAA,YACR,SAAA,EAAW,EAAE,OAAA,EAAS,KAAA;AAAM;AAC9B;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,2DAAA;AAAA,IACb,OAAA,EAASD,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,EAAA,EAAI,iBAAA;AAAA,UACJ,IAAA,EAAM,0BAAA;AAAA,UACN,MAAA,EAAQ,yBAAA;AAAA,UACR,KAAA,EAAO;AAAA,YACL,GAAGC,4CAAA;AAAA,YACH,SAAA,EAAW,EAAA;AAAA,YACX,gBAAA,EACE,yDAAA;AAAA,YACF,KAAA,EAAO,mBAAA;AAAA,YACP,MAAA,EAAQ,MAAA;AAAA,YACR,WAAW,EAAE,OAAA,EAAS,OAAO,OAAA,EAAS,KAAA,EAAO,WAAW,OAAA;AAAQ;AAClE;AACF;AACF,KACD;AAAA;AAEL;;;;"}