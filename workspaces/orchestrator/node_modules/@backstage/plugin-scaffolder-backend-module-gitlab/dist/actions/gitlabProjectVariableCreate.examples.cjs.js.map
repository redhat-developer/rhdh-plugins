{"version":3,"file":"gitlabProjectVariableCreate.examples.cjs.js","sources":["../../src/actions/gitlabProjectVariableCreate.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Creating a GitLab project variable of type env_var',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:createGitlabProjectVariableAction',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '123',\n            key: 'MY_VARIABLE',\n            value: 'my_value',\n            variableType: 'env_var',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Creating a GitLab project variable of type file',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:createGitlabProjectVariableAction',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '123',\n            key: 'MY_VARIABLE',\n            value: 'my-file-content',\n            variableType: 'file',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitLab project variable that is protected.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:createGitlabProjectVariableAction',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '456',\n            key: 'MY_VARIABLE',\n            value: 'my_value',\n            variableType: 'env_var',\n            variableProtected: true,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitLab project variable with masked flag as true',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:createGitlabProjectVariableAction',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '789',\n            key: 'DB_PASSWORD',\n            value: 'password123',\n            variableType: 'env_var',\n            masked: true,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Create a GitLab project variable that is expandable.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:projectVariable:create',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '123',\n            key: 'MY_VARIABLE',\n            value: 'my_value',\n            variableType: 'env_var',\n            raw: true,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitLab project variable with a specific environment scope.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:projectVariable:create',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '123',\n            key: 'MY_VARIABLE',\n            value: 'my_value',\n            variableType: 'env_var',\n            environmentScope: 'production',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Create a GitLab project variable with a wildcard environment scope.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'createVariable',\n          action: 'gitlab:projectVariable:create',\n          name: 'Create GitLab Project Variable',\n          input: {\n            repoUrl: 'gitlab.com?repo=repo&owner=owner',\n            projectId: '123',\n            key: 'MY_VARIABLE',\n            value: 'my_value',\n            variableType: 'env_var',\n            environmentScope: '*',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}