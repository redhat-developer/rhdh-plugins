{"version":3,"file":"IdentityApiSignOutProxy.esm.js","sources":["../../../src/layout/SignInPage/IdentityApiSignOutProxy.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackstageUserIdentity,\n  IdentityApi,\n  ProfileInfo,\n} from '@backstage/core-plugin-api';\n\n// Similar to the AppIdentityApi we provide backwards compatibility for a limited time\ntype CompatibilityIdentityApi = IdentityApi & {\n  getUserId?(): string;\n  getIdToken?(): Promise<string | undefined>;\n  getProfile?(): ProfileInfo;\n};\n\nexport class IdentityApiSignOutProxy implements IdentityApi {\n  private constructor(\n    private readonly config: {\n      identityApi: CompatibilityIdentityApi;\n      signOut: IdentityApi['signOut'];\n    },\n  ) {}\n\n  static from(config: {\n    identityApi: CompatibilityIdentityApi;\n    signOut: IdentityApi['signOut'];\n  }): IdentityApi {\n    return new IdentityApiSignOutProxy(config);\n  }\n\n  getUserId(): string {\n    if (!this.config.identityApi.getUserId) {\n      throw new Error(`SignOutProxy IdentityApi.getUserId is not implemented`);\n    }\n    return this.config.identityApi.getUserId();\n  }\n\n  getIdToken(): Promise<string | undefined> {\n    if (!this.config.identityApi.getIdToken) {\n      throw new Error(`SignOutProxy IdentityApi.getIdToken is not implemented`);\n    }\n    return this.config.identityApi.getIdToken();\n  }\n\n  getProfile(): ProfileInfo {\n    if (!this.config.identityApi.getProfile) {\n      throw new Error(`SignOutProxy IdentityApi.getProfile is not implemented`);\n    }\n    return this.config.identityApi.getProfile();\n  }\n\n  getProfileInfo(): Promise<ProfileInfo> {\n    return this.config.identityApi.getProfileInfo();\n  }\n\n  getBackstageIdentity(): Promise<BackstageUserIdentity> {\n    return this.config.identityApi.getBackstageIdentity();\n  }\n\n  getCredentials(): Promise<{ token?: string | undefined }> {\n    return this.config.identityApi.getCredentials();\n  }\n\n  signOut(): Promise<void> {\n    return this.config.signOut();\n  }\n}\n"],"names":[],"mappings":"AA6BO,MAAM,uBAAA,CAA+C;AAAA,EAClD,YACW,MAAA,EAIjB;AAJiB,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA,EAIhB;AAAA,EAEH,OAAO,KAAK,MAAA,EAGI;AACd,IAAA,OAAO,IAAI,wBAAwB,MAAM,CAAA;AAAA,EAC3C;AAAA,EAEA,SAAA,GAAoB;AAClB,IAAA,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,SAAA,EAAW;AACtC,MAAA,MAAM,IAAI,MAAM,CAAA,qDAAA,CAAuD,CAAA;AAAA,IACzE;AACA,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,SAAA,EAAU;AAAA,EAC3C;AAAA,EAEA,UAAA,GAA0C;AACxC,IAAA,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,UAAA,EAAY;AACvC,MAAA,MAAM,IAAI,MAAM,CAAA,sDAAA,CAAwD,CAAA;AAAA,IAC1E;AACA,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,UAAA,EAAW;AAAA,EAC5C;AAAA,EAEA,UAAA,GAA0B;AACxB,IAAA,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,UAAA,EAAY;AACvC,MAAA,MAAM,IAAI,MAAM,CAAA,sDAAA,CAAwD,CAAA;AAAA,IAC1E;AACA,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,UAAA,EAAW;AAAA,EAC5C;AAAA,EAEA,cAAA,GAAuC;AACrC,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,cAAA,EAAe;AAAA,EAChD;AAAA,EAEA,oBAAA,GAAuD;AACrD,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,oBAAA,EAAqB;AAAA,EACtD;AAAA,EAEA,cAAA,GAA0D;AACxD,IAAA,OAAO,IAAA,CAAK,MAAA,CAAO,WAAA,CAAY,cAAA,EAAe;AAAA,EAChD;AAAA,EAEA,OAAA,GAAyB;AACvB,IAAA,OAAO,IAAA,CAAK,OAAO,OAAA,EAAQ;AAAA,EAC7B;AACF;;;;"}