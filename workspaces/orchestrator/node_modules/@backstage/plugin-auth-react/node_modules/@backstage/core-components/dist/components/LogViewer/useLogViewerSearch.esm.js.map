{"version":3,"file":"useLogViewerSearch.esm.js","sources":["../../../src/components/LogViewer/useLogViewerSearch.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo, useState } from 'react';\nimport { useToggle } from '@react-hookz/web';\nimport { AnsiLine } from './AnsiProcessor';\n\nexport function applySearchFilter(lines: AnsiLine[], searchText: string) {\n  if (!searchText) {\n    return { lines };\n  }\n\n  const matchingLines = [];\n  const searchResults = [];\n  for (const line of lines) {\n    if (line.text.includes(searchText)) {\n      matchingLines.push(line);\n\n      let offset = 0;\n      let lineResultIndex = 0;\n      for (;;) {\n        const start = line.text.indexOf(searchText, offset);\n        if (start === -1) {\n          break;\n        }\n        searchResults.push({\n          lineNumber: line.lineNumber,\n          lineIndex: lineResultIndex++,\n        });\n        offset = start + searchText.length;\n      }\n    }\n  }\n\n  return {\n    lines: matchingLines,\n    results: searchResults,\n  };\n}\n\nexport interface LogViewerSearch {\n  lines: AnsiLine[];\n\n  searchText: string;\n  searchInput: string;\n  setSearchInput: (searchInput: string) => void;\n\n  shouldFilter: boolean;\n  toggleShouldFilter: () => void;\n\n  resultCount: number | undefined;\n  resultIndex: number | undefined;\n  resultIndexStep: (decrement?: boolean) => void;\n\n  resultLine: number | undefined;\n  resultLineIndex: number | undefined;\n}\n\nexport function useLogViewerSearch(lines: AnsiLine[]): LogViewerSearch {\n  const [searchInput, setSearchInput] = useState('');\n  const searchText = searchInput.toLocaleLowerCase('en-US');\n\n  const [resultIndex, setResultIndex] = useState<number>(0);\n\n  const [shouldFilter, toggleShouldFilter] = useToggle(false);\n\n  const filter = useMemo(\n    () => applySearchFilter(lines, searchText),\n    [lines, searchText],\n  );\n\n  const searchResult = filter.results\n    ? filter.results[Math.min(resultIndex, filter.results.length - 1)]\n    : undefined;\n  const resultCount = filter.results?.length;\n\n  const resultIndexStep = (decrement?: boolean) => {\n    if (decrement) {\n      if (resultCount !== undefined) {\n        const next = Math.min(resultIndex - 1, resultCount - 2);\n        setResultIndex(next < 0 ? resultCount - 1 : next);\n      }\n    } else {\n      if (resultCount !== undefined) {\n        const next = resultIndex + 1;\n        setResultIndex(next >= resultCount ? 0 : next);\n      }\n    }\n  };\n\n  return {\n    lines: shouldFilter ? filter.lines : lines,\n    searchText,\n    searchInput,\n    setSearchInput,\n    shouldFilter,\n    toggleShouldFilter,\n    resultCount,\n    resultIndex,\n    resultIndexStep,\n    resultLine: searchResult?.lineNumber,\n    resultLineIndex: searchResult?.lineIndex,\n  };\n}\n"],"names":[],"mappings":"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"}