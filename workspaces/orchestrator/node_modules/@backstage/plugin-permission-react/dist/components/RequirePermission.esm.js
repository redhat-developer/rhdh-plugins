import { jsx, Fragment } from 'react/jsx-runtime';
import { useApp } from '@backstage/core-plugin-api';
import { usePermission } from '../hooks/usePermission.esm.js';
import { isResourcePermission } from '@backstage/plugin-permission-common';

function RequirePermission(props) {
  const { permission, resourceRef } = props;
  const permissionResult = usePermission(
    isResourcePermission(permission) ? { permission, resourceRef } : { permission }
  );
  const app = useApp();
  if (permissionResult.loading) {
    return null;
  } else if (permissionResult.allowed) {
    return /* @__PURE__ */ jsx(Fragment, { children: props.children });
  }
  if (props.errorPage) {
    return /* @__PURE__ */ jsx(Fragment, { children: props.errorPage });
  }
  const { NotFoundErrorPage } = app.getComponents();
  return /* @__PURE__ */ jsx(NotFoundErrorPage, {});
}

export { RequirePermission };
//# sourceMappingURL=RequirePermission.esm.js.map
