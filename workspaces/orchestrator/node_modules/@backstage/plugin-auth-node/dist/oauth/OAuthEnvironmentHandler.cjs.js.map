{"version":3,"file":"OAuthEnvironmentHandler.cjs.js","sources":["../../src/oauth/OAuthEnvironmentHandler.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { Config } from '@backstage/config';\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { AuthProviderRouteHandlers } from '../types';\nimport { decodeOAuthState } from './state';\n\n/** @public */\nexport class OAuthEnvironmentHandler implements AuthProviderRouteHandlers {\n  static mapConfig(\n    config: Config,\n    factoryFunc: (envConfig: Config) => AuthProviderRouteHandlers,\n  ) {\n    const envs = config.keys();\n    const handlers = new Map<string, AuthProviderRouteHandlers>();\n\n    for (const env of envs) {\n      const envConfig = config.getConfig(env);\n      const handler = factoryFunc(envConfig);\n      handlers.set(env, handler);\n    }\n\n    return new OAuthEnvironmentHandler(handlers);\n  }\n\n  constructor(\n    private readonly handlers: Map<string, AuthProviderRouteHandlers>,\n  ) {}\n\n  async start(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.start(req, res);\n  }\n\n  async frameHandler(\n    req: express.Request,\n    res: express.Response,\n  ): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.frameHandler(req, res);\n  }\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.refresh?.(req, res);\n  }\n\n  async logout(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.logout?.(req, res);\n  }\n\n  private getEnvFromRequest(req: express.Request): string | undefined {\n    const reqEnv = req.query.env?.toString();\n    if (reqEnv) {\n      return reqEnv;\n    }\n    const stateParams = req.query.state?.toString();\n    if (!stateParams) {\n      return undefined;\n    }\n    const { env } = decodeOAuthState(stateParams);\n    return env;\n  }\n\n  private getProviderForEnv(req: express.Request): AuthProviderRouteHandlers {\n    const env: string | undefined = this.getEnvFromRequest(req);\n\n    if (!env) {\n      throw new InputError(`Must specify 'env' query to select environment`);\n    }\n\n    const handler = this.handlers.get(env);\n    if (!handler) {\n      throw new NotFoundError(\n        `No configuration available for the '${env}' environment of this provider.`,\n      );\n    }\n\n    return handler;\n  }\n}\n"],"names":["decodeOAuthState","InputError","NotFoundError"],"mappings":";;;;;AAuBO,MAAM,uBAAA,CAA6D;AAAA,EAiBxE,YACmB,QAAA,EACjB;AADiB,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AAAA,EAChB;AAAA,EAlBH,OAAO,SAAA,CACL,MAAA,EACA,WAAA,EACA;AACA,IAAA,MAAM,IAAA,GAAO,OAAO,IAAA,EAAK;AACzB,IAAA,MAAM,QAAA,uBAAe,GAAA,EAAuC;AAE5D,IAAA,KAAA,MAAW,OAAO,IAAA,EAAM;AACtB,MAAA,MAAM,SAAA,GAAY,MAAA,CAAO,SAAA,CAAU,GAAG,CAAA;AACtC,MAAA,MAAM,OAAA,GAAU,YAAY,SAAS,CAAA;AACrC,MAAA,QAAA,CAAS,GAAA,CAAI,KAAK,OAAO,CAAA;AAAA,IAC3B;AAEA,IAAA,OAAO,IAAI,wBAAwB,QAAQ,CAAA;AAAA,EAC7C;AAAA,EAMA,MAAM,KAAA,CAAM,GAAA,EAAsB,GAAA,EAAsC;AACtE,IAAA,MAAM,QAAA,GAAW,IAAA,CAAK,iBAAA,CAAkB,GAAG,CAAA;AAC3C,IAAA,MAAM,QAAA,CAAS,KAAA,CAAM,GAAA,EAAK,GAAG,CAAA;AAAA,EAC/B;AAAA,EAEA,MAAM,YAAA,CACJ,GAAA,EACA,GAAA,EACe;AACf,IAAA,MAAM,QAAA,GAAW,IAAA,CAAK,iBAAA,CAAkB,GAAG,CAAA;AAC3C,IAAA,MAAM,QAAA,CAAS,YAAA,CAAa,GAAA,EAAK,GAAG,CAAA;AAAA,EACtC;AAAA,EAEA,MAAM,OAAA,CAAQ,GAAA,EAAsB,GAAA,EAAsC;AACxE,IAAA,MAAM,QAAA,GAAW,IAAA,CAAK,iBAAA,CAAkB,GAAG,CAAA;AAC3C,IAAA,MAAM,QAAA,CAAS,OAAA,GAAU,GAAA,EAAK,GAAG,CAAA;AAAA,EACnC;AAAA,EAEA,MAAM,MAAA,CAAO,GAAA,EAAsB,GAAA,EAAsC;AACvE,IAAA,MAAM,QAAA,GAAW,IAAA,CAAK,iBAAA,CAAkB,GAAG,CAAA;AAC3C,IAAA,MAAM,QAAA,CAAS,MAAA,GAAS,GAAA,EAAK,GAAG,CAAA;AAAA,EAClC;AAAA,EAEQ,kBAAkB,GAAA,EAA0C;AAClE,IAAA,MAAM,MAAA,GAAS,GAAA,CAAI,KAAA,CAAM,GAAA,EAAK,QAAA,EAAS;AACvC,IAAA,IAAI,MAAA,EAAQ;AACV,MAAA,OAAO,MAAA;AAAA,IACT;AACA,IAAA,MAAM,WAAA,GAAc,GAAA,CAAI,KAAA,CAAM,KAAA,EAAO,QAAA,EAAS;AAC9C,IAAA,IAAI,CAAC,WAAA,EAAa;AAChB,MAAA,OAAO,MAAA;AAAA,IACT;AACA,IAAA,MAAM,EAAE,GAAA,EAAI,GAAIA,sBAAA,CAAiB,WAAW,CAAA;AAC5C,IAAA,OAAO,GAAA;AAAA,EACT;AAAA,EAEQ,kBAAkB,GAAA,EAAiD;AACzE,IAAA,MAAM,GAAA,GAA0B,IAAA,CAAK,iBAAA,CAAkB,GAAG,CAAA;AAE1D,IAAA,IAAI,CAAC,GAAA,EAAK;AACR,MAAA,MAAM,IAAIC,kBAAW,CAAA,8CAAA,CAAgD,CAAA;AAAA,IACvE;AAEA,IAAA,MAAM,OAAA,GAAU,IAAA,CAAK,QAAA,CAAS,GAAA,CAAI,GAAG,CAAA;AACrC,IAAA,IAAI,CAAC,OAAA,EAAS;AACZ,MAAA,MAAM,IAAIC,oBAAA;AAAA,QACR,uCAAuC,GAAG,CAAA,+BAAA;AAAA,OAC5C;AAAA,IACF;AAEA,IAAA,OAAO,OAAA;AAAA,EACT;AACF;;;;"}