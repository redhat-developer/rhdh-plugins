{"version":3,"file":"AzureBlobStorageIntegration.cjs.js","sources":["../../src/azureBlobStorage/AzureBlobStorageIntegration.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { basicIntegrations, defaultScmResolveUrl } from '../helpers';\nimport { ScmIntegration, ScmIntegrationsFactory } from '../types';\nimport {\n  AzureBlobStorageIntegrationConfig,\n  readAzureBlobStorageIntegrationConfigs,\n} from './config';\n\n/**\n * Microsoft Azure Blob storage based integration.\n *\n * @public\n */\nexport class AzureBlobStorageIntergation implements ScmIntegration {\n  static factory: ScmIntegrationsFactory<AzureBlobStorageIntergation> = ({\n    config,\n  }) => {\n    const configs = readAzureBlobStorageIntegrationConfigs(\n      config.getOptionalConfigArray('integrations.azureBlobStorage') ?? [],\n    );\n    return basicIntegrations(\n      configs.map(c => new AzureBlobStorageIntergation(c)),\n      i => i.config.host,\n    );\n  };\n\n  get type(): string {\n    return 'azureBlobStorage';\n  }\n\n  get title(): string {\n    return this.integrationConfig.host;\n  }\n\n  get config(): AzureBlobStorageIntegrationConfig {\n    return this.integrationConfig;\n  }\n\n  constructor(\n    private readonly integrationConfig: AzureBlobStorageIntegrationConfig,\n  ) {}\n\n  resolveUrl(options: {\n    url: string;\n    base: string;\n    lineNumber?: number | undefined;\n  }): string {\n    const resolved = defaultScmResolveUrl(options);\n    return resolved;\n  }\n\n  resolveEditUrl(url: string): string {\n    // TODO: Implement edit URL for azureBlobStorage\n    return url;\n  }\n}\n"],"names":["config","readAzureBlobStorageIntegrationConfigs","basicIntegrations","defaultScmResolveUrl"],"mappings":";;;;;AA4BO,MAAM,2BAAA,CAAsD;AAAA,EAyBjE,YACmB,iBAAA,EACjB;AADiB,IAAA,IAAA,CAAA,iBAAA,GAAA,iBAAA;AAAA,EAChB;AAAA,EA1BH,OAAO,UAA+D,CAAC;AAAA,YACrEA;AAAA,GACF,KAAM;AACJ,IAAA,MAAM,OAAA,GAAUC,6CAAA;AAAA,MACdD,QAAA,CAAO,sBAAA,CAAuB,+BAA+B,CAAA,IAAK;AAAC,KACrE;AACA,IAAA,OAAOE,yBAAA;AAAA,MACL,QAAQ,GAAA,CAAI,CAAA,CAAA,KAAK,IAAI,2BAAA,CAA4B,CAAC,CAAC,CAAA;AAAA,MACnD,CAAA,CAAA,KAAK,EAAE,MAAA,CAAO;AAAA,KAChB;AAAA,EACF,CAAA;AAAA,EAEA,IAAI,IAAA,GAAe;AACjB,IAAA,OAAO,kBAAA;AAAA,EACT;AAAA,EAEA,IAAI,KAAA,GAAgB;AAClB,IAAA,OAAO,KAAK,iBAAA,CAAkB,IAAA;AAAA,EAChC;AAAA,EAEA,IAAI,MAAA,GAA4C;AAC9C,IAAA,OAAO,IAAA,CAAK,iBAAA;AAAA,EACd;AAAA,EAMA,WAAW,OAAA,EAIA;AACT,IAAA,MAAM,QAAA,GAAWC,6BAAqB,OAAO,CAAA;AAC7C,IAAA,OAAO,QAAA;AAAA,EACT;AAAA,EAEA,eAAe,GAAA,EAAqB;AAElC,IAAA,OAAO,GAAA;AAAA,EACT;AACF;;;;"}