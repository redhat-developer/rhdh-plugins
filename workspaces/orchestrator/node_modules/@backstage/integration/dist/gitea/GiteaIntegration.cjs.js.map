{"version":3,"file":"GiteaIntegration.cjs.js","sources":["../../src/gitea/GiteaIntegration.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { basicIntegrations, defaultScmResolveUrl } from '../helpers';\nimport { ScmIntegration, ScmIntegrationsFactory } from '../types';\nimport { GiteaIntegrationConfig, readGiteaConfig } from './config';\nimport { getGiteaEditContentsUrl } from './core';\n\n/**\n * A Gitea based integration.\n *\n * @public\n */\nexport class GiteaIntegration implements ScmIntegration {\n  static factory: ScmIntegrationsFactory<GiteaIntegration> = ({ config }) => {\n    const configs = config.getOptionalConfigArray('integrations.gitea') ?? [];\n    const giteaConfigs = configs.map(c => readGiteaConfig(c));\n\n    return basicIntegrations(\n      giteaConfigs.map(c => new GiteaIntegration(c)),\n      (gitea: GiteaIntegration) => gitea.config.host,\n    );\n  };\n\n  constructor(readonly config: GiteaIntegrationConfig) {}\n\n  get type(): string {\n    return 'gitea';\n  }\n\n  get title(): string {\n    return this.config.host;\n  }\n\n  resolveUrl(options: {\n    url: string;\n    base: string;\n    lineNumber?: number | undefined;\n  }): string {\n    return defaultScmResolveUrl(options);\n  }\n\n  resolveEditUrl(url: string): string {\n    return getGiteaEditContentsUrl(this.config, url);\n  }\n}\n"],"names":["config","readGiteaConfig","basicIntegrations","defaultScmResolveUrl","getGiteaEditContentsUrl"],"mappings":";;;;;;AAyBO,MAAM,gBAAA,CAA2C;AAAA,EAWtD,YAAqB,MAAA,EAAgC;AAAhC,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA,EAAiC;AAAA,EAVtD,OAAO,OAAA,GAAoD,CAAC,UAAEA,UAAO,KAAM;AACzE,IAAA,MAAM,OAAA,GAAUA,QAAA,CAAO,sBAAA,CAAuB,oBAAoB,KAAK,EAAC;AACxE,IAAA,MAAM,eAAe,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAA,KAAKC,sBAAA,CAAgB,CAAC,CAAC,CAAA;AAExD,IAAA,OAAOC,yBAAA;AAAA,MACL,aAAa,GAAA,CAAI,CAAA,CAAA,KAAK,IAAI,gBAAA,CAAiB,CAAC,CAAC,CAAA;AAAA,MAC7C,CAAC,KAAA,KAA4B,KAAA,CAAM,MAAA,CAAO;AAAA,KAC5C;AAAA,EACF,CAAA;AAAA,EAIA,IAAI,IAAA,GAAe;AACjB,IAAA,OAAO,OAAA;AAAA,EACT;AAAA,EAEA,IAAI,KAAA,GAAgB;AAClB,IAAA,OAAO,KAAK,MAAA,CAAO,IAAA;AAAA,EACrB;AAAA,EAEA,WAAW,OAAA,EAIA;AACT,IAAA,OAAOC,6BAAqB,OAAO,CAAA;AAAA,EACrC;AAAA,EAEA,eAAe,GAAA,EAAqB;AAClC,IAAA,OAAOC,4BAAA,CAAwB,IAAA,CAAK,MAAA,EAAQ,GAAG,CAAA;AAAA,EACjD;AACF;;;;"}