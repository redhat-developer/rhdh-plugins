{"version":3,"file":"SingleInstanceGitlabCredentialsProvider.cjs.js","sources":["../../src/gitlab/SingleInstanceGitlabCredentialsProvider.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GitLabIntegrationConfig } from './config';\nimport { GitlabCredentials, GitlabCredentialsProvider } from './types';\n\nexport class SingleInstanceGitlabCredentialsProvider\n  implements GitlabCredentialsProvider\n{\n  static create: (\n    config: GitLabIntegrationConfig,\n  ) => GitlabCredentialsProvider = config => {\n    return new SingleInstanceGitlabCredentialsProvider(config.token);\n  };\n\n  private constructor(private readonly token?: string) {}\n\n  async getCredentials(_opts: { url: string }): Promise<GitlabCredentials> {\n    if (!this.token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      token: this.token,\n    };\n  }\n}\n"],"names":[],"mappings":";;AAmBO,MAAM,uCAAA,CAEb;AAAA,EAOU,YAA6B,KAAA,EAAgB;AAAhB,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAAA,EAAiB;AAAA,EANtD,OAAO,SAE0B,CAAA,MAAA,KAAU;AACzC,IAAA,OAAO,IAAI,uCAAA,CAAwC,MAAA,CAAO,KAAK,CAAA;AAAA,EACjE,CAAA;AAAA,EAIA,MAAM,eAAe,KAAA,EAAoD;AACvE,IAAA,IAAI,CAAC,KAAK,KAAA,EAAO;AACf,MAAA,OAAO,EAAC;AAAA,IACV;AAEA,IAAA,OAAO;AAAA,MACL,OAAA,EAAS;AAAA,QACP,aAAA,EAAe,CAAA,OAAA,EAAU,IAAA,CAAK,KAAK,CAAA;AAAA,OACrC;AAAA,MACA,OAAO,IAAA,CAAK;AAAA,KACd;AAAA,EACF;AACF;;;;"}