{"version":3,"file":"StepPrepareSelectLocations.esm.js","sources":["../../../src/components/StepPrepareSelectLocations/StepPrepareSelectLocations.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport partition from 'lodash/partition';\nimport { useCallback, useState } from 'react';\n\nimport { AnalyzeResult } from '../../api';\nimport { catalogImportTranslationRef } from '../../translation';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\n\ntype Props = {\n  analyzeResult: Extract<AnalyzeResult, { type: 'locations' }>;\n  prepareResult?: PrepareResult;\n  onPrepare: (result: PrepareResult) => void;\n  onGoBack?: () => void;\n};\n\n/**\n * A form that lets a user select one of a list of locations to import\n *\n * @param analyzeResult - the result of the analysis\n * @param prepareResult - the selectected locations from a previous step\n * @param onPrepare - called after the selection\n * @param onGoBack - called to go back to the previous step\n */\nexport const StepPrepareSelectLocations = ({\n  analyzeResult,\n  prepareResult,\n  onPrepare,\n  onGoBack,\n}: Props) => {\n  const { t } = useTranslationRef(catalogImportTranslationRef);\n\n  const [selectedUrls, setSelectedUrls] = useState<string[]>(\n    prepareResult?.locations.map(l => l.target) || [],\n  );\n\n  const [existingLocations, locations] = partition(\n    analyzeResult?.locations,\n    l => l.exists,\n  );\n\n  const handleResult = useCallback(async () => {\n    onPrepare({\n      type: 'locations',\n      locations: locations.filter((l: any) => selectedUrls.includes(l.target)),\n    });\n  }, [locations, onPrepare, selectedUrls]);\n\n  const onItemClick = (url: string) => {\n    setSelectedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  const onSelectAll = () => {\n    setSelectedUrls(urls =>\n      urls.length < locations.length ? locations.map(l => l.target) : [],\n    );\n  };\n\n  return (\n    <>\n      {locations.length > 0 && (\n        <>\n          <Typography>\n            {t('stepPrepareSelectLocations.locations.description')}\n          </Typography>\n          <EntityListComponent\n            firstListItem={\n              <ListItem dense button onClick={onSelectAll}>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={selectedUrls.length === locations.length}\n                    indeterminate={\n                      selectedUrls.length > 0 &&\n                      selectedUrls.length < locations.length\n                    }\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  primary={t('stepPrepareSelectLocations.locations.selectAll')}\n                />\n              </ListItem>\n            }\n            onItemClick={onItemClick}\n            locations={locations}\n            locationListItemIcon={target => (\n              <Checkbox\n                edge=\"start\"\n                checked={selectedUrls.includes(target)}\n                tabIndex={-1}\n                disableRipple\n              />\n            )}\n            collapsed\n          />\n        </>\n      )}\n\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>\n            {t('stepPrepareSelectLocations.existingLocations.description')}\n          </Typography>\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n            collapsed\n          />\n        </>\n      )}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} />}\n        <NextButton disabled={selectedUrls.length === 0} onClick={handleResult}>\n          {t('stepPrepareSelectLocations.nextButtonText')}\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}