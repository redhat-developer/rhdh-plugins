{"version":3,"file":"StepReviewLocation.esm.js","sources":["../../../src/components/StepReviewLocation/StepReviewLocation.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Link } from '@backstage/core-components';\nimport { configApiRef, useAnalytics, useApi } from '@backstage/core-plugin-api';\nimport { assertError } from '@backstage/errors';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useCallback, useState } from 'react';\n\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult, ReviewResult } from '../useImportState';\nimport { catalogImportTranslationRef } from '../../translation';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReview: (result: ReviewResult) => void;\n  onGoBack?: () => void;\n};\n\nexport const StepReviewLocation = ({\n  prepareResult,\n  onReview,\n  onGoBack,\n}: Props) => {\n  const { t } = useTranslationRef(catalogImportTranslationRef);\n  const catalogApi = useApi(catalogApiRef);\n  const configApi = useApi(configApiRef);\n  const analytics = useAnalytics();\n\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n  const exists =\n    prepareResult.type === 'locations' &&\n    prepareResult.locations.some(l => l.exists)\n      ? true\n      : false;\n  const handleClick = useCallback(async () => {\n    setSubmitted(true);\n    analytics.captureEvent('click', 'import entity');\n    try {\n      let refreshed = new Array<{ target: string }>();\n      if (prepareResult.type === 'locations') {\n        refreshed = await Promise.all(\n          prepareResult.locations\n            .filter(l => l.exists)\n            .map(async l => {\n              const ref = stringifyEntityRef(l.entities[0] ?? l);\n              await catalogApi.refreshEntity(ref);\n              return { target: l.target };\n            }),\n        );\n      }\n\n      const locations = await Promise.all(\n        prepareResult.locations\n          .filter((l: unknown) => !(l as { exists?: boolean }).exists)\n          .map(async l => {\n            const result = await catalogApi.addLocation({\n              type: 'url',\n              target: l.target,\n            });\n            return {\n              target: result.location.target,\n              entities: result.entities,\n            };\n          }),\n      );\n\n      onReview({\n        ...prepareResult,\n        ...{ refreshed },\n        locations,\n      });\n    } catch (e) {\n      assertError(e);\n      // TODO: this error should be handled differently. We add it as 'optional' and\n      //       it is not uncommon that a PR has not been merged yet.\n      if (\n        prepareResult.type === 'repository' &&\n        e.message.startsWith(\n          'Location was added but has no entities specified yet',\n        )\n      ) {\n        onReview({\n          ...prepareResult,\n          locations: prepareResult.locations.map(l => ({\n            target: l.target,\n            entities: [],\n          })),\n        });\n      } else {\n        setError(e.message);\n        setSubmitted(false);\n      }\n    }\n  }, [prepareResult, onReview, catalogApi, analytics]);\n\n  return (\n    <>\n      {prepareResult.type === 'repository' && (\n        <>\n          <Typography paragraph>\n            {t('stepReviewLocation.prepareResult.title')}\n            <Link\n              to={prepareResult.pullRequest.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {prepareResult.pullRequest.url}\n            </Link>\n          </Typography>\n\n          <Typography paragraph>\n            {t('stepReviewLocation.prepareResult.description', { appTitle })}\n          </Typography>\n        </>\n      )}\n\n      <Typography>\n        {exists\n          ? t('stepReviewLocation.catalog.exists')\n          : t('stepReviewLocation.catalog.new')}\n      </Typography>\n\n      <EntityListComponent\n        locations={prepareResult.locations}\n        locationListItemIcon={() => <LocationOnIcon />}\n      />\n\n      {error && <FormHelperText error>{error}</FormHelperText>}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} disabled={submitted} />}\n        <NextButton\n          disabled={submitted}\n          loading={submitted}\n          onClick={() => handleClick()}\n        >\n          {exists\n            ? t('stepReviewLocation.refresh')\n            : t('stepReviewLocation.import')}\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}