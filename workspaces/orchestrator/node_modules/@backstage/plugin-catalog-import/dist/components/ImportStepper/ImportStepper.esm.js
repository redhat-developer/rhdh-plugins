import { jsx, jsxs } from 'react/jsx-runtime';
import { InfoCard } from '@backstage/core-components';
import { useApi } from '@backstage/core-plugin-api';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { catalogImportTranslationRef } from '@backstage/plugin-catalog-import/alpha';
import Step from '@material-ui/core/Step';
import StepContent from '@material-ui/core/StepContent';
import Stepper from '@material-ui/core/Stepper';
import { makeStyles } from '@material-ui/core/styles';
import { useMemo } from 'react';
import { catalogImportApiRef } from '../../api/CatalogImportApi.esm.js';
import 'yaml';
import 'git-url-parse';
import '@octokit/rest';
import 'js-base64';
import { useImportState } from '../useImportState.esm.js';
import { defaultGenerateStepper, defaultStepper } from './defaults.esm.js';

const useStyles = makeStyles(() => ({
  stepperRoot: {
    padding: 0
  }
}));
const ImportStepper = (props) => {
  const { t } = useTranslationRef(catalogImportTranslationRef);
  const {
    initialUrl,
    generateStepper = defaultGenerateStepper,
    variant
  } = props;
  const catalogImportApi = useApi(catalogImportApiRef);
  const classes = useStyles();
  const state = useImportState({ initialUrl });
  const states = useMemo(
    () => generateStepper(state.activeFlow, defaultStepper, t),
    [generateStepper, state.activeFlow, t]
  );
  const render = (step) => {
    return /* @__PURE__ */ jsxs(Step, { children: [
      step.stepLabel,
      /* @__PURE__ */ jsx(StepContent, { children: step.content })
    ] });
  };
  return /* @__PURE__ */ jsx(InfoCard, { variant, children: /* @__PURE__ */ jsxs(
    Stepper,
    {
      classes: { root: classes.stepperRoot },
      activeStep: state.activeStepNumber,
      orientation: "vertical",
      children: [
        render(
          states.analyze(
            state,
            { apis: { catalogImportApi }, t }
          )
        ),
        render(
          states.prepare(
            state,
            { apis: { catalogImportApi }, t }
          )
        ),
        render(
          states.review(
            state,
            { apis: { catalogImportApi }, t }
          )
        ),
        render(
          states.finish(
            state,
            { apis: { catalogImportApi }, t }
          )
        )
      ]
    }
  ) });
};

export { ImportStepper };
//# sourceMappingURL=ImportStepper.esm.js.map
