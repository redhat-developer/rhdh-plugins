{"version":3,"file":"StepPrepareCreatePullRequest.esm.js","sources":["../../../src/components/StepPrepareCreatePullRequest/StepPrepareCreatePullRequest.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { assertError } from '@backstage/errors';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport Box from '@material-ui/core/Box';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { NestedValue, UseFormReturn } from 'react-hook-form';\nimport useAsync from 'react-use/esm/useAsync';\nimport YAML from 'yaml';\n\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\nimport { catalogImportTranslationRef } from '../../translation';\nimport { PartialEntity } from '../../types';\nimport { BackButton, NextButton } from '../Buttons';\nimport { PrepareResult } from '../useImportState';\nimport { PreparePullRequestForm } from './PreparePullRequestForm';\nimport { PreviewCatalogInfoComponent } from './PreviewCatalogInfoComponent';\nimport { PreviewPullRequestComponent } from './PreviewPullRequestComponent';\n\nconst useStyles = makeStyles(theme => ({\n  previewCard: {\n    marginTop: theme.spacing(1),\n  },\n  previewCardContent: {\n    paddingTop: 0,\n  },\n}));\n\ntype FormData = {\n  title: string;\n  body: string;\n  componentName: string;\n  owner: string;\n  useCodeowners: boolean;\n};\n\n/**\n * Helper for unpacking NestedValue into the underlying type.\n *\n * @public\n * @deprecated This is a copy of the type from react-hook-form, and will be removed in a future release\n */\nexport type UnpackNestedValue<T> = T extends NestedValue<infer U>\n  ? U\n  : T extends Date | FileList | File | Blob\n  ? T\n  : T extends object\n  ? {\n      [K in keyof T]: UnpackNestedValue<T[K]>;\n    }\n  : T;\n\n/**\n * Props for {@link StepPrepareCreatePullRequest}.\n *\n * @public\n */\nexport interface StepPrepareCreatePullRequestProps {\n  analyzeResult: Extract<AnalyzeResult, { type: 'repository' }>;\n  onPrepare: (\n    result: PrepareResult,\n    opts?: { notRepeatable?: boolean },\n  ) => void;\n  onGoBack?: () => void;\n\n  renderFormFields: (\n    props: Pick<\n      UseFormReturn<FormData>,\n      'register' | 'setValue' | 'formState'\n    > & {\n      values: UnpackNestedValue<FormData>;\n      groups: string[];\n      groupsLoading: boolean;\n    },\n  ) => ReactNode;\n}\n\nexport function generateEntities(\n  entities: PartialEntity[],\n  componentName: string,\n  owner?: string,\n): Entity[] {\n  return entities.map(e => ({\n    ...e,\n    apiVersion: e.apiVersion!,\n    kind: e.kind!,\n    metadata: {\n      ...e.metadata,\n      name: componentName,\n    },\n    spec: {\n      ...e.spec,\n      ...(owner ? { owner } : {}),\n    },\n  }));\n}\n\n/**\n * Prepares a pull request.\n *\n * @public\n */\nexport const StepPrepareCreatePullRequest = (\n  props: StepPrepareCreatePullRequestProps,\n) => {\n  const { analyzeResult, onPrepare, onGoBack, renderFormFields } = props;\n\n  const { t } = useTranslationRef(catalogImportTranslationRef);\n  const classes = useStyles();\n  const catalogApi = useApi(catalogApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const catalogFilename = useCatalogFilename();\n\n  const {\n    loading: prDefaultsLoading,\n    value: prDefaults,\n    error: prDefaultsError,\n  } = useAsync(\n    () => catalogImportApi.preparePullRequest!(),\n    [catalogImportApi.preparePullRequest],\n  );\n\n  useEffect(() => {\n    if (prDefaultsError) {\n      errorApi.post(prDefaultsError);\n    }\n  }, [prDefaultsError, errorApi]);\n\n  const { loading: groupsLoading, value: groups } = useAsync(async () => {\n    const groupEntities = await catalogApi.getEntities({\n      filter: { kind: 'group' },\n    });\n\n    return groupEntities.items\n      .map(e => humanizeEntityRef(e, { defaultKind: 'group' }))\n      .sort();\n  });\n\n  const handleResult = useCallback(\n    async (data: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const pr = await catalogImportApi.submitPullRequest({\n          repositoryUrl: analyzeResult.url,\n          title: data.title,\n          body: data.body,\n          fileContent: generateEntities(\n            analyzeResult.generatedEntities,\n            data.componentName,\n            data.owner,\n          )\n            .map(e => YAML.stringify(e))\n            .join('---\\n'),\n        });\n\n        onPrepare(\n          {\n            type: 'repository',\n            url: analyzeResult.url,\n            integrationType: analyzeResult.integrationType,\n            pullRequest: {\n              url: pr.link,\n            },\n            locations: [\n              {\n                target: pr.location,\n                entities: generateEntities(\n                  analyzeResult.generatedEntities,\n                  data.componentName,\n                  data.owner,\n                ).map(e => ({\n                  kind: e.kind,\n                  namespace: e.metadata.namespace!,\n                  name: e.metadata.name,\n                })),\n              },\n            ],\n          },\n          { notRepeatable: true },\n        );\n      } catch (e) {\n        assertError(e);\n        setError(e.message);\n        setSubmitted(false);\n      }\n    },\n    [\n      analyzeResult.generatedEntities,\n      analyzeResult.integrationType,\n      analyzeResult.url,\n      catalogImportApi,\n      onPrepare,\n    ],\n  );\n\n  return (\n    <>\n      <Typography>\n        {t('stepPrepareCreatePullRequest.description', {\n          integrationType: analyzeResult.integrationType,\n          catalogFilename: <code>{catalogFilename}</code>,\n        })}\n      </Typography>\n\n      {!prDefaultsLoading && (\n        <PreparePullRequestForm<FormData>\n          onSubmit={handleResult}\n          defaultValues={{\n            title: prDefaults?.title ?? '',\n            body: prDefaults?.body ?? '',\n            owner:\n              (analyzeResult.generatedEntities[0]?.spec?.owner as string) || '',\n            componentName:\n              analyzeResult.generatedEntities[0]?.metadata?.name || '',\n            useCodeowners: false,\n          }}\n          render={({ values, formState, register, setValue }) => (\n            <>\n              {renderFormFields({\n                values,\n                formState,\n                register,\n                setValue,\n                groups: groups ?? [],\n                groupsLoading,\n              })}\n\n              <Box marginTop={2}>\n                <Typography variant=\"h6\">\n                  {t('stepPrepareCreatePullRequest.previewPr.title')}\n                </Typography>\n              </Box>\n\n              <PreviewPullRequestComponent\n                title={values.title}\n                description={values.body}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              <Box marginTop={2} marginBottom={1}>\n                <Typography variant=\"h6\">\n                  {t('stepPrepareCreatePullRequest.previewCatalogInfo.title')}\n                </Typography>\n              </Box>\n\n              <PreviewCatalogInfoComponent\n                entities={generateEntities(\n                  analyzeResult.generatedEntities,\n                  values.componentName,\n                  values.owner,\n                )}\n                repositoryUrl={analyzeResult.url}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              {error && <FormHelperText error>{error}</FormHelperText>}\n\n              <Grid container spacing={0}>\n                {onGoBack && (\n                  <BackButton onClick={onGoBack} disabled={submitted} />\n                )}\n                <NextButton\n                  type=\"submit\"\n                  disabled={Boolean(\n                    formState.errors.title ||\n                      formState.errors.body ||\n                      formState.errors.owner,\n                  )}\n                  loading={submitted}\n                >\n                  {t('stepPrepareCreatePullRequest.nextButtonText')}\n                </NextButton>\n              </Grid>\n            </>\n          )}\n        />\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}