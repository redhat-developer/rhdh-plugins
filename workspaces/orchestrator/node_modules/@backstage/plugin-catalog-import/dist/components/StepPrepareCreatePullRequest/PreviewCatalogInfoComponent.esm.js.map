{"version":3,"file":"PreviewCatalogInfoComponent.esm.js","sources":["../../../src/components/StepPrepareCreatePullRequest/PreviewCatalogInfoComponent.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport YAML from 'yaml';\nimport { CodeSnippet } from '@backstage/core-components';\nimport { trimEnd } from 'lodash';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link PreviewCatalogInfoComponent}.\n *\n * @public\n */\nexport interface PreviewCatalogInfoComponentProps {\n  repositoryUrl: string;\n  entities: Entity[];\n  classes?: { card?: string; cardContent?: string };\n}\n\n/**\n * Previews information about an entity to create.\n *\n * @public\n */\nexport const PreviewCatalogInfoComponent = (\n  props: PreviewCatalogInfoComponentProps,\n) => {\n  const { repositoryUrl, entities, classes } = props;\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <Card variant=\"outlined\" className={classes?.card}>\n      <CardHeader\n        title={\n          <code>{`${trimEnd(repositoryUrl, '/')}/${catalogFilename}`}</code>\n        }\n      />\n\n      <CardContent className={classes?.cardContent}>\n        <CodeSnippet\n          text={entities\n            .map(e => YAML.stringify(e))\n            .join('---\\n')\n            .trim()}\n          language=\"yaml\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAyCO,MAAM,2BAAA,GAA8B,CACzC,KAAA,KACG;AACH,EAAA,MAAM,EAAE,aAAA,EAAe,QAAA,EAAU,OAAA,EAAQ,GAAI,KAAA;AAC7C,EAAA,MAAM,kBAAkB,kBAAA,EAAmB;AAE3C,EAAA,4BACG,IAAA,EAAA,EAAK,OAAA,EAAQ,UAAA,EAAW,SAAA,EAAW,SAAS,IAAA,EAC3C,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,KAAA,kBACE,GAAA,CAAC,MAAA,EAAA,EAAM,QAAA,EAAA,CAAA,EAAG,OAAA,CAAQ,eAAe,GAAG,CAAC,CAAA,CAAA,EAAI,eAAe,CAAA,CAAA,EAAG;AAAA;AAAA,KAE/D;AAAA,oBAEA,GAAA,CAAC,WAAA,EAAA,EAAY,SAAA,EAAW,OAAA,EAAS,WAAA,EAC/B,QAAA,kBAAA,GAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,IAAA,EAAM,QAAA,CACH,GAAA,CAAI,CAAA,CAAA,KAAK,IAAA,CAAK,SAAA,CAAU,CAAC,CAAC,CAAA,CAC1B,IAAA,CAAK,OAAO,CAAA,CACZ,IAAA,EAAK;AAAA,QACR,QAAA,EAAS;AAAA;AAAA,KACX,EACF;AAAA,GAAA,EACF,CAAA;AAEJ;;;;"}