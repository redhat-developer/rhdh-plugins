{"version":3,"file":"AutocompleteTextField.esm.js","sources":["../../../src/components/StepPrepareCreatePullRequest/AutocompleteTextField.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ComponentProps, ReactNode, ChangeEvent, Fragment } from 'react';\nimport { Controller, FieldErrors } from 'react-hook-form';\n\n/**\n * Props for {@link AutocompleteTextField}.\n *\n * @public\n */\nexport interface AutocompleteTextFieldProps<TFieldValue extends string> {\n  name: TFieldValue;\n  options: string[];\n  required?: boolean;\n\n  errors?: FieldErrors;\n  rules?: ComponentProps<typeof Controller>['rules'];\n\n  loading?: boolean;\n  loadingText?: string;\n\n  helperText?: ReactNode;\n  errorHelperText?: string;\n\n  textFieldProps?: Omit<TextFieldProps, 'required' | 'fullWidth'>;\n}\n\n/**\n * An autocompletion text field for the catalog import flows.\n *\n * @public\n */\nexport const AutocompleteTextField = <TFieldValue extends string>(\n  props: AutocompleteTextFieldProps<TFieldValue>,\n) => {\n  const {\n    name,\n    options,\n    required,\n    errors,\n    rules,\n    loading = false,\n    loadingText,\n    helperText,\n    errorHelperText,\n    textFieldProps = {},\n  } = props;\n\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      render={({ field: { onChange } }) => (\n        <Autocomplete\n          loading={loading}\n          loadingText={loadingText}\n          options={options || []}\n          autoSelect\n          freeSolo\n          onChange={(_event: ChangeEvent<{}>, value: string | null) =>\n            onChange(value)\n          }\n          renderInput={params => (\n            <TextField\n              {...params}\n              helperText={(errors?.[name] && errorHelperText) || helperText}\n              error={Boolean(errors?.[name])}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required={required}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size=\"1em\" />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </Fragment>\n                ),\n              }}\n              {...textFieldProps}\n            />\n          )}\n        />\n      )}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAkDO,MAAM,qBAAA,GAAwB,CACnC,KAAA,KACG;AACH,EAAA,MAAM;AAAA,IACJ,IAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAA;AAAA,IACA,OAAA,GAAU,KAAA;AAAA,IACV,WAAA;AAAA,IACA,UAAA;AAAA,IACA,eAAA;AAAA,IACA,iBAAiB;AAAC,GACpB,GAAI,KAAA;AAEJ,EAAA,uBACE,GAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,IAAA;AAAA,MACA,KAAA;AAAA,MACA,QAAQ,CAAC,EAAE,OAAO,EAAE,QAAA,IAAW,qBAC7B,GAAA;AAAA,QAAC,YAAA;AAAA,QAAA;AAAA,UACC,OAAA;AAAA,UACA,WAAA;AAAA,UACA,OAAA,EAAS,WAAW,EAAC;AAAA,UACrB,UAAA,EAAU,IAAA;AAAA,UACV,QAAA,EAAQ,IAAA;AAAA,UACR,QAAA,EAAU,CAAC,MAAA,EAAyB,KAAA,KAClC,SAAS,KAAK,CAAA;AAAA,UAEhB,aAAa,CAAA,MAAA,qBACX,GAAA;AAAA,YAAC,SAAA;AAAA,YAAA;AAAA,cACE,GAAG,MAAA;AAAA,cACJ,UAAA,EAAa,MAAA,GAAS,IAAI,CAAA,IAAK,eAAA,IAAoB,UAAA;AAAA,cACnD,KAAA,EAAO,OAAA,CAAQ,MAAA,GAAS,IAAI,CAAC,CAAA;AAAA,cAC7B,MAAA,EAAO,QAAA;AAAA,cACP,OAAA,EAAQ,UAAA;AAAA,cACR,QAAA;AAAA,cACA,UAAA,EAAY;AAAA,gBACV,GAAG,MAAA,CAAO,UAAA;AAAA,gBACV,YAAA,uBACG,QAAA,EAAA,EACE,QAAA,EAAA;AAAA,kBAAA,OAAA,uBACE,gBAAA,EAAA,EAAiB,KAAA,EAAM,SAAA,EAAU,IAAA,EAAK,OAAM,CAAA,GAC3C,IAAA;AAAA,kBACH,OAAO,UAAA,CAAW;AAAA,iBAAA,EACrB;AAAA,eAEJ;AAAA,cACC,GAAG;AAAA;AAAA;AACN;AAAA;AAEJ;AAAA,GAEJ;AAEJ;;;;"}