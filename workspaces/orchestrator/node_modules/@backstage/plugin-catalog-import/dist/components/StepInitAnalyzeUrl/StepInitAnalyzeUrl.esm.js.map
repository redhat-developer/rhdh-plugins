{"version":3,"file":"StepInitAnalyzeUrl.esm.js","sources":["../../../src/components/StepInitAnalyzeUrl/StepInitAnalyzeUrl.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { catalogImportTranslationRef } from '../../translation';\nimport { NextButton } from '../Buttons';\nimport { asInputRef } from '../helpers';\nimport { ImportFlows, PrepareResult } from '../useImportState';\n\ntype FormData = {\n  url: string;\n};\n\n/**\n * Props for {@link StepInitAnalyzeUrl}.\n *\n * @public\n */\nexport interface StepInitAnalyzeUrlProps {\n  onAnalysis: (\n    flow: ImportFlows,\n    url: string,\n    result: AnalyzeResult,\n    opts?: { prepareResult?: PrepareResult },\n  ) => void;\n  disablePullRequest?: boolean;\n  analysisUrl?: string;\n  exampleLocationUrl?: string;\n}\n\n/**\n * A form that lets the user input a url and analyze it for existing locations or potential entities.\n *\n * @param onAnalysis - is called when the analysis was successful\n * @param analysisUrl - a url that can be used as a default value\n * @param disablePullRequest - if true, repositories without entities will abort the wizard\n * @public\n */\nexport const StepInitAnalyzeUrl = (props: StepInitAnalyzeUrlProps) => {\n  const { t } = useTranslationRef(catalogImportTranslationRef);\n  const {\n    onAnalysis,\n    analysisUrl = '',\n    disablePullRequest = false,\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n  } = props;\n\n  const errorApi = useApi(errorApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm<FormData>({\n    mode: 'onTouched',\n    defaultValues: {\n      url: analysisUrl,\n    },\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  const handleResult = useCallback(\n    async ({ url }: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const analysisResult = await catalogImportApi.analyzeUrl(url);\n\n        switch (analysisResult.type) {\n          case 'repository':\n            if (\n              !disablePullRequest &&\n              analysisResult.generatedEntities.length > 0\n            ) {\n              onAnalysis('no-location', url, analysisResult);\n            } else {\n              setError(t('stepInitAnalyzeUrl.error.repository'));\n              setSubmitted(false);\n            }\n            break;\n\n          case 'locations': {\n            if (analysisResult.locations.length === 1) {\n              onAnalysis('single-location', url, analysisResult, {\n                prepareResult: analysisResult,\n              });\n            } else if (analysisResult.locations.length > 1) {\n              onAnalysis('multiple-locations', url, analysisResult);\n            } else {\n              setError(t('stepInitAnalyzeUrl.error.locations'));\n              setSubmitted(false);\n            }\n            break;\n          }\n\n          default: {\n            const err = t('stepInitAnalyzeUrl.error.default', {\n              type: (analysisResult as any).type,\n            });\n            setError(err);\n            setSubmitted(false);\n\n            errorApi.post(new Error(err));\n            break;\n          }\n        }\n      } catch (e: any) {\n        setError(e?.body?.error?.message ?? e.message);\n        setSubmitted(false);\n      }\n    },\n    [catalogImportApi, disablePullRequest, errorApi, onAnalysis, t],\n  );\n\n  return (\n    <form onSubmit={handleSubmit(handleResult)}>\n      <TextField\n        {...asInputRef(\n          register('url', {\n            required: true,\n            validate: {\n              httpsValidator: (value: any) =>\n                (typeof value === 'string' &&\n                  value.match(/^http[s]?:\\/\\//) !== null) ||\n                t('stepInitAnalyzeUrl.error.url'),\n            },\n          }),\n        )}\n        fullWidth\n        id=\"url\"\n        label=\"URL\"\n        placeholder={exampleLocationUrl}\n        helperText={t('stepInitAnalyzeUrl.urlHelperText')}\n        margin=\"normal\"\n        variant=\"outlined\"\n        error={Boolean(errors.url)}\n        required\n      />\n      {errors.url && (\n        <FormHelperText error>{errors.url.message}</FormHelperText>\n      )}\n      {error && <FormHelperText error>{error}</FormHelperText>}\n      <Grid container spacing={0}>\n        <NextButton\n          disabled={Boolean(errors.url) || !watch('url')}\n          loading={submitted}\n          type=\"submit\"\n        >\n          {t('stepInitAnalyzeUrl.nextButtonText')}\n        </NextButton>\n      </Grid>\n    </form>\n  );\n};\n"],"names":[],"mappings":"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"}