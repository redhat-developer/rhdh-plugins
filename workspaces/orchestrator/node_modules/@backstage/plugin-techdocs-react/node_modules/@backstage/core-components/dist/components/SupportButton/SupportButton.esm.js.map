{"version":3,"file":"SupportButton.esm.js","sources":["../../../src/components/SupportButton/SupportButton.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configApiRef, useApi, useApp } from '@backstage/core-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ReactNode, Children, MouseEventHandler, useState } from 'react';\nimport { SupportItem, SupportItemLink, useSupportConfig } from '../../hooks';\nimport { HelpIcon } from '../../icons';\nimport { Link } from '../Link';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\ntype SupportButtonProps = {\n  title?: string;\n  items?: SupportItem[];\n  children?: ReactNode;\n};\n\nexport type SupportButtonClassKey = 'popoverList';\n\nconst useStyles = makeStyles(\n  {\n    popoverList: {\n      minWidth: 260,\n      maxWidth: 400,\n    },\n    menuItem: {\n      whiteSpace: 'normal',\n    },\n  },\n  { name: 'BackstageSupportButton' },\n);\n\nconst SupportIcon = ({ icon }: { icon: string | undefined }) => {\n  const app = useApp();\n  const Icon = icon ? app.getSystemIcon(icon) ?? HelpIcon : HelpIcon;\n  return <Icon />;\n};\n\nconst SupportLink = ({ link }: { link: SupportItemLink }) => (\n  <Link to={link.url}>{link.title ?? link.url}</Link>\n);\n\nconst SupportListItem = ({ item }: { item: SupportItem }) => {\n  return (\n    <MenuItem button={false}>\n      <ListItemIcon>\n        <SupportIcon icon={item.icon} />\n      </ListItemIcon>\n      <ListItemText\n        primary={item.title}\n        secondary={item.links?.reduce<React.ReactNode[]>(\n          (prev, link, idx) => [\n            ...prev,\n            idx > 0 && <br key={idx} />,\n            <SupportLink link={link} key={link.url} />,\n          ],\n          [],\n        )}\n      />\n    </MenuItem>\n  );\n};\n\nexport function SupportButton(props: SupportButtonProps) {\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n  const { title, items, children } = props;\n  const { items: configItems } = useSupportConfig();\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<Element | null>(null);\n  const classes = useStyles();\n  const supportConfig = useApi(configApiRef).getOptionalConfig('app.support');\n  const isSmallScreen = useMediaQuery<Theme>(theme =>\n    theme.breakpoints.down('sm'),\n  );\n\n  const onClickHandler: MouseEventHandler = event => {\n    setAnchorEl(event.currentTarget);\n    setPopoverOpen(true);\n  };\n\n  const popoverCloseHandler = () => {\n    setPopoverOpen(false);\n  };\n\n  if (!supportConfig) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" ml={1}>\n        {isSmallScreen ? (\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={onClickHandler}\n            data-testid=\"support-button\"\n            aria-label=\"Support\"\n          >\n            <HelpIcon />\n          </IconButton>\n        ) : (\n          <Button\n            data-testid=\"support-button\"\n            aria-label=\"Support\"\n            color=\"primary\"\n            onClick={onClickHandler}\n            startIcon={<HelpIcon />}\n          >\n            {t('supportButton.title')}\n          </Button>\n        )}\n      </Box>\n      <Popover\n        data-testid=\"support-button-popover\"\n        open={popoverOpen}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        onClose={popoverCloseHandler}\n      >\n        <MenuList\n          className={classes.popoverList}\n          autoFocusItem={Boolean(anchorEl)}\n        >\n          {title && (\n            <MenuItem\n              button={false}\n              alignItems=\"flex-start\"\n              className={classes.menuItem}\n            >\n              <Typography variant=\"subtitle1\">{title}</Typography>\n            </MenuItem>\n          )}\n          {Children.map(children, (child, i) => (\n            <MenuItem\n              button={false}\n              alignItems=\"flex-start\"\n              key={`child-${i}`}\n              className={classes.menuItem}\n            >\n              {child}\n            </MenuItem>\n          ))}\n          {(items ?? configItems).map((item, i) => (\n            <SupportListItem item={item} key={`item-${i}`} />\n          ))}\n        </MenuList>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={popoverCloseHandler}\n            aria-label=\"Close\"\n          >\n            {t('supportButton.close')}\n          </Button>\n        </DialogActions>\n      </Popover>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}