import { jsx } from 'react/jsx-runtime';
import { attachComponentData } from '@backstage/core-plugin-api';
import { Children, isValidElement, Fragment } from 'react';
import { RoutedTabs } from './RoutedTabs.esm.js';

const Route = () => null;
attachComponentData(Route, "core.gatherMountPoints", true);
function createSubRoutesFromChildren(childrenProps) {
  const routeType = (/* @__PURE__ */ jsx(Route, { path: "", title: "", children: /* @__PURE__ */ jsx("div", {}) })).type;
  return Children.toArray(childrenProps).flatMap((child) => {
    if (!isValidElement(child)) {
      return [];
    }
    if (child.type === Fragment) {
      return createSubRoutesFromChildren(child.props.children);
    }
    if (child.type !== routeType) {
      throw new Error("Child of TabbedLayout must be an TabbedLayout.Route");
    }
    const { path, title, children, tabProps } = child.props;
    return [{ path, title, children, tabProps }];
  });
}
function TabbedLayout(props) {
  const routes = createSubRoutesFromChildren(props.children);
  return /* @__PURE__ */ jsx(RoutedTabs, { routes });
}
TabbedLayout.Route = Route;

export { TabbedLayout, createSubRoutesFromChildren };
//# sourceMappingURL=TabbedLayout.esm.js.map
