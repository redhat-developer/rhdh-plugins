import { jsx, jsxs } from 'react/jsx-runtime';
import { makeStyles } from '@material-ui/core/styles';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemText from '@material-ui/core/ListItemText';
import { CopyTextButton } from '../CopyTextButton/CopyTextButton.esm.js';
import { WarningPanel } from '../WarningPanel/WarningPanel.esm.js';

const useStyles = makeStyles(
  (theme) => ({
    text: {
      fontFamily: "monospace",
      whiteSpace: "pre",
      overflowX: "auto",
      marginRight: theme.spacing(2)
    },
    divider: {
      margin: theme.spacing(2)
    }
  }),
  { name: "BackstageErrorPanel" }
);
const ErrorList = ({
  error,
  message,
  stack,
  children
}) => {
  const classes = useStyles();
  return /* @__PURE__ */ jsxs(List, { dense: true, children: [
    /* @__PURE__ */ jsxs(ListItem, { alignItems: "flex-start", children: [
      /* @__PURE__ */ jsx(
        ListItemText,
        {
          classes: { secondary: classes.text },
          primary: "Error",
          secondary: error
        }
      ),
      /* @__PURE__ */ jsx(CopyTextButton, { text: error })
    ] }),
    /* @__PURE__ */ jsxs(ListItem, { alignItems: "flex-start", children: [
      /* @__PURE__ */ jsx(
        ListItemText,
        {
          classes: { secondary: classes.text },
          primary: "Message",
          secondary: message
        }
      ),
      /* @__PURE__ */ jsx(CopyTextButton, { text: message })
    ] }),
    stack && /* @__PURE__ */ jsxs(ListItem, { alignItems: "flex-start", children: [
      /* @__PURE__ */ jsx(
        ListItemText,
        {
          classes: { secondary: classes.text },
          primary: "Stack Trace",
          secondary: stack
        }
      ),
      /* @__PURE__ */ jsx(CopyTextButton, { text: stack })
    ] }),
    children
  ] });
};
function ErrorPanel(props) {
  const { title, error, defaultExpanded, titleFormat, children } = props;
  return /* @__PURE__ */ jsx(
    WarningPanel,
    {
      severity: "error",
      title: title ?? error.message,
      defaultExpanded,
      titleFormat,
      children: /* @__PURE__ */ jsx(
        ErrorList,
        {
          error: error.name,
          message: error.message,
          stack: error.stack,
          children
        }
      )
    }
  );
}

export { ErrorPanel };
//# sourceMappingURL=ErrorPanel.esm.js.map
