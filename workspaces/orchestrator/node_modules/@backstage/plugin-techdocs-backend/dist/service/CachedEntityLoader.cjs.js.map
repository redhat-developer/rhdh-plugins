{"version":3,"file":"CachedEntityLoader.cjs.js","sources":["../../src/service/CachedEntityLoader.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthService,\n  BackstageCredentials,\n  CacheService,\n} from '@backstage/backend-plugin-api';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\n\nexport type CachedEntityLoaderOptions = {\n  auth: AuthService;\n  catalog: CatalogApi;\n  cache: CacheService;\n};\n\nexport class CachedEntityLoader {\n  private readonly auth: AuthService;\n  private readonly catalog: CatalogApi;\n  private readonly cache: CacheService;\n  private readonly readTimeout = 1000;\n\n  constructor({ auth, catalog, cache }: CachedEntityLoaderOptions) {\n    this.auth = auth;\n    this.catalog = catalog;\n    this.cache = cache;\n  }\n\n  async load(\n    credentials: BackstageCredentials,\n    entityRef: CompoundEntityRef,\n    token: string | undefined,\n  ): Promise<Entity | undefined> {\n    const cacheKey = this.getCacheKey(entityRef, credentials);\n    let result = await this.getFromCache(cacheKey);\n\n    if (result) {\n      return result;\n    }\n\n    result = await this.catalog.getEntityByRef(entityRef, { token });\n\n    if (result) {\n      this.cache.set(cacheKey, result, { ttl: 5000 });\n    }\n\n    return result;\n  }\n\n  private async getFromCache(key: string): Promise<Entity | undefined> {\n    // Promise.race ensures we don't hang the client for long if the cache is\n    // temporarily unreachable.\n    return (await Promise.race([\n      this.cache.get(key),\n      new Promise(cancelAfter => setTimeout(cancelAfter, this.readTimeout)),\n    ])) as Entity | undefined;\n  }\n\n  private getCacheKey(\n    entityName: CompoundEntityRef,\n    credentials: BackstageCredentials,\n  ): string {\n    const key = ['catalog', stringifyEntityRef(entityName)];\n\n    if (this.auth.isPrincipal(credentials, 'user')) {\n      key.push(credentials.principal.userEntityRef);\n    } else if (this.auth.isPrincipal(credentials, 'service')) {\n      key.push(credentials.principal.subject);\n    }\n\n    return key.join(':');\n  }\n}\n"],"names":["stringifyEntityRef"],"mappings":";;;;AAkCO,MAAM,kBAAA,CAAmB;AAAA,EACb,IAAA;AAAA,EACA,OAAA;AAAA,EACA,KAAA;AAAA,EACA,WAAA,GAAc,GAAA;AAAA,EAE/B,WAAA,CAAY,EAAE,IAAA,EAAM,OAAA,EAAS,OAAM,EAA8B;AAC/D,IAAA,IAAA,CAAK,IAAA,GAAO,IAAA;AACZ,IAAA,IAAA,CAAK,OAAA,GAAU,OAAA;AACf,IAAA,IAAA,CAAK,KAAA,GAAQ,KAAA;AAAA,EACf;AAAA,EAEA,MAAM,IAAA,CACJ,WAAA,EACA,SAAA,EACA,KAAA,EAC6B;AAC7B,IAAA,MAAM,QAAA,GAAW,IAAA,CAAK,WAAA,CAAY,SAAA,EAAW,WAAW,CAAA;AACxD,IAAA,IAAI,MAAA,GAAS,MAAM,IAAA,CAAK,YAAA,CAAa,QAAQ,CAAA;AAE7C,IAAA,IAAI,MAAA,EAAQ;AACV,MAAA,OAAO,MAAA;AAAA,IACT;AAEA,IAAA,MAAA,GAAS,MAAM,IAAA,CAAK,OAAA,CAAQ,eAAe,SAAA,EAAW,EAAE,OAAO,CAAA;AAE/D,IAAA,IAAI,MAAA,EAAQ;AACV,MAAA,IAAA,CAAK,MAAM,GAAA,CAAI,QAAA,EAAU,QAAQ,EAAE,GAAA,EAAK,KAAM,CAAA;AAAA,IAChD;AAEA,IAAA,OAAO,MAAA;AAAA,EACT;AAAA,EAEA,MAAc,aAAa,GAAA,EAA0C;AAGnE,IAAA,OAAQ,MAAM,QAAQ,IAAA,CAAK;AAAA,MACzB,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,GAAG,CAAA;AAAA,MAClB,IAAI,OAAA,CAAQ,CAAA,WAAA,KAAe,WAAW,WAAA,EAAa,IAAA,CAAK,WAAW,CAAC;AAAA,KACrE,CAAA;AAAA,EACH;AAAA,EAEQ,WAAA,CACN,YACA,WAAA,EACQ;AACR,IAAA,MAAM,GAAA,GAAM,CAAC,SAAA,EAAWA,+BAAA,CAAmB,UAAU,CAAC,CAAA;AAEtD,IAAA,IAAI,IAAA,CAAK,IAAA,CAAK,WAAA,CAAY,WAAA,EAAa,MAAM,CAAA,EAAG;AAC9C,MAAA,GAAA,CAAI,IAAA,CAAK,WAAA,CAAY,SAAA,CAAU,aAAa,CAAA;AAAA,IAC9C,WAAW,IAAA,CAAK,IAAA,CAAK,WAAA,CAAY,WAAA,EAAa,SAAS,CAAA,EAAG;AACxD,MAAA,GAAA,CAAI,IAAA,CAAK,WAAA,CAAY,SAAA,CAAU,OAAO,CAAA;AAAA,IACxC;AAEA,IAAA,OAAO,GAAA,CAAI,KAAK,GAAG,CAAA;AAAA,EACrB;AACF;;;;"}