{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @packageDocumentation\n *\n * A collator module for the search backend that indexes your software catalog.\n */\n\nimport {\n  coreServices,\n  createBackendModule,\n  createExtensionPoint,\n} from '@backstage/backend-plugin-api';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node';\nimport { searchIndexRegistryExtensionPoint } from '@backstage/plugin-search-backend-node/alpha';\nimport { readScheduleConfigOptions } from './collators/config';\nimport { CatalogCollatorEntityTransformer } from './collators';\nimport { DefaultCatalogCollatorFactory } from './collators/DefaultCatalogCollatorFactory';\n\n/**\n * Options for {@link catalogCollatorExtensionPoint}.\n *\n * @public\n */\nexport type CatalogCollatorExtensionPoint = {\n  /**\n   * Allows you to customize how entities are shaped into documents.\n   */\n  setEntityTransformer(transformer: CatalogCollatorEntityTransformer): void;\n};\n\n/**\n * Extension point for customizing how catalog entities are shaped into\n * documents for the search backend.\n *\n * @public\n */\nexport const catalogCollatorExtensionPoint =\n  createExtensionPoint<CatalogCollatorExtensionPoint>({\n    id: 'search.catalogCollator.extension',\n  });\n\n/**\n * Search backend module for the Catalog index.\n *\n * @public\n */\nexport const searchModuleCatalogCollator = createBackendModule({\n  pluginId: 'search',\n  moduleId: 'catalog-collator',\n  register(env) {\n    let entityTransformer: CatalogCollatorEntityTransformer | undefined;\n\n    env.registerExtensionPoint(catalogCollatorExtensionPoint, {\n      setEntityTransformer(transformer) {\n        if (entityTransformer) {\n          throw new Error('setEntityTransformer can only be called once');\n        }\n        entityTransformer = transformer;\n      },\n    });\n\n    env.registerInit({\n      deps: {\n        auth: coreServices.auth,\n        config: coreServices.rootConfig,\n        scheduler: coreServices.scheduler,\n        indexRegistry: searchIndexRegistryExtensionPoint,\n        catalog: catalogServiceRef,\n      },\n      async init({ auth, config, scheduler, indexRegistry, catalog }) {\n        indexRegistry.addCollator({\n          schedule: scheduler.createScheduledTaskRunner(\n            readScheduleConfigOptions(config),\n          ),\n          factory: DefaultCatalogCollatorFactory.fromConfig(config, {\n            auth,\n            catalog,\n            entityTransformer,\n          }),\n        });\n      },\n    });\n  },\n});\n"],"names":["createExtensionPoint","createBackendModule","coreServices","searchIndexRegistryExtensionPoint","catalogServiceRef","config","readScheduleConfigOptions","DefaultCatalogCollatorFactory"],"mappings":";;;;;;;;AAmDO,MAAM,gCACXA,qCAAA,CAAoD;AAAA,EAClD,EAAA,EAAI;AACN,CAAC;AAOI,MAAM,8BAA8BC,oCAAA,CAAoB;AAAA,EAC7D,QAAA,EAAU,QAAA;AAAA,EACV,QAAA,EAAU,kBAAA;AAAA,EACV,SAAS,GAAA,EAAK;AACZ,IAAA,IAAI,iBAAA;AAEJ,IAAA,GAAA,CAAI,uBAAuB,6BAAA,EAA+B;AAAA,MACxD,qBAAqB,WAAA,EAAa;AAChC,QAAA,IAAI,iBAAA,EAAmB;AACrB,UAAA,MAAM,IAAI,MAAM,8CAA8C,CAAA;AAAA,QAChE;AACA,QAAA,iBAAA,GAAoB,WAAA;AAAA,MACtB;AAAA,KACD,CAAA;AAED,IAAA,GAAA,CAAI,YAAA,CAAa;AAAA,MACf,IAAA,EAAM;AAAA,QACJ,MAAMC,6BAAA,CAAa,IAAA;AAAA,QACnB,QAAQA,6BAAA,CAAa,UAAA;AAAA,QACrB,WAAWA,6BAAA,CAAa,SAAA;AAAA,QACxB,aAAA,EAAeC,uCAAA;AAAA,QACf,OAAA,EAASC;AAAA,OACX;AAAA,MACA,MAAM,KAAK,EAAE,IAAA,UAAMC,UAAQ,SAAA,EAAW,aAAA,EAAe,SAAQ,EAAG;AAC9D,QAAA,aAAA,CAAc,WAAA,CAAY;AAAA,UACxB,UAAU,SAAA,CAAU,yBAAA;AAAA,YAClBC,iCAA0BD,QAAM;AAAA,WAClC;AAAA,UACA,OAAA,EAASE,2DAAA,CAA8B,UAAA,CAAWF,QAAA,EAAQ;AAAA,YACxD,IAAA;AAAA,YACA,OAAA;AAAA,YACA;AAAA,WACD;AAAA,SACF,CAAA;AAAA,MACH;AAAA,KACD,CAAA;AAAA,EACH;AACF,CAAC;;;;;"}