{"version":3,"file":"defaultCatalogCollatorEntityTransformer.cjs.js","sources":["../../src/collators/defaultCatalogCollatorEntityTransformer.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, isGroupEntity, isUserEntity } from '@backstage/catalog-model';\nimport { CatalogCollatorEntityTransformer } from './CatalogCollatorEntityTransformer';\n\nconst getDocumentText = (entity: Entity): string => {\n  const documentTexts: string[] = [];\n  if (entity.metadata.description) {\n    documentTexts.push(entity.metadata.description);\n  }\n\n  if (isUserEntity(entity) || isGroupEntity(entity)) {\n    if (entity.spec?.profile?.displayName) {\n      documentTexts.push(entity.spec.profile.displayName);\n    }\n  }\n\n  if (isUserEntity(entity)) {\n    if (entity.spec?.profile?.email) {\n      documentTexts.push(entity.spec.profile.email);\n    }\n  }\n\n  return documentTexts.join(' : ');\n};\n\n/** @public */\nexport const defaultCatalogCollatorEntityTransformer: CatalogCollatorEntityTransformer =\n  (entity: Entity) => {\n    return {\n      title: entity.metadata.title ?? entity.metadata.name,\n      text: getDocumentText(entity),\n      componentType: entity.spec?.type?.toString() || 'other',\n      type: entity.spec?.type?.toString() || 'other',\n      namespace: entity.metadata.namespace || 'default',\n      kind: entity.kind,\n      lifecycle: (entity.spec?.lifecycle as string) || '',\n      owner: (entity.spec?.owner as string) || '',\n    };\n  };\n"],"names":["isUserEntity","isGroupEntity"],"mappings":";;;;AAmBA,MAAM,eAAA,GAAkB,CAAC,MAAA,KAA2B;AAClD,EAAA,MAAM,gBAA0B,EAAC;AACjC,EAAA,IAAI,MAAA,CAAO,SAAS,WAAA,EAAa;AAC/B,IAAA,aAAA,CAAc,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,WAAW,CAAA;AAAA,EAChD;AAEA,EAAA,IAAIA,yBAAA,CAAa,MAAM,CAAA,IAAKC,0BAAA,CAAc,MAAM,CAAA,EAAG;AACjD,IAAA,IAAI,MAAA,CAAO,IAAA,EAAM,OAAA,EAAS,WAAA,EAAa;AACrC,MAAA,aAAA,CAAc,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,OAAA,CAAQ,WAAW,CAAA;AAAA,IACpD;AAAA,EACF;AAEA,EAAA,IAAID,yBAAA,CAAa,MAAM,CAAA,EAAG;AACxB,IAAA,IAAI,MAAA,CAAO,IAAA,EAAM,OAAA,EAAS,KAAA,EAAO;AAC/B,MAAA,aAAA,CAAc,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,OAAA,CAAQ,KAAK,CAAA;AAAA,IAC9C;AAAA,EACF;AAEA,EAAA,OAAO,aAAA,CAAc,KAAK,KAAK,CAAA;AACjC,CAAA;AAGO,MAAM,uCAAA,GACX,CAAC,MAAA,KAAmB;AAClB,EAAA,OAAO;AAAA,IACL,KAAA,EAAO,MAAA,CAAO,QAAA,CAAS,KAAA,IAAS,OAAO,QAAA,CAAS,IAAA;AAAA,IAChD,IAAA,EAAM,gBAAgB,MAAM,CAAA;AAAA,IAC5B,aAAA,EAAe,MAAA,CAAO,IAAA,EAAM,IAAA,EAAM,UAAS,IAAK,OAAA;AAAA,IAChD,IAAA,EAAM,MAAA,CAAO,IAAA,EAAM,IAAA,EAAM,UAAS,IAAK,OAAA;AAAA,IACvC,SAAA,EAAW,MAAA,CAAO,QAAA,CAAS,SAAA,IAAa,SAAA;AAAA,IACxC,MAAM,MAAA,CAAO,IAAA;AAAA,IACb,SAAA,EAAY,MAAA,CAAO,IAAA,EAAM,SAAA,IAAwB,EAAA;AAAA,IACjD,KAAA,EAAQ,MAAA,CAAO,IAAA,EAAM,KAAA,IAAoB;AAAA,GAC3C;AACF;;;;"}