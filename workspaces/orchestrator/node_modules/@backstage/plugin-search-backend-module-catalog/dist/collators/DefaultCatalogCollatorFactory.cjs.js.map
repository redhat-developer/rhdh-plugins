{"version":3,"file":"DefaultCatalogCollatorFactory.cjs.js","sources":["../../src/collators/DefaultCatalogCollatorFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthService } from '@backstage/backend-plugin-api';\nimport { QueryEntitiesInitialRequest } from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { CatalogEntityDocument } from '@backstage/plugin-catalog-common';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { CatalogService } from '@backstage/plugin-catalog-node';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport { Readable } from 'stream';\nimport { CatalogCollatorEntityTransformer } from './CatalogCollatorEntityTransformer';\nimport { readCollatorConfigOptions } from './config';\nimport { defaultCatalogCollatorEntityTransformer } from './defaultCatalogCollatorEntityTransformer';\n\nexport type DefaultCatalogCollatorFactoryOptions = {\n  auth: AuthService;\n  catalog: CatalogService;\n  /*\n   * Allows you to customize how entities are shaped into documents.\n   */\n  entityTransformer?: CatalogCollatorEntityTransformer;\n};\n\n/**\n * Collates entities from the Catalog into documents for the search backend.\n */\nexport class DefaultCatalogCollatorFactory implements DocumentCollatorFactory {\n  public readonly type = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private locationTemplate: string;\n  private filter?: QueryEntitiesInitialRequest['filter'];\n  private batchSize: number;\n  private readonly catalog: CatalogService;\n  private entityTransformer: CatalogCollatorEntityTransformer;\n  private auth: AuthService;\n\n  static fromConfig(\n    configRoot: Config,\n    options: DefaultCatalogCollatorFactoryOptions,\n  ) {\n    const configOptions = readCollatorConfigOptions(configRoot);\n    return new DefaultCatalogCollatorFactory({\n      locationTemplate: configOptions.locationTemplate,\n      filter: configOptions.filter,\n      batchSize: configOptions.batchSize,\n      entityTransformer: options.entityTransformer,\n      auth: options.auth,\n      catalog: options.catalog,\n    });\n  }\n\n  private constructor(options: {\n    locationTemplate: string;\n    filter: QueryEntitiesInitialRequest['filter'];\n    batchSize: number;\n    entityTransformer?: CatalogCollatorEntityTransformer;\n    auth: AuthService;\n    catalog: CatalogService;\n  }) {\n    const {\n      auth,\n      batchSize,\n      locationTemplate,\n      filter,\n      catalog,\n      entityTransformer,\n    } = options;\n\n    this.locationTemplate = locationTemplate;\n    this.filter = filter;\n    this.batchSize = batchSize;\n    this.catalog = catalog;\n    this.entityTransformer =\n      entityTransformer ?? defaultCatalogCollatorEntityTransformer;\n    this.auth = auth;\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private async *execute(): AsyncGenerator<CatalogEntityDocument> {\n    let entitiesRetrieved = 0;\n    let cursor: string | undefined = undefined;\n\n    do {\n      const response = await this.catalog.queryEntities(\n        {\n          filter: this.filter,\n          limit: this.batchSize,\n          ...(cursor ? { cursor } : {}),\n        },\n        { credentials: await this.auth.getOwnServiceCredentials() },\n      );\n      cursor = response.pageInfo.nextCursor;\n      entitiesRetrieved += response.items.length;\n\n      for (const entity of response.items) {\n        yield {\n          ...this.entityTransformer(entity),\n          authorization: {\n            resourceRef: stringifyEntityRef(entity),\n          },\n          location: this.applyArgsToFormat(this.locationTemplate, {\n            namespace: encodeURIComponent(\n              entity.metadata.namespace || 'default',\n            ),\n            kind: encodeURIComponent(entity.kind),\n            name: encodeURIComponent(entity.metadata.name),\n          }),\n        };\n      }\n    } while (cursor);\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n\n    return formatted.toLowerCase();\n  }\n}\n"],"names":["catalogEntityReadPermission","readCollatorConfigOptions","defaultCatalogCollatorEntityTransformer","Readable","stringifyEntityRef"],"mappings":"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"}