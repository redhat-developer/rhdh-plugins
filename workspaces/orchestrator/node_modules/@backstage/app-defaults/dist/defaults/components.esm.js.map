{"version":3,"file":"components.esm.js","sources":["../../src/defaults/components.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ErrorPanel, Progress, ErrorPage } from '@backstage/core-components';\nimport {\n  MemoryRouter,\n  useInRouterContext,\n  BrowserRouter,\n} from 'react-router-dom';\nimport {\n  AppComponents,\n  BootErrorPageProps,\n  ErrorBoundaryFallbackProps,\n} from '@backstage/core-plugin-api';\n\nexport function OptionallyWrapInRouter({ children }: { children: ReactNode }) {\n  if (useInRouterContext()) {\n    return <>{children}</>;\n  }\n  return <MemoryRouter>{children}</MemoryRouter>;\n}\n\nconst DefaultNotFoundPage = () => (\n  <ErrorPage status=\"404\" statusMessage=\"PAGE NOT FOUND\" />\n);\n\nconst DefaultBootErrorPage = ({ step, error }: BootErrorPageProps) => {\n  let message = '';\n  if (step === 'load-config') {\n    message = `The configuration failed to load, someone should have a look at this error: ${error.message}`;\n  } else if (step === 'load-chunk') {\n    message = `Lazy loaded chunk failed to load, try to reload the page: ${error.message}`;\n  }\n  // TODO: figure out a nicer way to handle routing on the error page, when it can be done.\n  return (\n    <OptionallyWrapInRouter>\n      <ErrorPage statusMessage={message} stack={error.stack} />\n    </OptionallyWrapInRouter>\n  );\n};\n\nconst DefaultErrorBoundaryFallback = ({\n  error,\n  resetError,\n  plugin,\n}: ErrorBoundaryFallbackProps) => {\n  return (\n    <ErrorPanel\n      title={`Error in ${plugin?.getId()}`}\n      defaultExpanded\n      error={error}\n    >\n      <Button variant=\"outlined\" onClick={resetError}>\n        Retry\n      </Button>\n    </ErrorPanel>\n  );\n};\n\n/**\n * Creates a set of default components to pass along to {@link @backstage/core-app-api#createSpecializedApp}.\n *\n * @public\n */\nexport const components: AppComponents = {\n  Progress,\n  Router: BrowserRouter,\n  NotFoundErrorPage: DefaultNotFoundPage,\n  BootErrorPage: DefaultBootErrorPage,\n  ErrorBoundaryFallback: DefaultErrorBoundaryFallback,\n};\n"],"names":[],"mappings":";;;;;AA8BO,SAAS,sBAAA,CAAuB,EAAE,QAAA,EAAS,EAA4B;AAC5E,EAAA,IAAI,oBAAmB,EAAG;AACxB,IAAA,uCAAU,QAAA,EAAS,CAAA;AAAA,EACrB;AACA,EAAA,uBAAO,GAAA,CAAC,gBAAc,QAAA,EAAS,CAAA;AACjC;AAEA,MAAM,sBAAsB,sBAC1B,GAAA,CAAC,aAAU,MAAA,EAAO,KAAA,EAAM,eAAc,gBAAA,EAAiB,CAAA;AAGzD,MAAM,oBAAA,GAAuB,CAAC,EAAE,IAAA,EAAM,OAAM,KAA0B;AACpE,EAAA,IAAI,OAAA,GAAU,EAAA;AACd,EAAA,IAAI,SAAS,aAAA,EAAe;AAC1B,IAAA,OAAA,GAAU,CAAA,4EAAA,EAA+E,MAAM,OAAO,CAAA,CAAA;AAAA,EACxG,CAAA,MAAA,IAAW,SAAS,YAAA,EAAc;AAChC,IAAA,OAAA,GAAU,CAAA,0DAAA,EAA6D,MAAM,OAAO,CAAA,CAAA;AAAA,EACtF;AAEA,EAAA,uBACE,GAAA,CAAC,0BACC,QAAA,kBAAA,GAAA,CAAC,SAAA,EAAA,EAAU,eAAe,OAAA,EAAS,KAAA,EAAO,KAAA,CAAM,KAAA,EAAO,CAAA,EACzD,CAAA;AAEJ,CAAA;AAEA,MAAM,+BAA+B,CAAC;AAAA,EACpC,KAAA;AAAA,EACA,UAAA;AAAA,EACA;AACF,CAAA,KAAkC;AAChC,EAAA,uBACE,GAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,CAAA,SAAA,EAAY,MAAA,EAAQ,KAAA,EAAO,CAAA,CAAA;AAAA,MAClC,eAAA,EAAe,IAAA;AAAA,MACf,KAAA;AAAA,MAEA,8BAAC,MAAA,EAAA,EAAO,OAAA,EAAQ,UAAA,EAAW,OAAA,EAAS,YAAY,QAAA,EAAA,OAAA,EAEhD;AAAA;AAAA,GACF;AAEJ,CAAA;AAOO,MAAM,UAAA,GAA4B;AAAA,EACvC,QAAA;AAAA,EACA,MAAA,EAAQ,aAAA;AAAA,EACR,iBAAA,EAAmB,mBAAA;AAAA,EACnB,aAAA,EAAe,oBAAA;AAAA,EACf,qBAAA,EAAuB;AACzB;;;;"}