import { jsx, Fragment } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import { Progress, ErrorPanel, ErrorPage } from '@backstage/core-components';
import { BrowserRouter, useInRouterContext, MemoryRouter } from 'react-router-dom';

function OptionallyWrapInRouter({ children }) {
  if (useInRouterContext()) {
    return /* @__PURE__ */ jsx(Fragment, { children });
  }
  return /* @__PURE__ */ jsx(MemoryRouter, { children });
}
const DefaultNotFoundPage = () => /* @__PURE__ */ jsx(ErrorPage, { status: "404", statusMessage: "PAGE NOT FOUND" });
const DefaultBootErrorPage = ({ step, error }) => {
  let message = "";
  if (step === "load-config") {
    message = `The configuration failed to load, someone should have a look at this error: ${error.message}`;
  } else if (step === "load-chunk") {
    message = `Lazy loaded chunk failed to load, try to reload the page: ${error.message}`;
  }
  return /* @__PURE__ */ jsx(OptionallyWrapInRouter, { children: /* @__PURE__ */ jsx(ErrorPage, { statusMessage: message, stack: error.stack }) });
};
const DefaultErrorBoundaryFallback = ({
  error,
  resetError,
  plugin
}) => {
  return /* @__PURE__ */ jsx(
    ErrorPanel,
    {
      title: `Error in ${plugin?.getId()}`,
      defaultExpanded: true,
      error,
      children: /* @__PURE__ */ jsx(Button, { variant: "outlined", onClick: resetError, children: "Retry" })
    }
  );
};
const components = {
  Progress,
  Router: BrowserRouter,
  NotFoundErrorPage: DefaultNotFoundPage,
  BootErrorPage: DefaultBootErrorPage,
  ErrorBoundaryFallback: DefaultErrorBoundaryFallback
};

export { OptionallyWrapInRouter, components };
//# sourceMappingURL=components.esm.js.map
