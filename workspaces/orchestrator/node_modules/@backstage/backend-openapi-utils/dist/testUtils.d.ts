import { Express } from 'express';
import { Server } from 'http';

/**
 * !!! THIS CURRENTLY ONLY SUPPORTS SUPERTEST !!!
 * Setup a server with a custom OpenAPI proxy. This proxy will capture all requests and responses and make sure they
 *  conform to the spec.
 * @param app - express server, needed to ensure we have the correct ports for the proxy.
 * @returns - a configured HTTP server that should be used with supertest.
 * @public
 */
declare function wrapServer(app: Express): Promise<Server>;
/**
 * !!! THIS CURRENTLY ONLY SUPPORTS SUPERTEST !!!
 * Running against supertest, we need some way to hit the optic proxy. This ensures that
 *  that happens at runtime when in the context of a `yarn optic capture` command.
 * @param app - Express router that would be passed to supertest's `request`.
 * @returns A wrapper around the express router (or the router untouched) that still works with supertest.
 * @public
 */
declare const wrapInOpenApiTestServer: (app: Express) => Server | Express;

export { wrapInOpenApiTestServer, wrapServer };
