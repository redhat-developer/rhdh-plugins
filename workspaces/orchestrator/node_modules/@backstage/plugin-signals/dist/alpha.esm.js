import { jsx } from 'react/jsx-runtime';
import { ApiBlueprint, discoveryApiRef, identityApiRef, AppRootElementBlueprint, createFrontendPlugin } from '@backstage/frontend-plugin-api';
import { signalApiRef } from '@backstage/plugin-signals-react';
import { SignalClient } from './api/SignalClient.esm.js';
import { SignalsDisplay } from './plugin.esm.js';
import { compatWrapper } from '@backstage/core-compat-api';

const api = ApiBlueprint.make({
  params: (defineParams) => defineParams({
    api: signalApiRef,
    deps: {
      identity: identityApiRef,
      discoveryApi: discoveryApiRef
    },
    factory: ({ identity, discoveryApi }) => {
      return SignalClient.create({
        identity,
        discoveryApi
      });
    }
  })
});
const signalsDisplayAppRootElement = AppRootElementBlueprint.make({
  name: "signals-display",
  params: {
    element: compatWrapper(/* @__PURE__ */ jsx(SignalsDisplay, {}))
  }
});
var alpha = createFrontendPlugin({
  pluginId: "signals",
  info: { packageJson: () => import('./package.json.esm.js') },
  extensions: [api, signalsDisplayAppRootElement]
});

export { alpha as default };
//# sourceMappingURL=alpha.esm.js.map
