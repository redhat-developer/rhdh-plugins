{"version":3,"file":"SignalClient.esm.js","sources":["../../src/api/SignalClient.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SignalApi, SignalSubscriber } from '@backstage/plugin-signals-react';\nimport { JsonObject } from '@backstage/types';\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport { v4 as uuid } from 'uuid';\n\ntype Subscription = {\n  channel: string;\n  callback: (message: any) => void;\n};\n\nconst WS_CLOSE_NORMAL = 1000;\nconst WS_CLOSE_GOING_AWAY = 1001;\n\n/** @public */\nexport class SignalClient implements SignalApi {\n  static readonly DEFAULT_CONNECT_TIMEOUT_MS: number = 1000;\n  static readonly DEFAULT_RECONNECT_TIMEOUT_MS: number = 5000;\n  private ws: WebSocket | null = null;\n  private subscriptions: Map<string, Subscription> = new Map();\n  private messageQueue: string[] = [];\n  private reconnectTo: any;\n\n  static create(options: {\n    identity: IdentityApi;\n    discoveryApi: DiscoveryApi;\n    connectTimeout?: number;\n    reconnectTimeout?: number;\n  }) {\n    const {\n      identity,\n      discoveryApi,\n      connectTimeout = SignalClient.DEFAULT_CONNECT_TIMEOUT_MS,\n      reconnectTimeout = SignalClient.DEFAULT_RECONNECT_TIMEOUT_MS,\n    } = options;\n    return new SignalClient(\n      identity,\n      discoveryApi,\n      connectTimeout,\n      reconnectTimeout,\n    );\n  }\n\n  private constructor(\n    private identity: IdentityApi,\n    private discoveryApi: DiscoveryApi,\n    private connectTimeout: number,\n    private reconnectTimeout: number,\n  ) {}\n\n  subscribe<TMessage extends JsonObject = JsonObject>(\n    channel: string,\n    onMessage: (message: TMessage) => void,\n  ): SignalSubscriber {\n    const subscriptionId = uuid();\n    const exists = [...this.subscriptions.values()].find(\n      sub => sub.channel === channel,\n    );\n    this.subscriptions.set(subscriptionId, {\n      channel,\n      callback: onMessage,\n    });\n\n    this.connect()\n      .then(() => {\n        // Do not subscribe twice to same channel even there is multiple callbacks\n        if (!exists) {\n          this.send({ action: 'subscribe', channel });\n        }\n      })\n      .catch(() => {\n        this.reconnect();\n      });\n\n    const unsubscribe = () => {\n      const sub = this.subscriptions.get(subscriptionId);\n      if (!sub) {\n        return;\n      }\n      this.subscriptions.delete(subscriptionId);\n      const multipleExists = [...this.subscriptions.values()].find(\n        s => s.channel === channel,\n      );\n      // If there are subscriptions still listening to this channel, do not\n      // unsubscribe from the server\n      if (!multipleExists) {\n        this.send({ action: 'unsubscribe', channel: sub.channel });\n      }\n\n      // If there are no subscriptions, close the connection\n      if (this.subscriptions.size === 0) {\n        this.ws?.close(WS_CLOSE_NORMAL);\n        this.ws = null;\n      }\n    };\n\n    return { unsubscribe };\n  }\n\n  private send(data?: JsonObject): void {\n    const jsonMessage = JSON.stringify(data);\n    if (jsonMessage.length === 0) {\n      return;\n    }\n\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      if (data) {\n        this.messageQueue.unshift(jsonMessage);\n      }\n      return;\n    }\n\n    // First send queue\n    for (const msg of this.messageQueue) {\n      this.ws!.send(msg);\n    }\n    this.messageQueue = [];\n    if (data) {\n      this.ws!.send(jsonMessage);\n    }\n  }\n\n  private async connect() {\n    if (this.ws && this.ws.readyState !== WebSocket.CLOSED) {\n      return;\n    }\n\n    const apiUrl = await this.discoveryApi.getBaseUrl('signals');\n    const { token } = await this.identity.getCredentials();\n\n    const url = new URL(apiUrl);\n    url.protocol = url.protocol === 'http:' ? 'ws:' : 'wss:';\n    this.ws = new WebSocket(url.toString(), token);\n\n    // Wait until connection is open\n    let connectSleep = 0;\n    while (\n      this.ws &&\n      this.ws.readyState !== WebSocket.OPEN &&\n      connectSleep < this.connectTimeout\n    ) {\n      await new Promise(r => setTimeout(r, 100));\n      connectSleep += 100;\n    }\n\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      throw new Error('Connect timeout');\n    }\n\n    this.ws.onmessage = (data: MessageEvent) => {\n      this.handleMessage(data);\n    };\n\n    this.ws.onerror = () => {\n      this.reconnect();\n    };\n\n    this.ws.onclose = (ev: CloseEvent) => {\n      if (ev.code !== WS_CLOSE_NORMAL && ev.code !== WS_CLOSE_GOING_AWAY) {\n        this.reconnect();\n      }\n    };\n  }\n\n  private handleMessage(data: MessageEvent) {\n    try {\n      const json = JSON.parse(data.data);\n      if (!json.channel) {\n        return;\n      }\n\n      for (const sub of this.subscriptions.values()) {\n        if (sub.channel === json.channel) {\n          sub.callback(json.message);\n        }\n      }\n    } catch (e) {\n      // NOOP\n    }\n  }\n\n  private reconnect() {\n    if (this.reconnectTo) {\n      clearTimeout(this.reconnectTo);\n    }\n\n    this.reconnectTo = setTimeout(() => {\n      this.reconnectTo = null;\n      if (this.ws) {\n        this.ws.close();\n      }\n      this.ws = null;\n      this.connect()\n        .then(() => {\n          // Resubscribe to existing channels in case we lost connection\n          for (const sub of this.subscriptions.values()) {\n            this.send({ action: 'subscribe', channel: sub.channel });\n          }\n        })\n        .catch(() => {\n          this.reconnect();\n        });\n    }, this.reconnectTimeout);\n  }\n}\n"],"names":["uuid"],"mappings":"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"}