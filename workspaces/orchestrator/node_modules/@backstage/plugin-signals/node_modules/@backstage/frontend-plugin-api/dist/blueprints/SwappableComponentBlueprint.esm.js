import '../wiring/coreExtensionData.esm.js';
import 'zod';
import 'zod-to-json-schema';
import { createExtensionDataRef } from '../wiring/createExtensionDataRef.esm.js';
import { createExtensionBlueprint, createExtensionBlueprintParams } from '../wiring/createExtensionBlueprint.esm.js';

const componentDataRef = createExtensionDataRef().with({ id: "core.swappableComponent" });
const SwappableComponentBlueprint = createExtensionBlueprint({
  kind: "component",
  attachTo: { id: "api:app/swappable-components", input: "components" },
  output: [componentDataRef],
  dataRefs: {
    component: componentDataRef
  },
  defineParams(params) {
    return createExtensionBlueprintParams(params);
  },
  factory: (params) => [
    componentDataRef({
      ref: params.component.ref,
      loader: params.loader
    })
  ]
});

export { SwappableComponentBlueprint, componentDataRef };
//# sourceMappingURL=SwappableComponentBlueprint.esm.js.map
