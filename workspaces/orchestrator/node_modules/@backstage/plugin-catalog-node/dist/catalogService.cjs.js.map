{"version":3,"file":"catalogService.cjs.js","sources":["../src/catalogService.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthService,\n  BackstageCredentials,\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\nimport {\n  AddLocationRequest,\n  AddLocationResponse,\n  CatalogApi,\n  CatalogClient,\n  CatalogRequestOptions,\n  GetEntitiesByRefsRequest,\n  GetEntitiesByRefsResponse,\n  GetEntitiesRequest,\n  GetEntitiesResponse,\n  GetEntityAncestorsRequest,\n  GetEntityAncestorsResponse,\n  GetEntityFacetsRequest,\n  GetEntityFacetsResponse,\n  GetLocationsResponse,\n  Location,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n  StreamEntitiesRequest,\n  ValidateEntityResponse,\n} from '@backstage/catalog-client';\nimport { CompoundEntityRef, Entity } from '@backstage/catalog-model';\nimport {\n  AnalyzeLocationRequest,\n  AnalyzeLocationResponse,\n} from '@backstage/plugin-catalog-common';\n\n/**\n * @public\n */\nexport interface CatalogServiceRequestOptions {\n  credentials: BackstageCredentials;\n}\n\n/**\n * A version of the {@link @backstage/catalog-client#CatalogApi | CatalogApi} that\n * requires backend credentials to be passed instead of a token.\n *\n * @public\n */\nexport interface CatalogService {\n  getEntities(\n    request: GetEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesResponse>;\n\n  getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesByRefsResponse>;\n\n  queryEntities(\n    request: QueryEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<QueryEntitiesResponse>;\n\n  getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityAncestorsResponse>;\n\n  getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Entity | undefined>;\n\n  removeEntityByUid(\n    uid: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  refreshEntity(\n    entityRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  getEntityFacets(\n    request: GetEntityFacetsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityFacetsResponse>;\n\n  getLocations(\n    request: {} | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetLocationsResponse>;\n\n  getLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  getLocationByRef(\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  addLocation(\n    location: AddLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AddLocationResponse>;\n\n  removeLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void>;\n\n  getLocationByEntity(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined>;\n\n  validateEntity(\n    entity: Entity,\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<ValidateEntityResponse>;\n\n  analyzeLocation(\n    location: AnalyzeLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AnalyzeLocationResponse>;\n\n  streamEntities(\n    request: StreamEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): AsyncIterable<Entity[]>;\n}\n\nclass DefaultCatalogService implements CatalogService {\n  readonly #auth: AuthService;\n  readonly #catalogApi: CatalogApi;\n\n  constructor({\n    catalogApi,\n    auth,\n  }: {\n    catalogApi: CatalogApi;\n    auth: AuthService;\n  }) {\n    this.#catalogApi = catalogApi;\n    this.#auth = auth;\n  }\n\n  async getEntities(\n    request: GetEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesResponse> {\n    return this.#catalogApi.getEntities(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntitiesByRefsResponse> {\n    return this.#catalogApi.getEntitiesByRefs(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async queryEntities(\n    request: QueryEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<QueryEntitiesResponse> {\n    return this.#catalogApi.queryEntities(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityAncestorsResponse> {\n    return this.#catalogApi.getEntityAncestors(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Entity | undefined> {\n    return this.#catalogApi.getEntityByRef(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.removeEntityByUid(\n      uid,\n      await this.#getOptions(options),\n    );\n  }\n\n  async refreshEntity(\n    entityRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.refreshEntity(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getEntityFacets(\n    request: GetEntityFacetsRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetEntityFacetsResponse> {\n    return this.#catalogApi.getEntityFacets(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocations(\n    request: {} | undefined,\n    options: CatalogServiceRequestOptions,\n  ): Promise<GetLocationsResponse> {\n    return this.#catalogApi.getLocations(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationById(\n      id,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationByRef(\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationByRef(\n      locationRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async addLocation(\n    location: AddLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AddLocationResponse> {\n    return this.#catalogApi.addLocation(\n      location,\n      await this.#getOptions(options),\n    );\n  }\n\n  async removeLocationById(\n    id: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<void> {\n    return this.#catalogApi.removeLocationById(\n      id,\n      await this.#getOptions(options),\n    );\n  }\n\n  async getLocationByEntity(\n    entityRef: string | CompoundEntityRef,\n    options: CatalogServiceRequestOptions,\n  ): Promise<Location | undefined> {\n    return this.#catalogApi.getLocationByEntity(\n      entityRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async validateEntity(\n    entity: Entity,\n    locationRef: string,\n    options: CatalogServiceRequestOptions,\n  ): Promise<ValidateEntityResponse> {\n    return this.#catalogApi.validateEntity(\n      entity,\n      locationRef,\n      await this.#getOptions(options),\n    );\n  }\n\n  async analyzeLocation(\n    location: AnalyzeLocationRequest,\n    options: CatalogServiceRequestOptions,\n  ): Promise<AnalyzeLocationResponse> {\n    return this.#catalogApi.analyzeLocation(\n      location,\n      await this.#getOptions(options),\n    );\n  }\n\n  async *streamEntities(\n    request: StreamEntitiesRequest | undefined,\n    options: CatalogServiceRequestOptions,\n  ): AsyncIterable<Entity[]> {\n    yield* this.#catalogApi.streamEntities(\n      request,\n      await this.#getOptions(options),\n    );\n  }\n\n  async #getOptions(\n    options: CatalogServiceRequestOptions,\n  ): Promise<CatalogRequestOptions> {\n    return this.#auth.getPluginRequestToken({\n      onBehalfOf: options.credentials,\n      targetPluginId: 'catalog',\n    });\n  }\n}\n\n/**\n * The catalogService provides the catalog API.\n *\n * @public\n */\nexport const catalogServiceRef = createServiceRef<CatalogService>({\n  id: 'catalog-client',\n  defaultFactory: async service =>\n    createServiceFactory({\n      service,\n      deps: {\n        auth: coreServices.auth,\n        discoveryApi: coreServices.discovery,\n      },\n      async factory({ auth, discoveryApi }) {\n        return new DefaultCatalogService({\n          auth,\n          catalogApi: new CatalogClient({ discoveryApi }),\n        });\n      },\n    }),\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices","CatalogClient"],"mappings":"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"}