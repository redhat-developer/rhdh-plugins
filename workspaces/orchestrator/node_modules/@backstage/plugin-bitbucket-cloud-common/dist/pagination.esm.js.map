{"version":3,"file":"pagination.esm.js","sources":["../src/pagination.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Models } from './models';\n\n/** @public */\nexport type PaginationOptions = {\n  page?: number;\n  pagelen?: number;\n};\n\n/** @public */\nexport class WithPagination<\n  TPage extends Models.Paginated<TResultItem>,\n  TResultItem,\n> {\n  constructor(\n    private readonly createUrl: (options: PaginationOptions) => URL,\n    private readonly fetch: (url: URL) => Promise<TPage>,\n  ) {}\n\n  getPage(options?: PaginationOptions): Promise<TPage> {\n    const opts = { page: 1, pagelen: 100, ...options };\n    const url = this.createUrl(opts);\n    return this.fetch(url);\n  }\n\n  async *iteratePages(\n    options?: PaginationOptions,\n  ): AsyncGenerator<TPage, void> {\n    const opts = { page: 1, pagelen: 100, ...options };\n    let url: URL | undefined = this.createUrl(opts);\n    let res;\n    do {\n      res = await this.fetch(url);\n      url = res.next ? new URL(res.next) : undefined;\n      yield res;\n    } while (url);\n  }\n\n  async *iterateResults(options?: PaginationOptions) {\n    const opts = { page: 1, pagelen: 100, ...options };\n    let url: URL | undefined = this.createUrl(opts);\n    let res;\n    do {\n      res = await this.fetch(url);\n      url = res.next ? new URL(res.next) : undefined;\n      for (const item of res.values ?? []) {\n        yield item;\n      }\n    } while (url);\n  }\n}\n"],"names":[],"mappings":"AAyBO,MAAM,cAAA,CAGX;AAAA,EACA,WAAA,CACmB,WACA,KAAA,EACjB;AAFiB,IAAA,IAAA,CAAA,SAAA,GAAA,SAAA;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAAA,EAChB;AAAA,EAEH,QAAQ,OAAA,EAA6C;AACnD,IAAA,MAAM,OAAO,EAAE,IAAA,EAAM,GAAG,OAAA,EAAS,GAAA,EAAK,GAAG,OAAA,EAAQ;AACjD,IAAA,MAAM,GAAA,GAAM,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA;AAC/B,IAAA,OAAO,IAAA,CAAK,MAAM,GAAG,CAAA;AAAA,EACvB;AAAA,EAEA,OAAO,aACL,OAAA,EAC6B;AAC7B,IAAA,MAAM,OAAO,EAAE,IAAA,EAAM,GAAG,OAAA,EAAS,GAAA,EAAK,GAAG,OAAA,EAAQ;AACjD,IAAA,IAAI,GAAA,GAAuB,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA;AAC9C,IAAA,IAAI,GAAA;AACJ,IAAA,GAAG;AACD,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,KAAA,CAAM,GAAG,CAAA;AAC1B,MAAA,GAAA,GAAM,IAAI,IAAA,GAAO,IAAI,GAAA,CAAI,GAAA,CAAI,IAAI,CAAA,GAAI,MAAA;AACrC,MAAA,MAAM,GAAA;AAAA,IACR,CAAA,QAAS,GAAA;AAAA,EACX;AAAA,EAEA,OAAO,eAAe,OAAA,EAA6B;AACjD,IAAA,MAAM,OAAO,EAAE,IAAA,EAAM,GAAG,OAAA,EAAS,GAAA,EAAK,GAAG,OAAA,EAAQ;AACjD,IAAA,IAAI,GAAA,GAAuB,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA;AAC9C,IAAA,IAAI,GAAA;AACJ,IAAA,GAAG;AACD,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,KAAA,CAAM,GAAG,CAAA;AAC1B,MAAA,GAAA,GAAM,IAAI,IAAA,GAAO,IAAI,GAAA,CAAI,GAAA,CAAI,IAAI,CAAA,GAAI,MAAA;AACrC,MAAA,KAAA,MAAW,IAAA,IAAQ,GAAA,CAAI,MAAA,IAAU,EAAC,EAAG;AACnC,QAAA,MAAM,IAAA;AAAA,MACR;AAAA,IACF,CAAA,QAAS,GAAA;AAAA,EACX;AACF;;;;"}