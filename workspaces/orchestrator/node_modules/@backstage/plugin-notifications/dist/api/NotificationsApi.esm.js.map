{"version":3,"file":"NotificationsApi.esm.js","sources":["../../src/api/NotificationsApi.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport {\n  Notification,\n  NotificationSettings,\n  NotificationSeverity,\n  NotificationStatus,\n} from '@backstage/plugin-notifications-common';\n\n/** @public */\nexport const notificationsApiRef = createApiRef<NotificationsApi>({\n  id: 'plugin.notifications.service',\n});\n\n/** @public */\nexport type GetNotificationsCommonOptions = {\n  search?: string;\n  read?: boolean;\n  saved?: boolean;\n  createdAfter?: Date;\n  minimumSeverity?: NotificationSeverity;\n};\n\n/** @public */\nexport type GetNotificationsOptions = GetNotificationsCommonOptions & {\n  offset?: number;\n  limit?: number;\n  sort?: 'created' | 'topic' | 'origin';\n  sortOrder?: 'asc' | 'desc';\n  topic?: string;\n};\n\n/** @public */\nexport type GetTopicsOptions = GetNotificationsCommonOptions;\n\n/** @public */\nexport type UpdateNotificationsOptions = {\n  ids: string[];\n  read?: boolean;\n  saved?: boolean;\n};\n\n/** @public */\nexport type GetNotificationsResponse = {\n  notifications: Notification[];\n  totalCount: number;\n};\n\n/** @public */\nexport type GetTopicsResponse = {\n  topics: string[];\n};\n\n/** @public */\nexport interface NotificationsApi {\n  getNotifications(\n    options?: GetNotificationsOptions,\n  ): Promise<GetNotificationsResponse>;\n\n  getNotification(id: string): Promise<Notification>;\n\n  getStatus(): Promise<NotificationStatus>;\n\n  updateNotifications(\n    options: UpdateNotificationsOptions,\n  ): Promise<Notification[]>;\n\n  getNotificationSettings(): Promise<NotificationSettings>;\n\n  updateNotificationSettings(\n    settings: NotificationSettings,\n  ): Promise<NotificationSettings>;\n\n  getTopics(options?: GetTopicsOptions): Promise<GetTopicsResponse>;\n}\n"],"names":[],"mappings":";;AAwBO,MAAM,sBAAsB,YAAA,CAA+B;AAAA,EAChE,EAAA,EAAI;AACN,CAAC;;;;"}