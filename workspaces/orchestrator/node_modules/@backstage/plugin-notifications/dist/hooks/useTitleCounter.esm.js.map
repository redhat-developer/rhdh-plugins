{"version":3,"file":"useTitleCounter.esm.js","sources":["../../src/hooks/useTitleCounter.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useEffect, useState } from 'react';\nimport throttle from 'lodash/throttle';\n\nconst getPrefix = (value: number) => (value === 0 ? '' : `(${value}) `);\n\nconst cleanTitle = (currentTitle: string) =>\n  currentTitle.replace(/^\\(\\d+\\)\\s/, '');\n\nconst throttledSetTitle = throttle((shownTitle: string) => {\n  document.title = shownTitle;\n}, 100);\n\n/** @internal */\nexport function useTitleCounter() {\n  const [title, setTitle] = useState(document.title);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    const baseTitle = cleanTitle(title);\n    const shownTitle = `${getPrefix(count)}${baseTitle}`;\n    if (document.title !== shownTitle) {\n      throttledSetTitle(shownTitle);\n    }\n    return () => {\n      document.title = cleanTitle(title);\n    };\n  }, [count, title]);\n\n  useEffect(() => {\n    const titleElement = document.querySelector('title');\n    let observer: MutationObserver | undefined;\n    if (titleElement) {\n      observer = new MutationObserver(mutations => {\n        if (mutations?.[0]?.target?.textContent) {\n          setTitle(mutations[0].target.textContent);\n        }\n      });\n      observer.observe(titleElement, {\n        characterData: true,\n        childList: true,\n      });\n    }\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  }, []);\n\n  const setNotificationCount = useCallback(\n    (newCount: number) => setCount(newCount),\n    [],\n  );\n\n  return { setNotificationCount };\n}\n"],"names":[],"mappings":";;;AAkBA,MAAM,YAAY,CAAC,KAAA,KAAmB,UAAU,CAAA,GAAI,EAAA,GAAK,IAAI,KAAK,CAAA,EAAA,CAAA;AAElE,MAAM,aAAa,CAAC,YAAA,KAClB,YAAA,CAAa,OAAA,CAAQ,cAAc,EAAE,CAAA;AAEvC,MAAM,iBAAA,GAAoB,QAAA,CAAS,CAAC,UAAA,KAAuB;AACzD,EAAA,QAAA,CAAS,KAAA,GAAQ,UAAA;AACnB,CAAA,EAAG,GAAG,CAAA;AAGC,SAAS,eAAA,GAAkB;AAChC,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,QAAA,CAAS,SAAS,KAAK,CAAA;AACjD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,SAAS,CAAC,CAAA;AAEpC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,SAAA,GAAY,WAAW,KAAK,CAAA;AAClC,IAAA,MAAM,aAAa,CAAA,EAAG,SAAA,CAAU,KAAK,CAAC,GAAG,SAAS,CAAA,CAAA;AAClD,IAAA,IAAI,QAAA,CAAS,UAAU,UAAA,EAAY;AACjC,MAAA,iBAAA,CAAkB,UAAU,CAAA;AAAA,IAC9B;AACA,IAAA,OAAO,MAAM;AACX,MAAA,QAAA,CAAS,KAAA,GAAQ,WAAW,KAAK,CAAA;AAAA,IACnC,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,KAAA,EAAO,KAAK,CAAC,CAAA;AAEjB,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,YAAA,GAAe,QAAA,CAAS,aAAA,CAAc,OAAO,CAAA;AACnD,IAAA,IAAI,QAAA;AACJ,IAAA,IAAI,YAAA,EAAc;AAChB,MAAA,QAAA,GAAW,IAAI,iBAAiB,CAAA,SAAA,KAAa;AAC3C,QAAA,IAAI,SAAA,GAAY,CAAC,CAAA,EAAG,MAAA,EAAQ,WAAA,EAAa;AACvC,UAAA,QAAA,CAAS,SAAA,CAAU,CAAC,CAAA,CAAE,MAAA,CAAO,WAAW,CAAA;AAAA,QAC1C;AAAA,MACF,CAAC,CAAA;AACD,MAAA,QAAA,CAAS,QAAQ,YAAA,EAAc;AAAA,QAC7B,aAAA,EAAe,IAAA;AAAA,QACf,SAAA,EAAW;AAAA,OACZ,CAAA;AAAA,IACH;AACA,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,QAAA,EAAU;AACZ,QAAA,QAAA,CAAS,UAAA,EAAW;AAAA,MACtB;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,MAAM,oBAAA,GAAuB,WAAA;AAAA,IAC3B,CAAC,QAAA,KAAqB,QAAA,CAAS,QAAQ,CAAA;AAAA,IACvC;AAAC,GACH;AAEA,EAAA,OAAO,EAAE,oBAAA,EAAqB;AAChC;;;;"}