import { jsxs, jsx } from 'react/jsx-runtime';
import { isNotificationsEnabledFor } from '@backstage/plugin-notifications-common';
import TableRow from '@material-ui/core/TableRow';
import Tooltip from '@material-ui/core/Tooltip';
import Switch from '@material-ui/core/Switch';
import { withStyles } from '@material-ui/core/styles';
import { NoBorderTableCell } from './NoBorderTableCell.esm.js';
import { useNotificationFormat } from './UserNotificationSettingsCard.esm.js';

const TopicTableRow = withStyles({
  root: {
    paddingLeft: "4px"
  }
})(TableRow);
const TopicRow = (props) => {
  const { topic, origin, settings, handleChange } = props;
  const { formatOriginName, formatTopicName } = useNotificationFormat();
  return /* @__PURE__ */ jsxs(TopicTableRow, { children: [
    /* @__PURE__ */ jsx(NoBorderTableCell, {}),
    /* @__PURE__ */ jsx(NoBorderTableCell, {}),
    /* @__PURE__ */ jsx(NoBorderTableCell, { children: formatTopicName(topic.id) }),
    settings.channels.map((ch) => /* @__PURE__ */ jsx(NoBorderTableCell, { align: "center", children: /* @__PURE__ */ jsx(
      Tooltip,
      {
        title: `Enable or disable ${ch.id.toLocaleLowerCase(
          "en-US"
        )} notifications for the ${formatTopicName(
          topic.id
        )} topic from ${formatOriginName(origin.id)}`,
        children: /* @__PURE__ */ jsx(
          Switch,
          {
            checked: isNotificationsEnabledFor(
              settings,
              ch.id,
              origin.id,
              topic.id
            ),
            onChange: (event) => {
              handleChange(ch.id, origin.id, topic.id, event.target.checked);
            }
          }
        )
      }
    ) }, `${ch.id}-${topic}`))
  ] });
};

export { TopicRow };
//# sourceMappingURL=TopicRow.esm.js.map
