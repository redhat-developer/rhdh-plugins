{"version":3,"file":"TopicRow.esm.js","sources":["../../../src/components/UserNotificationSettingsCard/TopicRow.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isNotificationsEnabledFor,\n  NotificationSettings,\n  OriginSetting,\n  TopicSetting,\n} from '@backstage/plugin-notifications-common';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { NoBorderTableCell } from './NoBorderTableCell';\nimport { useNotificationFormat } from './UserNotificationSettingsCard';\n\nconst TopicTableRow = withStyles({\n  root: {\n    paddingLeft: '4px',\n  },\n})(TableRow);\n\nexport const TopicRow = (props: {\n  topic: TopicSetting;\n  origin: OriginSetting;\n  settings: NotificationSettings;\n  handleChange: (\n    channel: string,\n    origin: string,\n    topic: string | null,\n    enabled: boolean,\n  ) => void;\n}) => {\n  const { topic, origin, settings, handleChange } = props;\n  const { formatOriginName, formatTopicName } = useNotificationFormat();\n  return (\n    <TopicTableRow>\n      <NoBorderTableCell />\n      <NoBorderTableCell />\n      <NoBorderTableCell>{formatTopicName(topic.id)}</NoBorderTableCell>\n      {settings.channels.map(ch => (\n        <NoBorderTableCell key={`${ch.id}-${topic}`} align=\"center\">\n          <Tooltip\n            title={`Enable or disable ${ch.id.toLocaleLowerCase(\n              'en-US',\n            )} notifications for the ${formatTopicName(\n              topic.id,\n            )} topic from ${formatOriginName(origin.id)}`}\n          >\n            <Switch\n              checked={isNotificationsEnabledFor(\n                settings,\n                ch.id,\n                origin.id,\n                topic.id,\n              )}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                handleChange(ch.id, origin.id, topic.id, event.target.checked);\n              }}\n            />\n          </Tooltip>\n        </NoBorderTableCell>\n      ))}\n    </TopicTableRow>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AA6BA,MAAM,gBAAgB,UAAA,CAAW;AAAA,EAC/B,IAAA,EAAM;AAAA,IACJ,WAAA,EAAa;AAAA;AAEjB,CAAC,EAAE,QAAQ,CAAA;AAEJ,MAAM,QAAA,GAAW,CAAC,KAAA,KAUnB;AACJ,EAAA,MAAM,EAAE,KAAA,EAAO,MAAA,EAAQ,QAAA,EAAU,cAAa,GAAI,KAAA;AAClD,EAAA,MAAM,EAAE,gBAAA,EAAkB,eAAA,EAAgB,GAAI,qBAAA,EAAsB;AACpE,EAAA,4BACG,aAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,iBAAA,EAAA,EAAkB,CAAA;AAAA,wBAClB,iBAAA,EAAA,EAAkB,CAAA;AAAA,oBACnB,GAAA,CAAC,iBAAA,EAAA,EAAmB,QAAA,EAAA,eAAA,CAAgB,KAAA,CAAM,EAAE,CAAA,EAAE,CAAA;AAAA,IAC7C,SAAS,QAAA,CAAS,GAAA,CAAI,wBACrB,GAAA,CAAC,iBAAA,EAAA,EAA4C,OAAM,QAAA,EACjD,QAAA,kBAAA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,KAAA,EAAO,CAAA,kBAAA,EAAqB,EAAA,CAAG,EAAA,CAAG,iBAAA;AAAA,UAChC;AAAA,SACD,CAAA,uBAAA,EAA0B,eAAA;AAAA,UACzB,KAAA,CAAM;AAAA,SACP,CAAA,YAAA,EAAe,gBAAA,CAAiB,MAAA,CAAO,EAAE,CAAC,CAAA,CAAA;AAAA,QAE3C,QAAA,kBAAA,GAAA;AAAA,UAAC,MAAA;AAAA,UAAA;AAAA,YACC,OAAA,EAAS,yBAAA;AAAA,cACP,QAAA;AAAA,cACA,EAAA,CAAG,EAAA;AAAA,cACH,MAAA,CAAO,EAAA;AAAA,cACP,KAAA,CAAM;AAAA,aACR;AAAA,YACA,QAAA,EAAU,CAAC,KAAA,KAA+C;AACxD,cAAA,YAAA,CAAa,EAAA,CAAG,IAAI,MAAA,CAAO,EAAA,EAAI,MAAM,EAAA,EAAI,KAAA,CAAM,OAAO,OAAO,CAAA;AAAA,YAC/D;AAAA;AAAA;AACF;AAAA,SAlBoB,CAAA,EAAG,EAAA,CAAG,EAAE,CAAA,CAAA,EAAI,KAAK,EAoBzC,CACD;AAAA,GAAA,EACH,CAAA;AAEJ;;;;"}