import { jsxs, jsx } from 'react/jsx-runtime';
import Grid from '@material-ui/core/Grid';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import MarkAsUnreadIcon from '@material-ui/icons/Markunread';
import MarkAsReadIcon from '@material-ui/icons/CheckCircle';
import MarkAsUnsavedIcon from '@material-ui/icons/LabelOff';
import MarkAsSavedIcon from '@material-ui/icons/Label';
import MarkAllReadIcon from '@material-ui/icons/DoneAll';

const BulkActions = ({
  selectedNotifications,
  notifications,
  isUnread,
  onSwitchReadStatus,
  onSwitchSavedStatus,
  onMarkAllRead
}) => {
  const isDisabled = selectedNotifications.size === 0;
  const bulkNotifications = notifications.filter(
    (notification) => selectedNotifications.has(notification.id)
  );
  const isOneRead = !!bulkNotifications.find(
    (notification) => !!notification.read
  );
  const isOneSaved = !!bulkNotifications.find(
    (notification) => !!notification.saved
  );
  const markAsReadText = isOneRead ? "Return selected among unread" : "Mark selected as read";
  const IconComponent = isOneRead ? MarkAsUnreadIcon : MarkAsReadIcon;
  const markAsSavedText = isOneSaved ? "Undo save for selected" : "Save selected for later";
  const SavedIconComponent = isOneSaved ? MarkAsUnsavedIcon : MarkAsSavedIcon;
  return /* @__PURE__ */ jsxs(Grid, { container: true, wrap: "nowrap", children: [
    /* @__PURE__ */ jsx(Grid, { item: true, xs: 3, children: onMarkAllRead ? /* @__PURE__ */ jsx(Tooltip, { title: "Mark all read", children: /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx(IconButton, { disabled: !isUnread, onClick: onMarkAllRead, children: /* @__PURE__ */ jsx(MarkAllReadIcon, { "aria-label": markAsSavedText }) }) }) }) : /* @__PURE__ */ jsx("div", {}) }),
    /* @__PURE__ */ jsx(Grid, { item: true, xs: 3, children: /* @__PURE__ */ jsx(Tooltip, { title: markAsSavedText, children: /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx(
      IconButton,
      {
        disabled: isDisabled,
        onClick: () => {
          onSwitchSavedStatus([...selectedNotifications], !isOneSaved);
        },
        children: /* @__PURE__ */ jsx(SavedIconComponent, { "aria-label": markAsSavedText })
      }
    ) }) }) }),
    /* @__PURE__ */ jsx(Grid, { item: true, xs: 3, children: /* @__PURE__ */ jsx(Tooltip, { title: markAsReadText, children: /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx(
      IconButton,
      {
        disabled: isDisabled,
        onClick: () => {
          onSwitchReadStatus([...selectedNotifications], !isOneRead);
        },
        children: /* @__PURE__ */ jsx(IconComponent, { "aria-label": markAsReadText })
      }
    ) }) }) })
  ] });
};

export { BulkActions };
//# sourceMappingURL=BulkActions.esm.js.map
