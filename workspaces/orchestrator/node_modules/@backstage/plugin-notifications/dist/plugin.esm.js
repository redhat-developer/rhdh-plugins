import { createPlugin, createApiFactory, fetchApiRef, discoveryApiRef, createRoutableExtension } from '@backstage/core-plugin-api';
import { rootRouteRef } from './routes.esm.js';
import { notificationsApiRef } from './api/NotificationsApi.esm.js';
import { NotificationsClient } from './api/NotificationsClient.esm.js';

const notificationsPlugin = createPlugin({
  id: "notifications",
  routes: {
    root: rootRouteRef
  },
  apis: [
    createApiFactory({
      api: notificationsApiRef,
      deps: { discoveryApi: discoveryApiRef, fetchApi: fetchApiRef },
      factory: ({ discoveryApi, fetchApi }) => new NotificationsClient({ discoveryApi, fetchApi })
    })
  ]
});
const NotificationsPage = notificationsPlugin.provide(
  createRoutableExtension({
    name: "NotificationsPage",
    component: () => import('./components/NotificationsPage/index.esm.js').then((m) => m.NotificationsPage),
    mountPoint: rootRouteRef
  })
);

export { NotificationsPage, notificationsPlugin };
//# sourceMappingURL=plugin.esm.js.map
