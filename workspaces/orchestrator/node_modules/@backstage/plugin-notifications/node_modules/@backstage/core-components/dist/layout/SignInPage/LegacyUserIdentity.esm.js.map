{"version":3,"file":"LegacyUserIdentity.esm.js","sources":["../../../src/layout/SignInPage/LegacyUserIdentity.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IdentityApi,\n  ProfileInfo,\n  BackstageUserIdentity,\n} from '@backstage/core-plugin-api';\n\nfunction parseJwtPayload(token: string) {\n  const [_header, payload, _signature] = token.split('.');\n  return JSON.parse(window.atob(payload));\n}\n\ntype LegacySignInResult = {\n  userId: string;\n  profile: ProfileInfo;\n  getIdToken?: () => Promise<string>;\n  signOut?: () => Promise<void>;\n};\n\n/** @internal */\nexport class LegacyUserIdentity implements IdentityApi {\n  private constructor(private readonly result: LegacySignInResult) {}\n\n  getUserId(): string {\n    return this.result.userId;\n  }\n\n  static fromResult(result: LegacySignInResult): LegacyUserIdentity {\n    return new LegacyUserIdentity(result);\n  }\n\n  async getIdToken(): Promise<string | undefined> {\n    return this.result.getIdToken?.();\n  }\n\n  getProfile(): ProfileInfo {\n    return this.result.profile;\n  }\n\n  async getProfileInfo(): Promise<ProfileInfo> {\n    return this.result.profile;\n  }\n\n  async getBackstageIdentity(): Promise<BackstageUserIdentity> {\n    const token = await this.getIdToken();\n\n    if (!token) {\n      const userEntityRef = `user:default/${this.getUserId()}`;\n      return {\n        type: 'user',\n        userEntityRef,\n        ownershipEntityRefs: [userEntityRef],\n      };\n    }\n\n    const { sub, ent } = parseJwtPayload(token);\n    return {\n      type: 'user',\n      userEntityRef: sub,\n      ownershipEntityRefs: ent ?? [],\n    };\n  }\n\n  async getCredentials(): Promise<{ token?: string | undefined }> {\n    const token = await this.result.getIdToken?.();\n    return { token };\n  }\n\n  async signOut(): Promise<void> {\n    return this.result.signOut?.();\n  }\n}\n"],"names":[],"mappings":"AAsBA,SAAS,gBAAgB,KAAA,EAAe;AACtC,EAAA,MAAM,CAAC,OAAA,EAAS,OAAA,EAAS,UAAU,CAAA,GAAI,KAAA,CAAM,MAAM,GAAG,CAAA;AACtD,EAAA,OAAO,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,IAAA,CAAK,OAAO,CAAC,CAAA;AACxC;AAUO,MAAM,kBAAA,CAA0C;AAAA,EAC7C,YAA6B,MAAA,EAA4B;AAA5B,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAAA,EAA6B;AAAA,EAElE,SAAA,GAAoB;AAClB,IAAA,OAAO,KAAK,MAAA,CAAO,MAAA;AAAA,EACrB;AAAA,EAEA,OAAO,WAAW,MAAA,EAAgD;AAChE,IAAA,OAAO,IAAI,mBAAmB,MAAM,CAAA;AAAA,EACtC;AAAA,EAEA,MAAM,UAAA,GAA0C;AAC9C,IAAA,OAAO,IAAA,CAAK,OAAO,UAAA,IAAa;AAAA,EAClC;AAAA,EAEA,UAAA,GAA0B;AACxB,IAAA,OAAO,KAAK,MAAA,CAAO,OAAA;AAAA,EACrB;AAAA,EAEA,MAAM,cAAA,GAAuC;AAC3C,IAAA,OAAO,KAAK,MAAA,CAAO,OAAA;AAAA,EACrB;AAAA,EAEA,MAAM,oBAAA,GAAuD;AAC3D,IAAA,MAAM,KAAA,GAAQ,MAAM,IAAA,CAAK,UAAA,EAAW;AAEpC,IAAA,IAAI,CAAC,KAAA,EAAO;AACV,MAAA,MAAM,aAAA,GAAgB,CAAA,aAAA,EAAgB,IAAA,CAAK,SAAA,EAAW,CAAA,CAAA;AACtD,MAAA,OAAO;AAAA,QACL,IAAA,EAAM,MAAA;AAAA,QACN,aAAA;AAAA,QACA,mBAAA,EAAqB,CAAC,aAAa;AAAA,OACrC;AAAA,IACF;AAEA,IAAA,MAAM,EAAE,GAAA,EAAK,GAAA,EAAI,GAAI,gBAAgB,KAAK,CAAA;AAC1C,IAAA,OAAO;AAAA,MACL,IAAA,EAAM,MAAA;AAAA,MACN,aAAA,EAAe,GAAA;AAAA,MACf,mBAAA,EAAqB,OAAO;AAAC,KAC/B;AAAA,EACF;AAAA,EAEA,MAAM,cAAA,GAA0D;AAC9D,IAAA,MAAM,KAAA,GAAQ,MAAM,IAAA,CAAK,MAAA,CAAO,UAAA,IAAa;AAC7C,IAAA,OAAO,EAAE,KAAA,EAAM;AAAA,EACjB;AAAA,EAEA,MAAM,OAAA,GAAyB;AAC7B,IAAA,OAAO,IAAA,CAAK,OAAO,OAAA,IAAU;AAAA,EAC/B;AACF;;;;"}