import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import IconButton from '@material-ui/core/IconButton';
import TextField from '@material-ui/core/TextField';
import Typography from '@material-ui/core/Typography';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import ChevronRight from '@material-ui/icons/ChevronRight';
import FilterList from '@material-ui/icons/FilterList';

function LogViewerControls(props) {
  const { resultCount, resultIndexStep, toggleShouldFilter } = props;
  const resultIndex = props.resultIndex ?? 0;
  const handleKeyPress = (event) => {
    if (event.key === "Enter") {
      if (event.metaKey || event.ctrlKey || event.altKey) {
        toggleShouldFilter();
      } else {
        resultIndexStep(event.shiftKey);
      }
    }
  };
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    resultCount !== void 0 && /* @__PURE__ */ jsxs(Fragment, { children: [
      /* @__PURE__ */ jsx(IconButton, { size: "small", onClick: () => resultIndexStep(true), children: /* @__PURE__ */ jsx(ChevronLeftIcon, {}) }),
      /* @__PURE__ */ jsxs(Typography, { children: [
        Math.min(resultIndex + 1, resultCount),
        "/",
        resultCount
      ] }),
      /* @__PURE__ */ jsx(IconButton, { size: "small", onClick: () => resultIndexStep(), children: /* @__PURE__ */ jsx(ChevronRight, {}) })
    ] }),
    /* @__PURE__ */ jsx(
      TextField,
      {
        size: "small",
        variant: "standard",
        placeholder: "Search",
        value: props.searchInput,
        onKeyPress: handleKeyPress,
        onChange: (e) => props.setSearchInput(e.target.value)
      }
    ),
    /* @__PURE__ */ jsx(IconButton, { size: "small", onClick: toggleShouldFilter, children: props.shouldFilter ? /* @__PURE__ */ jsx(FilterList, { color: "primary" }) : /* @__PURE__ */ jsx(FilterList, { color: "disabled" }) })
  ] });
}

export { LogViewerControls };
//# sourceMappingURL=LogViewerControls.esm.js.map
