{"version":3,"file":"manifest.cjs.js","sources":["../src/manifest.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VERSIONS_BASE_URL = 'https://versions.backstage.io';\nconst GITHUB_RAW_BASE_URL =\n  'https://raw.githubusercontent.com/backstage/versions/main';\n\n/**\n * Contains mapping between Backstage release and package versions.\n * @public\n */\nexport type ReleaseManifest = {\n  releaseVersion: string;\n  packages: { name: string; version: string }[];\n};\n\n/**\n * Options for {@link getManifestByVersion}.\n * @public\n */\nexport type GetManifestByVersionOptions = {\n  version: string;\n  fetch?: (\n    url: string,\n    options?: { signal?: AbortSignal },\n  ) => Promise<Pick<Response, 'status' | 'json' | 'url'>>;\n  gitHubRawBaseUrl?: string;\n  versionsBaseUrl?: string;\n};\n\n// Wait for waitMs, or until signal is aborted.\nfunction wait(waitMs: number, signal: AbortSignal) {\n  return new Promise<void>((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      if (!signal.aborted) {\n        resolve();\n      }\n    }, waitMs);\n    signal.addEventListener('abort', () => {\n      clearTimeout(timeout);\n      reject(new Error('Aborted'));\n    });\n  });\n}\n\n// Run fn1 and then fn2 after fallbackDelayMs. Whichever one finishes\n// first wins, and the other one is aborted through the provided signal.\nexport async function withFallback<T>(\n  fn1: (signal: AbortSignal) => Promise<T>,\n  fn2: (signal: AbortSignal) => Promise<T>,\n  fallbackDelayMs: number,\n): Promise<T> {\n  const c1 = new AbortController();\n  const c2 = new AbortController();\n\n  const promise1 = fn1(c1.signal).then(res => {\n    c2.abort();\n    return res;\n  });\n  const promise2 = wait(fallbackDelayMs, c2.signal)\n    .then(() => fn2(c2.signal))\n    .then(res => {\n      c1.abort();\n      return res;\n    });\n\n  return Promise.any([promise1, promise2]).catch(() => promise1);\n}\n\n/**\n * Returns a release manifest based on supplied version.\n * @public\n */\nexport async function getManifestByVersion(\n  options: GetManifestByVersionOptions,\n): Promise<ReleaseManifest> {\n  const versionEnc = encodeURIComponent(options.version);\n\n  const fetchFn = options.fetch ?? fetch;\n  const versionsHost = options.versionsBaseUrl ?? VERSIONS_BASE_URL;\n  const gitHubRawBaseUrl = options.gitHubRawBaseUrl ?? GITHUB_RAW_BASE_URL;\n\n  const res = await withFallback(\n    signal =>\n      fetchFn(`${versionsHost}/v1/releases/${versionEnc}/manifest.json`, {\n        signal,\n      }),\n    signal =>\n      fetchFn(`${gitHubRawBaseUrl}/v1/releases/${versionEnc}/manifest.json`, {\n        signal,\n      }),\n    500,\n  );\n  if (res.status === 404) {\n    throw new Error(`No release found for ${options.version} version`);\n  }\n  if (res.status !== 200) {\n    throw new Error(\n      `Unexpected response status ${res.status} when fetching release from ${res.url}.`,\n    );\n  }\n  return res.json();\n}\n\n/**\n * Options for {@link getManifestByReleaseLine}.\n * @public\n */\nexport type GetManifestByReleaseLineOptions = {\n  releaseLine: string;\n  fetch?: (\n    url: string,\n    options?: { signal?: AbortSignal },\n  ) => Promise<Pick<Response, 'ok' | 'status' | 'text' | 'json' | 'url'>>;\n  gitHubRawBaseUrl?: string;\n  versionsBaseUrl?: string;\n};\n\n/**\n * Returns a release manifest based on supplied release line.\n * @public\n */\nexport async function getManifestByReleaseLine(\n  options: GetManifestByReleaseLineOptions,\n): Promise<ReleaseManifest> {\n  const releaseEnc = encodeURIComponent(options.releaseLine);\n\n  const fetchFn = options.fetch ?? fetch;\n  const versionsHost = options.versionsBaseUrl ?? VERSIONS_BASE_URL;\n  const gitHubRawBaseUrl = options.gitHubRawBaseUrl ?? GITHUB_RAW_BASE_URL;\n\n  const res = await withFallback(\n    signal =>\n      fetchFn(`${versionsHost}/v1/tags/${releaseEnc}/manifest.json`, {\n        signal,\n      }),\n    async signal => {\n      // The release tags are symlinks, which we need to follow manually when fetching from GitHub.\n      const baseUrl = `${gitHubRawBaseUrl}/v1/tags/${releaseEnc}`;\n      const linkRes = await fetchFn(baseUrl, { signal });\n      if (!linkRes.ok) {\n        return linkRes;\n      }\n      const link = (await linkRes.text()).trim();\n      return fetchFn(new URL(`${link}/manifest.json`, baseUrl).toString(), {\n        signal,\n      });\n    },\n    1000,\n  );\n  if (res.status === 404) {\n    throw new Error(`No '${options.releaseLine}' release line found`);\n  }\n  if (res.status !== 200) {\n    throw new Error(\n      `Unexpected response status ${res.status} when fetching release from ${res.url}.`,\n    );\n  }\n  return res.json();\n}\n"],"names":[],"mappings":";;AAgBA,MAAM,iBAAoB,GAAA,+BAAA;AAC1B,MAAM,mBACJ,GAAA,2DAAA;AA0BF,SAAS,IAAA,CAAK,QAAgB,MAAqB,EAAA;AACjD,EAAA,OAAO,IAAI,OAAA,CAAc,CAAC,OAAA,EAAS,MAAW,KAAA;AAC5C,IAAM,MAAA,OAAA,GAAU,WAAW,MAAM;AAC/B,MAAI,IAAA,CAAC,OAAO,OAAS,EAAA;AACnB,QAAQ,OAAA,EAAA;AAAA;AACV,OACC,MAAM,CAAA;AACT,IAAO,MAAA,CAAA,gBAAA,CAAiB,SAAS,MAAM;AACrC,MAAA,YAAA,CAAa,OAAO,CAAA;AACpB,MAAO,MAAA,CAAA,IAAI,KAAM,CAAA,SAAS,CAAC,CAAA;AAAA,KAC5B,CAAA;AAAA,GACF,CAAA;AACH;AAIsB,eAAA,YAAA,CACpB,GACA,EAAA,GAAA,EACA,eACY,EAAA;AACZ,EAAM,MAAA,EAAA,GAAK,IAAI,eAAgB,EAAA;AAC/B,EAAM,MAAA,EAAA,GAAK,IAAI,eAAgB,EAAA;AAE/B,EAAA,MAAM,WAAW,GAAI,CAAA,EAAA,CAAG,MAAM,CAAA,CAAE,KAAK,CAAO,GAAA,KAAA;AAC1C,IAAA,EAAA,CAAG,KAAM,EAAA;AACT,IAAO,OAAA,GAAA;AAAA,GACR,CAAA;AACD,EAAA,MAAM,QAAW,GAAA,IAAA,CAAK,eAAiB,EAAA,EAAA,CAAG,MAAM,CAC7C,CAAA,IAAA,CAAK,MAAM,GAAA,CAAI,EAAG,CAAA,MAAM,CAAC,CAAA,CACzB,KAAK,CAAO,GAAA,KAAA;AACX,IAAA,EAAA,CAAG,KAAM,EAAA;AACT,IAAO,OAAA,GAAA;AAAA,GACR,CAAA;AAEH,EAAO,OAAA,OAAA,CAAQ,IAAI,CAAC,QAAA,EAAU,QAAQ,CAAC,CAAA,CAAE,KAAM,CAAA,MAAM,QAAQ,CAAA;AAC/D;AAMA,eAAsB,qBACpB,OAC0B,EAAA;AAC1B,EAAM,MAAA,UAAA,GAAa,kBAAmB,CAAA,OAAA,CAAQ,OAAO,CAAA;AAErD,EAAM,MAAA,OAAA,GAAU,QAAQ,KAAS,IAAA,KAAA;AACjC,EAAM,MAAA,YAAA,GAAe,QAAQ,eAAmB,IAAA,iBAAA;AAChD,EAAM,MAAA,gBAAA,GAAmB,QAAQ,gBAAoB,IAAA,mBAAA;AAErD,EAAA,MAAM,MAAM,MAAM,YAAA;AAAA,IAChB,YACE,OAAQ,CAAA,CAAA,EAAG,YAAY,CAAA,aAAA,EAAgB,UAAU,CAAkB,cAAA,CAAA,EAAA;AAAA,MACjE;AAAA,KACD,CAAA;AAAA,IACH,YACE,OAAQ,CAAA,CAAA,EAAG,gBAAgB,CAAA,aAAA,EAAgB,UAAU,CAAkB,cAAA,CAAA,EAAA;AAAA,MACrE;AAAA,KACD,CAAA;AAAA,IACH;AAAA,GACF;AACA,EAAI,IAAA,GAAA,CAAI,WAAW,GAAK,EAAA;AACtB,IAAA,MAAM,IAAI,KAAA,CAAM,CAAwB,qBAAA,EAAA,OAAA,CAAQ,OAAO,CAAU,QAAA,CAAA,CAAA;AAAA;AAEnE,EAAI,IAAA,GAAA,CAAI,WAAW,GAAK,EAAA;AACtB,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAA8B,2BAAA,EAAA,GAAA,CAAI,MAAM,CAAA,4BAAA,EAA+B,IAAI,GAAG,CAAA,CAAA;AAAA,KAChF;AAAA;AAEF,EAAA,OAAO,IAAI,IAAK,EAAA;AAClB;AAoBA,eAAsB,yBACpB,OAC0B,EAAA;AAC1B,EAAM,MAAA,UAAA,GAAa,kBAAmB,CAAA,OAAA,CAAQ,WAAW,CAAA;AAEzD,EAAM,MAAA,OAAA,GAAU,QAAQ,KAAS,IAAA,KAAA;AACjC,EAAM,MAAA,YAAA,GAAe,QAAQ,eAAmB,IAAA,iBAAA;AAChD,EAAM,MAAA,gBAAA,GAAmB,QAAQ,gBAAoB,IAAA,mBAAA;AAErD,EAAA,MAAM,MAAM,MAAM,YAAA;AAAA,IAChB,YACE,OAAQ,CAAA,CAAA,EAAG,YAAY,CAAA,SAAA,EAAY,UAAU,CAAkB,cAAA,CAAA,EAAA;AAAA,MAC7D;AAAA,KACD,CAAA;AAAA,IACH,OAAM,MAAU,KAAA;AAEd,MAAA,MAAM,OAAU,GAAA,CAAA,EAAG,gBAAgB,CAAA,SAAA,EAAY,UAAU,CAAA,CAAA;AACzD,MAAA,MAAM,UAAU,MAAM,OAAA,CAAQ,OAAS,EAAA,EAAE,QAAQ,CAAA;AACjD,MAAI,IAAA,CAAC,QAAQ,EAAI,EAAA;AACf,QAAO,OAAA,OAAA;AAAA;AAET,MAAA,MAAM,IAAQ,GAAA,CAAA,MAAM,OAAQ,CAAA,IAAA,IAAQ,IAAK,EAAA;AACzC,MAAO,OAAA,OAAA,CAAQ,IAAI,GAAI,CAAA,CAAA,EAAG,IAAI,CAAkB,cAAA,CAAA,EAAA,OAAO,CAAE,CAAA,QAAA,EAAY,EAAA;AAAA,QACnE;AAAA,OACD,CAAA;AAAA,KACH;AAAA,IACA;AAAA,GACF;AACA,EAAI,IAAA,GAAA,CAAI,WAAW,GAAK,EAAA;AACtB,IAAA,MAAM,IAAI,KAAA,CAAM,CAAO,IAAA,EAAA,OAAA,CAAQ,WAAW,CAAsB,oBAAA,CAAA,CAAA;AAAA;AAElE,EAAI,IAAA,GAAA,CAAI,WAAW,GAAK,EAAA;AACtB,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAA8B,2BAAA,EAAA,GAAA,CAAI,MAAM,CAAA,4BAAA,EAA+B,IAAI,GAAG,CAAA,CAAA;AAAA,KAChF;AAAA;AAEF,EAAA,OAAO,IAAI,IAAK,EAAA;AAClB;;;;;;"}