{"version":3,"file":"DefaultProviderSettings.esm.js","sources":["../../../src/components/AuthProviders/DefaultProviderSettings.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Star from '@material-ui/icons/Star';\nimport { ProviderSettingsItem } from './ProviderSettingsItem';\nimport {\n  githubAuthApiRef,\n  gitlabAuthApiRef,\n  googleAuthApiRef,\n  oktaAuthApiRef,\n  microsoftAuthApiRef,\n  bitbucketAuthApiRef,\n  bitbucketServerAuthApiRef,\n  atlassianAuthApiRef,\n  oneloginAuthApiRef,\n  openshiftAuthApiRef,\n} from '@backstage/core-plugin-api';\nimport { userSettingsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\n\n/** @public */\nexport const DefaultProviderSettings = (props: {\n  configuredProviders: string[];\n}) => {\n  const { configuredProviders } = props;\n  const { t } = useTranslationRef(userSettingsTranslationRef);\n  return (\n    <>\n      {configuredProviders.includes('google') && (\n        <ProviderSettingsItem\n          title=\"Google\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Google',\n          })}\n          apiRef={googleAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('microsoft') && (\n        <ProviderSettingsItem\n          title=\"Microsoft\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Microsoft',\n          })}\n          apiRef={microsoftAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('github') && (\n        <ProviderSettingsItem\n          title=\"GitHub\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'GitHub',\n          })}\n          apiRef={githubAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('gitlab') && (\n        <ProviderSettingsItem\n          title=\"GitLab\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'GitLab',\n          })}\n          apiRef={gitlabAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('okta') && (\n        <ProviderSettingsItem\n          title=\"Okta\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Okta',\n          })}\n          apiRef={oktaAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('bitbucket') && (\n        <ProviderSettingsItem\n          title=\"Bitbucket\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Bitbucket',\n          })}\n          apiRef={bitbucketAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('onelogin') && (\n        <ProviderSettingsItem\n          title=\"OneLogin\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'OneLogin',\n          })}\n          apiRef={oneloginAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('atlassian') && (\n        <ProviderSettingsItem\n          title=\"Atlassian\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Atlassian',\n          })}\n          apiRef={atlassianAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('bitbucketServer') && (\n        <ProviderSettingsItem\n          title=\"Bitbucket Server\"\n          description={t('defaultProviderSettings.description', {\n            provider: 'Bitbucket Server',\n          })}\n          apiRef={bitbucketServerAuthApiRef}\n          icon={Star}\n        />\n      )}\n      {configuredProviders.includes('openshift') && (\n        <ProviderSettingsItem\n          title=\"OpenShift\"\n          description=\"Provides authentication towards OpenShift APIs and identities\"\n          apiRef={openshiftAuthApiRef}\n          icon={Star}\n        />\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}