import { jsxs, jsx } from 'react/jsx-runtime';
import ListItem from '@material-ui/core/ListItem';
import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';
import ListItemText from '@material-ui/core/ListItemText';
import Switch from '@material-ui/core/Switch';
import Tooltip from '@material-ui/core/Tooltip';
import { useSidebarPinState } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { userSettingsTranslationRef } from '../../translation.esm.js';

const UserSettingsPinToggle = () => {
  const { isPinned, toggleSidebarPinState } = useSidebarPinState();
  const { t } = useTranslationRef(userSettingsTranslationRef);
  return /* @__PURE__ */ jsxs(ListItem, { children: [
    /* @__PURE__ */ jsx(
      ListItemText,
      {
        primary: t("pinToggle.title"),
        secondary: t("pinToggle.description")
      }
    ),
    /* @__PURE__ */ jsx(ListItemSecondaryAction, { children: /* @__PURE__ */ jsx(
      Tooltip,
      {
        placement: "top",
        arrow: true,
        title: isPinned ? t("pinToggle.switchTitles.unpin") : t("pinToggle.switchTitles.pin"),
        children: /* @__PURE__ */ jsx(
          Switch,
          {
            color: "primary",
            checked: isPinned,
            onChange: () => toggleSidebarPinState(),
            name: "pin",
            inputProps: { "aria-label": t("pinToggle.ariaLabelTitle") }
          }
        )
      }
    ) })
  ] });
};

export { UserSettingsPinToggle };
//# sourceMappingURL=UserSettingsPinToggle.esm.js.map
