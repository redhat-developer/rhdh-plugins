{"version":3,"file":"UserSettingsFeatureFlags.esm.js","sources":["../../../src/components/FeatureFlags/UserSettingsFeatureFlags.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useRef, useCallback, useState } from 'react';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { EmptyFlags } from './EmptyFlags';\nimport { FlagItem } from './FeatureFlagsItem';\nimport {\n  FeatureFlag,\n  FeatureFlagsApi,\n  featureFlagsApiRef,\n  FeatureFlagState,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport { InfoCard } from '@backstage/core-components';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { userSettingsTranslationRef } from '../../translation';\n\nexport const sortFlags = (\n  flags: FeatureFlag[],\n  featureFlagsApi: FeatureFlagsApi,\n): FeatureFlag[] => {\n  const activeFlags = flags.filter(flag => featureFlagsApi.isActive(flag.name));\n  const idleFlags = flags.filter(flag => !featureFlagsApi.isActive(flag.name));\n  return [...activeFlags, ...idleFlags];\n};\n\n/** @public */\nexport const UserSettingsFeatureFlags = () => {\n  const featureFlagsApi = useApi(featureFlagsApiRef);\n  const inputRef = useRef<HTMLElement>();\n\n  const initialFeatureFlags = featureFlagsApi.getRegisteredFlags();\n  const initialFeatureFlagsSorted = sortFlags(\n    initialFeatureFlags,\n    featureFlagsApi,\n  );\n  const [featureFlags] = useState(initialFeatureFlagsSorted);\n\n  const initialFlagState = Object.fromEntries(\n    featureFlags.map(({ name }) => [name, featureFlagsApi.isActive(name)]),\n  );\n\n  const [state, setState] = useState<Record<string, boolean>>(initialFlagState);\n  const [filterInput, setFilterInput] = useState<string>('');\n  const { t } = useTranslationRef(userSettingsTranslationRef);\n\n  const toggleFlag = useCallback(\n    (flagName: string) => {\n      const newState = featureFlagsApi.isActive(flagName)\n        ? FeatureFlagState.None\n        : FeatureFlagState.Active;\n\n      featureFlagsApi.save({\n        states: { [flagName]: newState },\n        merge: true,\n      });\n\n      setState(prevState => ({\n        ...prevState,\n        [flagName]: newState === FeatureFlagState.Active,\n      }));\n    },\n    [featureFlagsApi],\n  );\n\n  if (!featureFlags.length) {\n    return <EmptyFlags />;\n  }\n\n  const clearFilterInput = () => {\n    setFilterInput('');\n    inputRef?.current?.focus();\n  };\n\n  const filteredFeatureFlags = featureFlags.filter(featureFlag => {\n    const featureFlagName = featureFlag.name.toLocaleLowerCase('en-US');\n    return featureFlagName.includes(filterInput.toLocaleLowerCase('en-US'));\n  });\n\n  const Header = () => (\n    <Grid container style={{ justifyContent: 'space-between' }}>\n      <Grid item xs={6} md={8}>\n        <Typography variant=\"h5\">{t('featureFlags.title')}</Typography>\n        <Typography variant=\"subtitle1\">\n          {t('featureFlags.description')}\n        </Typography>\n      </Grid>\n      {featureFlags.length >= 10 && (\n        <Grid item xs={6} md={4}>\n          <TextField\n            label={t('featureFlags.filterTitle')}\n            style={{ display: 'flex', justifyContent: 'flex-end' }}\n            inputRef={ref => ref && ref.focus()}\n            InputProps={{\n              ...(filterInput.length && {\n                endAdornment: (\n                  <IconButton\n                    aria-label={t('featureFlags.clearFilter')}\n                    onClick={clearFilterInput}\n                    edge=\"end\"\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                ),\n              }),\n            }}\n            onChange={e => setFilterInput(e.target.value)}\n            value={filterInput}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n\n  return (\n    <InfoCard title={<Header />}>\n      <List dense>\n        {filteredFeatureFlags.map(featureFlag => {\n          const enabled = Boolean(state[featureFlag.name]);\n\n          return (\n            <FlagItem\n              key={featureFlag.name}\n              flag={featureFlag}\n              enabled={enabled}\n              toggleHandler={toggleFlag}\n            />\n          );\n        })}\n      </List>\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}