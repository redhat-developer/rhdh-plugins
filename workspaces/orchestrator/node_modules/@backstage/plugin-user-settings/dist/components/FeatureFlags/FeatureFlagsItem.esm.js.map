{"version":3,"file":"FeatureFlagsItem.esm.js","sources":["../../../src/components/FeatureFlags/FeatureFlagsItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FeatureFlag } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { userSettingsTranslationRef } from '../../translation';\nimport { TranslationFunction } from '@backstage/core-plugin-api/alpha';\n\ntype Props = {\n  flag: FeatureFlag;\n  enabled: boolean;\n  toggleHandler: Function;\n};\n\nconst getSecondaryText = (\n  flag: FeatureFlag,\n  t: TranslationFunction<typeof userSettingsTranslationRef.T>,\n) => {\n  if (flag.description) {\n    return flag.description;\n  }\n  return flag.pluginId\n    ? t('featureFlags.flagItem.subtitle.registeredInPlugin', {\n        pluginId: flag.pluginId,\n      })\n    : t('featureFlags.flagItem.subtitle.registeredInApplication');\n};\n\nexport const FlagItem = ({ flag, enabled, toggleHandler }: Props) => {\n  const { t } = useTranslationRef(userSettingsTranslationRef);\n\n  return (\n    <ListItem divider button onClick={() => toggleHandler(flag.name)}>\n      <ListItemIcon>\n        <Tooltip\n          placement=\"top\"\n          arrow\n          title={\n            enabled\n              ? t('featureFlags.flagItem.title.disable')\n              : t('featureFlags.flagItem.title.enable')\n          }\n        >\n          <Switch color=\"primary\" checked={enabled} name={flag.name} />\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText primary={flag.name} secondary={getSecondaryText(flag, t)} />\n    </ListItem>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAgCA,MAAM,gBAAA,GAAmB,CACvB,IAAA,EACA,CAAA,KACG;AACH,EAAA,IAAI,KAAK,WAAA,EAAa;AACpB,IAAA,OAAO,IAAA,CAAK,WAAA;AAAA,EACd;AACA,EAAA,OAAO,IAAA,CAAK,QAAA,GACR,CAAA,CAAE,mDAAA,EAAqD;AAAA,IACrD,UAAU,IAAA,CAAK;AAAA,GAChB,CAAA,GACD,CAAA,CAAE,wDAAwD,CAAA;AAChE,CAAA;AAEO,MAAM,WAAW,CAAC,EAAE,IAAA,EAAM,OAAA,EAAS,eAAc,KAAa;AACnE,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,0BAA0B,CAAA;AAE1D,EAAA,uBACE,IAAA,CAAC,QAAA,EAAA,EAAS,OAAA,EAAO,IAAA,EAAC,MAAA,EAAM,IAAA,EAAC,OAAA,EAAS,MAAM,aAAA,CAAc,IAAA,CAAK,IAAI,CAAA,EAC7D,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,YAAA,EAAA,EACC,QAAA,kBAAA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,SAAA,EAAU,KAAA;AAAA,QACV,KAAA,EAAK,IAAA;AAAA,QACL,OACE,OAAA,GACI,CAAA,CAAE,qCAAqC,CAAA,GACvC,EAAE,oCAAoC,CAAA;AAAA,QAG5C,QAAA,kBAAA,GAAA,CAAC,UAAO,KAAA,EAAM,SAAA,EAAU,SAAS,OAAA,EAAS,IAAA,EAAM,KAAK,IAAA,EAAM;AAAA;AAAA,KAC7D,EACF,CAAA;AAAA,oBACA,GAAA,CAAC,gBAAa,OAAA,EAAS,IAAA,CAAK,MAAM,SAAA,EAAW,gBAAA,CAAiB,IAAA,EAAM,CAAC,CAAA,EAAG;AAAA,GAAA,EAC1E,CAAA;AAEJ;;;;"}