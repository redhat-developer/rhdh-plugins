{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreExtensionData,\n  createExtensionInput,\n  createFrontendPlugin,\n  PageBlueprint,\n  NavItemBlueprint,\n} from '@backstage/frontend-plugin-api';\nimport {\n  convertLegacyRouteRef,\n  convertLegacyRouteRefs,\n  compatWrapper,\n} from '@backstage/core-compat-api';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { settingsRouteRef } from './plugin';\n\nexport * from './translation';\n\nconst userSettingsPage = PageBlueprint.makeWithOverrides({\n  inputs: {\n    providerSettings: createExtensionInput([coreExtensionData.reactElement], {\n      singleton: true,\n      optional: true,\n    }),\n  },\n  factory(originalFactory, { inputs }) {\n    return originalFactory({\n      path: '/settings',\n      routeRef: convertLegacyRouteRef(settingsRouteRef),\n      loader: () =>\n        import('./components/SettingsPage').then(m =>\n          compatWrapper(\n            <m.SettingsPage\n              providerSettings={inputs.providerSettings?.get(\n                coreExtensionData.reactElement,\n              )}\n            />,\n          ),\n        ),\n    });\n  },\n});\n\n/** @alpha */\nexport const settingsNavItem = NavItemBlueprint.make({\n  params: {\n    routeRef: convertLegacyRouteRef(settingsRouteRef),\n    title: 'Settings',\n    icon: SettingsIcon,\n  },\n});\n\n/**\n * @alpha\n */\nexport default createFrontendPlugin({\n  pluginId: 'user-settings',\n  info: { packageJson: () => import('../package.json') },\n  extensions: [userSettingsPage, settingsNavItem],\n  routes: convertLegacyRouteRefs({\n    root: settingsRouteRef,\n  }),\n});\n"],"names":[],"mappings":";;;;;;;AAgCA,MAAM,gBAAA,GAAmB,cAAc,iBAAA,CAAkB;AAAA,EACvD,MAAA,EAAQ;AAAA,IACN,gBAAA,EAAkB,oBAAA,CAAqB,CAAC,iBAAA,CAAkB,YAAY,CAAA,EAAG;AAAA,MACvE,SAAA,EAAW,IAAA;AAAA,MACX,QAAA,EAAU;AAAA,KACX;AAAA,GACH;AAAA,EACA,OAAA,CAAQ,eAAA,EAAiB,EAAE,MAAA,EAAO,EAAG;AACnC,IAAA,OAAO,eAAA,CAAgB;AAAA,MACrB,IAAA,EAAM,WAAA;AAAA,MACN,QAAA,EAAU,sBAAsB,gBAAgB,CAAA;AAAA,MAChD,MAAA,EAAQ,MACN,OAAO,wCAA2B,CAAA,CAAE,IAAA;AAAA,QAAK,CAAA,CAAA,KACvC,aAAA;AAAA,0BACE,GAAA;AAAA,YAAC,CAAA,CAAE,YAAA;AAAA,YAAF;AAAA,cACC,gBAAA,EAAkB,OAAO,gBAAA,EAAkB,GAAA;AAAA,gBACzC,iBAAA,CAAkB;AAAA;AACpB;AAAA;AACF;AACF;AACF,KACH,CAAA;AAAA,EACH;AACF,CAAC,CAAA;AAGM,MAAM,eAAA,GAAkB,iBAAiB,IAAA,CAAK;AAAA,EACnD,MAAA,EAAQ;AAAA,IACN,QAAA,EAAU,sBAAsB,gBAAgB,CAAA;AAAA,IAChD,KAAA,EAAO,UAAA;AAAA,IACP,IAAA,EAAM;AAAA;AAEV,CAAC;AAKD,YAAe,oBAAA,CAAqB;AAAA,EAClC,QAAA,EAAU,eAAA;AAAA,EACV,MAAM,EAAE,WAAA,EAAa,MAAM,OAAO,uBAAiB,CAAA,EAAE;AAAA,EACrD,UAAA,EAAY,CAAC,gBAAA,EAAkB,eAAe,CAAA;AAAA,EAC9C,QAAQ,sBAAA,CAAuB;AAAA,IAC7B,IAAA,EAAM;AAAA,GACP;AACH,CAAC,CAAA;;;;"}