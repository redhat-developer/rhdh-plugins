{"version":3,"file":"collectLegacyRoutes.esm.js","sources":["../src/collectLegacyRoutes.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnyRouteRefParams,\n  BackstagePlugin as LegacyBackstagePlugin,\n  RouteRef,\n  createPlugin,\n  getComponentData,\n} from '@backstage/core-plugin-api';\nimport {\n  FrontendPlugin,\n  ExtensionDefinition,\n  coreExtensionData,\n  createExtension,\n  createExtensionInput,\n  createFrontendPlugin,\n  ApiBlueprint,\n  PageBlueprint,\n  FrontendModule,\n  createFrontendModule,\n} from '@backstage/frontend-plugin-api';\nimport { Children, ReactNode, isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport {\n  convertLegacyRouteRef,\n  convertLegacyRouteRefs,\n} from './convertLegacyRouteRef';\nimport { compatWrapper } from './compatWrapper';\nimport { collectEntityPageContents } from './collectEntityPageContents';\nimport { normalizeRoutePath } from './normalizeRoutePath';\n\n/*\n\n# Legacy interoperability\n\nUse-cases (prioritized):\n 1. Slowly migrate over an existing app to DI, piece by piece\n 2. Use a legacy plugin in a new DI app\n 3. Use DI in an existing legacy app\n\nStarting point: use-case #1\n\nPotential solutions:\n 1. Codemods (we're not considering this for now)\n 2. Legacy apps are migrated bottom-up, i.e. keep legacy root, replace pages with DI\n 3. Legacy apps are migrated top-down i.e. switch out base to DI, legacy adapter allows for usage of existing app structure\n\nChosen path: #3\n\nExisting tasks:\n  - Adopters can migrate their existing app gradually (~4)\n    - Example-app uses legacy base with DI adapters\n    - Create an API that lets you inject DI into existing apps - working assumption is that this is enough\n  - Adopters can use legacy plugins in DI through adapters (~8)\n    - App-next uses DI base with legacy adapters\n    - Create a legacy adapter that is able to take an existing extension tree\n\n*/\n\n// Creates a shim extension whose purpose is to build up the tree (anchored at\n// the root page) of paths/routeRefs so that the app can bind them properly.\nfunction makeRoutingShimExtension(options: {\n  name: string;\n  parentExtensionId: string;\n  routePath?: string;\n  routeRef?: RouteRef;\n}) {\n  const { name, parentExtensionId, routePath, routeRef } = options;\n  return createExtension({\n    kind: 'routing-shim',\n    name,\n    attachTo: { id: parentExtensionId, input: 'childRoutingShims' },\n    inputs: {\n      childRoutingShims: createExtensionInput([\n        coreExtensionData.routePath.optional(),\n        coreExtensionData.routeRef.optional(),\n      ]),\n    },\n    output: [\n      coreExtensionData.routePath.optional(),\n      coreExtensionData.routeRef.optional(),\n    ],\n    *factory() {\n      if (routePath !== undefined) {\n        yield coreExtensionData.routePath(routePath);\n      }\n\n      if (routeRef) {\n        yield coreExtensionData.routeRef(convertLegacyRouteRef(routeRef));\n      }\n    },\n  });\n}\n\nexport function visitRouteChildren(options: {\n  children: ReactNode;\n  parentExtensionId: string;\n  context: {\n    pluginId: string;\n    extensions: ExtensionDefinition[];\n    getUniqueName: () => string;\n    discoverPlugin: (plugin: LegacyBackstagePlugin) => void;\n  };\n}): void {\n  const { children, parentExtensionId, context } = options;\n  const { pluginId, extensions, getUniqueName, discoverPlugin } = context;\n\n  Children.forEach(children, node => {\n    if (!isValidElement(node)) {\n      return;\n    }\n\n    const plugin = getComponentData<LegacyBackstagePlugin>(node, 'core.plugin');\n    const routeRef = getComponentData<RouteRef<AnyRouteRefParams>>(\n      node,\n      'core.mountPoint',\n    );\n    const routePath: string | undefined = node.props?.path;\n\n    if (plugin) {\n      // We just mark the plugin as discovered, but don't change the context\n      discoverPlugin(plugin);\n    }\n\n    let nextParentExtensionId = parentExtensionId;\n    if (routeRef || routePath) {\n      const nextParentExtensionName = getUniqueName();\n      nextParentExtensionId = `routing-shim:${pluginId}/${nextParentExtensionName}`;\n      extensions.push(\n        makeRoutingShimExtension({\n          name: nextParentExtensionName,\n          parentExtensionId,\n          routePath,\n          routeRef,\n        }),\n      );\n    }\n\n    visitRouteChildren({\n      children: node.props.children,\n      parentExtensionId: nextParentExtensionId,\n      context,\n    });\n  });\n}\n\n/** @internal */\nexport function collectLegacyRoutes(\n  flatRoutesElement: JSX.Element,\n  entityPage?: JSX.Element,\n): (FrontendPlugin | FrontendModule)[] {\n  const output = new Array<FrontendPlugin | FrontendModule>();\n\n  const pluginExtensions = new Map<\n    LegacyBackstagePlugin,\n    ExtensionDefinition[]\n  >();\n\n  const getUniqueName = (() => {\n    let currentIndex = 1;\n    return () => String(currentIndex++);\n  })();\n\n  // Placeholder plugin for any routes that don't belong to a plugin\n  const orphanRoutesPlugin = createPlugin({ id: 'converted-orphan-routes' });\n\n  const getPluginExtensions = (plugin: LegacyBackstagePlugin) => {\n    let extensions = pluginExtensions.get(plugin);\n    if (!extensions) {\n      extensions = [];\n      pluginExtensions.set(plugin, extensions);\n    }\n    return extensions;\n  };\n\n  Children.forEach(flatRoutesElement.props.children, (route: ReactNode) => {\n    if (route === null) {\n      return;\n    }\n    // TODO(freben): Handle feature flag and permissions framework wrapper elements\n    if (!isValidElement(route)) {\n      throw new Error(\n        `Invalid element inside FlatRoutes, expected Route but found element of type ${typeof route}.`,\n      );\n    }\n    if (route.type !== Route) {\n      throw new Error(\n        `Invalid element inside FlatRoutes, expected Route but found ${route.type}.`,\n      );\n    }\n    const routeElement = route.props.element;\n    const path: string | undefined = route.props.path;\n    const plugin =\n      getComponentData<LegacyBackstagePlugin>(routeElement, 'core.plugin') ??\n      orphanRoutesPlugin;\n    const routeRef = getComponentData<RouteRef>(\n      routeElement,\n      'core.mountPoint',\n    );\n    if (path === undefined) {\n      throw new Error(\n        `Route element inside FlatRoutes had no path prop value given`,\n      );\n    }\n\n    const extensions = getPluginExtensions(plugin);\n    const pageExtensionName = extensions.length ? getUniqueName() : undefined;\n    const pageExtensionId = `page:${plugin.getId()}${\n      pageExtensionName ? `/${pageExtensionName}` : pageExtensionName\n    }`;\n\n    extensions.push(\n      PageBlueprint.makeWithOverrides({\n        name: pageExtensionName,\n        inputs: {\n          childRoutingShims: createExtensionInput([\n            coreExtensionData.routePath.optional(),\n            coreExtensionData.routeRef.optional(),\n          ]),\n        },\n        factory(originalFactory, { inputs: _inputs }) {\n          // todo(blam): why do we not use the inputs here?\n          return originalFactory({\n            path: normalizeRoutePath(path),\n            routeRef: routeRef ? convertLegacyRouteRef(routeRef) : undefined,\n            loader: async () =>\n              compatWrapper(\n                route.props.children ? (\n                  <Routes>\n                    <Route path=\"*\" element={routeElement}>\n                      <Route path=\"*\" element={route.props.children} />\n                    </Route>\n                  </Routes>\n                ) : (\n                  routeElement\n                ),\n              ),\n          });\n        },\n      }),\n    );\n\n    visitRouteChildren({\n      children: route.props.children,\n      parentExtensionId: pageExtensionId,\n      context: {\n        pluginId: plugin.getId(),\n        extensions,\n        getUniqueName,\n        discoverPlugin: getPluginExtensions,\n      },\n    });\n  });\n\n  if (entityPage) {\n    collectEntityPageContents(entityPage, {\n      discoverExtension(extension, plugin) {\n        if (!plugin || plugin.getId() === 'catalog') {\n          getPluginExtensions(orphanRoutesPlugin).push(extension);\n        } else {\n          getPluginExtensions(plugin).push(extension);\n        }\n      },\n    });\n\n    const extensions = new Array<ExtensionDefinition>();\n    visitRouteChildren({\n      children: entityPage,\n      parentExtensionId: `page:catalog/entity`,\n      context: {\n        pluginId: 'catalog',\n        extensions,\n        getUniqueName,\n        discoverPlugin(plugin) {\n          if (plugin.getId() !== 'catalog') {\n            getPluginExtensions(plugin);\n          }\n        },\n      },\n    });\n\n    output.push(\n      createFrontendModule({\n        pluginId: 'catalog',\n        extensions,\n      }),\n    );\n  }\n\n  for (const [plugin, extensions] of pluginExtensions) {\n    output.push(\n      createFrontendPlugin({\n        pluginId: plugin.getId(),\n        extensions: [\n          ...extensions,\n          ...Array.from(plugin.getApis()).map(factory =>\n            ApiBlueprint.make({\n              name: factory.api.id,\n              params: defineParams => defineParams(factory),\n            }),\n          ),\n        ],\n        routes: convertLegacyRouteRefs(plugin.routes ?? {}),\n        externalRoutes: convertLegacyRouteRefs(plugin.externalRoutes ?? {}),\n      }),\n    );\n  }\n\n  return output;\n}\n"],"names":[],"mappings":"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"}