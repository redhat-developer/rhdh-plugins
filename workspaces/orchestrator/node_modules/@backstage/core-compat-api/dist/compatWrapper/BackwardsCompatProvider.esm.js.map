{"version":3,"file":"BackwardsCompatProvider.esm.js","sources":["../../src/compatWrapper/BackwardsCompatProvider.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo } from 'react';\nimport { ReactNode } from 'react';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppContextProvider } from '../../../core-app-api/src/app/AppContext';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { RouteResolver } from '../../../core-plugin-api/src/routing/useRouteRef';\nimport {\n  createFrontendPlugin as createNewPlugin,\n  FrontendPlugin as NewFrontendPlugin,\n  appTreeApiRef,\n  iconsApiRef,\n  useApi,\n  routeResolutionApiRef,\n  ErrorDisplay,\n  NotFoundErrorPage,\n  Progress,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AppComponents,\n  IconComponent,\n  BackstagePlugin as LegacyBackstagePlugin,\n  RouteRef,\n} from '@backstage/core-plugin-api';\nimport {\n  VersionedValue,\n  createVersionedContext,\n  createVersionedValueMap,\n  getOrCreateGlobalSingleton,\n} from '@backstage/version-bridge';\nimport { convertLegacyRouteRef } from '../convertLegacyRouteRef';\n\n// Make sure that we only convert each new plugin instance to its legacy equivalent once\nconst legacyPluginStore = getOrCreateGlobalSingleton(\n  'legacy-plugin-compatibility-store',\n  () => new WeakMap<NewFrontendPlugin, LegacyBackstagePlugin>(),\n);\n\nexport function toLegacyPlugin(\n  plugin: NewFrontendPlugin,\n): LegacyBackstagePlugin {\n  let legacy = legacyPluginStore.get(plugin);\n  if (legacy) {\n    return legacy;\n  }\n\n  const errorMsg = 'Not implemented in legacy plugin compatibility layer';\n  const notImplemented = () => {\n    throw new Error(errorMsg);\n  };\n\n  legacy = {\n    getId(): string {\n      return plugin.id;\n    },\n    get routes() {\n      return {};\n    },\n    get externalRoutes() {\n      return {};\n    },\n    getApis: notImplemented,\n    getFeatureFlags: notImplemented,\n    provide: notImplemented,\n  };\n\n  legacyPluginStore.set(plugin, legacy);\n  return legacy;\n}\n\n// TODO: Currently a very naive implementation, may need some more work\nfunction toNewPlugin(plugin: LegacyBackstagePlugin): NewFrontendPlugin {\n  return createNewPlugin({\n    pluginId: plugin.getId(),\n  });\n}\n\n// Recreates the old AppContext APIs using the various new APIs that replaced it\nfunction LegacyAppContextProvider(props: { children: ReactNode }) {\n  const appTreeApi = useApi(appTreeApiRef);\n  const iconsApi = useApi(iconsApiRef);\n\n  const appContext = useMemo(() => {\n    const { tree } = appTreeApi.getTree();\n\n    let gatheredPlugins: LegacyBackstagePlugin[] | undefined = undefined;\n\n    const ErrorBoundaryFallbackWrapper: AppComponents['ErrorBoundaryFallback'] =\n      ({ plugin, ...rest }) => (\n        <ErrorDisplay {...rest} plugin={plugin && toNewPlugin(plugin)} />\n      );\n\n    return {\n      getPlugins(): LegacyBackstagePlugin[] {\n        if (gatheredPlugins) {\n          return gatheredPlugins;\n        }\n\n        const pluginSet = new Set<LegacyBackstagePlugin>();\n        for (const node of tree.nodes.values()) {\n          const plugin = node.spec.plugin;\n          if (plugin) {\n            pluginSet.add(toLegacyPlugin(plugin));\n          }\n        }\n        gatheredPlugins = Array.from(pluginSet);\n\n        return gatheredPlugins;\n      },\n\n      getSystemIcon(key: string): IconComponent | undefined {\n        return iconsApi.getIcon(key);\n      },\n\n      getSystemIcons(): Record<string, IconComponent> {\n        return Object.fromEntries(\n          iconsApi.listIconKeys().map(key => [key, iconsApi.getIcon(key)!]),\n        );\n      },\n\n      getComponents(): AppComponents {\n        return {\n          NotFoundErrorPage: NotFoundErrorPage,\n          BootErrorPage() {\n            throw new Error(\n              'The BootErrorPage app component should not be accessed by plugins',\n            );\n          },\n          Progress: Progress,\n          Router() {\n            throw new Error(\n              'The Router app component should not be accessed by plugins',\n            );\n          },\n          ErrorBoundaryFallback: ErrorBoundaryFallbackWrapper,\n        };\n      },\n    };\n  }, [appTreeApi, iconsApi]);\n\n  return (\n    <AppContextProvider appContext={appContext}>\n      {props.children}\n    </AppContextProvider>\n  );\n}\n\nconst RoutingContext = createVersionedContext<{ 1: RouteResolver }>(\n  'routing-context',\n);\n\nfunction LegacyRoutingProvider(props: { children: ReactNode }) {\n  const routeResolutionApi = useApi(routeResolutionApiRef);\n\n  const value = useMemo<VersionedValue<{ 1: RouteResolver }>>(() => {\n    return createVersionedValueMap({\n      1: {\n        resolve(anyRouteRef, location) {\n          const sourcePath =\n            typeof location === 'string' ? location : location.pathname ?? '';\n\n          return routeResolutionApi.resolve(\n            // This removes the requirement to use convertLegacyRouteRef inside plugins, but\n            // they still need to converted when passed to the plugin instance\n            convertLegacyRouteRef(anyRouteRef as RouteRef),\n            { sourcePath },\n          );\n        },\n      },\n    });\n  }, [routeResolutionApi]);\n\n  return (\n    <RoutingContext.Provider value={value}>\n      {props.children}\n    </RoutingContext.Provider>\n  );\n}\n\nexport function BackwardsCompatProvider(props: { children: ReactNode }) {\n  return (\n    <LegacyRoutingProvider>\n      <LegacyAppContextProvider>{props.children}</LegacyAppContextProvider>\n    </LegacyRoutingProvider>\n  );\n}\n"],"names":["createNewPlugin"],"mappings":"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"}