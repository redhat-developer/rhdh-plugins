import { jsx, jsxs } from 'react/jsx-runtime';
import { RELATION_PROVIDES_API } from '@backstage/catalog-model';
import Typography from '@material-ui/core/Typography';
import { useEntity, useRelatedEntities, EntityTable } from '@backstage/plugin-catalog-react';
import { getApiEntityColumns } from './presets.esm.js';
import { InfoCard, Progress, WarningPanel, CodeSnippet, Link } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { apiDocsTranslationRef } from '../../translation.esm.js';

const ProvidedApisCard = (props) => {
  const { t } = useTranslationRef(apiDocsTranslationRef);
  const {
    variant = "gridItem",
    title = t("providedApisCard.title"),
    columns = getApiEntityColumns(t),
    tableOptions = {}
  } = props;
  const { entity } = useEntity();
  const { entities, loading, error } = useRelatedEntities(entity, {
    type: RELATION_PROVIDES_API
  });
  if (loading) {
    return /* @__PURE__ */ jsx(InfoCard, { variant, title, children: /* @__PURE__ */ jsx(Progress, {}) });
  }
  if (error || !entities) {
    return /* @__PURE__ */ jsx(InfoCard, { variant, title, children: /* @__PURE__ */ jsx(
      WarningPanel,
      {
        severity: "error",
        title: t("providedApisCard.error.title"),
        message: /* @__PURE__ */ jsx(CodeSnippet, { text: `${error}`, language: "text" })
      }
    ) });
  }
  return /* @__PURE__ */ jsx(
    EntityTable,
    {
      title,
      variant,
      emptyContent: /* @__PURE__ */ jsxs("div", { style: { textAlign: "center" }, children: [
        /* @__PURE__ */ jsx(Typography, { variant: "body1", children: t("providedApisCard.emptyContent.title", {
          entity: entity.kind.toLocaleLowerCase("en-US")
        }) }),
        /* @__PURE__ */ jsx(Typography, { variant: "body2", children: /* @__PURE__ */ jsx(
          Link,
          {
            to: "https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional",
            externalLinkIcon: true,
            children: t("apisCardHelpLinkTitle")
          }
        ) })
      ] }),
      columns,
      tableOptions,
      entities
    }
  );
};

export { ProvidedApisCard };
//# sourceMappingURL=ProvidedApisCard.esm.js.map
