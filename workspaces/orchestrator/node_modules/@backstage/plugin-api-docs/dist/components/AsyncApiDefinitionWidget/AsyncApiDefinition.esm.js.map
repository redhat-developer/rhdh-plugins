{"version":3,"file":"AsyncApiDefinition.esm.js","sources":["../../../src/components/AsyncApiDefinitionWidget/AsyncApiDefinition.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AsyncApi from '@asyncapi/react-component';\nimport '@asyncapi/react-component/styles/default.css';\nimport { makeStyles, alpha, darken } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\n/** @public */\nexport type AsyncApiResolver = {\n  schema: string;\n  order: number;\n  canRead: boolean;\n  read(uri: any): Promise<string>;\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    fontFamily: 'inherit',\n    '& .bg-white': {\n      background: 'none',\n    },\n    '& .text-4xl': {\n      ...theme.typography.h3,\n    },\n    ' & h2': {\n      ...theme.typography.h4,\n    },\n    '& .border': {\n      borderColor: alpha(theme.palette.border, 0.1),\n    },\n    '& .min-w-min': {\n      minWidth: 'fit-content',\n    },\n    '& .examples': {\n      padding: '1rem',\n    },\n    '& .bg-teal-500': {\n      backgroundColor: theme.palette.status.ok,\n    },\n    '& .bg-blue-500': {\n      backgroundColor: theme.palette.info.main,\n    },\n    '& .bg-blue-400': {\n      backgroundColor: theme.palette.info.light,\n    },\n    '& .bg-indigo-400': {\n      backgroundColor: theme.palette.warning.main,\n    },\n    '& .text-teal-50': {\n      color: theme.palette.status.ok,\n    },\n    '& .text-red-600': {\n      color: theme.palette.error.main,\n    },\n    '& .text-orange-600': {\n      color: theme.palette.warning.main,\n    },\n    '& .text-teal-500': {\n      color: theme.palette.status.ok,\n    },\n    '& .text-blue-500': {\n      color: theme.palette.info.main,\n    },\n    '& .-rotate-90': {\n      '--tw-rotate': '0deg',\n    },\n    '& button': {\n      ...theme.typography.button,\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.primary.main,\n      // override whatever may be in the theme's typography to ensure consistency with asyncapi\n      textTransform: 'inherit',\n    },\n    '& a': {\n      color: theme.palette.link,\n    },\n    '& a.no-underline': {\n      ...theme.typography.button,\n      background: 'none',\n      boxSizing: 'border-box',\n      minWidth: 64,\n      borderRadius: theme.shape.borderRadius,\n      transition: theme.transitions.create(\n        ['background-color', 'box-shadow', 'border'],\n        {\n          duration: theme.transitions.duration.short,\n        },\n      ),\n      padding: '5px 15px',\n      color: theme.palette.primary.main,\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n      '&:hover': {\n        textDecoration: 'none',\n        border: `1px solid ${theme.palette.primary.main}`,\n        backgroundColor: alpha(\n          theme.palette.primary.main,\n          theme.palette.action.hoverOpacity,\n        ),\n      },\n    },\n    '& li.no-underline': {\n      '& a': {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n      },\n    },\n  },\n  dark: {\n    '& svg': {\n      fill: theme.palette.text.primary,\n    },\n    '& .prose': {\n      color: theme.palette.text.secondary,\n      '& h3, code': {\n        color: theme.palette.text.primary,\n      },\n      '& a': {\n        color: theme.palette.link,\n      },\n    },\n    '& .bg-gray-100, .bg-gray-200': {\n      backgroundColor: theme.palette.background.default,\n    },\n    '& .text-gray-600': {\n      color: theme.palette.grey['50'],\n    },\n    '& .text-gray-700': {\n      color: theme.palette.grey['100'],\n    },\n    '& .panel--right': {\n      background: darken(theme.palette.navigation.background, 0.1),\n    },\n    '& .examples': {\n      backgroundColor: darken(theme.palette.navigation.background, 0.1),\n      '& pre': {\n        backgroundColor: darken(theme.palette.background.default, 0.2),\n      },\n    },\n  },\n}));\n\nconst httpsFetchResolver: AsyncApiResolver = {\n  schema: 'https',\n  order: 1,\n  canRead: true,\n  async read(uri: any) {\n    const response = await fetch(uri.toString());\n    return response.text();\n  },\n};\n\nconst httpFetchResolver: AsyncApiResolver = {\n  schema: 'http',\n  order: 1,\n  canRead: true,\n  async read(uri: any) {\n    const response = await fetch(uri.toString());\n    return response.text();\n  },\n};\n\ntype Props = {\n  definition: string;\n  resolvers?: AsyncApiResolver[];\n};\n\nexport const AsyncApiDefinition = ({\n  definition,\n  resolvers,\n}: Props): JSX.Element => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const classNames = `${classes.root} ${\n    theme.palette.type === 'dark' ? classes.dark : ''\n  }`;\n\n  const config = {\n    parserOptions: {\n      __unstable: {\n        resolver: {\n          resolvers: [httpsFetchResolver, httpFetchResolver],\n        },\n      },\n    },\n  };\n\n  // Overwrite default resolvers if custom ones are set\n  if (resolvers) {\n    config.parserOptions.__unstable.resolver.resolvers = resolvers;\n  }\n\n  return (\n    <div className={classNames}>\n      <AsyncApi schema={definition} config={config} />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AA6BA,MAAM,SAAA,GAAY,WAAW,CAAA,KAAA,MAAU;AAAA,EACrC,IAAA,EAAM;AAAA,IACJ,UAAA,EAAY,SAAA;AAAA,IACZ,aAAA,EAAe;AAAA,MACb,UAAA,EAAY;AAAA,KACd;AAAA,IACA,aAAA,EAAe;AAAA,MACb,GAAG,MAAM,UAAA,CAAW;AAAA,KACtB;AAAA,IACA,OAAA,EAAS;AAAA,MACP,GAAG,MAAM,UAAA,CAAW;AAAA,KACtB;AAAA,IACA,WAAA,EAAa;AAAA,MACX,WAAA,EAAa,KAAA,CAAM,KAAA,CAAM,OAAA,CAAQ,QAAQ,GAAG;AAAA,KAC9C;AAAA,IACA,cAAA,EAAgB;AAAA,MACd,QAAA,EAAU;AAAA,KACZ;AAAA,IACA,aAAA,EAAe;AAAA,MACb,OAAA,EAAS;AAAA,KACX;AAAA,IACA,gBAAA,EAAkB;AAAA,MAChB,eAAA,EAAiB,KAAA,CAAM,OAAA,CAAQ,MAAA,CAAO;AAAA,KACxC;AAAA,IACA,gBAAA,EAAkB;AAAA,MAChB,eAAA,EAAiB,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK;AAAA,KACtC;AAAA,IACA,gBAAA,EAAkB;AAAA,MAChB,eAAA,EAAiB,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK;AAAA,KACtC;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,eAAA,EAAiB,KAAA,CAAM,OAAA,CAAQ,OAAA,CAAQ;AAAA,KACzC;AAAA,IACA,iBAAA,EAAmB;AAAA,MACjB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,MAAA,CAAO;AAAA,KAC9B;AAAA,IACA,iBAAA,EAAmB;AAAA,MACjB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,KAAA,CAAM;AAAA,KAC7B;AAAA,IACA,oBAAA,EAAsB;AAAA,MACpB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,OAAA,CAAQ;AAAA,KAC/B;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,MAAA,CAAO;AAAA,KAC9B;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK;AAAA,KAC5B;AAAA,IACA,eAAA,EAAiB;AAAA,MACf,aAAA,EAAe;AAAA,KACjB;AAAA,IACA,UAAA,EAAY;AAAA,MACV,GAAG,MAAM,UAAA,CAAW,MAAA;AAAA,MACpB,YAAA,EAAc,MAAM,KAAA,CAAM,YAAA;AAAA,MAC1B,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,OAAA,CAAQ,IAAA;AAAA;AAAA,MAE7B,aAAA,EAAe;AAAA,KACjB;AAAA,IACA,KAAA,EAAO;AAAA,MACL,KAAA,EAAO,MAAM,OAAA,CAAQ;AAAA,KACvB;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,GAAG,MAAM,UAAA,CAAW,MAAA;AAAA,MACpB,UAAA,EAAY,MAAA;AAAA,MACZ,SAAA,EAAW,YAAA;AAAA,MACX,QAAA,EAAU,EAAA;AAAA,MACV,YAAA,EAAc,MAAM,KAAA,CAAM,YAAA;AAAA,MAC1B,UAAA,EAAY,MAAM,WAAA,CAAY,MAAA;AAAA,QAC5B,CAAC,kBAAA,EAAoB,YAAA,EAAc,QAAQ,CAAA;AAAA,QAC3C;AAAA,UACE,QAAA,EAAU,KAAA,CAAM,WAAA,CAAY,QAAA,CAAS;AAAA;AACvC,OACF;AAAA,MACA,OAAA,EAAS,UAAA;AAAA,MACT,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,OAAA,CAAQ,IAAA;AAAA,MAC7B,MAAA,EAAQ,aAAa,KAAA,CAAM,KAAA,CAAM,QAAQ,OAAA,CAAQ,IAAA,EAAM,GAAG,CAAC,CAAA,CAAA;AAAA,MAC3D,SAAA,EAAW;AAAA,QACT,cAAA,EAAgB,MAAA;AAAA,QAChB,MAAA,EAAQ,CAAA,UAAA,EAAa,KAAA,CAAM,OAAA,CAAQ,QAAQ,IAAI,CAAA,CAAA;AAAA,QAC/C,eAAA,EAAiB,KAAA;AAAA,UACf,KAAA,CAAM,QAAQ,OAAA,CAAQ,IAAA;AAAA,UACtB,KAAA,CAAM,QAAQ,MAAA,CAAO;AAAA;AACvB;AACF,KACF;AAAA,IACA,mBAAA,EAAqB;AAAA,MACnB,KAAA,EAAO;AAAA,QACL,cAAA,EAAgB,MAAA;AAAA,QAChB,OAAO,KAAA,CAAM,OAAA,CAAQ,gBAAgB,KAAA,CAAM,OAAA,CAAQ,QAAQ,IAAI;AAAA;AACjE;AACF,GACF;AAAA,EACA,IAAA,EAAM;AAAA,IACJ,OAAA,EAAS;AAAA,MACP,IAAA,EAAM,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK;AAAA,KAC3B;AAAA,IACA,UAAA,EAAY;AAAA,MACV,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK,SAAA;AAAA,MAC1B,YAAA,EAAc;AAAA,QACZ,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK;AAAA,OAC5B;AAAA,MACA,KAAA,EAAO;AAAA,QACL,KAAA,EAAO,MAAM,OAAA,CAAQ;AAAA;AACvB,KACF;AAAA,IACA,8BAAA,EAAgC;AAAA,MAC9B,eAAA,EAAiB,KAAA,CAAM,OAAA,CAAQ,UAAA,CAAW;AAAA,KAC5C;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK,IAAI;AAAA,KAChC;AAAA,IACA,kBAAA,EAAoB;AAAA,MAClB,KAAA,EAAO,KAAA,CAAM,OAAA,CAAQ,IAAA,CAAK,KAAK;AAAA,KACjC;AAAA,IACA,iBAAA,EAAmB;AAAA,MACjB,YAAY,MAAA,CAAO,KAAA,CAAM,OAAA,CAAQ,UAAA,CAAW,YAAY,GAAG;AAAA,KAC7D;AAAA,IACA,aAAA,EAAe;AAAA,MACb,iBAAiB,MAAA,CAAO,KAAA,CAAM,OAAA,CAAQ,UAAA,CAAW,YAAY,GAAG,CAAA;AAAA,MAChE,OAAA,EAAS;AAAA,QACP,iBAAiB,MAAA,CAAO,KAAA,CAAM,OAAA,CAAQ,UAAA,CAAW,SAAS,GAAG;AAAA;AAC/D;AACF;AAEJ,CAAA,CAAE,CAAA;AAEF,MAAM,kBAAA,GAAuC;AAAA,EAC3C,MAAA,EAAQ,OAAA;AAAA,EACR,KAAA,EAAO,CAAA;AAAA,EACP,OAAA,EAAS,IAAA;AAAA,EACT,MAAM,KAAK,GAAA,EAAU;AACnB,IAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,GAAA,CAAI,UAAU,CAAA;AAC3C,IAAA,OAAO,SAAS,IAAA,EAAK;AAAA,EACvB;AACF,CAAA;AAEA,MAAM,iBAAA,GAAsC;AAAA,EAC1C,MAAA,EAAQ,MAAA;AAAA,EACR,KAAA,EAAO,CAAA;AAAA,EACP,OAAA,EAAS,IAAA;AAAA,EACT,MAAM,KAAK,GAAA,EAAU;AACnB,IAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,GAAA,CAAI,UAAU,CAAA;AAC3C,IAAA,OAAO,SAAS,IAAA,EAAK;AAAA,EACvB;AACF,CAAA;AAOO,MAAM,qBAAqB,CAAC;AAAA,EACjC,UAAA;AAAA,EACA;AACF,CAAA,KAA0B;AACxB,EAAA,MAAM,UAAU,SAAA,EAAU;AAC1B,EAAA,MAAM,QAAQ,QAAA,EAAS;AACvB,EAAA,MAAM,UAAA,GAAa,CAAA,EAAG,OAAA,CAAQ,IAAI,CAAA,CAAA,EAChC,KAAA,CAAM,OAAA,CAAQ,IAAA,KAAS,MAAA,GAAS,OAAA,CAAQ,IAAA,GAAO,EACjD,CAAA,CAAA;AAEA,EAAA,MAAM,MAAA,GAAS;AAAA,IACb,aAAA,EAAe;AAAA,MACb,UAAA,EAAY;AAAA,QACV,QAAA,EAAU;AAAA,UACR,SAAA,EAAW,CAAC,kBAAA,EAAoB,iBAAiB;AAAA;AACnD;AACF;AACF,GACF;AAGA,EAAA,IAAI,SAAA,EAAW;AACb,IAAA,MAAA,CAAO,aAAA,CAAc,UAAA,CAAW,QAAA,CAAS,SAAA,GAAY,SAAA;AAAA,EACvD;AAEA,EAAA,uBACE,GAAA,CAAC,SAAI,SAAA,EAAW,UAAA,EACd,8BAAC,QAAA,EAAA,EAAS,MAAA,EAAQ,UAAA,EAAY,MAAA,EAAgB,CAAA,EAChD,CAAA;AAEJ;;;;"}