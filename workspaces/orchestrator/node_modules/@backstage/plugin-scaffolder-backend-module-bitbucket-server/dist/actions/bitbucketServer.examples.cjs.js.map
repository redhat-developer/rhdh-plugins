{"version":3,"file":"bitbucketServer.examples.cjs.js","sources":["../../src/actions/bitbucketServer.examples.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Initialize git repository with required properties',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-minimal',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initialize git repository with all properties',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-minimal',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'This is a test repository',\n            repoVisibility: 'private',\n            defaultBranch: 'main',\n            sourcePath: 'packages/backend',\n            enableLFS: false,\n            token: 'test-token',\n            gitCommitMessage: 'Init check commit',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initialize git repository with public visibility',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-minimal',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'This is a test repository',\n            repoVisibility: 'public',\n            defaultBranch: 'main',\n            sourcePath: 'packages/backend',\n            enableLFS: true,\n            token: 'test-token',\n            gitCommitMessage: 'Init check commit',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initialize git repository with different default branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-minimal',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'This is a test repository',\n            repoVisibility: 'public',\n            defaultBranch: 'develop',\n            sourcePath: 'packages/backend',\n            enableLFS: true,\n            token: 'test-token',\n            gitCommitMessage: 'Init check commit',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initialize git repository with different source path',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-minimal',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'This is a test repository',\n            repoVisibility: 'public',\n            defaultBranch: 'develop',\n            sourcePath: 'packages/api',\n            enableLFS: true,\n            token: 'test-token',\n            gitCommitMessage: 'Init check commit',\n            gitAuthorName: 'Test User',\n            gitAuthorEmail: 'test.user@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with default settings and custom author information',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-custom-author',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            gitAuthorName: 'Custom Author',\n            gitAuthorEmail: 'custom.author@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with LFS enabled and a specific commit message',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-lfs-commit',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            enableLFS: true,\n            gitCommitMessage: 'Initial commit with LFS enabled',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with a custom source path and token',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-custom-source',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            sourcePath: 'custom/source/path',\n            token: 'custom-token',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with private visibility and custom author details',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-private-custom-author',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            repoVisibility: 'private',\n            gitAuthorName: 'Private Author',\n            gitAuthorEmail: 'private.author@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with public visibility and specific commit message',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-public-commit',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            repoVisibility: 'public',\n            gitCommitMessage: 'Public repository initial commit',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initialize git repository with all settings customized',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-all-custom',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'A fully customized repository',\n            repoVisibility: 'private',\n            defaultBranch: 'development',\n            sourcePath: 'src/backend',\n            enableLFS: true,\n            token: 'custom-token',\n            gitCommitMessage: 'Fully customized initial commit',\n            gitAuthorName: 'Custom Dev',\n            gitAuthorEmail: 'custom.dev@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with a specific default branch and no LFS',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-no-lfs',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            defaultBranch: 'main',\n            enableLFS: false,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with a custom repository description and public visibility',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-custom-description',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            description: 'A public repository with a custom description',\n            repoVisibility: 'public',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with a custom token for authentication',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-custom-token',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            token: 'custom-auth-token',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with a different repository root path',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-different-root',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            sourcePath: 'different/root/path',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initialize git repository with private visibility and LFS enabled',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'publish:bitbucketServer',\n          id: 'publish-bitbucket-server-private-lfs',\n          name: 'Publish To Bitbucket Server',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            repoVisibility: 'private',\n            enableLFS: true,\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":";;;;;;;;AAmBO,MAAM,QAAA,GAA8B;AAAA,EACzC;AAAA,IACE,WAAA,EAAa,oDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,kCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS;AAAA;AACX;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,+CAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,kCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,2BAAA;AAAA,YACb,cAAA,EAAgB,SAAA;AAAA,YAChB,aAAA,EAAe,MAAA;AAAA,YACf,UAAA,EAAY,kBAAA;AAAA,YACZ,SAAA,EAAW,KAAA;AAAA,YACX,KAAA,EAAO,YAAA;AAAA,YACP,gBAAA,EAAkB,mBAAA;AAAA,YAClB,aAAA,EAAe,WAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,kDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,kCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,2BAAA;AAAA,YACb,cAAA,EAAgB,QAAA;AAAA,YAChB,aAAA,EAAe,MAAA;AAAA,YACf,UAAA,EAAY,kBAAA;AAAA,YACZ,SAAA,EAAW,IAAA;AAAA,YACX,KAAA,EAAO,YAAA;AAAA,YACP,gBAAA,EAAkB,mBAAA;AAAA,YAClB,aAAA,EAAe,WAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,yDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,kCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,2BAAA;AAAA,YACb,cAAA,EAAgB,QAAA;AAAA,YAChB,aAAA,EAAe,SAAA;AAAA,YACf,UAAA,EAAY,kBAAA;AAAA,YACZ,SAAA,EAAW,IAAA;AAAA,YACX,KAAA,EAAO,YAAA;AAAA,YACP,gBAAA,EAAkB,mBAAA;AAAA,YAClB,aAAA,EAAe,WAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,sDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,kCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,2BAAA;AAAA,YACb,cAAA,EAAgB,QAAA;AAAA,YAChB,aAAA,EAAe,SAAA;AAAA,YACf,UAAA,EAAY,cAAA;AAAA,YACZ,SAAA,EAAW,IAAA;AAAA,YACX,KAAA,EAAO,YAAA;AAAA,YACP,gBAAA,EAAkB,mBAAA;AAAA,YAClB,aAAA,EAAe,WAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,+EAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,wCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,aAAA,EAAe,eAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,0EAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,qCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,SAAA,EAAW,IAAA;AAAA,YACX,gBAAA,EAAkB;AAAA;AACpB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,+DAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,wCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,UAAA,EAAY,oBAAA;AAAA,YACZ,KAAA,EAAO;AAAA;AACT;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,6EAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,gDAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,cAAA,EAAgB,SAAA;AAAA,YAChB,aAAA,EAAe,gBAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,8EAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,wCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,cAAA,EAAgB,QAAA;AAAA,YAChB,gBAAA,EAAkB;AAAA;AACpB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EAAa,wDAAA;AAAA,IACb,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,qCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,+BAAA;AAAA,YACb,cAAA,EAAgB,SAAA;AAAA,YAChB,aAAA,EAAe,aAAA;AAAA,YACf,UAAA,EAAY,aAAA;AAAA,YACZ,SAAA,EAAW,IAAA;AAAA,YACX,KAAA,EAAO,cAAA;AAAA,YACP,gBAAA,EAAkB,iCAAA;AAAA,YAClB,aAAA,EAAe,YAAA;AAAA,YACf,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,qEAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,iCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,aAAA,EAAe,MAAA;AAAA,YACf,SAAA,EAAW;AAAA;AACb;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,sFAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,6CAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,WAAA,EAAa,+CAAA;AAAA,YACb,cAAA,EAAgB;AAAA;AAClB;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,kEAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,uCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,KAAA,EAAO;AAAA;AACT;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,iEAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,yCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,UAAA,EAAY;AAAA;AACd;AACF;AACF,KACD;AAAA,GACH;AAAA,EACA;AAAA,IACE,WAAA,EACE,mEAAA;AAAA,IACF,OAAA,EAASA,sBAAK,SAAA,CAAU;AAAA,MACtB,KAAA,EAAO;AAAA,QACL;AAAA,UACE,MAAA,EAAQ,yBAAA;AAAA,UACR,EAAA,EAAI,sCAAA;AAAA,UACJ,IAAA,EAAM,6BAAA;AAAA,UACN,KAAA,EAAO;AAAA,YACL,OAAA,EAAS,gDAAA;AAAA,YACT,cAAA,EAAgB,SAAA;AAAA,YAChB,SAAA,EAAW;AAAA;AACb;AACF;AACF,KACD;AAAA;AAEL;;;;"}