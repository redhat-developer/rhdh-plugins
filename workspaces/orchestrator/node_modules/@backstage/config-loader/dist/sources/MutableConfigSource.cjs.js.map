{"version":3,"file":"MutableConfigSource.cjs.js","sources":["../../src/sources/MutableConfigSource.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DeferredPromise, JsonObject, createDeferred } from '@backstage/types';\nimport {\n  AsyncConfigSourceGenerator,\n  ConfigSource,\n  ReadConfigDataOptions,\n} from './types';\nimport { waitOrAbort } from './utils';\n\n/**\n * Options for {@link MutableConfigSource.create}.\n *\n * @public\n */\nexport interface MutableConfigSourceOptions {\n  data?: JsonObject;\n  context?: string;\n}\n\n/**\n * A config source that can be updated with new data.\n *\n * @public\n */\nexport class MutableConfigSource implements ConfigSource {\n  /**\n   * Creates a new mutable config source.\n   *\n   * @param options - Options for the config source.\n   * @returns A new mutable config source.\n   */\n  static create(options?: MutableConfigSourceOptions): MutableConfigSource {\n    return new MutableConfigSource(\n      options?.context ?? 'mutable-config',\n      options?.data,\n    );\n  }\n\n  #currentData?: JsonObject;\n  #deferred: DeferredPromise<void>;\n  readonly #context: string;\n  readonly #abortController = new AbortController();\n\n  private constructor(context: string, initialData?: JsonObject) {\n    this.#currentData = initialData;\n    this.#context = context;\n    this.#deferred = createDeferred();\n  }\n\n  async *readConfigData(\n    options?: ReadConfigDataOptions | undefined,\n  ): AsyncConfigSourceGenerator {\n    let deferredPromise = this.#deferred;\n\n    if (this.#currentData !== undefined) {\n      yield { configs: [{ data: this.#currentData, context: this.#context }] };\n    }\n\n    for (;;) {\n      const [ok] = await waitOrAbort(deferredPromise, [\n        options?.signal,\n        this.#abortController.signal,\n      ]);\n      if (!ok) {\n        return;\n      }\n      deferredPromise = this.#deferred;\n\n      if (this.#currentData !== undefined) {\n        yield {\n          configs: [{ data: this.#currentData, context: this.#context }],\n        };\n      }\n    }\n  }\n\n  /**\n   * Set the data of the config source.\n   *\n   * @param data - The new data to set\n   */\n  setData(data: JsonObject): void {\n    if (!this.#abortController.signal.aborted) {\n      this.#currentData = data;\n      const oldDeferred = this.#deferred;\n      this.#deferred = createDeferred();\n      oldDeferred.resolve();\n    }\n  }\n\n  /**\n   * Close the config source, preventing any further updates.\n   */\n  close(): void {\n    this.#currentData = undefined;\n    this.#abortController.abort();\n  }\n\n  toString() {\n    return `MutableConfigSource{}`;\n  }\n}\n"],"names":["createDeferred","waitOrAbort"],"mappings":";;;;;AAuCO,MAAM,mBAAA,CAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvD,OAAO,OAAO,OAAA,EAA2D;AACvE,IAAA,OAAO,IAAI,mBAAA;AAAA,MACT,SAAS,OAAA,IAAW,gBAAA;AAAA,MACpB,OAAA,EAAS;AAAA,KACX;AAAA,EACF;AAAA,EAEA,YAAA;AAAA,EACA,SAAA;AAAA,EACS,QAAA;AAAA,EACA,gBAAA,GAAmB,IAAI,eAAA,EAAgB;AAAA,EAExC,WAAA,CAAY,SAAiB,WAAA,EAA0B;AAC7D,IAAA,IAAA,CAAK,YAAA,GAAe,WAAA;AACpB,IAAA,IAAA,CAAK,QAAA,GAAW,OAAA;AAChB,IAAA,IAAA,CAAK,YAAYA,oBAAA,EAAe;AAAA,EAClC;AAAA,EAEA,OAAO,eACL,OAAA,EAC4B;AAC5B,IAAA,IAAI,kBAAkB,IAAA,CAAK,SAAA;AAE3B,IAAA,IAAI,IAAA,CAAK,iBAAiB,MAAA,EAAW;AACnC,MAAA,MAAM,EAAE,OAAA,EAAS,CAAC,EAAE,IAAA,EAAM,IAAA,CAAK,YAAA,EAAc,OAAA,EAAS,IAAA,CAAK,QAAA,EAAU,CAAA,EAAE;AAAA,IACzE;AAEA,IAAA,WAAS;AACP,MAAA,MAAM,CAAC,EAAE,CAAA,GAAI,MAAMC,kBAAY,eAAA,EAAiB;AAAA,QAC9C,OAAA,EAAS,MAAA;AAAA,QACT,KAAK,gBAAA,CAAiB;AAAA,OACvB,CAAA;AACD,MAAA,IAAI,CAAC,EAAA,EAAI;AACP,QAAA;AAAA,MACF;AACA,MAAA,eAAA,GAAkB,IAAA,CAAK,SAAA;AAEvB,MAAA,IAAI,IAAA,CAAK,iBAAiB,MAAA,EAAW;AACnC,QAAA,MAAM;AAAA,UACJ,OAAA,EAAS,CAAC,EAAE,IAAA,EAAM,KAAK,YAAA,EAAc,OAAA,EAAS,IAAA,CAAK,QAAA,EAAU;AAAA,SAC/D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,IAAA,EAAwB;AAC9B,IAAA,IAAI,CAAC,IAAA,CAAK,gBAAA,CAAiB,MAAA,CAAO,OAAA,EAAS;AACzC,MAAA,IAAA,CAAK,YAAA,GAAe,IAAA;AACpB,MAAA,MAAM,cAAc,IAAA,CAAK,SAAA;AACzB,MAAA,IAAA,CAAK,YAAYD,oBAAA,EAAe;AAChC,MAAA,WAAA,CAAY,OAAA,EAAQ;AAAA,IACtB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,KAAA,GAAc;AACZ,IAAA,IAAA,CAAK,YAAA,GAAe,MAAA;AACpB,IAAA,IAAA,CAAK,iBAAiB,KAAA,EAAM;AAAA,EAC9B;AAAA,EAEA,QAAA,GAAW;AACT,IAAA,OAAO,CAAA,qBAAA,CAAA;AAAA,EACT;AACF;;;;"}