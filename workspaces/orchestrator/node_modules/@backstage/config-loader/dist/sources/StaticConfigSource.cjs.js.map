{"version":3,"file":"StaticConfigSource.cjs.js","sources":["../../src/sources/StaticConfigSource.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, Observable, createDeferred } from '@backstage/types';\nimport {\n  AsyncConfigSourceGenerator,\n  ConfigSource,\n  ReadConfigDataOptions,\n} from './types';\n\n/**\n * Options for {@link StaticConfigSource.create}.\n *\n * @public\n */\nexport interface StaticConfigSourceOptions {\n  data:\n    | JsonObject\n    | Observable<JsonObject>\n    | PromiseLike<JsonObject>\n    | AsyncIterable<JsonObject>;\n  context?: string;\n}\n\n/** @internal */\nclass StaticObservableConfigSource implements ConfigSource {\n  constructor(\n    private readonly data: Observable<JsonObject>,\n    private readonly context: string,\n  ) {}\n\n  async *readConfigData(\n    options?: ReadConfigDataOptions | undefined,\n  ): AsyncConfigSourceGenerator {\n    const queue = new Array<JsonObject>();\n    let deferred = createDeferred();\n\n    const sub = this.data.subscribe({\n      next(value) {\n        queue.push(value);\n        deferred.resolve();\n        deferred = createDeferred();\n      },\n      complete() {\n        deferred.resolve();\n      },\n    });\n\n    const signal = options?.signal;\n    if (signal) {\n      const onAbort = () => {\n        sub.unsubscribe();\n        queue.length = 0;\n        deferred.resolve();\n        signal.removeEventListener('abort', onAbort);\n      };\n\n      signal.addEventListener('abort', onAbort);\n    }\n\n    for (;;) {\n      await deferred;\n      if (queue.length === 0) {\n        return;\n      }\n      while (queue.length > 0) {\n        yield { configs: [{ data: queue.shift()!, context: this.context }] };\n      }\n    }\n  }\n}\n\nfunction isObservable<T>(value: {}): value is Observable<T> {\n  return 'subscribe' in value && typeof (value as any).subscribe === 'function';\n}\n\nfunction isAsyncIterable<T>(value: {}): value is AsyncIterable<T> {\n  return Symbol.asyncIterator in value;\n}\n\n/**\n * A configuration source that reads from a static object, promise, iterable, or observable.\n *\n * @public\n */\nexport class StaticConfigSource implements ConfigSource {\n  /**\n   * Creates a new {@link StaticConfigSource}.\n   *\n   * @param options - Options for the config source\n   * @returns A new static config source\n   */\n  static create(options: StaticConfigSourceOptions): ConfigSource {\n    const { data, context = 'static-config' } = options;\n    if (!data) {\n      return {\n        async *readConfigData(): AsyncConfigSourceGenerator {\n          yield { configs: [] };\n          return;\n        },\n      };\n    }\n\n    if (isObservable<JsonObject>(data)) {\n      return new StaticObservableConfigSource(data, context);\n    }\n\n    if (isAsyncIterable(data)) {\n      return {\n        async *readConfigData(): AsyncConfigSourceGenerator {\n          for await (const value of data) {\n            yield { configs: [{ data: value, context }] };\n          }\n        },\n      };\n    }\n\n    return new StaticConfigSource(data, context);\n  }\n\n  private constructor(\n    private readonly promise: JsonObject | PromiseLike<JsonObject>,\n    private readonly context: string,\n  ) {}\n\n  async *readConfigData(): AsyncConfigSourceGenerator {\n    yield { configs: [{ data: await this.promise, context: this.context }] };\n    return;\n  }\n\n  toString() {\n    return `StaticConfigSource{}`;\n  }\n}\n"],"names":["createDeferred"],"mappings":"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"}