{"version":3,"file":"util.cjs.js","sources":["../src/util.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport {\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { parseRepoUrl } from '@backstage/plugin-scaffolder-node';\nimport { OctokitOptions } from '@octokit/core/dist-types/types';\n\nconst DEFAULT_TIMEOUT_MS = 60_000;\n\n/**\n * Helper for generating octokit configuration options.\n * If no token is provided, it will attempt to get a token from the credentials provider.\n * @public\n */\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  host: string;\n  owner?: string;\n  repo?: string;\n}): Promise<OctokitOptions>;\n\n/**\n * Helper for generating octokit configuration options for given repoUrl.\n * If no token is provided, it will attempt to get a token from the credentials provider.\n * @public\n * @deprecated Use options `host`, `owner` and `repo` instead of `repoUrl`.\n */\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  repoUrl: string;\n}): Promise<OctokitOptions>;\n\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  host?: string;\n  owner?: string;\n  repo?: string;\n  repoUrl?: string;\n}): Promise<OctokitOptions> {\n  const { integrations, credentialsProvider, token, repoUrl } = options;\n  const { host, owner, repo } = repoUrl\n    ? parseRepoUrl(repoUrl, integrations)\n    : options;\n\n  const requestOptions = {\n    // set timeout to 60 seconds\n    timeout: DEFAULT_TIMEOUT_MS,\n  };\n\n  const integrationConfig = integrations.github.byHost(host!)?.config;\n\n  if (!integrationConfig) {\n    throw new InputError(`No integration for host ${host}`);\n  }\n\n  // short circuit the `githubCredentialsProvider` if there is a token provided by the caller already\n  if (token) {\n    return {\n      auth: token,\n      baseUrl: integrationConfig.apiBaseUrl,\n      previews: ['nebula-preview'],\n      request: requestOptions,\n    };\n  }\n\n  if (!owner || !repo) {\n    throw new InputError(\n      `No owner and/or repo provided, which is required if a token is not provided`,\n    );\n  }\n\n  const githubCredentialsProvider =\n    credentialsProvider ??\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  const { token: credentialProviderToken } =\n    await githubCredentialsProvider.getCredentials({\n      url: `https://${host}/${encodeURIComponent(owner)}/${encodeURIComponent(\n        repo,\n      )}`,\n    });\n\n  if (!credentialProviderToken) {\n    throw new InputError(\n      `No token available for host: ${host}, with owner ${owner}, and repo ${repo}. Make sure GitHub auth is configured correctly. See https://backstage.io/docs/auth/github/provider for more details.`,\n    );\n  }\n\n  return {\n    auth: credentialProviderToken,\n    baseUrl: integrationConfig.apiBaseUrl,\n    previews: ['nebula-preview'],\n  };\n}\n"],"names":["parseRepoUrl","InputError","DefaultGithubCredentialsProvider"],"mappings":";;;;;;AAyBA,MAAM,kBAAA,GAAqB,GAAA;AA6B3B,eAAsB,kBAAkB,OAAA,EAQZ;AAC1B,EAAA,MAAM,EAAE,YAAA,EAAc,mBAAA,EAAqB,KAAA,EAAO,SAAQ,GAAI,OAAA;AAC9D,EAAA,MAAM,EAAE,MAAM,KAAA,EAAO,IAAA,KAAS,OAAA,GAC1BA,iCAAA,CAAa,OAAA,EAAS,YAAY,CAAA,GAClC,OAAA;AAEJ,EAAA,MAAM,cAAA,GAAiB;AAAA;AAAA,IAErB,OAAA,EAAS;AAAA,GACX;AAEA,EAAA,MAAM,iBAAA,GAAoB,YAAA,CAAa,MAAA,CAAO,MAAA,CAAO,IAAK,CAAA,EAAG,MAAA;AAE7D,EAAA,IAAI,CAAC,iBAAA,EAAmB;AACtB,IAAA,MAAM,IAAIC,iBAAA,CAAW,CAAA,wBAAA,EAA2B,IAAI,CAAA,CAAE,CAAA;AAAA,EACxD;AAGA,EAAA,IAAI,KAAA,EAAO;AACT,IAAA,OAAO;AAAA,MACL,IAAA,EAAM,KAAA;AAAA,MACN,SAAS,iBAAA,CAAkB,UAAA;AAAA,MAC3B,QAAA,EAAU,CAAC,gBAAgB,CAAA;AAAA,MAC3B,OAAA,EAAS;AAAA,KACX;AAAA,EACF;AAEA,EAAA,IAAI,CAAC,KAAA,IAAS,CAAC,IAAA,EAAM;AACnB,IAAA,MAAM,IAAIA,iBAAA;AAAA,MACR,CAAA,2EAAA;AAAA,KACF;AAAA,EACF;AAEA,EAAA,MAAM,yBAAA,GACJ,mBAAA,IACAC,4CAAA,CAAiC,gBAAA,CAAiB,YAAY,CAAA;AAEhE,EAAA,MAAM,EAAE,KAAA,EAAO,uBAAA,EAAwB,GACrC,MAAM,0BAA0B,cAAA,CAAe;AAAA,IAC7C,KAAK,CAAA,QAAA,EAAW,IAAI,IAAI,kBAAA,CAAmB,KAAK,CAAC,CAAA,CAAA,EAAI,kBAAA;AAAA,MACnD;AAAA,KACD,CAAA;AAAA,GACF,CAAA;AAEH,EAAA,IAAI,CAAC,uBAAA,EAAyB;AAC5B,IAAA,MAAM,IAAID,iBAAA;AAAA,MACR,CAAA,6BAAA,EAAgC,IAAI,CAAA,aAAA,EAAgB,KAAK,cAAc,IAAI,CAAA,qHAAA;AAAA,KAC7E;AAAA,EACF;AAEA,EAAA,OAAO;AAAA,IACL,IAAA,EAAM,uBAAA;AAAA,IACN,SAAS,iBAAA,CAAkB,UAAA;AAAA,IAC3B,QAAA,EAAU,CAAC,gBAAgB;AAAA,GAC7B;AACF;;;;"}