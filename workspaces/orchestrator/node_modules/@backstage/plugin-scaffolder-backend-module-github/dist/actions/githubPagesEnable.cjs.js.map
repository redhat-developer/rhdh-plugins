{"version":3,"file":"githubPagesEnable.cjs.js","sources":["../../src/actions/githubPagesEnable.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { Octokit } from 'octokit';\nimport {\n  createTemplateAction,\n  parseRepoUrl,\n} from '@backstage/plugin-scaffolder-node';\nimport { examples } from './githubPagesEnable.examples';\nimport { getOctokitOptions } from '../util';\n\n/**\n * Creates a new action that enables GitHub Pages for a repository.\n *\n * @public\n */\nexport function createGithubPagesEnableAction(options: {\n  integrations: ScmIntegrationRegistry;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, githubCredentialsProvider } = options;\n\n  return createTemplateAction({\n    id: 'github:pages:enable',\n    examples,\n    description: 'Enables GitHub Pages for a repository.',\n    schema: {\n      input: {\n        repoUrl: z =>\n          z.string({\n            description:\n              'Accepts the format `github.com?repo=reponame&owner=owner` where `reponame` is the new repository name and `owner` is an organization or username',\n          }),\n        buildType: z =>\n          z\n            .enum(['legacy', 'workflow'], {\n              description:\n                'The GitHub Pages build type - `legacy` or `workflow`. Default is `workflow`',\n            })\n            .default('workflow')\n            .optional(),\n        sourceBranch: z =>\n          z\n            .string({\n              description: 'The GitHub Pages source branch. Default is \"main\"',\n            })\n            .default('main')\n            .optional(),\n        sourcePath: z =>\n          z\n            .enum(['/', '/docs'], {\n              description:\n                'The GitHub Pages source path - \"/\" or \"/docs\". Default is \"/\"',\n            })\n            .default('/')\n            .optional(),\n        token: z =>\n          z\n            .string({\n              description: 'The token to use for authorization to GitHub',\n            })\n            .optional(),\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        buildType = 'workflow',\n        sourceBranch = 'main',\n        sourcePath = '/',\n        token: providedToken,\n      } = ctx.input;\n\n      const { host, owner, repo } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const octokitOptions = await getOctokitOptions({\n        integrations,\n        credentialsProvider: githubCredentialsProvider,\n        token: providedToken,\n        host,\n        owner,\n        repo,\n      });\n      const client = new Octokit({\n        ...octokitOptions,\n        log: ctx.logger,\n      });\n\n      ctx.logger.info(\n        `Attempting to enable GitHub Pages for ${owner}/${repo} with \"${buildType}\" build type, on source branch \"${sourceBranch}\" and source path \"${sourcePath}\"`,\n      );\n\n      await ctx.checkpoint({\n        key: `enabled.github.pages.${owner}.${repo}`,\n        fn: async () => {\n          await client.request('POST /repos/{owner}/{repo}/pages', {\n            owner: owner,\n            repo: repo,\n            build_type: buildType,\n            source: {\n              branch: sourceBranch,\n              path: sourcePath,\n            },\n            headers: {\n              'X-GitHub-Api-Version': '2022-11-28',\n            },\n          });\n        },\n      });\n\n      ctx.logger.info('Completed enabling GitHub Pages');\n    },\n  });\n}\n"],"names":["createTemplateAction","examples","parseRepoUrl","InputError","getOctokitOptions","Octokit"],"mappings":"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"}