{"version":3,"file":"plugin.cjs.js","sources":["../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createBackendPlugin,\n} from '@backstage/backend-plugin-api';\nimport {\n  LunrSearchEngine,\n  RegisterCollatorParameters,\n  RegisterDecoratorParameters,\n  SearchEngine,\n} from '@backstage/plugin-search-backend-node';\nimport {\n  SearchEngineRegistryExtensionPoint,\n  searchEngineRegistryExtensionPoint,\n  searchIndexRegistryExtensionPoint,\n  SearchIndexRegistryExtensionPoint,\n  searchIndexServiceRef,\n} from '@backstage/plugin-search-backend-node/alpha';\n\nimport { createRouter } from './service/router';\n\nclass SearchIndexRegistry implements SearchIndexRegistryExtensionPoint {\n  private collators: RegisterCollatorParameters[] = [];\n  private decorators: RegisterDecoratorParameters[] = [];\n\n  public addCollator(options: RegisterCollatorParameters): void {\n    this.collators.push(options);\n  }\n\n  public addDecorator(options: RegisterDecoratorParameters): void {\n    this.decorators.push(options);\n  }\n\n  public getCollators(): RegisterCollatorParameters[] {\n    return this.collators;\n  }\n\n  public getDecorators(): RegisterDecoratorParameters[] {\n    return this.decorators;\n  }\n}\n\nclass SearchEngineRegistry implements SearchEngineRegistryExtensionPoint {\n  private searchEngine: SearchEngine | null = null;\n\n  public setSearchEngine(searchEngine: SearchEngine): void {\n    if (this.searchEngine) {\n      throw new Error('Multiple Search engines is not supported at this time');\n    }\n    this.searchEngine = searchEngine;\n  }\n\n  public getSearchEngine(): SearchEngine | null {\n    return this.searchEngine;\n  }\n}\n\n/**\n * The Search plugin is responsible for starting search indexing processes and return search results.\n * @public\n */\nexport default createBackendPlugin({\n  pluginId: 'search',\n  register(env) {\n    const searchIndexRegistry = new SearchIndexRegistry();\n    env.registerExtensionPoint(\n      searchIndexRegistryExtensionPoint,\n      searchIndexRegistry,\n    );\n\n    const searchEngineRegistry = new SearchEngineRegistry();\n    env.registerExtensionPoint(\n      searchEngineRegistryExtensionPoint,\n      searchEngineRegistry,\n    );\n\n    env.registerInit({\n      deps: {\n        logger: coreServices.logger,\n        config: coreServices.rootConfig,\n        discovery: coreServices.discovery,\n        permissions: coreServices.permissions,\n        auth: coreServices.auth,\n        http: coreServices.httpRouter,\n        httpAuth: coreServices.httpAuth,\n        lifecycle: coreServices.rootLifecycle,\n        searchIndexService: searchIndexServiceRef,\n      },\n      async init({\n        config,\n        logger,\n        discovery,\n        permissions,\n        auth,\n        http,\n        httpAuth,\n        lifecycle,\n        searchIndexService,\n      }) {\n        let searchEngine = searchEngineRegistry.getSearchEngine();\n        if (!searchEngine) {\n          searchEngine = new LunrSearchEngine({\n            logger,\n          });\n        }\n\n        const collators = searchIndexRegistry.getCollators();\n        const decorators = searchIndexRegistry.getDecorators();\n        searchIndexService.init({\n          searchEngine: searchEngine!,\n          collators,\n          decorators,\n        });\n\n        lifecycle.addStartupHook(async () => {\n          await searchIndexService.start();\n        });\n\n        lifecycle.addShutdownHook(async () => {\n          await searchIndexService.stop();\n        });\n\n        const router = await createRouter({\n          config,\n          discovery,\n          permissions,\n          auth,\n          httpAuth,\n          logger,\n          engine: searchEngine,\n          types: searchIndexService.getDocumentTypes(),\n        });\n\n        http.use(router);\n      },\n    });\n  },\n});\n"],"names":["createBackendPlugin","searchIndexRegistryExtensionPoint","searchEngineRegistryExtensionPoint","coreServices","searchIndexServiceRef","LunrSearchEngine","router","createRouter"],"mappings":"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"}