{"version":3,"file":"appWrappers.esm.js","sources":["../../src/testUtils/appWrappers.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentType,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  createElement,\n} from 'react';\nimport { MemoryRouter, Route } from 'react-router-dom';\nimport { themes, UnifiedThemeProvider } from '@backstage/theme';\nimport MockIcon from '@material-ui/icons/AcUnit';\nimport { AppIcons, createSpecializedApp } from '@backstage/core-app-api';\nimport {\n  AppComponents,\n  attachComponentData,\n  BootErrorPageProps,\n  createRouteRef,\n  ExternalRouteRef,\n  IconComponent,\n  RouteRef,\n} from '@backstage/core-plugin-api';\nimport { MatcherFunction, RenderResult } from '@testing-library/react';\nimport { LegacyRootOption, renderWithEffects } from './testingLibrary';\nimport { defaultApis } from './defaultApis';\nimport { mockApis } from './mockApis';\n\nconst mockIcons = {\n  'kind:api': MockIcon,\n  'kind:component': MockIcon,\n  'kind:domain': MockIcon,\n  'kind:group': MockIcon,\n  'kind:location': MockIcon,\n  'kind:system': MockIcon,\n  'kind:user': MockIcon,\n  'kind:resource': MockIcon,\n  'kind:template': MockIcon,\n\n  brokenImage: MockIcon,\n  catalog: MockIcon,\n  scaffolder: MockIcon,\n  techdocs: MockIcon,\n  search: MockIcon,\n  chat: MockIcon,\n  dashboard: MockIcon,\n  docs: MockIcon,\n  email: MockIcon,\n  github: MockIcon,\n  group: MockIcon,\n  help: MockIcon,\n  user: MockIcon,\n  warning: MockIcon,\n  star: MockIcon,\n  unstarred: MockIcon,\n};\n\nconst ErrorBoundaryFallback = ({ error }: { error: Error }) => {\n  throw new Error(`Reached ErrorBoundaryFallback Page with error, ${error}`);\n};\nconst NotFoundErrorPage = () => {\n  throw new Error('Reached NotFound Page');\n};\nconst BootErrorPage = ({ step, error }: BootErrorPageProps) => {\n  throw new Error(`Reached BootError Page at step ${step} with error ${error}`);\n};\nconst Progress = () => <div data-testid=\"progress\" />;\n\nconst NoRender = (_props: { children: ReactNode }) => null;\n\n/**\n * Options to customize the behavior of the test app wrapper.\n * @public\n */\nexport type TestAppOptions = {\n  /**\n   * Initial route entries to pass along as `initialEntries` to the router.\n   */\n  routeEntries?: string[];\n\n  /**\n   * An object of paths to mount route ref on, with the key being the path and the value\n   * being the RouteRef that the path will be bound to. This allows the route refs to be\n   * used by `useRouteRef` in the rendered elements.\n   *\n   * @example\n   * wrapInTestApp(<MyComponent />, \\{\n   *   mountedRoutes: \\{\n   *     '/my-path': myRouteRef,\n   *   \\}\n   * \\})\n   * // ...\n   * const link = useRouteRef(myRouteRef)\n   */\n  mountedRoutes?: { [path: string]: RouteRef | ExternalRouteRef };\n\n  /**\n   * Components to be forwarded to the `components` option of `createApp`.\n   */\n  components?: Partial<AppComponents>;\n\n  /**\n   * Icons to be forwarded to the `icons` option of `createApp`.\n   */\n  icons?: Partial<AppIcons> & {\n    [key in string]: IconComponent;\n  };\n};\n\nfunction isExternalRouteRef(\n  routeRef: RouteRef | ExternalRouteRef,\n): routeRef is ExternalRouteRef {\n  // TODO(Rugvip): Least ugly workaround for now, but replace :D\n  return String(routeRef).includes('{type=external,');\n}\n\n/**\n * Creates a Wrapper component that wraps a component inside a Backstage test app,\n * providing a mocked theme and app context, along with mocked APIs.\n *\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function createTestAppWrapper(\n  options: TestAppOptions = {},\n): (props: { children: ReactNode }) => JSX.Element {\n  const { routeEntries = ['/'] } = options;\n  const boundRoutes = new Map<ExternalRouteRef, RouteRef>();\n\n  const app = createSpecializedApp({\n    apis: mockApis,\n    defaultApis,\n    // Bit of a hack to make sure that the default config loader isn't used\n    // as that would force every single test to wait for config loading.\n    configLoader: false as unknown as undefined,\n    components: {\n      Progress,\n      BootErrorPage,\n      NotFoundErrorPage,\n      ErrorBoundaryFallback,\n      Router: ({ children }) => (\n        <MemoryRouter initialEntries={routeEntries} children={children} />\n      ),\n      ...options.components,\n    },\n    icons: {\n      ...mockIcons,\n      ...options.icons,\n    },\n    plugins: [],\n    themes: [\n      {\n        id: 'light',\n        title: 'Test App Theme',\n        variant: 'light',\n        Provider: ({ children }) => (\n          <UnifiedThemeProvider theme={themes.light}>\n            {children}\n          </UnifiedThemeProvider>\n        ),\n      },\n    ],\n    bindRoutes: ({ bind }) => {\n      for (const [externalRef, absoluteRef] of boundRoutes) {\n        bind(\n          { ref: externalRef },\n          {\n            ref: absoluteRef,\n          },\n        );\n      }\n    },\n  });\n\n  const routeElements = Object.entries(options.mountedRoutes ?? {}).map(\n    ([path, routeRef]) => {\n      const Page = () => <div>Mounted at {path}</div>;\n\n      // Allow external route refs to be bound to paths as well, for convenience.\n      // We work around it by creating and binding an absolute ref to the external one.\n      if (isExternalRouteRef(routeRef)) {\n        const absoluteRef = createRouteRef({ id: 'id' });\n        boundRoutes.set(routeRef, absoluteRef);\n        attachComponentData(Page, 'core.mountPoint', absoluteRef);\n      } else {\n        attachComponentData(Page, 'core.mountPoint', routeRef);\n      }\n      return <Route key={path} path={path} element={<Page />} />;\n    },\n  );\n\n  const AppProvider = app.getProvider();\n  const AppRouter = app.getRouter();\n\n  const TestAppWrapper = ({ children }: { children: ReactNode }) => (\n    <AppProvider>\n      <AppRouter>\n        <NoRender>{routeElements}</NoRender>\n        {children}\n      </AppRouter>\n    </AppProvider>\n  );\n\n  return TestAppWrapper;\n}\n\n/**\n * Wraps a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport function wrapInTestApp(\n  Component: ComponentType | ReactNode,\n  options: TestAppOptions = {},\n): ReactElement {\n  const TestAppWrapper = createTestAppWrapper(options);\n\n  let wrappedElement: ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as ReactElement;\n  }\n\n  return <TestAppWrapper>{wrappedElement}</TestAppWrapper>;\n}\n\n/**\n * Renders a component inside a Backstage test app, providing a mocked theme\n * and app context, along with mocked APIs.\n *\n * The render executes async effects similar to `renderWithEffects`. To avoid this\n * behavior, use a regular `render()` + `wrapInTestApp()` instead.\n *\n * @param Component - A component or react node to render inside the test app.\n * @param options - Additional options for the rendering.\n * @public\n */\nexport async function renderInTestApp(\n  Component: ComponentType<PropsWithChildren<{}>> | ReactNode,\n  options: TestAppOptions & LegacyRootOption = {},\n): Promise<RenderResult> {\n  let wrappedElement: ReactElement;\n  if (Component instanceof Function) {\n    wrappedElement = createElement(Component as ComponentType);\n  } else {\n    wrappedElement = Component as ReactElement;\n  }\n  const { legacyRoot } = options;\n\n  return renderWithEffects(wrappedElement, {\n    wrapper: createTestAppWrapper(options),\n    legacyRoot,\n  });\n}\n\n/**\n * Returns a `@testing-library/react` valid MatcherFunction for supplied text\n *\n * @param string - text Text to match by element's textContent\n *\n * @public\n */\nexport const textContentMatcher =\n  (text: string): MatcherFunction =>\n  (_, node) => {\n    if (!node) {\n      return false;\n    }\n\n    const hasText = (textNode: Element) =>\n      textNode?.textContent?.includes(text) ?? false;\n    const childrenDontHaveText = (containerNode: Element) =>\n      Array.from(containerNode?.children).every(child => !hasText(child));\n\n    return hasText(node) && childrenDontHaveText(node);\n  };\n"],"names":[],"mappings":"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"}