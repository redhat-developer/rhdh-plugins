{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport {\n  scaffolderActionsExtensionPoint,\n  scaffolderAutocompleteExtensionPoint,\n} from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createGithubActionsDispatchAction,\n  createGithubAutolinksAction,\n  createGithubDeployKeyAction,\n  createGithubEnvironmentAction,\n  createGithubIssuesLabelAction,\n  createGithubIssuesCreateAction,\n  createGithubRepoCreateAction,\n  createGithubRepoPushAction,\n  createGithubWebhookAction,\n  createPublishGithubAction,\n  createPublishGithubPullRequestAction,\n  createGithubPagesEnableAction,\n  createGithubBranchProtectionAction,\n} from './actions';\nimport {\n  DefaultGithubCredentialsProvider,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport { createHandleAutocompleteRequest } from './autocomplete/autocomplete';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node';\n\n/**\n * @public\n * The GitHub Module for the Scaffolder Backend\n */\nexport const githubModule = createBackendModule({\n  pluginId: 'scaffolder',\n  moduleId: 'github',\n  register({ registerInit }) {\n    registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        config: coreServices.rootConfig,\n        catalog: catalogServiceRef,\n        autocomplete: scaffolderAutocompleteExtensionPoint,\n      },\n      async init({ scaffolder, config, autocomplete, catalog }) {\n        const integrations = ScmIntegrations.fromConfig(config);\n        const githubCredentialsProvider =\n          DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n        scaffolder.addActions(\n          createGithubActionsDispatchAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubAutolinksAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubDeployKeyAction({\n            integrations,\n          }),\n          createGithubEnvironmentAction({\n            integrations,\n            catalog,\n          }),\n          createGithubIssuesLabelAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubIssuesCreateAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubRepoCreateAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubRepoPushAction({ integrations, config }),\n          createGithubWebhookAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createPublishGithubAction({\n            integrations,\n            config,\n            githubCredentialsProvider,\n          }),\n          createPublishGithubPullRequestAction({\n            integrations,\n            githubCredentialsProvider,\n            config,\n          }),\n          createGithubPagesEnableAction({\n            integrations,\n            githubCredentialsProvider,\n          }),\n          createGithubBranchProtectionAction({\n            integrations,\n          }),\n        );\n\n        autocomplete.addAutocompleteProvider({\n          id: 'github',\n          handler: createHandleAutocompleteRequest({ integrations }),\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","scaffolderActionsExtensionPoint","coreServices","catalogServiceRef","scaffolderAutocompleteExtensionPoint","autocomplete","ScmIntegrations","DefaultGithubCredentialsProvider","createGithubActionsDispatchAction","createGithubAutolinksAction","createGithubDeployKeyAction","createGithubEnvironmentAction","createGithubIssuesLabelAction","createGithubIssuesCreateAction","createGithubRepoCreateAction","createGithubRepoPushAction","createGithubWebhookAction","createPublishGithubAction","createPublishGithubPullRequestAction","createGithubPagesEnableAction","createGithubBranchProtectionAction","createHandleAutocompleteRequest"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAiDO,MAAM,eAAeA,oCAAA,CAAoB;AAAA,EAC9C,QAAA,EAAU,YAAA;AAAA,EACV,QAAA,EAAU,QAAA;AAAA,EACV,QAAA,CAAS,EAAE,YAAA,EAAa,EAAG;AACzB,IAAA,YAAA,CAAa;AAAA,MACX,IAAA,EAAM;AAAA,QACJ,UAAA,EAAYC,qCAAA;AAAA,QACZ,QAAQC,6BAAA,CAAa,UAAA;AAAA,QACrB,OAAA,EAASC,mCAAA;AAAA,QACT,YAAA,EAAcC;AAAA,OAChB;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,YAAY,MAAA,gBAAQC,cAAA,EAAc,SAAQ,EAAG;AACxD,QAAA,MAAM,YAAA,GAAeC,2BAAA,CAAgB,UAAA,CAAW,MAAM,CAAA;AACtD,QAAA,MAAM,yBAAA,GACJC,4CAAA,CAAiC,gBAAA,CAAiB,YAAY,CAAA;AAEhE,QAAA,UAAA,CAAW,UAAA;AAAA,UACTC,uDAAA,CAAkC;AAAA,YAChC,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,2CAAA,CAA4B;AAAA,YAC1B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,2CAAA,CAA4B;AAAA,YAC1B;AAAA,WACD,CAAA;AAAA,UACDC,+CAAA,CAA8B;AAAA,YAC5B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,+CAAA,CAA8B;AAAA,YAC5B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,iDAAA,CAA+B;AAAA,YAC7B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,6CAAA,CAA6B;AAAA,YAC3B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,yCAAA,CAA2B,EAAE,YAAA,EAAc,MAAA,EAAQ,CAAA;AAAA,UACnDC,uCAAA,CAA0B;AAAA,YACxB,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,gCAAA,CAA0B;AAAA,YACxB,YAAA;AAAA,YACA,MAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,sDAAA,CAAqC;AAAA,YACnC,YAAA;AAAA,YACA,yBAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,+CAAA,CAA8B;AAAA,YAC5B,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,yDAAA,CAAmC;AAAA,YACjC;AAAA,WACD;AAAA,SACH;AAEA,QAAAf,cAAA,CAAa,uBAAA,CAAwB;AAAA,UACnC,EAAA,EAAI,QAAA;AAAA,UACJ,OAAA,EAASgB,4CAAA,CAAgC,EAAE,YAAA,EAAc;AAAA,SAC1D,CAAA;AAAA,MACH;AAAA,KACD,CAAA;AAAA,EACH;AACF,CAAC;;;;"}