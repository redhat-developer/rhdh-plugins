'use strict';

var yaml = require('yaml');

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var yaml__namespace = /*#__PURE__*/_interopNamespaceCompat(yaml);

const examples = [
  {
    description: "Create a simple issue",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "github:issues:create",
          name: "Create issue",
          input: {
            repoUrl: "github.com?repo=repo&owner=owner",
            title: "Bug report",
            body: "Found a bug that needs to be fixed"
          }
        }
      ]
    })
  },
  {
    description: "Create an issue with labels and assignees",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "github:issues:create",
          name: "Create issue with metadata",
          input: {
            repoUrl: "github.com?repo=repo&owner=owner",
            title: "Feature request",
            body: "This is a new feature request",
            labels: ["enhancement", "needs-review"],
            assignees: ["octocat"],
            milestone: 1
          }
        }
      ]
    })
  },
  {
    description: "Create an issue with specific token",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "github:issues:create",
          name: "Create issue with token",
          input: {
            repoUrl: "github.com?repo=repo&owner=owner",
            title: "Documentation update",
            body: "Update the documentation for the new API",
            labels: ["documentation"],
            token: "gph_YourGitHubToken"
          }
        }
      ]
    })
  }
];

exports.examples = examples;
//# sourceMappingURL=githubIssuesCreate.examples.cjs.js.map
