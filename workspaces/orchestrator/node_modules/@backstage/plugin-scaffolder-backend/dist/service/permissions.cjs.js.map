{"version":3,"file":"permissions.cjs.js","sources":["../../src/service/permissions.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionRule } from '@backstage/plugin-permission-node';\nimport {\n  TemplateEntityStepV1beta3,\n  TemplateParametersV1beta3,\n} from '@backstage/plugin-scaffolder-common';\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  RESOURCE_TYPE_SCAFFOLDER_TASK,\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport { PermissionRuleParams } from '@backstage/plugin-permission-common';\nimport { SerializedTask } from '@backstage/plugin-scaffolder-node';\n\n/**\n *\n * @public\n */\nexport type ScaffolderPermissionRuleInput =\n  | TemplatePermissionRuleInput\n  | ActionPermissionRuleInput\n  | TaskPermissionRuleInput;\n\n/**\n * @public\n */\nexport type TemplatePermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  TParams\n>;\nexport function isTemplatePermissionRuleInput(\n  permissionRule: ScaffolderPermissionRuleInput,\n): permissionRule is TemplatePermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_TEMPLATE;\n}\n\n/**\n *\n * @public\n */\nexport type ActionPermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  TParams\n>;\nexport function isActionPermissionRuleInput(\n  permissionRule: ScaffolderPermissionRuleInput,\n): permissionRule is ActionPermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_ACTION;\n}\n\n/**\n * @public\n */\nexport type TaskPermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  SerializedTask,\n  {\n    key: string;\n    values?: string[];\n  },\n  typeof RESOURCE_TYPE_SCAFFOLDER_TASK,\n  TParams\n>;\nexport function isTaskPermissionRuleInput(\n  permissionRule: ScaffolderPermissionRuleInput,\n): permissionRule is TaskPermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_TASK;\n}\n"],"names":["RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","RESOURCE_TYPE_SCAFFOLDER_ACTION","RESOURCE_TYPE_SCAFFOLDER_TASK"],"mappings":";;;;AAiDO,SAAS,8BACd,cAAA,EAC+C;AAC/C,EAAA,OAAO,eAAe,YAAA,KAAiBA,uCAAA;AACzC;AAcO,SAAS,4BACd,cAAA,EAC6C;AAC7C,EAAA,OAAO,eAAe,YAAA,KAAiBC,qCAAA;AACzC;AAgBO,SAAS,0BACd,cAAA,EAC2C;AAC3C,EAAA,OAAO,eAAe,YAAA,KAAiBC,mCAAA;AACzC;;;;;;"}