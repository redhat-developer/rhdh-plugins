{"version":3,"file":"rules.cjs.js","sources":["../../src/service/rules.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeCreatePermissionRule } from '@backstage/plugin-permission-node';\n\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  RESOURCE_TYPE_SCAFFOLDER_TASK,\n} from '@backstage/plugin-scaffolder-common/alpha';\n\nimport {\n  TemplateEntityStepV1beta3,\n  TemplateParametersV1beta3,\n} from '@backstage/plugin-scaffolder-common';\n\nimport { SerializedTask, TaskFilter } from '@backstage/plugin-scaffolder-node';\n\nimport { z } from 'zod';\nimport { JsonObject, JsonPrimitive } from '@backstage/types';\nimport { get } from 'lodash';\n\nexport const createTemplatePermissionRule = makeCreatePermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE\n>();\n\nexport const hasTag = createTemplatePermissionRule({\n  name: 'HAS_TAG',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  description: `Match parameters or steps with the given tag`,\n  paramsSchema: z.object({\n    tag: z.string().describe('Name of the tag to match on'),\n  }),\n  apply: (resource, { tag }) => {\n    return resource['backstage:permissions']?.tags?.includes(tag) ?? false;\n  },\n  toQuery: () => ({}),\n});\n\nexport const createActionPermissionRule = makeCreatePermissionRule<\n  {\n    action: string;\n    input: JsonObject | undefined;\n  },\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION\n>();\n\nexport const hasActionId = createActionPermissionRule({\n  name: 'HAS_ACTION_ID',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  description: `Match actions with the given actionId`,\n  paramsSchema: z.object({\n    actionId: z.string().describe('Name of the actionId to match on'),\n  }),\n  apply: (resource, { actionId }) => {\n    return resource.action === actionId;\n  },\n  toQuery: () => ({}),\n});\n\nexport const hasProperty = buildHasProperty({\n  name: 'HAS_PROPERTY',\n  valueSchema: z.union([z.string(), z.number(), z.boolean(), z.null()]),\n  validateProperty: false,\n});\n\nexport const hasBooleanProperty = buildHasProperty({\n  name: 'HAS_BOOLEAN_PROPERTY',\n  valueSchema: z.boolean(),\n});\nexport const hasNumberProperty = buildHasProperty({\n  name: 'HAS_NUMBER_PROPERTY',\n  valueSchema: z.number(),\n});\nexport const hasStringProperty = buildHasProperty({\n  name: 'HAS_STRING_PROPERTY',\n  valueSchema: z.string(),\n});\n\nfunction buildHasProperty<Schema extends z.ZodType<JsonPrimitive>>({\n  name,\n  valueSchema,\n  validateProperty = true,\n}: {\n  name: string;\n  valueSchema: Schema;\n  validateProperty?: boolean;\n}) {\n  return createActionPermissionRule({\n    name,\n    description: `Allow actions with the specified property`,\n    resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n    paramsSchema: z.object({\n      key: z\n        .string()\n        .describe(`Property within the action parameters to match on`),\n      value: valueSchema\n        .optional()\n        .describe(`Value of the given property to match on`),\n    }) as unknown as z.ZodType<{ key: string; value?: z.infer<Schema> }>,\n    apply: (resource, { key, value }) => {\n      const foundValue = get(resource.input, key);\n\n      if (validateProperty && !valueSchema.safeParse(foundValue).success) {\n        return false;\n      }\n      if (value !== undefined) {\n        if (valueSchema.safeParse(value).success) {\n          return value === foundValue;\n        }\n        return false;\n      }\n\n      return foundValue !== undefined;\n    },\n    toQuery: () => ({}),\n  });\n}\n\nexport const createTaskPermissionRule = makeCreatePermissionRule<\n  SerializedTask,\n  TaskFilter,\n  typeof RESOURCE_TYPE_SCAFFOLDER_TASK\n>();\n\nexport const isTaskOwner = createTaskPermissionRule({\n  name: 'IS_TASK_OWNER',\n  description: 'Allows tasks created by certain users to be accessible',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TASK,\n  paramsSchema: z.object({\n    createdBy: z\n      .array(z.string())\n      .describe(\n        'List of creater entity refs; only tasks created by these users will be viewable',\n      ),\n  }),\n  apply: (resource, { createdBy }) => {\n    if (!resource.createdBy) {\n      return false;\n    }\n    return createdBy.includes(resource.createdBy);\n  },\n  toQuery: ({ createdBy }) => {\n    return {\n      key: 'created_by',\n      values: createdBy,\n    };\n  },\n});\n\nexport const scaffolderTemplateRules = { hasTag };\nexport const scaffolderActionRules = {\n  hasActionId,\n  hasBooleanProperty,\n  hasNumberProperty,\n  hasStringProperty,\n};\nexport const scaffolderTaskRules = { isTaskOwner };\n"],"names":["makeCreatePermissionRule","RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","z","RESOURCE_TYPE_SCAFFOLDER_ACTION","get","RESOURCE_TYPE_SCAFFOLDER_TASK"],"mappings":"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"}