{"version":3,"file":"template.cjs.js","sources":["../../../../../src/scaffolder/actions/builtin/fetch/template.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  resolveSafeChildPath,\n  UrlReaderService,\n} from '@backstage/backend-plugin-api';\nimport { ScmIntegrations } from '@backstage/integration';\nimport {\n  createTemplateAction,\n  fetchContents,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport { examples } from './template.examples';\nimport { createTemplateActionHandler } from './templateActionHandler';\n\n/**\n * Downloads a skeleton, templates variables into file and directory names and content.\n * Then places the result in the workspace, or optionally in a subdirectory\n * specified by the 'targetPath' input option.\n *\n * @public\n */\nexport function createFetchTemplateAction(options: {\n  reader: UrlReaderService;\n  integrations: ScmIntegrations;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n}) {\n  return createTemplateAction({\n    id: 'fetch:template',\n    description:\n      'Downloads a skeleton, templates variables into file and directory names and content, and places the result in the workspace, or optionally in a subdirectory specified by the `targetPath` input option.',\n    examples,\n    schema: {\n      input: {\n        url: z =>\n          z.string({\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n          }),\n        targetPath: z =>\n          z\n            .string({\n              description:\n                'Target path within the working directory to download the contents to. Defaults to the working directory root.',\n            })\n            .optional(),\n        values: z =>\n          z\n            .record(z.any(), {\n              description: 'Values to pass on to the templating engine',\n            })\n            .optional(),\n        copyWithoutRender: z =>\n          z\n            .array(z.string(), {\n              description:\n                'An array of glob patterns. Any files or directories which match are copied without being processed as templates.',\n            })\n            .optional(),\n        copyWithoutTemplating: z =>\n          z\n            .array(z.string(), {\n              description:\n                'An array of glob patterns. Contents of matched files or directories are copied without being processed, but paths are subject to rendering.',\n            })\n            .optional(),\n        cookiecutterCompat: z =>\n          z\n            .boolean({\n              description:\n                'Enable features to maximise compatibility with templates built for fetch:cookiecutter',\n            })\n            .optional(),\n        templateFileExtension: z =>\n          z\n            .union([z.string(), z.boolean()], {\n              description:\n                'If set, only files with the given extension will be templated. If set to `true`, the default extension `.njk` is used.',\n            })\n            .optional(),\n        replace: z =>\n          z\n            .boolean({\n              description:\n                'If set, replace files in targetPath instead of skipping existing ones.',\n            })\n            .optional(),\n        trimBlocks: z =>\n          z\n            .boolean({\n              description:\n                'If set, the first newline after a block is removed (block, not variable tag).',\n            })\n            .optional(),\n        lstripBlocks: z =>\n          z\n            .boolean({\n              description:\n                'If set, leading spaces and tabs are stripped from the start of a line to a block.',\n            })\n            .optional(),\n        token: z =>\n          z\n            .string({\n              description:\n                'An optional token to use for authentication when reading the resources.',\n            })\n            .optional(),\n      },\n    },\n    supportsDryRun: true,\n    handler: ctx =>\n      createTemplateActionHandler({\n        ctx,\n        resolveTemplate: async () => {\n          ctx.logger.info('Fetching template content from remote URL');\n\n          const workDir = await ctx.createTemporaryDirectory();\n          const templateDir = resolveSafeChildPath(workDir, 'template');\n\n          await fetchContents({\n            baseUrl: ctx.templateInfo?.baseUrl,\n            fetchUrl: ctx.input.url,\n            outputPath: templateDir,\n            token: ctx.input.token,\n            ...options,\n          });\n\n          return templateDir;\n        },\n        ...options,\n      }),\n  });\n}\n"],"names":["createTemplateAction","examples","createTemplateActionHandler","resolveSafeChildPath","fetchContents"],"mappings":";;;;;;;AAqCO,SAAS,0BAA0B,OAAA,EAKvC;AACD,EAAA,OAAOA,yCAAA,CAAqB;AAAA,IAC1B,EAAA,EAAI,gBAAA;AAAA,IACJ,WAAA,EACE,0MAAA;AAAA,cACFC,0BAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,KAAA,EAAO;AAAA,QACL,GAAA,EAAK,CAAA,CAAA,KACH,CAAA,CAAE,MAAA,CAAO;AAAA,UACP,WAAA,EACE;AAAA,SACH,CAAA;AAAA,QACH,UAAA,EAAY,CAAA,CAAA,KACV,CAAA,CACG,MAAA,CAAO;AAAA,UACN,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,QAAQ,CAAA,CAAA,KACN,CAAA,CACG,MAAA,CAAO,CAAA,CAAE,KAAI,EAAG;AAAA,UACf,WAAA,EAAa;AAAA,SACd,EACA,QAAA,EAAS;AAAA,QACd,mBAAmB,CAAA,CAAA,KACjB,CAAA,CACG,KAAA,CAAM,CAAA,CAAE,QAAO,EAAG;AAAA,UACjB,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,uBAAuB,CAAA,CAAA,KACrB,CAAA,CACG,KAAA,CAAM,CAAA,CAAE,QAAO,EAAG;AAAA,UACjB,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,kBAAA,EAAoB,CAAA,CAAA,KAClB,CAAA,CACG,OAAA,CAAQ;AAAA,UACP,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,qBAAA,EAAuB,CAAA,CAAA,KACrB,CAAA,CACG,KAAA,CAAM,CAAC,CAAA,CAAE,MAAA,EAAO,EAAG,CAAA,CAAE,OAAA,EAAS,CAAA,EAAG;AAAA,UAChC,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,OAAA,EAAS,CAAA,CAAA,KACP,CAAA,CACG,OAAA,CAAQ;AAAA,UACP,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,UAAA,EAAY,CAAA,CAAA,KACV,CAAA,CACG,OAAA,CAAQ;AAAA,UACP,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,YAAA,EAAc,CAAA,CAAA,KACZ,CAAA,CACG,OAAA,CAAQ;AAAA,UACP,WAAA,EACE;AAAA,SACH,EACA,QAAA,EAAS;AAAA,QACd,KAAA,EAAO,CAAA,CAAA,KACL,CAAA,CACG,MAAA,CAAO;AAAA,UACN,WAAA,EACE;AAAA,SACH,EACA,QAAA;AAAS;AAChB,KACF;AAAA,IACA,cAAA,EAAgB,IAAA;AAAA,IAChB,OAAA,EAAS,SACPC,iDAAA,CAA4B;AAAA,MAC1B,GAAA;AAAA,MACA,iBAAiB,YAAY;AAC3B,QAAA,GAAA,CAAI,MAAA,CAAO,KAAK,2CAA2C,CAAA;AAE3D,QAAA,MAAM,OAAA,GAAU,MAAM,GAAA,CAAI,wBAAA,EAAyB;AACnD,QAAA,MAAM,WAAA,GAAcC,qCAAA,CAAqB,OAAA,EAAS,UAAU,CAAA;AAE5D,QAAA,MAAMC,kCAAA,CAAc;AAAA,UAClB,OAAA,EAAS,IAAI,YAAA,EAAc,OAAA;AAAA,UAC3B,QAAA,EAAU,IAAI,KAAA,CAAM,GAAA;AAAA,UACpB,UAAA,EAAY,WAAA;AAAA,UACZ,KAAA,EAAO,IAAI,KAAA,CAAM,KAAA;AAAA,UACjB,GAAG;AAAA,SACJ,CAAA;AAED,QAAA,OAAO,WAAA;AAAA,MACT,CAAA;AAAA,MACA,GAAG;AAAA,KACJ;AAAA,GACJ,CAAA;AACH;;;;"}