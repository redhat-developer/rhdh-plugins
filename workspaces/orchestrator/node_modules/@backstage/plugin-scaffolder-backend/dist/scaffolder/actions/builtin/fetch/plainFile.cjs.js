'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var plainFile_examples = require('./plainFile.examples.cjs.js');
var pluginScaffolderNode = require('@backstage/plugin-scaffolder-node');

function createFetchPlainFileAction(options) {
  const { reader, integrations } = options;
  return pluginScaffolderNode.createTemplateAction({
    id: "fetch:plain:file",
    description: "Downloads single file and places it in the workspace.",
    examples: plainFile_examples.examples,
    schema: {
      input: {
        url: (z) => z.string({
          description: "Relative path or absolute URL pointing to the single file to fetch."
        }),
        targetPath: (z) => z.string({
          description: "Target path within the working directory to download the file as."
        }),
        token: (z) => z.string({
          description: "An optional token to use for authentication when reading the resources."
        }).optional()
      }
    },
    supportsDryRun: true,
    async handler(ctx) {
      ctx.logger.info("Fetching plain content from remote URL");
      const outputPath = backendPluginApi.resolveSafeChildPath(
        ctx.workspacePath,
        ctx.input.targetPath
      );
      await pluginScaffolderNode.fetchFile({
        reader,
        integrations,
        baseUrl: ctx.templateInfo?.baseUrl,
        fetchUrl: ctx.input.url,
        outputPath,
        token: ctx.input.token
      });
    }
  });
}

exports.createFetchPlainFileAction = createFetchPlainFileAction;
//# sourceMappingURL=plainFile.cjs.js.map
