{"version":3,"file":"log.cjs.js","sources":["../../../../../src/scaffolder/actions/builtin/debug/log.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readdir, stat } from 'fs-extra';\nimport { join, relative } from 'path';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { examples } from './log.examples';\nimport fs from 'fs';\n\nconst id = 'debug:log';\n\n/**\n * Writes a message into the log or lists all files in the workspace\n *\n * @remarks\n *\n * This task is useful for local development and testing of both the scaffolder\n * and scaffolder templates.\n *\n * @public\n */\nexport function createDebugLogAction() {\n  return createTemplateAction({\n    id,\n    description:\n      'Writes a message into the log and/or lists all files in the workspace.',\n    examples,\n    schema: {\n      input: {\n        message: z =>\n          z.string({ description: 'Message to output.' }).optional(),\n        listWorkspace: z =>\n          z\n            .union([z.boolean(), z.enum(['with-filenames', 'with-contents'])], {\n              description:\n                'List all files in the workspace. If used with \"with-contents\", also the file contents are listed.',\n            })\n            .optional(),\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(JSON.stringify(ctx.input, null, 2));\n\n      if (ctx.input?.message) {\n        ctx.logger.info(ctx.input.message);\n      }\n\n      if (ctx.input?.listWorkspace) {\n        const files = await recursiveReadDir(ctx.workspacePath);\n        ctx.logger.info(\n          `Workspace:\\n${files\n            .map(f => {\n              const relativePath = relative(ctx.workspacePath, f);\n              if (ctx.input?.listWorkspace === 'with-contents') {\n                const content = fs.readFileSync(f, 'utf-8');\n                return ` - ${relativePath}:\\n\\n  ${content}`;\n              }\n              return `  - ${relativePath}`;\n            })\n            .join('\\n')}`,\n        );\n      }\n    },\n  });\n}\n\nexport async function recursiveReadDir(dir: string): Promise<string[]> {\n  const subdirs = await readdir(dir);\n  const files = await Promise.all(\n    subdirs.map(async subdir => {\n      const res = join(dir, subdir);\n      return (await stat(res)).isDirectory() ? recursiveReadDir(res) : [res];\n    }),\n  );\n  return files.reduce((a, f) => a.concat(f), []);\n}\n"],"names":["createTemplateAction","examples","relative","fs","readdir","join","stat"],"mappings":";;;;;;;;;;;;AAsBA,MAAM,EAAA,GAAK,WAAA;AAYJ,SAAS,oBAAA,GAAuB;AACrC,EAAA,OAAOA,yCAAA,CAAqB;AAAA,IAC1B,EAAA;AAAA,IACA,WAAA,EACE,wEAAA;AAAA,cACFC,qBAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,KAAA,EAAO;AAAA,QACL,OAAA,EAAS,OACP,CAAA,CAAE,MAAA,CAAO,EAAE,WAAA,EAAa,oBAAA,EAAsB,CAAA,CAAE,QAAA,EAAS;AAAA,QAC3D,aAAA,EAAe,CAAA,CAAA,KACb,CAAA,CACG,KAAA,CAAM,CAAC,CAAA,CAAE,OAAA,EAAQ,EAAG,CAAA,CAAE,KAAK,CAAC,gBAAA,EAAkB,eAAe,CAAC,CAAC,CAAA,EAAG;AAAA,UACjE,WAAA,EACE;AAAA,SACH,EACA,QAAA;AAAS;AAChB,KACF;AAAA,IACA,cAAA,EAAgB,IAAA;AAAA,IAChB,MAAM,QAAQ,GAAA,EAAK;AACjB,MAAA,GAAA,CAAI,MAAA,CAAO,KAAK,IAAA,CAAK,SAAA,CAAU,IAAI,KAAA,EAAO,IAAA,EAAM,CAAC,CAAC,CAAA;AAElD,MAAA,IAAI,GAAA,CAAI,OAAO,OAAA,EAAS;AACtB,QAAA,GAAA,CAAI,MAAA,CAAO,IAAA,CAAK,GAAA,CAAI,KAAA,CAAM,OAAO,CAAA;AAAA,MACnC;AAEA,MAAA,IAAI,GAAA,CAAI,OAAO,aAAA,EAAe;AAC5B,QAAA,MAAM,KAAA,GAAQ,MAAM,gBAAA,CAAiB,GAAA,CAAI,aAAa,CAAA;AACtD,QAAA,GAAA,CAAI,MAAA,CAAO,IAAA;AAAA,UACT,CAAA;AAAA,EAAe,KAAA,CACZ,IAAI,CAAA,CAAA,KAAK;AACR,YAAA,MAAM,YAAA,GAAeC,aAAA,CAAS,GAAA,CAAI,aAAA,EAAe,CAAC,CAAA;AAClD,YAAA,IAAI,GAAA,CAAI,KAAA,EAAO,aAAA,KAAkB,eAAA,EAAiB;AAChD,cAAA,MAAM,OAAA,GAAUC,mBAAA,CAAG,YAAA,CAAa,CAAA,EAAG,OAAO,CAAA;AAC1C,cAAA,OAAO,MAAM,YAAY,CAAA;;AAAA,EAAA,EAAU,OAAO,CAAA,CAAA;AAAA,YAC5C;AACA,YAAA,OAAO,OAAO,YAAY,CAAA,CAAA;AAAA,UAC5B,CAAC,CAAA,CACA,IAAA,CAAK,IAAI,CAAC,CAAA;AAAA,SACf;AAAA,MACF;AAAA,IACF;AAAA,GACD,CAAA;AACH;AAEA,eAAsB,iBAAiB,GAAA,EAAgC;AACrE,EAAA,MAAM,OAAA,GAAU,MAAMC,YAAA,CAAQ,GAAG,CAAA;AACjC,EAAA,MAAM,KAAA,GAAQ,MAAM,OAAA,CAAQ,GAAA;AAAA,IAC1B,OAAA,CAAQ,GAAA,CAAI,OAAM,MAAA,KAAU;AAC1B,MAAA,MAAM,GAAA,GAAMC,SAAA,CAAK,GAAA,EAAK,MAAM,CAAA;AAC5B,MAAA,OAAA,CAAQ,MAAMC,SAAA,CAAK,GAAG,CAAA,EAAG,WAAA,KAAgB,gBAAA,CAAiB,GAAG,CAAA,GAAI,CAAC,GAAG,CAAA;AAAA,IACvE,CAAC;AAAA,GACH;AACA,EAAA,OAAO,KAAA,CAAM,MAAA,CAAO,CAAC,CAAA,EAAG,CAAA,KAAM,EAAE,MAAA,CAAO,CAAC,CAAA,EAAG,EAAE,CAAA;AAC/C;;;;;"}