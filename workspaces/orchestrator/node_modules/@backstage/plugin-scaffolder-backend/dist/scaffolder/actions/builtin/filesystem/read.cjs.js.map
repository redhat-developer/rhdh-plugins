{"version":3,"file":"read.cjs.js","sources":["../../../../../src/scaffolder/actions/builtin/filesystem/read.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { z as zod } from 'zod';\nimport { examples } from './read.examples';\n\nconst contentSchema = (z: typeof zod) =>\n  z.object({\n    name: z.string().describe('Name of the file or directory'),\n    path: z\n      .string()\n      .describe('path to the file or directory relative to the workspace'),\n    fullPath: z.string().describe('full path to the file or directory'),\n  });\n\ntype Content = zod.infer<ReturnType<typeof contentSchema>>;\n\n/**\n * Creates new action that enables reading directories in the workspace.\n * @public\n */\nexport const createFilesystemReadDirAction = () => {\n  return createTemplateAction({\n    id: 'fs:readdir',\n    description: 'Reads files and directories from the workspace',\n    supportsDryRun: true,\n    examples,\n    schema: {\n      input: {\n        paths: z => z.array(z.string().min(1)),\n        recursive: z => z.boolean().default(false),\n      },\n      output: {\n        files: z => z.array(contentSchema(z)),\n        folders: z => z.array(contentSchema(z)),\n      },\n    },\n    async handler(ctx) {\n      const files: Content[] = [];\n      const folders: Content[] = [];\n\n      for (const localPath of ctx.input.paths) {\n        const fullWorkspacePath = resolveSafeChildPath(\n          ctx.workspacePath,\n          localPath,\n        );\n        const content = await fs.readdir(fullWorkspacePath, {\n          recursive: ctx.input.recursive,\n          withFileTypes: true,\n        });\n        for (const dirent of content) {\n          const fullPath = path.join(dirent.parentPath, dirent.name);\n          const element = {\n            name: dirent.name,\n            path: path.relative(ctx.workspacePath, fullPath),\n            fullPath,\n          };\n          if (dirent.isDirectory()) {\n            folders.push(element);\n          } else {\n            files.push(element);\n          }\n        }\n      }\n\n      ctx.output('files', files);\n      ctx.output('folders', folders);\n    },\n  });\n};\n"],"names":["createTemplateAction","examples","resolveSafeChildPath","fs","path"],"mappings":";;;;;;;;;;;;;AAsBA,MAAM,aAAA,GAAgB,CAAC,CAAA,KACrB,CAAA,CAAE,MAAA,CAAO;AAAA,EACP,IAAA,EAAM,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,+BAA+B,CAAA;AAAA,EACzD,IAAA,EAAM,CAAA,CACH,MAAA,EAAO,CACP,SAAS,yDAAyD,CAAA;AAAA,EACrE,QAAA,EAAU,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,oCAAoC;AACpE,CAAC,CAAA;AAQI,MAAM,gCAAgC,MAAM;AACjD,EAAA,OAAOA,yCAAA,CAAqB;AAAA,IAC1B,EAAA,EAAI,YAAA;AAAA,IACJ,WAAA,EAAa,gDAAA;AAAA,IACb,cAAA,EAAgB,IAAA;AAAA,cAChBC,sBAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,KAAA,EAAO;AAAA,QACL,KAAA,EAAO,OAAK,CAAA,CAAE,KAAA,CAAM,EAAE,MAAA,EAAO,CAAE,GAAA,CAAI,CAAC,CAAC,CAAA;AAAA,QACrC,WAAW,CAAA,CAAA,KAAK,CAAA,CAAE,OAAA,EAAQ,CAAE,QAAQ,KAAK;AAAA,OAC3C;AAAA,MACA,MAAA,EAAQ;AAAA,QACN,OAAO,CAAA,CAAA,KAAK,CAAA,CAAE,KAAA,CAAM,aAAA,CAAc,CAAC,CAAC,CAAA;AAAA,QACpC,SAAS,CAAA,CAAA,KAAK,CAAA,CAAE,KAAA,CAAM,aAAA,CAAc,CAAC,CAAC;AAAA;AACxC,KACF;AAAA,IACA,MAAM,QAAQ,GAAA,EAAK;AACjB,MAAA,MAAM,QAAmB,EAAC;AAC1B,MAAA,MAAM,UAAqB,EAAC;AAE5B,MAAA,KAAA,MAAW,SAAA,IAAa,GAAA,CAAI,KAAA,CAAM,KAAA,EAAO;AACvC,QAAA,MAAM,iBAAA,GAAoBC,qCAAA;AAAA,UACxB,GAAA,CAAI,aAAA;AAAA,UACJ;AAAA,SACF;AACA,QAAA,MAAM,OAAA,GAAU,MAAMC,mBAAA,CAAG,OAAA,CAAQ,iBAAA,EAAmB;AAAA,UAClD,SAAA,EAAW,IAAI,KAAA,CAAM,SAAA;AAAA,UACrB,aAAA,EAAe;AAAA,SAChB,CAAA;AACD,QAAA,KAAA,MAAW,UAAU,OAAA,EAAS;AAC5B,UAAA,MAAM,WAAWC,qBAAA,CAAK,IAAA,CAAK,MAAA,CAAO,UAAA,EAAY,OAAO,IAAI,CAAA;AACzD,UAAA,MAAM,OAAA,GAAU;AAAA,YACd,MAAM,MAAA,CAAO,IAAA;AAAA,YACb,IAAA,EAAMA,qBAAA,CAAK,QAAA,CAAS,GAAA,CAAI,eAAe,QAAQ,CAAA;AAAA,YAC/C;AAAA,WACF;AACA,UAAA,IAAI,MAAA,CAAO,aAAY,EAAG;AACxB,YAAA,OAAA,CAAQ,KAAK,OAAO,CAAA;AAAA,UACtB,CAAA,MAAO;AACL,YAAA,KAAA,CAAM,KAAK,OAAO,CAAA;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAEA,MAAA,GAAA,CAAI,MAAA,CAAO,SAAS,KAAK,CAAA;AACzB,MAAA,GAAA,CAAI,MAAA,CAAO,WAAW,OAAO,CAAA;AAAA,IAC/B;AAAA,GACD,CAAA;AACH;;;;"}