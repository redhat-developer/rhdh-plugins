'use strict';

var yaml = require('yaml');

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var yaml__namespace = /*#__PURE__*/_interopNamespaceCompat(yaml);

const examples = [
  {
    description: "Read complete content of workspace",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "fs:readdir",
          id: "read-workdir",
          name: "Read workspace directory",
          input: {
            paths: ["."]
          }
        }
      ]
    })
  },
  {
    description: "Get content of the docs folder",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "fs:readdir",
          id: "read-workdir",
          name: "Read workspace directory",
          input: {
            paths: ["docs"],
            recursive: true
          }
        }
      ]
    })
  },
  {
    description: "Get content of multiple folders",
    example: yaml__namespace.stringify({
      steps: [
        {
          action: "fs:readdir",
          id: "read-workdir",
          name: "Read workspace directory",
          input: {
            paths: ["foo", "bar"],
            recursive: true
          }
        }
      ]
    })
  }
];

exports.examples = examples;
//# sourceMappingURL=read.examples.cjs.js.map
