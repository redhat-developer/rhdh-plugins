{"version":3,"file":"DirectAuthConnector.esm.js","sources":["../../../src/lib/AuthConnector/DirectAuthConnector.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AuthProviderInfo, DiscoveryApi } from '@backstage/core-plugin-api';\nimport { openLoginPopup } from '../loginPopup';\n\ntype Options = {\n  discoveryApi: DiscoveryApi;\n  environment?: string;\n  provider: AuthProviderInfo;\n};\nexport class DirectAuthConnector<DirectAuthResponse> {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly environment: string | undefined;\n  private readonly provider: AuthProviderInfo;\n\n  constructor(options: Options) {\n    const { discoveryApi, environment, provider } = options;\n\n    this.discoveryApi = discoveryApi;\n    this.environment = environment;\n    this.provider = provider;\n  }\n\n  async createSession(): Promise<DirectAuthResponse> {\n    const popupUrl = await this.buildUrl('/start');\n    const payload = (await openLoginPopup({\n      url: popupUrl,\n      name: `${this.provider.title} Login`,\n      width: 450,\n      height: 730,\n    })) as any;\n\n    return {\n      ...payload,\n      id: payload.profile.email,\n    };\n  }\n\n  async refreshSession(): Promise<any> {}\n\n  async removeSession(): Promise<void> {\n    const res = await fetch(await this.buildUrl('/logout'), {\n      method: 'POST',\n      headers: {\n        'x-requested-with': 'XMLHttpRequest',\n      },\n      credentials: 'include',\n    }).catch(error => {\n      throw new Error(`Logout request failed, ${error}`);\n    });\n\n    if (!res.ok) {\n      const error: any = new Error(`Logout request failed, ${res.statusText}`);\n      error.status = res.status;\n      throw error;\n    }\n  }\n\n  private async buildUrl(path: string): Promise<string> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('auth');\n    return `${baseUrl}/${this.provider.id}${path}?env=${this.environment}`;\n  }\n}\n"],"names":[],"mappings":";;AAuBO,MAAM,mBAAA,CAAwC;AAAA,EAClC,YAAA;AAAA,EACA,WAAA;AAAA,EACA,QAAA;AAAA,EAEjB,YAAY,OAAA,EAAkB;AAC5B,IAAA,MAAM,EAAE,YAAA,EAAc,WAAA,EAAa,QAAA,EAAS,GAAI,OAAA;AAEhD,IAAA,IAAA,CAAK,YAAA,GAAe,YAAA;AACpB,IAAA,IAAA,CAAK,WAAA,GAAc,WAAA;AACnB,IAAA,IAAA,CAAK,QAAA,GAAW,QAAA;AAAA,EAClB;AAAA,EAEA,MAAM,aAAA,GAA6C;AACjD,IAAA,MAAM,QAAA,GAAW,MAAM,IAAA,CAAK,QAAA,CAAS,QAAQ,CAAA;AAC7C,IAAA,MAAM,OAAA,GAAW,MAAM,cAAA,CAAe;AAAA,MACpC,GAAA,EAAK,QAAA;AAAA,MACL,IAAA,EAAM,CAAA,EAAG,IAAA,CAAK,QAAA,CAAS,KAAK,CAAA,MAAA,CAAA;AAAA,MAC5B,KAAA,EAAO,GAAA;AAAA,MACP,MAAA,EAAQ;AAAA,KACT,CAAA;AAED,IAAA,OAAO;AAAA,MACL,GAAG,OAAA;AAAA,MACH,EAAA,EAAI,QAAQ,OAAA,CAAQ;AAAA,KACtB;AAAA,EACF;AAAA,EAEA,MAAM,cAAA,GAA+B;AAAA,EAAC;AAAA,EAEtC,MAAM,aAAA,GAA+B;AACnC,IAAA,MAAM,MAAM,MAAM,KAAA,CAAM,MAAM,IAAA,CAAK,QAAA,CAAS,SAAS,CAAA,EAAG;AAAA,MACtD,MAAA,EAAQ,MAAA;AAAA,MACR,OAAA,EAAS;AAAA,QACP,kBAAA,EAAoB;AAAA,OACtB;AAAA,MACA,WAAA,EAAa;AAAA,KACd,CAAA,CAAE,KAAA,CAAM,CAAA,KAAA,KAAS;AAChB,MAAA,MAAM,IAAI,KAAA,CAAM,CAAA,uBAAA,EAA0B,KAAK,CAAA,CAAE,CAAA;AAAA,IACnD,CAAC,CAAA;AAED,IAAA,IAAI,CAAC,IAAI,EAAA,EAAI;AACX,MAAA,MAAM,QAAa,IAAI,KAAA,CAAM,CAAA,uBAAA,EAA0B,GAAA,CAAI,UAAU,CAAA,CAAE,CAAA;AACvE,MAAA,KAAA,CAAM,SAAS,GAAA,CAAI,MAAA;AACnB,MAAA,MAAM,KAAA;AAAA,IACR;AAAA,EACF;AAAA,EAEA,MAAc,SAAS,IAAA,EAA+B;AACpD,IAAA,MAAM,OAAA,GAAU,MAAM,IAAA,CAAK,YAAA,CAAa,WAAW,MAAM,CAAA;AACzD,IAAA,OAAO,CAAA,EAAG,OAAO,CAAA,CAAA,EAAI,IAAA,CAAK,QAAA,CAAS,EAAE,CAAA,EAAG,IAAI,CAAA,KAAA,EAAQ,IAAA,CAAK,WAAW,CAAA,CAAA;AAAA,EACtE;AACF;;;;"}