{"version":3,"file":"loginPopup.esm.js","sources":["../../src/lib/loginPopup.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Options used to open a login popup.\n *\n * @public\n */\nexport type OpenLoginPopupOptions = {\n  /**\n   * The URL that the auth popup should point to\n   */\n  url: string;\n\n  /**\n   * The name of the popup, as in second argument to window.open\n   */\n  name: string;\n\n  /**\n   * The width of the popup in pixels, defaults to 500\n   */\n  width?: number;\n\n  /**\n   * The height of the popup in pixels, defaults to 700\n   */\n  height?: number;\n};\n\ntype AuthResult =\n  | {\n      type: 'authorization_response';\n      response: unknown;\n    }\n  | {\n      type: 'authorization_response';\n      error: {\n        name: string;\n        message: string;\n      };\n    };\n\n/**\n * Show a popup pointing to a URL that starts an auth flow. Implementing the receiving\n * end of the postMessage mechanism outlined in https://tools.ietf.org/html/draft-sakimura-oauth-wmrm-00\n *\n * The redirect handler of the flow should use postMessage to communicate back\n * to the app window. The message posted to the app must match the AuthResult type.\n *\n * The returned promise resolves to the response of the message that was posted from the auth popup.\n *\n * @public\n */\nexport function openLoginPopup(\n  options: OpenLoginPopupOptions,\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    const width = options.width || 500;\n    const height = options.height || 700;\n    const left = window.screen.width / 2 - width / 2;\n    const top = window.screen.height / 2 - height / 2;\n\n    const origin = new URL(options.url).origin;\n\n    const popup = window.open(\n      options.url,\n      options.name,\n      `menubar=no,location=no,resizable=no,scrollbars=no,status=no,width=${width},height=${height},top=${top},left=${left}`,\n    );\n\n    let targetOrigin = '';\n\n    if (!popup || typeof popup.closed === 'undefined' || popup.closed) {\n      const error = new Error('Failed to open auth popup.');\n      error.name = 'PopupRejectedError';\n      reject(error);\n      return;\n    }\n\n    const messageListener = (event: MessageEvent) => {\n      if (event.source !== popup) {\n        return;\n      }\n      if (event.origin !== origin) {\n        return;\n      }\n      const { data } = event;\n\n      if (data.type === 'config_info') {\n        targetOrigin = data.targetOrigin;\n        return;\n      }\n\n      if (data.type !== 'authorization_response') {\n        return;\n      }\n      const authResult = data as AuthResult;\n\n      if ('error' in authResult) {\n        const error = new Error(authResult.error.message);\n        error.name = authResult.error.name;\n        // TODO: proper error type\n        // error.extra = authResult.error.extra;\n        reject(error);\n      } else {\n        resolve(authResult.response);\n      }\n      done();\n    };\n\n    const intervalId = setInterval(() => {\n      if (popup.closed) {\n        const errMessage = `Login failed, ${\n          targetOrigin && targetOrigin !== window.location.origin\n            ? `Incorrect app origin, expected ${targetOrigin}`\n            : 'popup was closed'\n        }`;\n        const error = new Error(errMessage);\n        error.name = 'PopupClosedError';\n        reject(error);\n        done();\n      }\n    }, 100);\n\n    function done() {\n      window.removeEventListener('message', messageListener);\n      clearInterval(intervalId);\n    }\n\n    window.addEventListener('message', messageListener);\n  });\n}\n"],"names":[],"mappings":"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"}