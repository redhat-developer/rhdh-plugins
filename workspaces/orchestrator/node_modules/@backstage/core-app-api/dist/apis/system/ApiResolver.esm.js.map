{"version":3,"file":"ApiResolver.esm.js","sources":["../../../src/apis/system/ApiResolver.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiRef,\n  ApiHolder,\n  AnyApiRef,\n  TypesToApiRefs,\n} from '@backstage/core-plugin-api';\nimport { ApiFactoryHolder } from './types';\n\n/**\n * Handles the actual on-demand instantiation and memoization of APIs out of\n * an {@link ApiFactoryHolder}.\n *\n * @public\n */\nexport class ApiResolver implements ApiHolder {\n  /**\n   * Validate factories by making sure that each of the apis can be created\n   * without hitting any circular dependencies.\n   */\n  static validateFactories(\n    factories: ApiFactoryHolder,\n    apis: Iterable<AnyApiRef>,\n  ) {\n    for (const api of apis) {\n      const heap = [api];\n      const allDeps = new Set<AnyApiRef>();\n\n      while (heap.length) {\n        const apiRef = heap.shift()!;\n        const factory = factories.get(apiRef);\n        if (!factory) {\n          continue;\n        }\n\n        for (const dep of Object.values(factory.deps)) {\n          if (dep.id === api.id) {\n            throw new Error(`Circular dependency of api factory for ${api}`);\n          }\n          if (!allDeps.has(dep)) {\n            allDeps.add(dep);\n            heap.push(dep);\n          }\n        }\n      }\n    }\n  }\n\n  private readonly apis = new Map<string, unknown>();\n\n  constructor(private readonly factories: ApiFactoryHolder) {}\n\n  get<T>(ref: ApiRef<T>): T | undefined {\n    return this.load(ref);\n  }\n\n  private load<T>(ref: ApiRef<T>, loading: AnyApiRef[] = []): T | undefined {\n    const impl = this.apis.get(ref.id);\n    if (impl) {\n      return impl as T;\n    }\n\n    const factory = this.factories.get(ref);\n    if (!factory) {\n      return undefined;\n    }\n\n    if (loading.includes(factory.api)) {\n      throw new Error(`Circular dependency of api factory for ${factory.api}`);\n    }\n\n    const deps = this.loadDeps(ref, factory.deps, [...loading, factory.api]);\n    const api = factory.factory(deps);\n    this.apis.set(ref.id, api);\n    return api as T;\n  }\n\n  private loadDeps<T>(\n    dependent: ApiRef<unknown>,\n    apis: TypesToApiRefs<T>,\n    loading: AnyApiRef[],\n  ): T {\n    const impls = {} as T;\n\n    for (const key in apis) {\n      if (apis.hasOwnProperty(key)) {\n        const ref = apis[key];\n\n        const api = this.load(ref, loading);\n        if (!api) {\n          throw new Error(\n            `No API factory available for dependency ${ref} of dependent ${dependent}`,\n          );\n        }\n        impls[key] = api;\n      }\n    }\n\n    return impls;\n  }\n}\n"],"names":[],"mappings":"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"}