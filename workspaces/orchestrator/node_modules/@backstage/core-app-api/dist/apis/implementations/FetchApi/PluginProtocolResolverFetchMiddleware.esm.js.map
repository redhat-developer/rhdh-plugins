{"version":3,"file":"PluginProtocolResolverFetchMiddleware.esm.js","sources":["../../../../src/apis/implementations/FetchApi/PluginProtocolResolverFetchMiddleware.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi } from '@backstage/core-plugin-api';\nimport { FetchMiddleware } from './types';\n\nfunction join(left: string, right: string): string {\n  if (!right || right === '/') {\n    return left;\n  }\n\n  return `${left.replace(/\\/$/, '')}/${right.replace(/^\\//, '')}`;\n}\n\n/**\n * Handles translation from plugin://some-plugin-id/<path> to concrete http(s)\n * URLs.\n */\nexport class PluginProtocolResolverFetchMiddleware implements FetchMiddleware {\n  constructor(private readonly discoveryApi: DiscoveryApi) {}\n\n  apply(next: typeof fetch): typeof fetch {\n    return async (input, init) => {\n      // NOTE(freben): The \"as any\" casts here and below are because of subtle\n      // undici type differences that happened in a node types bump. Those are\n      // immaterial to the code at hand at runtime, as the global fetch and\n      // Request are always taken from the same place.\n      const request = new Request(input as any, init);\n      const prefix = 'plugin://';\n\n      if (!request.url.startsWith(prefix)) {\n        return next(input as any, init);\n      }\n\n      // Switch to a known protocol, since browser URL parsing misbehaves wildly\n      // on foreign protocols\n      const { hostname, pathname, search, hash, username, password } = new URL(\n        `http://${request.url.substring(prefix.length)}`,\n      );\n\n      let base = await this.discoveryApi.getBaseUrl(hostname);\n      if (username || password) {\n        const baseUrl = new URL(base);\n        const authority = `${username}${password ? `:${password}` : ''}@`;\n        base = `${baseUrl.protocol}//${authority}${baseUrl.host}${baseUrl.pathname}`;\n      }\n\n      const target = `${join(base, pathname)}${search}${hash}`;\n      return next(\n        target,\n        typeof input === 'string' || isUrl(input) ? init : (input as any),\n      );\n    };\n  }\n}\n\nfunction isUrl(a: unknown): a is URL {\n  return typeof a === 'object' && a?.constructor === URL;\n}\n"],"names":[],"mappings":"AAmBA,SAAS,IAAA,CAAK,MAAc,KAAA,EAAuB;AACjD,EAAA,IAAI,CAAC,KAAA,IAAS,KAAA,KAAU,GAAA,EAAK;AAC3B,IAAA,OAAO,IAAA;AAAA,EACT;AAEA,EAAA,OAAO,CAAA,EAAG,IAAA,CAAK,OAAA,CAAQ,KAAA,EAAO,EAAE,CAAC,CAAA,CAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,KAAA,EAAO,EAAE,CAAC,CAAA,CAAA;AAC/D;AAMO,MAAM,qCAAA,CAAiE;AAAA,EAC5E,YAA6B,YAAA,EAA4B;AAA5B,IAAA,IAAA,CAAA,YAAA,GAAA,YAAA;AAAA,EAA6B;AAAA,EAE1D,MAAM,IAAA,EAAkC;AACtC,IAAA,OAAO,OAAO,OAAO,IAAA,KAAS;AAK5B,MAAA,MAAM,OAAA,GAAU,IAAI,OAAA,CAAQ,KAAA,EAAc,IAAI,CAAA;AAC9C,MAAA,MAAM,MAAA,GAAS,WAAA;AAEf,MAAA,IAAI,CAAC,OAAA,CAAQ,GAAA,CAAI,UAAA,CAAW,MAAM,CAAA,EAAG;AACnC,QAAA,OAAO,IAAA,CAAK,OAAc,IAAI,CAAA;AAAA,MAChC;AAIA,MAAA,MAAM,EAAE,UAAU,QAAA,EAAU,MAAA,EAAQ,MAAM,QAAA,EAAU,QAAA,KAAa,IAAI,GAAA;AAAA,QACnE,UAAU,OAAA,CAAQ,GAAA,CAAI,SAAA,CAAU,MAAA,CAAO,MAAM,CAAC,CAAA;AAAA,OAChD;AAEA,MAAA,IAAI,IAAA,GAAO,MAAM,IAAA,CAAK,YAAA,CAAa,WAAW,QAAQ,CAAA;AACtD,MAAA,IAAI,YAAY,QAAA,EAAU;AACxB,QAAA,MAAM,OAAA,GAAU,IAAI,GAAA,CAAI,IAAI,CAAA;AAC5B,QAAA,MAAM,SAAA,GAAY,GAAG,QAAQ,CAAA,EAAG,WAAW,CAAA,CAAA,EAAI,QAAQ,KAAK,EAAE,CAAA,CAAA,CAAA;AAC9D,QAAA,IAAA,GAAO,CAAA,EAAG,OAAA,CAAQ,QAAQ,CAAA,EAAA,EAAK,SAAS,GAAG,OAAA,CAAQ,IAAI,CAAA,EAAG,OAAA,CAAQ,QAAQ,CAAA,CAAA;AAAA,MAC5E;AAEA,MAAA,MAAM,MAAA,GAAS,GAAG,IAAA,CAAK,IAAA,EAAM,QAAQ,CAAC,CAAA,EAAG,MAAM,CAAA,EAAG,IAAI,CAAA,CAAA;AACtD,MAAA,OAAO,IAAA;AAAA,QACL,MAAA;AAAA,QACA,OAAO,KAAA,KAAU,QAAA,IAAY,KAAA,CAAM,KAAK,IAAI,IAAA,GAAQ;AAAA,OACtD;AAAA,IACF,CAAA;AAAA,EACF;AACF;AAEA,SAAS,MAAM,CAAA,EAAsB;AACnC,EAAA,OAAO,OAAO,CAAA,KAAM,QAAA,IAAY,CAAA,EAAG,WAAA,KAAgB,GAAA;AACrD;;;;"}