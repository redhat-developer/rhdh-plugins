{"version":3,"file":"startCookieAuthRefresh.esm.js","sources":["../../../../src/apis/implementations/IdentityApi/startCookieAuthRefresh.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi, ErrorApi, FetchApi } from '@backstage/core-plugin-api';\n\nconst PLUGIN_ID = 'app';\nconst CHANNEL_ID = `${PLUGIN_ID}-auth-cookie-expires-at`;\n\nconst MIN_BASE_DELAY_MS = 5 * 60_000;\n\nconst ERROR_BACKOFF_START = 5_000;\nconst ERROR_BACKOFF_FACTOR = 2;\nconst ERROR_BACKOFF_MAX = 5 * 60_000;\n\n// Messaging implementation and IDs must match\n//   plugins/auth-react/src/hooks/useCookieAuthRefresh/useCookieAuthRefresh.tsx\nexport function startCookieAuthRefresh({\n  discoveryApi,\n  fetchApi,\n  errorApi,\n}: {\n  discoveryApi: DiscoveryApi;\n  fetchApi: FetchApi;\n  errorApi: ErrorApi;\n}) {\n  let stopped = false;\n  let timeout: NodeJS.Timeout | undefined;\n  let firstError = true;\n  let errorBackoff = ERROR_BACKOFF_START;\n\n  const channel =\n    'BroadcastChannel' in window ? new BroadcastChannel(CHANNEL_ID) : undefined;\n\n  // Randomize the refreshing margin with a margin of 1-4 minutes to avoid all tabs refreshing at the same time\n  const getDelay = (expiresAt: number) => {\n    const margin = (1 + 3 * Math.random()) * 60000;\n    const delay = Math.max(expiresAt - Date.now(), MIN_BASE_DELAY_MS) - margin;\n    return delay;\n  };\n\n  const refresh = async () => {\n    try {\n      const baseUrl = await discoveryApi.getBaseUrl(PLUGIN_ID);\n      const requestUrl = `${baseUrl}/.backstage/auth/v1/cookie`;\n      const res = await fetchApi.fetch(requestUrl, {\n        credentials: 'include',\n      });\n\n      if (!res.ok) {\n        throw new Error(\n          `Request failed with status ${res.status} ${res.statusText}, see request towards ${requestUrl} for more details`,\n        );\n      }\n\n      const data = await res.json();\n      if (!data.expiresAt) {\n        throw new Error('No expiration date in response');\n      }\n\n      const expiresAt = Date.parse(data.expiresAt);\n      if (Number.isNaN(expiresAt)) {\n        throw new Error('Invalid expiration date in response');\n      }\n\n      firstError = true;\n\n      channel?.postMessage({\n        action: 'COOKIE_REFRESH_SUCCESS',\n        payload: { expiresAt: new Date(expiresAt).toISOString() },\n      });\n\n      scheduleRefresh(getDelay(expiresAt));\n    } catch (error) {\n      // Ignore the first error after successful requests\n      if (firstError) {\n        firstError = false;\n        errorBackoff = ERROR_BACKOFF_START;\n      } else {\n        errorBackoff = Math.min(\n          ERROR_BACKOFF_MAX,\n          errorBackoff * ERROR_BACKOFF_FACTOR,\n        );\n        // eslint-disable-next-line no-console\n        console.error('Session cookie refresh failed', error);\n        errorApi.post(\n          new Error(\n            `Session refresh failed, see developer console for details`,\n          ),\n        );\n      }\n\n      scheduleRefresh(errorBackoff);\n    }\n  };\n\n  const onMessage = (\n    event: MessageEvent<\n      | {\n          action: 'COOKIE_REFRESH_SUCCESS';\n          payload: { expiresAt: string };\n        }\n      | object\n    >,\n  ) => {\n    const { data } = event;\n    if (data === null || typeof data !== 'object') {\n      return;\n    }\n    if ('action' in data && data.action === 'COOKIE_REFRESH_SUCCESS') {\n      const expiresAt = Date.parse(data.payload.expiresAt);\n      if (Number.isNaN(expiresAt)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Received invalid expiration from session refresh channel',\n        );\n        return;\n      }\n\n      scheduleRefresh(getDelay(expiresAt));\n    }\n  };\n\n  function scheduleRefresh(delayMs: number) {\n    if (stopped) {\n      return;\n    }\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(refresh, delayMs);\n  }\n\n  channel?.addEventListener('message', onMessage);\n  refresh();\n\n  return () => {\n    stopped = true;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    channel?.removeEventListener('message', onMessage);\n    channel?.close();\n  };\n}\n"],"names":[],"mappings":"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"}