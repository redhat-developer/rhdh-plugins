{"version":3,"file":"overrideBaseUrlConfigs.esm.js","sources":["../../src/app/overrideBaseUrlConfigs.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig, ConfigReader } from '@backstage/config';\n\n/**\n * Creates a base URL that uses to the current document origin.\n */\nfunction createLocalBaseUrl(fullUrl: string): string {\n  const url = new URL(fullUrl);\n  url.protocol = document.location.protocol;\n  url.hostname = document.location.hostname;\n  url.port = document.location.port;\n  return url.toString().replace(/\\/$/, '');\n}\n\n/**\n * If we are able to override the app and backend base URLs to values that\n * match the origin of the current location, then this function returns a\n * new array of app configs that contain the overrides.\n *\n * @internal\n */\nexport function overrideBaseUrlConfigs(inputConfigs: AppConfig[]): AppConfig[] {\n  const urlConfigReader = ConfigReader.fromConfigs(inputConfigs);\n\n  // In tests we may not have `app.baseUrl` or `backend.baseUrl`, to keep them optional\n  const appBaseUrl = urlConfigReader.getOptionalString('app.baseUrl');\n  const backendBaseUrl = urlConfigReader.getOptionalString('backend.baseUrl');\n\n  let configs = inputConfigs;\n\n  let newBackendBaseUrl: string | undefined = undefined;\n  let newAppBaseUrl: string | undefined = undefined;\n\n  if (appBaseUrl && backendBaseUrl) {\n    const appOrigin = new URL(appBaseUrl).origin;\n    const backendOrigin = new URL(backendBaseUrl).origin;\n\n    if (appOrigin === backendOrigin) {\n      const maybeNewBackendBaseUrl = createLocalBaseUrl(backendBaseUrl);\n      if (backendBaseUrl !== maybeNewBackendBaseUrl) {\n        newBackendBaseUrl = maybeNewBackendBaseUrl;\n      }\n    }\n  }\n\n  if (appBaseUrl) {\n    const maybeNewAppBaseUrl = createLocalBaseUrl(appBaseUrl);\n    if (appBaseUrl !== maybeNewAppBaseUrl) {\n      newAppBaseUrl = maybeNewAppBaseUrl;\n    }\n  }\n\n  // Only add the relative config if there is actually data to add.\n  if (newAppBaseUrl || newBackendBaseUrl) {\n    configs = configs.concat({\n      data: {\n        app: newAppBaseUrl && {\n          baseUrl: newAppBaseUrl,\n        },\n        backend: newBackendBaseUrl && {\n          baseUrl: newBackendBaseUrl,\n        },\n      },\n      context: 'relative-resolver',\n    });\n  }\n\n  return configs;\n}\n"],"names":[],"mappings":";;AAqBA,SAAS,mBAAmB,OAAA,EAAyB;AACnD,EAAA,MAAM,GAAA,GAAM,IAAI,GAAA,CAAI,OAAO,CAAA;AAC3B,EAAA,GAAA,CAAI,QAAA,GAAW,SAAS,QAAA,CAAS,QAAA;AACjC,EAAA,GAAA,CAAI,QAAA,GAAW,SAAS,QAAA,CAAS,QAAA;AACjC,EAAA,GAAA,CAAI,IAAA,GAAO,SAAS,QAAA,CAAS,IAAA;AAC7B,EAAA,OAAO,GAAA,CAAI,QAAA,EAAS,CAAE,OAAA,CAAQ,OAAO,EAAE,CAAA;AACzC;AASO,SAAS,uBAAuB,YAAA,EAAwC;AAC7E,EAAA,MAAM,eAAA,GAAkB,YAAA,CAAa,WAAA,CAAY,YAAY,CAAA;AAG7D,EAAA,MAAM,UAAA,GAAa,eAAA,CAAgB,iBAAA,CAAkB,aAAa,CAAA;AAClE,EAAA,MAAM,cAAA,GAAiB,eAAA,CAAgB,iBAAA,CAAkB,iBAAiB,CAAA;AAE1E,EAAA,IAAI,OAAA,GAAU,YAAA;AAEd,EAAA,IAAI,iBAAA,GAAwC,MAAA;AAC5C,EAAA,IAAI,aAAA,GAAoC,MAAA;AAExC,EAAA,IAAI,cAAc,cAAA,EAAgB;AAChC,IAAA,MAAM,SAAA,GAAY,IAAI,GAAA,CAAI,UAAU,CAAA,CAAE,MAAA;AACtC,IAAA,MAAM,aAAA,GAAgB,IAAI,GAAA,CAAI,cAAc,CAAA,CAAE,MAAA;AAE9C,IAAA,IAAI,cAAc,aAAA,EAAe;AAC/B,MAAA,MAAM,sBAAA,GAAyB,mBAAmB,cAAc,CAAA;AAChE,MAAA,IAAI,mBAAmB,sBAAA,EAAwB;AAC7C,QAAA,iBAAA,GAAoB,sBAAA;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAEA,EAAA,IAAI,UAAA,EAAY;AACd,IAAA,MAAM,kBAAA,GAAqB,mBAAmB,UAAU,CAAA;AACxD,IAAA,IAAI,eAAe,kBAAA,EAAoB;AACrC,MAAA,aAAA,GAAgB,kBAAA;AAAA,IAClB;AAAA,EACF;AAGA,EAAA,IAAI,iBAAiB,iBAAA,EAAmB;AACtC,IAAA,OAAA,GAAU,QAAQ,MAAA,CAAO;AAAA,MACvB,IAAA,EAAM;AAAA,QACJ,KAAK,aAAA,IAAiB;AAAA,UACpB,OAAA,EAAS;AAAA,SACX;AAAA,QACA,SAAS,iBAAA,IAAqB;AAAA,UAC5B,OAAA,EAAS;AAAA;AACX,OACF;AAAA,MACA,OAAA,EAAS;AAAA,KACV,CAAA;AAAA,EACH;AAEA,EAAA,OAAO,OAAA;AACT;;;;"}