{"version":3,"file":"collectors.esm.js","sources":["../../src/routing/collectors.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RouteRef,\n  getComponentData,\n  BackstagePlugin,\n} from '@backstage/core-plugin-api';\nimport { isValidElement, ReactNode, Children } from 'react';\nimport { BackstageRouteObject } from './types';\nimport { createCollector } from '../extensions/traversal';\nimport { FeatureFlagged, FeatureFlaggedProps } from './FeatureFlagged';\n\n// We always add a child that matches all subroutes but without any route refs. This makes\n// sure that we're always able to match each route no matter how deep the navigation goes.\n// The route resolver then takes care of selecting the most specific match in order to find\n// mount points that are as deep in the routing tree as possible.\nexport const MATCH_ALL_ROUTE: BackstageRouteObject = {\n  caseSensitive: false,\n  path: '*',\n  element: 'match-all', // These elements aren't used, so we add in a bit of debug information\n  routeRefs: new Set(),\n  plugins: new Set(),\n};\n\nfunction stringifyNode(node: ReactNode): string {\n  const anyNode = node as { type?: { displayName?: string; name?: string } };\n  if (anyNode?.type) {\n    return (\n      anyNode.type.displayName ?? anyNode.type.name ?? String(anyNode.type)\n    );\n  }\n  return String(anyNode);\n}\n\nconst pluginSet = (\n  plugin: BackstagePlugin | undefined,\n): Set<BackstagePlugin> => {\n  const set = new Set<BackstagePlugin>();\n  if (plugin) {\n    set.add(plugin);\n  }\n  return set;\n};\n\ninterface RoutingV2CollectorContext {\n  routeRef?: RouteRef;\n  gatherPath?: string;\n  gatherRouteRef?: RouteRef;\n  obj?: BackstageRouteObject;\n  isElementAncestor?: boolean;\n}\n\n// This collects all the mount points and their plugins within an element tree.\n// Unlike regular traversal this ignores all other things, like path props and mount point gatherers.\nfunction collectSubTree(\n  node: ReactNode,\n  entries = new Array<{ routeRef: RouteRef; plugin?: BackstagePlugin }>(),\n) {\n  Children.forEach(node, element => {\n    if (!isValidElement(element)) {\n      return;\n    }\n\n    const routeRef = getComponentData<RouteRef>(element, 'core.mountPoint');\n    if (routeRef) {\n      const plugin = getComponentData<BackstagePlugin>(element, 'core.plugin');\n      entries.push({ routeRef, plugin });\n    }\n\n    collectSubTree(element.props.children, entries);\n  });\n\n  return entries;\n}\n\nexport const routingV2Collector = createCollector(\n  () => ({\n    paths: new Map<RouteRef, string>(),\n    parents: new Map<RouteRef, RouteRef | undefined>(),\n    objects: new Array<BackstageRouteObject>(),\n  }),\n  (acc, node, parent, ctx?: RoutingV2CollectorContext) => {\n    // If we're in an element prop, ignore everything\n    if (ctx?.isElementAncestor) {\n      return ctx;\n    }\n\n    // Start ignoring everything if we enter an element prop\n    if (parent?.props.element === node) {\n      return { ...ctx, isElementAncestor: true };\n    }\n\n    const pathProp: unknown = node.props?.path;\n\n    const mountPoint = getComponentData<RouteRef>(node, 'core.mountPoint');\n    if (mountPoint && pathProp) {\n      throw new Error(\n        `Path property may not be set directly on a routable extension \"${stringifyNode(\n          node,\n        )}\"`,\n      );\n    }\n\n    const parentChildren = ctx?.obj?.children ?? acc.objects;\n\n    if (pathProp !== undefined) {\n      if (typeof pathProp !== 'string') {\n        throw new Error(\n          `Element path must be a string at \"${stringifyNode(node)}\"`,\n        );\n      }\n\n      const path = pathProp.startsWith('/') ? pathProp.slice(1) : pathProp;\n\n      const elementProp = node.props.element;\n\n      if (getComponentData<boolean>(node, 'core.gatherMountPoints')) {\n        if (elementProp) {\n          throw new Error(\n            `Mount point gatherers may not have an element prop \"${stringifyNode(\n              node,\n            )}\"`,\n          );\n        }\n\n        const newObj = {\n          path,\n          element: 'gathered',\n          routeRefs: new Set<RouteRef>(),\n          caseSensitive: Boolean(node.props?.caseSensitive),\n          children: [MATCH_ALL_ROUTE],\n          plugins: new Set<BackstagePlugin>(),\n        };\n        parentChildren.push(newObj);\n\n        return {\n          obj: newObj,\n          gatherPath: path,\n          routeRef: ctx?.routeRef,\n          gatherRouteRef: ctx?.routeRef,\n        };\n      }\n\n      if (elementProp) {\n        const [extension, ...others] = collectSubTree(elementProp);\n        if (others.length > 0) {\n          throw new Error(\n            `Route element with path \"${pathProp}\" may not contain multiple routable extensions`,\n          );\n        }\n        if (!extension) {\n          return ctx;\n        }\n        const { routeRef, plugin } = extension;\n\n        const newObj = {\n          path,\n          element: 'mounted',\n          routeRefs: new Set([routeRef]),\n          caseSensitive: Boolean(node.props?.caseSensitive),\n          children: [MATCH_ALL_ROUTE],\n          plugins: pluginSet(plugin),\n        };\n        parentChildren.push(newObj);\n        acc.paths.set(routeRef, path);\n        acc.parents.set(routeRef, ctx?.routeRef);\n\n        return {\n          obj: newObj,\n          routeRef: routeRef ?? ctx?.routeRef,\n          gatherPath: path,\n          gatherRouteRef: ctx?.gatherRouteRef,\n        };\n      }\n    }\n\n    if (mountPoint) {\n      if (ctx?.gatherPath === undefined) {\n        throw new Error(\n          `Routable extension \"${stringifyNode(\n            node,\n          )}\" with mount point \"${mountPoint}\" must be assigned a path`,\n        );\n      }\n\n      ctx?.obj?.routeRefs.add(mountPoint);\n\n      const mountPointPlugin = getComponentData<BackstagePlugin>(\n        node,\n        'core.plugin',\n      );\n      if (mountPointPlugin) {\n        ctx?.obj?.plugins.add(mountPointPlugin);\n      }\n\n      acc.paths.set(mountPoint, ctx.gatherPath);\n      acc.parents.set(mountPoint, ctx?.gatherRouteRef);\n\n      return {\n        ...ctx,\n        routeRef: mountPoint,\n      };\n    }\n\n    return ctx;\n  },\n);\n\ninterface RoutingV1CollectorContext {\n  path?: string;\n  routeRef?: RouteRef;\n  obj?: BackstageRouteObject;\n  sticky?: boolean;\n}\n\n/**\n * This is the old V1 logic for collecting the routing model.\n * It is being replaced by a new collector because this collection\n * logic does not work well beyond react-router v6 beta.\n *\n * The breaking change is that react-router now requires route\n * elements to be `Route` components, and directly renders the\n * element prop rather than the `Route` itself. This means it is\n * no longer possible to create utility route components. In order\n * to fill this gap and in general simplify the route collection\n * logic, a new route collection logic is created.\n *\n * @internal\n */\nexport const routingV1Collector = createCollector(\n  () => ({\n    paths: new Map<RouteRef, string>(),\n    parents: new Map<RouteRef, RouteRef | undefined>(),\n    objects: new Array<BackstageRouteObject>(),\n  }),\n  (acc, node, parent, ctx?: RoutingV1CollectorContext) => {\n    // Ignore the top-level element within element props, since it's already been collected.\n    if (parent?.props.element === node) {\n      return ctx;\n    }\n\n    let currentObj = ctx?.obj;\n    let currentParentRouteRef = ctx?.routeRef;\n    let sticky = ctx?.sticky;\n\n    const path: string | undefined = node.props?.path;\n    const parentChildren = currentObj?.children ?? acc.objects;\n    const caseSensitive: boolean = Boolean(node.props?.caseSensitive);\n\n    // The context path is used during mount point gathering to assign the same path\n    // to all discovered mount points\n    let currentCtxPath = ctx?.path;\n\n    // Start gathering mount points when we encounter a mount point gathering flag\n    if (getComponentData<boolean>(node, 'core.gatherMountPoints')) {\n      if (!path) {\n        throw new Error('Mount point gatherer must have a path');\n      }\n      currentCtxPath = path;\n    }\n\n    // Route refs are discovered on the element itself, and on the top-level\n    // element within the element prop if it exists.\n    const element = node.props?.element;\n    let routeRef = getComponentData<RouteRef>(node, 'core.mountPoint');\n    if (!routeRef && isValidElement(element)) {\n      routeRef = getComponentData<RouteRef>(element, 'core.mountPoint');\n    }\n\n    if (routeRef) {\n      // First the path gathering\n\n      let routePath: string | undefined = path;\n      // If we're gathering mount points we use the context path as out path, unless\n      // the element has its own path, in which case we use that instead and stop gathering\n      if (currentCtxPath) {\n        if (routePath) {\n          currentCtxPath = undefined;\n        } else {\n          routePath = currentCtxPath;\n        }\n      }\n      if (!routePath) {\n        throw new Error('Mounted routable extension must have a path');\n      }\n      acc.paths.set(routeRef, routePath);\n\n      // Then the parent gathering\n\n      // \"sticky\" route ref is when we've encountered a mount point gatherer, and we want a\n      // mount points beneath it to have the same parent, regardless of internal structure\n      if (currentParentRouteRef && sticky) {\n        acc.parents.set(routeRef, currentParentRouteRef);\n\n        // When we encounter a mount point with an explicit path, we stop gathering\n        // mount points within the children and remove the sticky state\n        if (path) {\n          currentParentRouteRef = routeRef;\n          sticky = false;\n        }\n      } else {\n        acc.parents.set(routeRef, currentParentRouteRef);\n        currentParentRouteRef = routeRef;\n      }\n\n      // Then construct the objects\n\n      if (path) {\n        currentObj = {\n          caseSensitive,\n          path,\n          element: 'mounted',\n          routeRefs: new Set([routeRef]),\n          children: [MATCH_ALL_ROUTE],\n          plugins: pluginSet(\n            getComponentData<BackstagePlugin>(\n              node.props.element,\n              'core.plugin',\n            ),\n          ),\n        };\n        parentChildren.push(currentObj);\n      } else {\n        currentObj?.routeRefs.add(routeRef);\n      }\n    }\n\n    if (getComponentData<boolean>(node, 'core.gatherMountPoints')) {\n      sticky = true;\n    }\n\n    const isGatherer = getComponentData<boolean>(\n      node,\n      'core.gatherMountPoints',\n    );\n    if (isGatherer) {\n      if (!path) {\n        throw new Error('Mount point gatherer must have a path');\n      }\n      if (!routeRef) {\n        currentObj = {\n          caseSensitive,\n          path,\n          element: 'gathered',\n          routeRefs: new Set(),\n          children: [MATCH_ALL_ROUTE],\n          plugins: ctx?.obj?.plugins || new Set(),\n        };\n        parentChildren.push(currentObj);\n      }\n    }\n\n    return {\n      obj: currentObj,\n      path: currentCtxPath,\n      routeRef: currentParentRouteRef,\n      sticky,\n    };\n  },\n);\n\nexport const featureFlagCollector = createCollector(\n  () => new Set<string>(),\n  (acc, node) => {\n    if (node.type === FeatureFlagged) {\n      const props = node.props as FeatureFlaggedProps;\n      acc.add('with' in props ? props.with : props.without);\n    }\n  },\n);\n"],"names":[],"mappings":"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"}