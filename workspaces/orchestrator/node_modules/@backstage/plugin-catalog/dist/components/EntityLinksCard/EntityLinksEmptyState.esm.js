import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import { CodeSnippet } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogTranslationRef } from '../../alpha/translation.esm.js';

const ENTITY_YAML = `metadata:
  name: example
  links:
    - url: https://dashboard.example.com
      title: My Dashboard
      icon: dashboard`;
const useStyles = makeStyles(
  (theme) => ({
    code: {
      borderRadius: 6,
      margin: theme.spacing(2, 0),
      background: theme.palette.type === "dark" ? "#444" : theme.palette.common.white
    }
  }),
  { name: "PluginCatalogEntityLinksEmptyState" }
);
function EntityLinksEmptyState() {
  const classes = useStyles();
  const { t } = useTranslationRef(catalogTranslationRef);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(Typography, { variant: "body1", children: t("entityLinksCard.emptyDescription") }),
    /* @__PURE__ */ jsx("div", { className: classes.code, children: /* @__PURE__ */ jsx(
      CodeSnippet,
      {
        text: ENTITY_YAML,
        language: "yaml",
        showLineNumbers: true,
        highlightedNumbers: [3, 4, 5, 6],
        customStyle: { background: "inherit", fontSize: "115%" }
      }
    ) }),
    /* @__PURE__ */ jsx(
      Button,
      {
        variant: "contained",
        color: "primary",
        target: "_blank",
        href: "https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional",
        children: t("entityLinksCard.readMoreButtonTitle")
      }
    )
  ] });
}

export { EntityLinksEmptyState };
//# sourceMappingURL=EntityLinksEmptyState.esm.js.map
