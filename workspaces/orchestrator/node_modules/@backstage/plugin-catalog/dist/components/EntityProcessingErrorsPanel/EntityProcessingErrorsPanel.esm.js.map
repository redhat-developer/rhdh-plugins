{"version":3,"file":"EntityProcessingErrorsPanel.esm.js","sources":["../../../src/components/EntityProcessingErrorsPanel/EntityProcessingErrorsPanel.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlphaEntity, EntityStatusItem } from '@backstage/catalog-model/alpha';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  EntityRefLink,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport Box from '@material-ui/core/Box';\nimport { ResponseErrorPanel } from '@backstage/core-components';\nimport {\n  CatalogApi,\n  ENTITY_STATUS_CATALOG_PROCESSING_TYPE,\n} from '@backstage/catalog-client';\nimport { useApi, ApiHolder } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/esm/useAsync';\nimport { SerializedError } from '@backstage/errors';\nimport { catalogTranslationRef } from '../../alpha/translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst errorFilter = (i: EntityStatusItem) =>\n  i.error &&\n  i.level === 'error' &&\n  i.type === ENTITY_STATUS_CATALOG_PROCESSING_TYPE;\n\ninterface GetOwnAndAncestorsErrorsResponse {\n  items: {\n    errors: SerializedError[];\n    entity: Entity;\n  }[];\n}\n\nasync function getOwnAndAncestorsErrors(\n  entityRef: string,\n  catalogApi: CatalogApi,\n): Promise<GetOwnAndAncestorsErrorsResponse> {\n  const ancestors = await catalogApi.getEntityAncestors({ entityRef });\n  const items = ancestors.items\n    .map(item => {\n      const statuses = (item.entity as AlphaEntity).status?.items ?? [];\n      const errors = statuses\n        .filter(errorFilter)\n        .map(e => e.error)\n        .filter((e): e is SerializedError => Boolean(e));\n      return { errors: errors, entity: item.entity };\n    })\n    .filter(item => item.errors.length > 0);\n  return { items };\n}\n\n/**\n * Returns true if the given entity has any processing errors on it.\n *\n * @public\n */\nexport async function hasCatalogProcessingErrors(\n  entity: Entity,\n  context: { apis: ApiHolder },\n) {\n  const catalogApi = context.apis.get(catalogApiRef);\n  if (!catalogApi) {\n    throw new Error(`No implementation available for ${catalogApiRef}`);\n  }\n\n  const errors = await getOwnAndAncestorsErrors(\n    stringifyEntityRef(entity),\n    catalogApi,\n  );\n  return errors.items.length > 0;\n}\n\n/**\n * Displays a list of errors from the ancestors of the current entity.\n *\n * @public\n */\nexport function EntityProcessingErrorsPanel() {\n  const { entity } = useEntity();\n  const entityRef = stringifyEntityRef(entity);\n  const catalogApi = useApi(catalogApiRef);\n  const { loading, error, value } = useAsync(async () => {\n    return getOwnAndAncestorsErrors(entityRef, catalogApi);\n  }, [entityRef, catalogApi]);\n  const { t } = useTranslationRef(catalogTranslationRef);\n\n  if (error) {\n    return (\n      <Box mb={1}>\n        <ResponseErrorPanel error={error} />\n      </Box>\n    );\n  }\n\n  if (loading || !value) {\n    return null;\n  }\n\n  return (\n    <>\n      {value.items.map((ancestorError, index) => (\n        <Box key={index} mb={1}>\n          {stringifyEntityRef(entity) !==\n            stringifyEntityRef(ancestorError.entity) && (\n            <Box p={1}>\n              {t('entityProcessingErrorsDescription')}{' '}\n              <EntityRefLink entityRef={ancestorError.entity} />\n            </Box>\n          )}\n          {ancestorError.errors.map((e, i) => (\n            <ResponseErrorPanel key={i} error={e} />\n          ))}\n        </Box>\n      ))}\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}