import { jsx, jsxs } from 'react/jsx-runtime';
import { PageWithHeader, Content, ContentHeader, CreateButton, SupportButton } from '@backstage/core-components';
import { useApi, configApiRef, useRouteRef } from '@backstage/core-plugin-api';
import { EntityListProvider, CatalogFilterLayout, DefaultFilters } from '@backstage/plugin-catalog-react';
import { createComponentRouteRef } from '../../routes.esm.js';
import { CatalogTable } from '../CatalogTable/CatalogTable.esm.js';
import { catalogTranslationRef } from '../../alpha/translation.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';
import { usePermission } from '@backstage/plugin-permission-react';

function BaseCatalogPage(props) {
  const { filters, content = /* @__PURE__ */ jsx(CatalogTable, {}), pagination } = props;
  const orgName = useApi(configApiRef).getOptionalString("organization.name") ?? "Backstage";
  const createComponentLink = useRouteRef(createComponentRouteRef);
  const { t } = useTranslationRef(catalogTranslationRef);
  const { allowed } = usePermission({
    permission: catalogEntityCreatePermission
  });
  return /* @__PURE__ */ jsx(PageWithHeader, { title: t("indexPage.title", { orgName }), themeId: "home", children: /* @__PURE__ */ jsxs(Content, { children: [
    /* @__PURE__ */ jsxs(ContentHeader, { title: "", children: [
      allowed && /* @__PURE__ */ jsx(
        CreateButton,
        {
          title: t("indexPage.createButtonTitle"),
          to: createComponentLink && createComponentLink()
        }
      ),
      /* @__PURE__ */ jsx(SupportButton, { children: t("indexPage.supportButtonContent") })
    ] }),
    /* @__PURE__ */ jsx(EntityListProvider, { pagination, children: /* @__PURE__ */ jsxs(CatalogFilterLayout, { children: [
      /* @__PURE__ */ jsx(CatalogFilterLayout.Filters, { children: filters }),
      /* @__PURE__ */ jsx(CatalogFilterLayout.Content, { children: content })
    ] }) })
  ] }) });
}
function DefaultCatalogPage(props) {
  const {
    columns,
    actions,
    initiallySelectedFilter = "owned",
    initialKind = "component",
    tableOptions = {},
    emptyContent,
    pagination,
    ownerPickerMode,
    filters,
    initiallySelectedNamespaces
  } = props;
  return /* @__PURE__ */ jsx(
    BaseCatalogPage,
    {
      filters: filters ?? /* @__PURE__ */ jsx(
        DefaultFilters,
        {
          initialKind,
          initiallySelectedFilter,
          ownerPickerMode,
          initiallySelectedNamespaces
        }
      ),
      content: /* @__PURE__ */ jsx(
        CatalogTable,
        {
          columns,
          actions,
          tableOptions,
          emptyContent
        }
      ),
      pagination
    }
  );
}

export { BaseCatalogPage, DefaultCatalogPage };
//# sourceMappingURL=DefaultCatalogPage.esm.js.map
