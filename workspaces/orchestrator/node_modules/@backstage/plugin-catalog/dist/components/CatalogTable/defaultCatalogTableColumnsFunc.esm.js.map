{"version":3,"file":"defaultCatalogTableColumnsFunc.esm.js","sources":["../../../src/components/CatalogTable/defaultCatalogTableColumnsFunc.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TableColumn } from '@backstage/core-components';\nimport { columnFactories } from './columns';\nimport { CatalogTableColumnsFunc, CatalogTableRow } from './types';\n\n// The defaultCatalogTableColumnsFunc symbol is not directly exported, but through the\n// CatalogTable.defaultColumnsFunc field.\n/** @public */\nexport const defaultCatalogTableColumnsFunc: CatalogTableColumnsFunc = ({\n  filters,\n  entities,\n}) => {\n  const showTypeColumn = filters.type === undefined;\n\n  return [\n    columnFactories.createTitleColumn({ hidden: true }),\n    columnFactories.createNameColumn({ defaultKind: filters.kind?.value }),\n    ...createEntitySpecificColumns(),\n  ];\n\n  function createEntitySpecificColumns(): TableColumn<CatalogTableRow>[] {\n    const descriptionTagColumns = [\n      columnFactories.createMetadataDescriptionColumn(),\n      columnFactories.createTagsColumn(),\n    ];\n    const baseColumns = [\n      columnFactories.createSystemColumn(),\n      columnFactories.createOwnerColumn(),\n      columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n      columnFactories.createSpecLifecycleColumn(),\n    ];\n    switch (filters.kind?.value) {\n      case 'user':\n        return [...descriptionTagColumns];\n      case 'domain':\n      case 'system':\n        return [columnFactories.createOwnerColumn(), ...descriptionTagColumns];\n      case 'group':\n      case 'template':\n        return [\n          columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n          ...descriptionTagColumns,\n        ];\n      case 'location':\n        return [\n          columnFactories.createSpecTypeColumn({ hidden: !showTypeColumn }),\n          columnFactories.createSpecTargetsColumn(),\n        ];\n      default:\n        return entities.every(entity => entity.metadata.namespace === 'default')\n          ? [...baseColumns, ...descriptionTagColumns]\n          : [\n              ...baseColumns,\n              columnFactories.createNamespaceColumn(),\n              ...descriptionTagColumns,\n            ];\n    }\n  }\n};\n"],"names":[],"mappings":";;AAuBO,MAAM,iCAA0D,CAAC;AAAA,EACtE,OAAA;AAAA,EACA;AACF,CAAA,KAAM;AACJ,EAAA,MAAM,cAAA,GAAiB,QAAQ,IAAA,KAAS,MAAA;AAExC,EAAA,OAAO;AAAA,IACL,eAAA,CAAgB,iBAAA,CAAkB,EAAE,MAAA,EAAQ,MAAM,CAAA;AAAA,IAClD,gBAAgB,gBAAA,CAAiB,EAAE,aAAa,OAAA,CAAQ,IAAA,EAAM,OAAO,CAAA;AAAA,IACrE,GAAG,2BAAA;AAA4B,GACjC;AAEA,EAAA,SAAS,2BAAA,GAA8D;AACrE,IAAA,MAAM,qBAAA,GAAwB;AAAA,MAC5B,gBAAgB,+BAAA,EAAgC;AAAA,MAChD,gBAAgB,gBAAA;AAAiB,KACnC;AACA,IAAA,MAAM,WAAA,GAAc;AAAA,MAClB,gBAAgB,kBAAA,EAAmB;AAAA,MACnC,gBAAgB,iBAAA,EAAkB;AAAA,MAClC,gBAAgB,oBAAA,CAAqB,EAAE,MAAA,EAAQ,CAAC,gBAAgB,CAAA;AAAA,MAChE,gBAAgB,yBAAA;AAA0B,KAC5C;AACA,IAAA,QAAQ,OAAA,CAAQ,MAAM,KAAA;AAAO,MAC3B,KAAK,MAAA;AACH,QAAA,OAAO,CAAC,GAAG,qBAAqB,CAAA;AAAA,MAClC,KAAK,QAAA;AAAA,MACL,KAAK,QAAA;AACH,QAAA,OAAO,CAAC,eAAA,CAAgB,iBAAA,EAAkB,EAAG,GAAG,qBAAqB,CAAA;AAAA,MACvE,KAAK,OAAA;AAAA,MACL,KAAK,UAAA;AACH,QAAA,OAAO;AAAA,UACL,gBAAgB,oBAAA,CAAqB,EAAE,MAAA,EAAQ,CAAC,gBAAgB,CAAA;AAAA,UAChE,GAAG;AAAA,SACL;AAAA,MACF,KAAK,UAAA;AACH,QAAA,OAAO;AAAA,UACL,gBAAgB,oBAAA,CAAqB,EAAE,MAAA,EAAQ,CAAC,gBAAgB,CAAA;AAAA,UAChE,gBAAgB,uBAAA;AAAwB,SAC1C;AAAA,MACF;AACE,QAAA,OAAO,QAAA,CAAS,KAAA,CAAM,CAAA,MAAA,KAAU,MAAA,CAAO,QAAA,CAAS,SAAA,KAAc,SAAS,CAAA,GACnE,CAAC,GAAG,WAAA,EAAa,GAAG,qBAAqB,CAAA,GACzC;AAAA,UACE,GAAG,WAAA;AAAA,UACH,gBAAgB,qBAAA,EAAsB;AAAA,UACtC,GAAG;AAAA,SACL;AAAA;AACR,EACF;AACF;;;;"}