{"version":3,"file":"defaults.esm.js","sources":["../../../src/apis/EntityPresentationApi/defaults.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core-plugin-api';\nimport { defaultEntityPresentation } from '@backstage/plugin-catalog-react';\nimport { HumanDuration } from '@backstage/types';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport MemoryIcon from '@material-ui/icons/Memory';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonIcon from '@material-ui/icons/Person';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { DefaultEntityPresentationApiRenderer } from './DefaultEntityPresentationApi';\n\nexport const DEFAULT_CACHE_TTL: HumanDuration = { seconds: 10 };\n\nexport const DEFAULT_BATCH_DELAY: HumanDuration = { milliseconds: 50 };\n\nexport const DEFAULT_ICONS: Record<string, IconComponent> = {\n  api: ExtensionIcon,\n  component: MemoryIcon,\n  system: CategoryIcon,\n  resource: StorageIcon,\n  domain: ApartmentIcon,\n  location: LocationOnIcon,\n  user: PersonIcon,\n  group: PeopleIcon,\n  template: FeaturedPlayListIcon,\n};\n\nexport function createDefaultRenderer(options: {\n  async: boolean;\n}): DefaultEntityPresentationApiRenderer {\n  return {\n    async: options.async,\n\n    render: ({ entityRef, entity, context }) => {\n      const presentation = defaultEntityPresentation(\n        entity || entityRef,\n        context,\n      );\n      return {\n        snapshot: presentation,\n        loadEntity: options.async,\n      };\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA8BO,MAAM,iBAAA,GAAmC,EAAE,OAAA,EAAS,EAAA;AAEpD,MAAM,mBAAA,GAAqC,EAAE,YAAA,EAAc,EAAA;AAE3D,MAAM,aAAA,GAA+C;AAAA,EAC1D,GAAA,EAAK,aAAA;AAAA,EACL,SAAA,EAAW,UAAA;AAAA,EACX,MAAA,EAAQ,YAAA;AAAA,EACR,QAAA,EAAU,WAAA;AAAA,EACV,MAAA,EAAQ,aAAA;AAAA,EACR,QAAA,EAAU,cAAA;AAAA,EACV,IAAA,EAAM,UAAA;AAAA,EACN,KAAA,EAAO,UAAA;AAAA,EACP,QAAA,EAAU;AACZ;AAEO,SAAS,sBAAsB,OAAA,EAEG;AACvC,EAAA,OAAO;AAAA,IACL,OAAO,OAAA,CAAQ,KAAA;AAAA,IAEf,QAAQ,CAAC,EAAE,SAAA,EAAW,MAAA,EAAQ,SAAQ,KAAM;AAC1C,MAAA,MAAM,YAAA,GAAe,yBAAA;AAAA,QACnB,MAAA,IAAU,SAAA;AAAA,QACV;AAAA,OACF;AACA,MAAA,OAAO;AAAA,QACL,QAAA,EAAU,YAAA;AAAA,QACV,YAAY,OAAA,CAAQ;AAAA,OACtB;AAAA,IACF;AAAA,GACF;AACF;;;;"}