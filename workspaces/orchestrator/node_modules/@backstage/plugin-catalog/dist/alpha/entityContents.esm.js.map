{"version":3,"file":"entityContents.esm.js","sources":["../../src/alpha/entityContents.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { lazy as reactLazy } from 'react';\nimport {\n  coreExtensionData,\n  createExtensionInput,\n  ExtensionBoundary,\n} from '@backstage/frontend-plugin-api';\nimport {\n  EntityCardBlueprint,\n  EntityContentBlueprint,\n  EntityContentLayoutBlueprint,\n  EntityContentLayoutProps,\n} from '@backstage/plugin-catalog-react/alpha';\nimport { buildFilterFn } from './filter/FilterWrapper';\nimport { useEntity } from '@backstage/plugin-catalog-react';\n\nexport const catalogOverviewEntityContent =\n  EntityContentBlueprint.makeWithOverrides({\n    name: 'overview',\n    inputs: {\n      layouts: createExtensionInput([\n        EntityContentLayoutBlueprint.dataRefs.filterFunction.optional(),\n        EntityContentLayoutBlueprint.dataRefs.filterExpression.optional(),\n        EntityContentLayoutBlueprint.dataRefs.component,\n      ]),\n      cards: createExtensionInput([\n        coreExtensionData.reactElement,\n        EntityContentBlueprint.dataRefs.filterFunction.optional(),\n        EntityContentBlueprint.dataRefs.filterExpression.optional(),\n        EntityCardBlueprint.dataRefs.type.optional(),\n      ]),\n    },\n    factory: (originalFactory, { node, inputs }) => {\n      return originalFactory({\n        path: '/',\n        title: 'Overview',\n        group: 'overview',\n        loader: async () => {\n          const LazyDefaultLayoutComponent = reactLazy(() =>\n            import('./DefaultEntityContentLayout').then(m => ({\n              default: m.DefaultEntityContentLayout,\n            })),\n          );\n\n          const DefaultLayoutComponent = (props: EntityContentLayoutProps) => {\n            return (\n              <ExtensionBoundary node={node}>\n                <LazyDefaultLayoutComponent {...props} />\n              </ExtensionBoundary>\n            );\n          };\n\n          const layouts = [\n            ...inputs.layouts.map(layout => ({\n              filter: buildFilterFn(\n                layout.get(\n                  EntityContentLayoutBlueprint.dataRefs.filterFunction,\n                ),\n                layout.get(\n                  EntityContentLayoutBlueprint.dataRefs.filterExpression,\n                ),\n              ),\n              Component: layout.get(\n                EntityContentLayoutBlueprint.dataRefs.component,\n              ),\n            })),\n            {\n              filter: buildFilterFn(),\n              Component: DefaultLayoutComponent,\n            },\n          ];\n\n          const cards = inputs.cards.map(card => ({\n            element: card.get(coreExtensionData.reactElement),\n            type: card.get(EntityCardBlueprint.dataRefs.type),\n            filter: buildFilterFn(\n              card.get(EntityContentBlueprint.dataRefs.filterFunction),\n              card.get(EntityContentBlueprint.dataRefs.filterExpression),\n            ),\n          }));\n\n          const Component = () => {\n            const { entity } = useEntity();\n\n            // Use the first layout that matches the entity filter\n            const layout = layouts.find(l => l.filter(entity));\n            if (!layout) {\n              throw new Error('No layout found for entity'); // Shouldn't be able to happen\n            }\n\n            return (\n              <layout.Component\n                cards={cards.filter(card => card.filter(entity))}\n              />\n            );\n          };\n\n          return <Component />;\n        },\n      });\n    },\n  });\n\nexport default [catalogOverviewEntityContent];\n"],"names":["reactLazy"],"mappings":"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"}