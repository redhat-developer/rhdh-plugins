import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { HeaderLabel } from '@backstage/core-components';
import { RELATION_OWNED_BY } from '@backstage/catalog-model';
import { getEntityRelations, EntityRefLinks } from '@backstage/plugin-catalog-react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { catalogTranslationRef } from '../../translation.esm.js';

function EntityLabels(props) {
  const { entity } = props;
  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);
  const { t } = useTranslationRef(catalogTranslationRef);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    ownedByRelations.length > 0 && /* @__PURE__ */ jsx(
      HeaderLabel,
      {
        label: t("entityLabels.ownerLabel"),
        contentTypograpyRootComponent: "p",
        value: /* @__PURE__ */ jsx(
          EntityRefLinks,
          {
            entityRefs: ownedByRelations,
            defaultKind: "Group",
            color: "inherit"
          }
        )
      }
    ),
    entity.spec?.lifecycle && /* @__PURE__ */ jsx(
      HeaderLabel,
      {
        label: t("entityLabels.lifecycleLabel"),
        value: entity.spec.lifecycle?.toString()
      }
    )
  ] });
}

export { EntityLabels };
//# sourceMappingURL=EntityLabels.esm.js.map
