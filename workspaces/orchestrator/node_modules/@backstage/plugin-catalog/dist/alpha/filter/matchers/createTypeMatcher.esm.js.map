{"version":3,"file":"createTypeMatcher.esm.js","sources":["../../../../src/alpha/filter/matchers/createTypeMatcher.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityMatcherFn } from './types';\n\n/**\n * Matches on spec.type\n */\nexport function createTypeMatcher(\n  parameters: string[],\n  _onParseError: (error: Error) => void,\n): EntityMatcherFn {\n  const items = parameters.map(p => p.toLocaleLowerCase('en-US'));\n  return entity => {\n    const value = entity.spec?.type;\n    return (\n      typeof value === 'string' &&\n      items.includes(value.toLocaleLowerCase('en-US'))\n    );\n  };\n}\n"],"names":[],"mappings":"AAqBO,SAAS,iBAAA,CACd,YACA,aAAA,EACiB;AACjB,EAAA,MAAM,QAAQ,UAAA,CAAW,GAAA,CAAI,OAAK,CAAA,CAAE,iBAAA,CAAkB,OAAO,CAAC,CAAA;AAC9D,EAAA,OAAO,CAAA,MAAA,KAAU;AACf,IAAA,MAAM,KAAA,GAAQ,OAAO,IAAA,EAAM,IAAA;AAC3B,IAAA,OACE,OAAO,UAAU,QAAA,IACjB,KAAA,CAAM,SAAS,KAAA,CAAM,iBAAA,CAAkB,OAAO,CAAC,CAAA;AAAA,EAEnD,CAAA;AACF;;;;"}