{"version":3,"file":"pages.esm.js","sources":["../../src/alpha/pages.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\nimport {\n  coreExtensionData,\n  createExtensionInput,\n  PageBlueprint,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AsyncEntityProvider,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport {\n  EntityHeaderBlueprint,\n  EntityContentBlueprint,\n  defaultEntityContentGroups,\n  EntityContextMenuItemBlueprint,\n} from '@backstage/plugin-catalog-react/alpha';\nimport { rootRouteRef } from '../routes';\nimport { useEntityFromUrl } from '../components/CatalogEntityPage/useEntityFromUrl';\nimport { buildFilterFn } from './filter/FilterWrapper';\n\nexport const catalogPage = PageBlueprint.makeWithOverrides({\n  inputs: {\n    filters: createExtensionInput([coreExtensionData.reactElement]),\n  },\n  config: {\n    schema: {\n      pagination: z =>\n        z\n          .union([\n            z.boolean(),\n            z.object({\n              mode: z.enum(['cursor', 'offset']),\n              limit: z.number().optional(),\n              offset: z.number().optional(),\n            }),\n          ])\n          .default(true),\n    },\n  },\n  factory(originalFactory, { inputs, config }) {\n    return originalFactory({\n      path: '/catalog',\n      routeRef: convertLegacyRouteRef(rootRouteRef),\n      loader: async () => {\n        const { BaseCatalogPage } = await import('../components/CatalogPage');\n        const filters = inputs.filters.map(filter =>\n          filter.get(coreExtensionData.reactElement),\n        );\n        return compatWrapper(\n          <BaseCatalogPage\n            filters={<>{filters}</>}\n            pagination={config.pagination}\n          />,\n        );\n      },\n    });\n  },\n});\n\nexport const catalogEntityPage = PageBlueprint.makeWithOverrides({\n  name: 'entity',\n  inputs: {\n    headers: createExtensionInput([\n      EntityHeaderBlueprint.dataRefs.element.optional(),\n      EntityHeaderBlueprint.dataRefs.filterFunction.optional(),\n    ]),\n    contents: createExtensionInput([\n      coreExtensionData.reactElement,\n      coreExtensionData.routePath,\n      coreExtensionData.routeRef.optional(),\n      EntityContentBlueprint.dataRefs.title,\n      EntityContentBlueprint.dataRefs.filterFunction.optional(),\n      EntityContentBlueprint.dataRefs.filterExpression.optional(),\n      EntityContentBlueprint.dataRefs.group.optional(),\n    ]),\n    contextMenuItems: createExtensionInput([\n      coreExtensionData.reactElement,\n      EntityContextMenuItemBlueprint.dataRefs.filterFunction.optional(),\n    ]),\n  },\n  config: {\n    schema: {\n      groups: z =>\n        z\n          .array(z.record(z.string(), z.object({ title: z.string() })))\n          .optional(),\n    },\n  },\n  factory(originalFactory, { config, inputs }) {\n    return originalFactory({\n      path: '/catalog/:namespace/:kind/:name',\n      routeRef: convertLegacyRouteRef(entityRouteRef),\n      loader: async () => {\n        const { EntityLayout } = await import('./components/EntityLayout');\n\n        const menuItems = inputs.contextMenuItems.map(item => ({\n          element: item.get(coreExtensionData.reactElement),\n          filter:\n            item.get(EntityContextMenuItemBlueprint.dataRefs.filterFunction) ??\n            (() => true),\n        }));\n\n        type Groups = Record<\n          string,\n          { title: string; items: Array<(typeof inputs.contents)[0]> }\n        >;\n\n        // Get available headers, sorted by if they have a filter function or not.\n        // TODO(blam): we should really have priority or some specificity here which can be used to sort the headers.\n        // That can be done with embedding the priority in the dataRef alongside the filter function.\n        const headers = inputs.headers\n          .map(header => ({\n            element: header.get(EntityHeaderBlueprint.dataRefs.element),\n            filter: header.get(EntityHeaderBlueprint.dataRefs.filterFunction),\n          }))\n          .sort((a, b) => {\n            if (a.filter && !b.filter) return -1;\n            if (!a.filter && b.filter) return 1;\n            return 0;\n          });\n\n        let groups = Object.entries(defaultEntityContentGroups).reduce<Groups>(\n          (rest, group) => {\n            const [groupId, groupValue] = group;\n            return {\n              ...rest,\n              [groupId]: { title: groupValue, items: [] },\n            };\n          },\n          {},\n        );\n\n        // config groups override default groups\n        if (config.groups) {\n          groups = config.groups.reduce<Groups>((rest, group) => {\n            const [groupId, groupValue] = Object.entries(group)[0];\n            return {\n              ...rest,\n              [groupId]: { title: groupValue.title, items: [] },\n            };\n          }, {});\n        }\n\n        for (const output of inputs.contents) {\n          const itemId = output.node.spec.id;\n          const itemTitle = output.get(EntityContentBlueprint.dataRefs.title);\n          const itemGroup = output.get(EntityContentBlueprint.dataRefs.group);\n          const group = itemGroup && groups[itemGroup];\n          if (!group) {\n            groups[itemId] = { title: itemTitle, items: [output] };\n            continue;\n          }\n          group.items.push(output);\n        }\n\n        const Component = () => {\n          const entityFromUrl = useEntityFromUrl();\n          const { entity } = entityFromUrl;\n          const filteredMenuItems = entity\n            ? menuItems.filter(i => i.filter(entity)).map(i => i.element)\n            : [];\n\n          const header = headers.find(\n            h => !h.filter || h.filter(entity!),\n          )?.element;\n\n          return (\n            <AsyncEntityProvider {...entityFromUrl}>\n              <EntityLayout\n                header={header}\n                contextMenuItems={filteredMenuItems}\n              >\n                {Object.values(groups).flatMap(({ title, items }) =>\n                  items.map(output => (\n                    <EntityLayout.Route\n                      group={title}\n                      key={output.get(coreExtensionData.routePath)}\n                      path={output.get(coreExtensionData.routePath)}\n                      title={output.get(EntityContentBlueprint.dataRefs.title)}\n                      if={buildFilterFn(\n                        output.get(\n                          EntityContentBlueprint.dataRefs.filterFunction,\n                        ),\n                        output.get(\n                          EntityContentBlueprint.dataRefs.filterExpression,\n                        ),\n                      )}\n                    >\n                      {output.get(coreExtensionData.reactElement)}\n                    </EntityLayout.Route>\n                  )),\n                )}\n              </EntityLayout>\n            </AsyncEntityProvider>\n          );\n        };\n\n        return compatWrapper(<Component />);\n      },\n    });\n  },\n});\n\nexport default [catalogPage, catalogEntityPage];\n"],"names":[],"mappings":"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"}