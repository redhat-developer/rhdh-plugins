{"version":3,"file":"gitea.examples.cjs.js","sources":["../../src/actions/gitea.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a git repository with the content in the workspace, and publishes it to Gitea with the default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Gitea repository with a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            description: 'Initialize a gitea repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a private Gitea repository ',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            defaultBranch: 'main',\n            repoVisibility: 'private',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gitea repository with a default Branch, if not set defaults to main',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            defaultBranch: 'staging',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gitea repository with an initial commit message, if not set defaults to `initial commit`',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            gitCommitMessage: 'Initial Commit Message',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Gitea repository with a repo Author Name, if not set defaults to Scaffolder',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            gitAuthorName: 'John Doe',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Gitea repository with a repo Author Email',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            gitAuthorEmail: 'johndoe@email.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            sourcePath: 'repository/',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Gitea repository with all properties being set',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:gitea',\n          name: 'Publish to Gitea',\n          input: {\n            repoUrl: 'gitea.com?repo=repo&owner=owner',\n            description: 'Initialize a gitea repository',\n            defaultBranch: 'staging',\n            gitCommitMessage: 'Initial Commit Message',\n            gitAuthorName: 'John Doe',\n            gitAuthorEmail: 'johndoe@email.com',\n            sourcePath: 'repository/',\n            repoVisibility: 'public',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}