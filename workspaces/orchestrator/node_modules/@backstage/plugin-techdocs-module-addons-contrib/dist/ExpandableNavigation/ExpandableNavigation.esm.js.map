{"version":3,"file":"ExpandableNavigation.esm.js","sources":["../../src/ExpandableNavigation/ExpandableNavigation.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect, useCallback, useState } from 'react';\nimport { useLocalStorageValue } from '@react-hookz/web';\nimport { Button, withStyles } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { useShadowRootElements } from '@backstage/plugin-techdocs-react';\n\nconst NESTED_LIST_TOGGLE = '.md-nav__item--nested .md-toggle';\n\nconst EXPANDABLE_NAVIGATION_LOCAL_STORAGE =\n  '@backstage/techdocs-addons/nav-expanded';\n\nconst StyledButton = withStyles({\n  root: {\n    position: 'absolute',\n    left: '13.7rem', // Sidebar inner width (15.1em) minus the different margins/paddings\n    top: '19px',\n    zIndex: 2,\n    padding: 0,\n    minWidth: 0,\n  },\n})(Button);\n\nconst CollapsedIcon = withStyles({\n  root: {\n    height: '20px',\n    width: '20px',\n  },\n})(ChevronRightIcon);\n\nconst ExpandedIcon = withStyles({\n  root: {\n    height: '20px',\n    width: '20px',\n  },\n})(ExpandMoreIcon);\n\ntype expandableNavigationLocalStorage = {\n  expandAllNestedNavs: boolean;\n};\n\n/**\n * Show expand/collapse navigation button next to site name in main\n * navigation menu if documentation site has nested navigation.\n */\nexport const ExpandableNavigationAddon = () => {\n  const defaultValue = { expandAllNestedNavs: false };\n  const { value: expanded, set: setExpanded } =\n    useLocalStorageValue<expandableNavigationLocalStorage>(\n      EXPANDABLE_NAVIGATION_LOCAL_STORAGE,\n      { defaultValue },\n    );\n  const [hasNavSubLevels, setHasNavSubLevels] = useState<boolean>(false);\n\n  const [...checkboxToggles] = useShadowRootElements<HTMLInputElement>([\n    NESTED_LIST_TOGGLE,\n  ]);\n\n  const shouldToggle = useCallback(\n    (item: HTMLInputElement) => {\n      const isExpanded = item.checked;\n      const shouldExpand = expanded?.expandAllNestedNavs;\n\n      // Is collapsed but should expand\n      if (shouldExpand && !isExpanded) {\n        return true;\n      }\n\n      // Is expanded but should collapse\n      if (!shouldExpand && isExpanded) {\n        return true;\n      }\n\n      return false;\n    },\n    [expanded],\n  );\n  const handleKeyPass = (\n    event: React.KeyboardEvent<HTMLElement>,\n    toggleAction: () => void,\n  ) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      toggleAction();\n    }\n  };\n  useEffect(() => {\n    // There is no nested navs\n    if (!checkboxToggles?.length) return;\n\n    setHasNavSubLevels(true);\n    checkboxToggles.forEach(item => {\n      item.tabIndex = 0;\n      const toggleAction = () => {\n        if (shouldToggle(item)) {\n          item.click();\n        }\n      };\n      // Add keyboard event listener\n      const keydownHandler = (event: KeyboardEvent) => {\n        handleKeyPass(\n          event as unknown as React.KeyboardEvent<HTMLDivElement>,\n          toggleAction,\n        );\n      };\n      item.addEventListener('keydown', keydownHandler);\n      item.addEventListener('click', toggleAction);\n\n      // Clean up event listener or unmount\n      return () => {\n        item.removeEventListener('keydown', keydownHandler);\n        item.removeEventListener('click', toggleAction);\n      };\n    });\n  }, [checkboxToggles, shouldToggle]);\n  useEffect(() => {\n    if (!checkboxToggles?.length) return;\n    checkboxToggles.forEach(item => {\n      if (shouldToggle(item)) {\n        item.click();\n      }\n    });\n  }, [expanded, checkboxToggles, shouldToggle]);\n\n  const handleState = () => {\n    setExpanded(prevState => ({\n      expandAllNestedNavs: !prevState?.expandAllNestedNavs,\n    }));\n  };\n\n  return (\n    <>\n      {hasNavSubLevels ? (\n        <StyledButton\n          size=\"small\"\n          onClick={handleState}\n          onKeyDown={event => handleKeyPass(event, handleState)}\n          tabIndex={0} // Ensuring keyboard focus\n          aria-expanded={expanded?.expandAllNestedNavs} // Accessibility\n          aria-label={\n            expanded?.expandAllNestedNavs ? 'collapse-nav' : 'expand-nav'\n          }\n        >\n          {expanded?.expandAllNestedNavs ? <ExpandedIcon /> : <CollapsedIcon />}\n        </StyledButton>\n      ) : null}\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}