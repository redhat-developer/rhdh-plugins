{"version":3,"file":"extensions.esm.js","sources":["../../src/extensions/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { lazy, Suspense, useEffect } from 'react';\nimport { AnalyticsContext, useAnalytics } from '../analytics';\nimport { useApp } from '../app';\nimport { RouteRef, useRouteRef } from '../routing';\nimport { attachComponentData } from './componentData';\nimport { Extension, BackstagePlugin } from '../plugin';\nimport { PluginErrorBoundary } from './PluginErrorBoundary';\nimport { routableExtensionRenderedEvent } from '../analytics/Tracker';\nimport { ForwardedError } from '@backstage/errors';\n\n/**\n * Lazy or synchronous retrieving of extension components.\n *\n * @public\n */\nexport type ComponentLoader<T> =\n  | {\n      lazy: () => Promise<T>;\n    }\n  | {\n      sync: T;\n    };\n\n/**\n * Extension for components that can have its own URL route (top-level pages, tabs etc.).\n *\n * @remarks\n *\n * We do not use ComponentType as the return type, since it doesn't let us convey the children prop.\n * ComponentType inserts children as an optional prop whether the inner component accepts it or not,\n * making it impossible to make the usage of children type safe.\n *\n * See {@link https://backstage.io/docs/plugins/composability#extensions}.\n *\n * @public\n */\nexport function createRoutableExtension<\n  T extends (props: any) => JSX.Element | null,\n>(options: {\n  /**\n   * A loader for the component that is rendered by this extension.\n   */\n  component: () => Promise<T>;\n\n  /**\n   * The mount point to bind this routable extension to.\n   *\n   * If this extension is placed somewhere in the app element tree of a Backstage\n   * app, callers will be able to route to this extensions by calling,\n   * `useRouteRef` with this mount point.\n   */\n  mountPoint: RouteRef;\n\n  /**\n   * The name of this extension that will represent it at runtime. It is for example\n   * used to identify this extension in analytics data.\n   *\n   * If possible the name should always be the same as the name of the exported\n   * variable for this extension.\n   */\n  name?: string;\n}): Extension<T> {\n  const { component, mountPoint, name } = options;\n  return createReactExtension({\n    component: {\n      lazy: () =>\n        component().then(InnerComponent => {\n          const RoutableExtensionWrapper: any = (props: any) => {\n            const analytics = useAnalytics();\n\n            // Validate that the routing is wired up correctly in the App.tsx\n            try {\n              useRouteRef(mountPoint);\n            } catch (error) {\n              if (typeof error === 'object' && error !== null) {\n                const { message } = error as { message?: unknown };\n                if (\n                  typeof message === 'string' &&\n                  message.startsWith('No path for ')\n                ) {\n                  throw new Error(\n                    `Routable extension component with mount point ${mountPoint} was not discovered in the app element tree. ` +\n                      'Routable extension components may not be rendered by other components and must be ' +\n                      'directly available as an element within the App provider component.',\n                  );\n                }\n              }\n              throw error;\n            }\n\n            // This event, never exposed to end-users of the analytics API,\n            // helps inform which extension metadata gets associated with a\n            // navigation event when the route navigated to is a gathered\n            // mountpoint.\n            useEffect(() => {\n              analytics.captureEvent(routableExtensionRenderedEvent, '');\n            }, [analytics]);\n\n            return <InnerComponent {...props} />;\n          };\n\n          const componentName =\n            name ||\n            (InnerComponent as { displayName?: string }).displayName ||\n            InnerComponent.name ||\n            'LazyComponent';\n\n          RoutableExtensionWrapper.displayName = `RoutableExtension(${componentName})`;\n\n          return RoutableExtensionWrapper as T;\n        }),\n    },\n    data: {\n      'core.mountPoint': mountPoint,\n    },\n    name,\n  });\n}\n\n/**\n * Plain React component extension.\n *\n * @remarks\n *\n * We do not use ComponentType as the return type, since it doesn't let us convey the children prop.\n * ComponentType inserts children as an optional prop whether the inner component accepts it or not,\n * making it impossible to make the usage of children type safe.\n *\n * See {@link https://backstage.io/docs/plugins/composability#extensions}.\n *\n * @public\n */\nexport function createComponentExtension<\n  T extends (props: any) => JSX.Element | null,\n>(options: {\n  /**\n   * A loader or synchronously supplied component that is rendered by this extension.\n   */\n  component: ComponentLoader<T>;\n\n  /**\n   * The name of this extension that will represent it at runtime. It is for example\n   * used to identify this extension in analytics data.\n   *\n   * If possible the name should always be the same as the name of the exported\n   * variable for this extension.\n   */\n  name?: string;\n}): Extension<T> {\n  const { component, name } = options;\n  return createReactExtension({ component, name });\n}\n\n/**\n * Used by {@link createComponentExtension} and {@link createRoutableExtension}.\n *\n * @remarks\n *\n * We do not use ComponentType as the return type, since it doesn't let us convey the children prop.\n * ComponentType inserts children as an optional prop whether the inner component accepts it or not,\n * making it impossible to make the usage of children type safe.\n *\n * See {@link https://backstage.io/docs/plugins/composability#extensions}.\n *\n * @public\n */\nexport function createReactExtension<\n  T extends (props: any) => JSX.Element | null,\n>(options: {\n  /**\n   * A loader or synchronously supplied component that is rendered by this extension.\n   */\n  component: ComponentLoader<T>;\n\n  /**\n   * Additional component data that is attached to the top-level extension component.\n   */\n  data?: Record<string, unknown>;\n\n  /**\n   * The name of this extension that will represent it at runtime. It is for example\n   * used to identify this extension in analytics data.\n   *\n   * If possible the name should always be the same as the name of the exported\n   * variable for this extension.\n   */\n  name?: string;\n}): Extension<T> {\n  const { data = {}, name } = options;\n  if (!name) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Declaring extensions without name is DEPRECATED. ' +\n        'Make sure that all usages of createReactExtension, createComponentExtension and createRoutableExtension provide a name.',\n    );\n  }\n\n  let Component: T;\n  if ('lazy' in options.component) {\n    const lazyLoader = options.component.lazy;\n    Component = lazy(() =>\n      lazyLoader().then(\n        component => ({ default: component }),\n        error => {\n          const ofExtension = name ? ` of the ${name} extension` : '';\n          throw new ForwardedError(\n            `Failed lazy loading${ofExtension}, try to reload the page`,\n            error,\n          );\n        },\n      ),\n    ) as unknown as T;\n  } else {\n    Component = options.component.sync;\n  }\n  const componentName =\n    name ||\n    (Component as { displayName?: string }).displayName ||\n    Component.name ||\n    'Component';\n\n  return {\n    expose(plugin: BackstagePlugin) {\n      const Result: any = (props: any) => {\n        const app = useApp();\n        const { Progress } = app.getComponents();\n        // todo(iamEAP): Account for situations where this is attached via\n        // separate calls to attachComponentData().\n        const mountPoint = data?.['core.mountPoint'] as\n          | { id?: string }\n          | undefined;\n\n        return (\n          <Suspense fallback={<Progress />}>\n            <PluginErrorBoundary app={app} plugin={plugin}>\n              <AnalyticsContext\n                attributes={{\n                  pluginId: plugin.getId(),\n                  ...(name && { extension: name }),\n                  ...(mountPoint && { routeRef: mountPoint.id }),\n                }}\n              >\n                <Component {...props} />\n              </AnalyticsContext>\n            </PluginErrorBoundary>\n          </Suspense>\n        );\n      };\n\n      attachComponentData(Result, 'core.plugin', plugin);\n      attachComponentData(Result, 'core.extensionName', name);\n      for (const [key, value] of Object.entries(data)) {\n        attachComponentData(Result, key, value);\n      }\n\n      Result.displayName = `Extension(${componentName})`;\n      return Result;\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAoDO,SAAS,wBAEd,OAAA,EAuBe;AACf,EAAA,MAAM,EAAE,SAAA,EAAW,UAAA,EAAY,IAAA,EAAK,GAAI,OAAA;AACxC,EAAA,OAAO,oBAAA,CAAqB;AAAA,IAC1B,SAAA,EAAW;AAAA,MACT,IAAA,EAAM,MACJ,SAAA,EAAU,CAAE,KAAK,CAAA,cAAA,KAAkB;AACjC,QAAA,MAAM,wBAAA,GAAgC,CAAC,KAAA,KAAe;AACpD,UAAA,MAAM,YAAY,YAAA,EAAa;AAG/B,UAAA,IAAI;AACF,YAAA,WAAA,CAAY,UAAU,CAAA;AAAA,UACxB,SAAS,KAAA,EAAO;AACd,YAAA,IAAI,OAAO,KAAA,KAAU,QAAA,IAAY,KAAA,KAAU,IAAA,EAAM;AAC/C,cAAA,MAAM,EAAE,SAAQ,GAAI,KAAA;AACpB,cAAA,IACE,OAAO,OAAA,KAAY,QAAA,IACnB,OAAA,CAAQ,UAAA,CAAW,cAAc,CAAA,EACjC;AACA,gBAAA,MAAM,IAAI,KAAA;AAAA,kBACR,iDAAiD,UAAU,CAAA,kMAAA;AAAA,iBAG7D;AAAA,cACF;AAAA,YACF;AACA,YAAA,MAAM,KAAA;AAAA,UACR;AAMA,UAAA,SAAA,CAAU,MAAM;AACd,YAAA,SAAA,CAAU,YAAA,CAAa,gCAAgC,EAAE,CAAA;AAAA,UAC3D,CAAA,EAAG,CAAC,SAAS,CAAC,CAAA;AAEd,UAAA,uBAAO,GAAA,CAAC,cAAA,EAAA,EAAgB,GAAG,KAAA,EAAO,CAAA;AAAA,QACpC,CAAA;AAEA,QAAA,MAAM,aAAA,GACJ,IAAA,IACC,cAAA,CAA4C,WAAA,IAC7C,eAAe,IAAA,IACf,eAAA;AAEF,QAAA,wBAAA,CAAyB,WAAA,GAAc,qBAAqB,aAAa,CAAA,CAAA,CAAA;AAEzE,QAAA,OAAO,wBAAA;AAAA,MACT,CAAC;AAAA,KACL;AAAA,IACA,IAAA,EAAM;AAAA,MACJ,iBAAA,EAAmB;AAAA,KACrB;AAAA,IACA;AAAA,GACD,CAAA;AACH;AAeO,SAAS,yBAEd,OAAA,EAce;AACf,EAAA,MAAM,EAAE,SAAA,EAAW,IAAA,EAAK,GAAI,OAAA;AAC5B,EAAA,OAAO,oBAAA,CAAqB,EAAE,SAAA,EAAW,IAAA,EAAM,CAAA;AACjD;AAeO,SAAS,qBAEd,OAAA,EAmBe;AACf,EAAA,MAAM,EAAE,IAAA,GAAO,EAAC,EAAG,MAAK,GAAI,OAAA;AAC5B,EAAA,IAAI,CAAC,IAAA,EAAM;AAET,IAAA,OAAA,CAAQ,IAAA;AAAA,MACN;AAAA,KAEF;AAAA,EACF;AAEA,EAAA,IAAI,SAAA;AACJ,EAAA,IAAI,MAAA,IAAU,QAAQ,SAAA,EAAW;AAC/B,IAAA,MAAM,UAAA,GAAa,QAAQ,SAAA,CAAU,IAAA;AACrC,IAAA,SAAA,GAAY,IAAA;AAAA,MAAK,MACf,YAAW,CAAE,IAAA;AAAA,QACX,CAAA,SAAA,MAAc,EAAE,OAAA,EAAS,SAAA,EAAU,CAAA;AAAA,QACnC,CAAA,KAAA,KAAS;AACP,UAAA,MAAM,WAAA,GAAc,IAAA,GAAO,CAAA,QAAA,EAAW,IAAI,CAAA,UAAA,CAAA,GAAe,EAAA;AACzD,UAAA,MAAM,IAAI,cAAA;AAAA,YACR,sBAAsB,WAAW,CAAA,wBAAA,CAAA;AAAA,YACjC;AAAA,WACF;AAAA,QACF;AAAA;AACF,KACF;AAAA,EACF,CAAA,MAAO;AACL,IAAA,SAAA,GAAY,QAAQ,SAAA,CAAU,IAAA;AAAA,EAChC;AACA,EAAA,MAAM,aAAA,GACJ,IAAA,IACC,SAAA,CAAuC,WAAA,IACxC,UAAU,IAAA,IACV,WAAA;AAEF,EAAA,OAAO;AAAA,IACL,OAAO,MAAA,EAAyB;AAC9B,MAAA,MAAM,MAAA,GAAc,CAAC,KAAA,KAAe;AAClC,QAAA,MAAM,MAAM,MAAA,EAAO;AACnB,QAAA,MAAM,EAAE,QAAA,EAAS,GAAI,GAAA,CAAI,aAAA,EAAc;AAGvC,QAAA,MAAM,UAAA,GAAa,OAAO,iBAAiB,CAAA;AAI3C,QAAA,uBACE,GAAA,CAAC,YAAS,QAAA,kBAAU,GAAA,CAAC,YAAS,CAAA,EAC5B,QAAA,kBAAA,GAAA,CAAC,mBAAA,EAAA,EAAoB,GAAA,EAAU,MAAA,EAC7B,QAAA,kBAAA,GAAA;AAAA,UAAC,gBAAA;AAAA,UAAA;AAAA,YACC,UAAA,EAAY;AAAA,cACV,QAAA,EAAU,OAAO,KAAA,EAAM;AAAA,cACvB,GAAI,IAAA,IAAQ,EAAE,SAAA,EAAW,IAAA,EAAK;AAAA,cAC9B,GAAI,UAAA,IAAc,EAAE,QAAA,EAAU,WAAW,EAAA;AAAG,aAC9C;AAAA,YAEA,QAAA,kBAAA,GAAA,CAAC,SAAA,EAAA,EAAW,GAAG,KAAA,EAAO;AAAA;AAAA,WAE1B,CAAA,EACF,CAAA;AAAA,MAEJ,CAAA;AAEA,MAAA,mBAAA,CAAoB,MAAA,EAAQ,eAAe,MAAM,CAAA;AACjD,MAAA,mBAAA,CAAoB,MAAA,EAAQ,sBAAsB,IAAI,CAAA;AACtD,MAAA,KAAA,MAAW,CAAC,GAAA,EAAK,KAAK,KAAK,MAAA,CAAO,OAAA,CAAQ,IAAI,CAAA,EAAG;AAC/C,QAAA,mBAAA,CAAoB,MAAA,EAAQ,KAAK,KAAK,CAAA;AAAA,MACxC;AAEA,MAAA,MAAA,CAAO,WAAA,GAAc,aAAa,aAAa,CAAA,CAAA,CAAA;AAC/C,MAAA,OAAO,MAAA;AAAA,IACT;AAAA,GACF;AACF;;;;"}