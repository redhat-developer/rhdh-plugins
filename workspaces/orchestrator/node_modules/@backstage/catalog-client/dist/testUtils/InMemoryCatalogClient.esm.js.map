{"version":3,"file":"InMemoryCatalogClient.esm.js","sources":["../../src/testUtils/InMemoryCatalogClient.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AddLocationRequest,\n  AddLocationResponse,\n  CATALOG_FILTER_EXISTS,\n  CatalogApi,\n  EntityFilterQuery,\n  GetEntitiesByRefsRequest,\n  GetEntitiesByRefsResponse,\n  GetEntitiesRequest,\n  GetEntitiesResponse,\n  GetEntityAncestorsRequest,\n  GetEntityAncestorsResponse,\n  GetEntityFacetsRequest,\n  GetEntityFacetsResponse,\n  GetLocationsResponse,\n  Location,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n  StreamEntitiesRequest,\n  ValidateEntityResponse,\n} from '@backstage/catalog-client';\nimport {\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { NotFoundError, NotImplementedError } from '@backstage/errors';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { traverse } from '../../../../plugins/catalog-backend/src/database/operations/stitcher/buildEntitySearch';\nimport type {\n  AnalyzeLocationRequest,\n  AnalyzeLocationResponse,\n} from '@backstage/plugin-catalog-common';\nimport { DEFAULT_STREAM_ENTITIES_LIMIT } from '../constants.ts';\n\nfunction buildEntitySearch(entity: Entity) {\n  const rows = traverse(entity);\n\n  if (entity.metadata?.name) {\n    rows.push({\n      key: 'metadata.name',\n      value: entity.metadata.name.toLocaleLowerCase('en-US'),\n    });\n  }\n  if (entity.metadata?.namespace) {\n    rows.push({\n      key: 'metadata.namespace',\n      value: entity.metadata.namespace.toLocaleLowerCase('en-US'),\n    });\n  }\n  if (entity.metadata?.uid) {\n    rows.push({\n      key: 'metadata.uid',\n      value: entity.metadata.uid.toLocaleLowerCase('en-US'),\n    });\n  }\n\n  if (!entity.metadata.namespace) {\n    rows.push({ key: 'metadata.namespace', value: DEFAULT_NAMESPACE });\n  }\n\n  // Visit relations\n  for (const relation of entity.relations ?? []) {\n    rows.push({\n      key: `relations.${relation.type.toLocaleLowerCase('en-US')}`,\n      value: relation.targetRef.toLocaleLowerCase('en-US'),\n    });\n  }\n\n  return rows;\n}\n\nfunction createFilter(\n  filterOrFilters?: EntityFilterQuery,\n): (entity: Entity) => boolean {\n  if (!filterOrFilters) {\n    return () => true;\n  }\n\n  const filters = [filterOrFilters].flat();\n\n  return entity => {\n    const rows = buildEntitySearch(entity);\n\n    return filters.some(filter => {\n      for (const [key, expectedValue] of Object.entries(filter)) {\n        const searchValues = rows\n          .filter(row => row.key === key.toLocaleLowerCase('en-US'))\n          .map(row => row.value?.toString().toLocaleLowerCase('en-US'));\n\n        if (searchValues.length === 0) {\n          return false;\n        }\n        if (expectedValue === CATALOG_FILTER_EXISTS) {\n          continue;\n        }\n        if (Array.isArray(expectedValue)) {\n          return expectedValue.some(value =>\n            searchValues?.includes(String(value).toLocaleLowerCase('en-US')),\n          );\n        }\n        if (\n          !searchValues?.includes(\n            String(expectedValue).toLocaleLowerCase('en-US'),\n          )\n        ) {\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n}\n\n/**\n * Implements a VERY basic fake catalog client that stores entities in memory.\n * It has severely limited functionality, and is only useful under certain\n * circumstances in tests.\n *\n * @public\n */\nexport class InMemoryCatalogClient implements CatalogApi {\n  #entities: Entity[];\n\n  constructor(options?: { entities?: Entity[] }) {\n    this.#entities = options?.entities?.slice() ?? [];\n  }\n\n  async getEntities(\n    request?: GetEntitiesRequest,\n  ): Promise<GetEntitiesResponse> {\n    const filter = createFilter(request?.filter);\n    return { items: this.#entities.filter(filter) };\n  }\n\n  async getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n  ): Promise<GetEntitiesByRefsResponse> {\n    const filter = createFilter(request.filter);\n    const refMap = this.#createEntityRefMap();\n    return {\n      items: request.entityRefs\n        .map(ref => refMap.get(ref))\n        .map(e => (e && filter(e) ? e : undefined)),\n    };\n  }\n\n  async queryEntities(\n    request?: QueryEntitiesRequest,\n  ): Promise<QueryEntitiesResponse> {\n    if (request && 'cursor' in request) {\n      return { items: [], pageInfo: {}, totalItems: 0 };\n    }\n    const filter = createFilter(request?.filter);\n    const items = this.#entities.filter(filter);\n    // TODO(Rugvip): Pagination\n    return {\n      items,\n      pageInfo: {},\n      totalItems: items.length,\n    };\n  }\n\n  async getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n  ): Promise<GetEntityAncestorsResponse> {\n    const entity = this.#createEntityRefMap().get(request.entityRef);\n    if (!entity) {\n      throw new NotFoundError(`Entity with ref ${request.entityRef} not found`);\n    }\n    return {\n      items: [{ entity, parentEntityRefs: [] }],\n      rootEntityRef: request.entityRef,\n    };\n  }\n\n  async getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n  ): Promise<Entity | undefined> {\n    return this.#createEntityRefMap().get(\n      stringifyEntityRef(parseEntityRef(entityRef)),\n    );\n  }\n\n  async removeEntityByUid(uid: string): Promise<void> {\n    const index = this.#entities.findIndex(e => e.metadata.uid === uid);\n    if (index !== -1) {\n      this.#entities.splice(index, 1);\n    }\n  }\n\n  async refreshEntity(_entityRef: string): Promise<void> {}\n\n  async getEntityFacets(\n    request: GetEntityFacetsRequest,\n  ): Promise<GetEntityFacetsResponse> {\n    const filter = createFilter(request.filter);\n    const filteredEntities = this.#entities.filter(filter);\n    const facets = Object.fromEntries(\n      request.facets.map(facet => {\n        const facetValues = new Map<string, number>();\n        for (const entity of filteredEntities) {\n          const rows = buildEntitySearch(entity);\n          const value = rows.find(\n            row => row.key === facet.toLocaleLowerCase('en-US'),\n          )?.value;\n          if (value) {\n            facetValues.set(\n              String(value),\n              (facetValues.get(String(value)) ?? 0) + 1,\n            );\n          }\n        }\n        const counts = Array.from(facetValues.entries()).map(\n          ([value, count]) => ({ value, count }),\n        );\n        return [facet, counts];\n      }),\n    );\n    return {\n      facets,\n    };\n  }\n\n  async getLocations(_request?: {}): Promise<GetLocationsResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async getLocationById(_id: string): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async getLocationByRef(_locationRef: string): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async addLocation(\n    _location: AddLocationRequest,\n  ): Promise<AddLocationResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async removeLocationById(_id: string): Promise<void> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async getLocationByEntity(\n    _entityRef: string | CompoundEntityRef,\n  ): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async validateEntity(\n    _entity: Entity,\n    _locationRef: string,\n  ): Promise<ValidateEntityResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async analyzeLocation(\n    _location: AnalyzeLocationRequest,\n  ): Promise<AnalyzeLocationResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async *streamEntities(\n    request?: StreamEntitiesRequest,\n  ): AsyncIterable<Entity[]> {\n    let cursor: string | undefined = undefined;\n    const limit = request?.pageSize ?? DEFAULT_STREAM_ENTITIES_LIMIT;\n    do {\n      const res = await this.queryEntities(\n        cursor ? { ...request, limit, cursor } : { ...request, limit },\n      );\n\n      yield res.items;\n\n      cursor = res.pageInfo.nextCursor;\n    } while (cursor);\n  }\n\n  #createEntityRefMap() {\n    return new Map(this.#entities.map(e => [stringifyEntityRef(e), e]));\n  }\n}\n"],"names":[],"mappings":"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"}