{"version":3,"file":"utils.esm.js","sources":["../src/utils.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport {\n  CustomFieldExtensionSchema,\n  FieldExtensionComponentProps,\n} from './extensions';\n\n/** @public */\nexport function makeFieldSchema<\n  TReturnType extends z.ZodType,\n  TUiOptions extends z.ZodType,\n>(options: {\n  output: (zImpl: typeof z) => TReturnType;\n  uiOptions?: (zImpl: typeof z) => TUiOptions;\n}): FieldSchema<z.output<TReturnType>, z.output<TUiOptions>> {\n  const { output, uiOptions } = options;\n  return {\n    TProps: undefined as any,\n    TOutput: undefined as any,\n    schema: {\n      returnValue: zodToJsonSchema(output(z)) as JSONSchema7,\n      uiOptions: uiOptions && (zodToJsonSchema(uiOptions(z)) as JSONSchema7),\n    },\n\n    // These will be removed - just here for backwards compat whilst we're moving across\n    type: undefined as any,\n    uiOptionsType: undefined as any,\n  };\n}\n\n/**\n * @public\n * FieldSchema encapsulates a JSONSchema7 along with the\n * matching FieldExtensionComponentProps type for a field extension.\n */\nexport interface FieldSchema<TReturn, TUiOptions> {\n  /** @deprecated use TProps instead */\n  readonly type: FieldExtensionComponentProps<TReturn, TUiOptions>;\n  /** @deprecated will be removed */\n  readonly uiOptionsType: TUiOptions;\n\n  readonly schema: CustomFieldExtensionSchema;\n  readonly TProps: FieldExtensionComponentProps<TReturn, TUiOptions>;\n  readonly TOutput: TReturn;\n}\n"],"names":[],"mappings":";;;AAyBO,SAAS,gBAGd,OAAA,EAG2D;AAC3D,EAAA,MAAM,EAAE,MAAA,EAAQ,SAAA,EAAU,GAAI,OAAA;AAC9B,EAAA,OAAO;AAAA,IACL,MAAA,EAAQ,MAAA;AAAA,IACR,OAAA,EAAS,MAAA;AAAA,IACT,MAAA,EAAQ;AAAA,MACN,WAAA,EAAa,eAAA,CAAgB,MAAA,CAAO,CAAC,CAAC,CAAA;AAAA,MACtC,SAAA,EAAW,SAAA,IAAc,eAAA,CAAgB,SAAA,CAAU,CAAC,CAAC;AAAA,KACvD;AAAA;AAAA,IAGA,IAAA,EAAM,MAAA;AAAA,IACN,aAAA,EAAe;AAAA,GACjB;AACF;;;;"}