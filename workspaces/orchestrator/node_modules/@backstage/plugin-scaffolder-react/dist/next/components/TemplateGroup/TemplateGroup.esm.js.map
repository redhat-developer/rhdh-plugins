{"version":3,"file":"TemplateGroup.esm.js","sources":["../../../../src/next/components/TemplateGroup/TemplateGroup.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';\nimport { ReactNode, ComponentType } from 'react';\nimport {\n  Content,\n  ContentHeader,\n  ItemCardGrid,\n} from '@backstage/core-components';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { TemplateCardProps, TemplateCard } from '../TemplateCard';\nimport { AnalyticsContext, IconComponent } from '@backstage/core-plugin-api';\n\n/**\n * The props for the {@link TemplateGroup} component.\n * @alpha\n */\nexport interface TemplateGroupProps {\n  templates: {\n    template: TemplateEntityV1beta3;\n    additionalLinks?: {\n      icon: IconComponent;\n      text: string;\n      url: string;\n    }[];\n  }[];\n  onSelected: (template: TemplateEntityV1beta3) => void;\n  title: ReactNode;\n  components?: {\n    CardComponent?: ComponentType<TemplateCardProps>;\n  };\n}\n\n/**\n * The `TemplateGroup` component is used to display a group of templates with a title.\n * @alpha\n */\nexport const TemplateGroup = (props: TemplateGroupProps) => {\n  const {\n    templates,\n    title,\n    components: { CardComponent } = {},\n    onSelected,\n  } = props;\n  const titleComponent =\n    typeof title === 'string' ? <ContentHeader title={title} /> : title;\n\n  if (templates.length === 0) {\n    return null;\n  }\n\n  const Card = CardComponent || TemplateCard;\n\n  return (\n    <Content>\n      {titleComponent}\n      <ItemCardGrid>\n        {templates.map(({ template, additionalLinks }) => (\n          <AnalyticsContext\n            attributes={{\n              entityRef: stringifyEntityRef(template),\n            }}\n            key={stringifyEntityRef(template)}\n          >\n            <Card\n              additionalLinks={additionalLinks}\n              template={template}\n              onSelected={onSelected}\n            />\n          </AnalyticsContext>\n        ))}\n      </ItemCardGrid>\n    </Content>\n  );\n};\n"],"names":[],"mappings":";;;;;;AAkDO,MAAM,aAAA,GAAgB,CAAC,KAAA,KAA8B;AAC1D,EAAA,MAAM;AAAA,IACJ,SAAA;AAAA,IACA,KAAA;AAAA,IACA,UAAA,EAAY,EAAE,aAAA,EAAc,GAAI,EAAC;AAAA,IACjC;AAAA,GACF,GAAI,KAAA;AACJ,EAAA,MAAM,iBACJ,OAAO,KAAA,KAAU,2BAAW,GAAA,CAAC,aAAA,EAAA,EAAc,OAAc,CAAA,GAAK,KAAA;AAEhE,EAAA,IAAI,SAAA,CAAU,WAAW,CAAA,EAAG;AAC1B,IAAA,OAAO,IAAA;AAAA,EACT;AAEA,EAAA,MAAM,OAAO,aAAA,IAAiB,YAAA;AAE9B,EAAA,4BACG,OAAA,EAAA,EACE,QAAA,EAAA;AAAA,IAAA,cAAA;AAAA,oBACD,GAAA,CAAC,gBACE,QAAA,EAAA,SAAA,CAAU,GAAA,CAAI,CAAC,EAAE,QAAA,EAAU,iBAAgB,qBAC1C,GAAA;AAAA,MAAC,gBAAA;AAAA,MAAA;AAAA,QACC,UAAA,EAAY;AAAA,UACV,SAAA,EAAW,mBAAmB,QAAQ;AAAA,SACxC;AAAA,QAGA,QAAA,kBAAA,GAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,eAAA;AAAA,YACA,QAAA;AAAA,YACA;AAAA;AAAA;AACF,OAAA;AAAA,MANK,mBAAmB,QAAQ;AAAA,KAQnC,CAAA,EACH;AAAA,GAAA,EACF,CAAA;AAEJ;;;;"}