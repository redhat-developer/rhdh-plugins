{"version":3,"file":"LinkOutputs.esm.js","sources":["../../../../src/next/components/TemplateOutputs/LinkOutputs.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IconComponent, useApp, useRouteRef } from '@backstage/core-plugin-api';\nimport { entityRouteRef } from '@backstage/plugin-catalog-react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { Link } from '@backstage/core-components';\nimport { ScaffolderTaskOutput } from '../../../api';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n});\n\nexport const LinkOutputs = (props: { output: ScaffolderTaskOutput }) => {\n  const { links = [] } = props.output;\n  const classes = useStyles();\n  const app = useApp();\n  const entityRoute = useRouteRef(entityRouteRef);\n\n  const iconResolver = (key?: string): IconComponent =>\n    app.getSystemIcon(key!) ?? LinkIcon;\n\n  return (\n    <>\n      {links\n        .filter(({ url, entityRef }) => url || entityRef)\n        .map(({ url, entityRef, title, icon }) => {\n          if (entityRef) {\n            const entityName = parseEntityRef(entityRef);\n            const target = entityRoute(entityName);\n            return { title, icon, url: target };\n          }\n          return { title, icon, url: url! };\n        })\n        .map(({ url, title, icon }, i) => {\n          const Icon = iconResolver(icon);\n          return (\n            <Link to={url} key={i} classes={{ root: classes.root }}>\n              <Button startIcon={<Icon />} component=\"div\" color=\"primary\">\n                {title}\n              </Button>\n            </Link>\n          );\n        })}\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAwBA,MAAM,YAAY,UAAA,CAAW;AAAA,EAC3B,IAAA,EAAM;AAAA,IACJ,SAAA,EAAW;AAAA,MACT,cAAA,EAAgB;AAAA;AAClB;AAEJ,CAAC,CAAA;AAEM,MAAM,WAAA,GAAc,CAAC,KAAA,KAA4C;AACtE,EAAA,MAAM,EAAE,KAAA,GAAQ,EAAC,KAAM,KAAA,CAAM,MAAA;AAC7B,EAAA,MAAM,UAAU,SAAA,EAAU;AAC1B,EAAA,MAAM,MAAM,MAAA,EAAO;AACnB,EAAA,MAAM,WAAA,GAAc,YAAY,cAAc,CAAA;AAE9C,EAAA,MAAM,eAAe,CAAC,GAAA,KACpB,GAAA,CAAI,aAAA,CAAc,GAAI,CAAA,IAAK,QAAA;AAE7B,EAAA,uCAEK,QAAA,EAAA,KAAA,CACE,MAAA,CAAO,CAAC,EAAE,GAAA,EAAK,WAAU,KAAM,GAAA,IAAO,SAAS,CAAA,CAC/C,IAAI,CAAC,EAAE,KAAK,SAAA,EAAW,KAAA,EAAO,MAAK,KAAM;AACxC,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,MAAM,UAAA,GAAa,eAAe,SAAS,CAAA;AAC3C,MAAA,MAAM,MAAA,GAAS,YAAY,UAAU,CAAA;AACrC,MAAA,OAAO,EAAE,KAAA,EAAO,IAAA,EAAM,GAAA,EAAK,MAAA,EAAO;AAAA,IACpC;AACA,IAAA,OAAO,EAAE,KAAA,EAAO,IAAA,EAAM,GAAA,EAAU;AAAA,EAClC,CAAC,EACA,GAAA,CAAI,CAAC,EAAE,GAAA,EAAK,KAAA,EAAO,IAAA,EAAK,EAAG,CAAA,KAAM;AAChC,IAAA,MAAM,IAAA,GAAO,aAAa,IAAI,CAAA;AAC9B,IAAA,uBACE,GAAA,CAAC,QAAK,EAAA,EAAI,GAAA,EAAa,SAAS,EAAE,IAAA,EAAM,OAAA,CAAQ,IAAA,EAAK,EACnD,QAAA,kBAAA,GAAA,CAAC,UAAO,SAAA,kBAAW,GAAA,CAAC,QAAK,CAAA,EAAI,SAAA,EAAU,OAAM,KAAA,EAAM,SAAA,EAChD,QAAA,EAAA,KAAA,EACH,CAAA,EAAA,EAHkB,CAIpB,CAAA;AAAA,EAEJ,CAAC,CAAA,EACL,CAAA;AAEJ;;;;"}