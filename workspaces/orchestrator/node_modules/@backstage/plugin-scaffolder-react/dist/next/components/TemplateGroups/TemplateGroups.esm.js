import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { Progress, Link } from '@backstage/core-components';
import { useApi, errorApiRef } from '@backstage/core-plugin-api';
import { useEntityList } from '@backstage/plugin-catalog-react';
import { isTemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';
import Typography from '@material-ui/core/Typography';
import { useCallback, useEffect } from 'react';
import { TemplateGroup } from '../TemplateGroup/TemplateGroup.esm.js';

const TemplateGroups = (props) => {
  const { loading, error, entities } = useEntityList();
  const { groups, templateFilter, TemplateCardComponent, onTemplateSelected } = props;
  const errorApi = useApi(errorApiRef);
  const onSelected = useCallback(
    (template) => {
      onTemplateSelected?.(template);
    },
    [onTemplateSelected]
  );
  useEffect(() => {
    if (error) {
      errorApi.post(error);
    }
  }, [error, errorApi]);
  if (loading) {
    return /* @__PURE__ */ jsx(Progress, {});
  }
  if (error) {
    return null;
  }
  if (!entities || !entities.length) {
    return /* @__PURE__ */ jsxs(Typography, { variant: "body2", children: [
      "No templates found that match your filter. Learn more about",
      " ",
      /* @__PURE__ */ jsx(Link, { to: "https://backstage.io/docs/features/software-templates/adding-templates", children: "adding templates" }),
      "."
    ] });
  }
  return /* @__PURE__ */ jsx(Fragment, { children: groups.map(({ title, filter }, index) => {
    const templates = entities.filter(isTemplateEntityV1beta3).filter((e) => templateFilter ? templateFilter(e) : true).filter(filter).map((template) => {
      const additionalLinks = props.additionalLinksForEntity?.(template) ?? [];
      return {
        template,
        additionalLinks
      };
    });
    return /* @__PURE__ */ jsx(
      TemplateGroup,
      {
        templates,
        title,
        components: { CardComponent: TemplateCardComponent },
        onSelected
      },
      index
    );
  }) });
};

export { TemplateGroups };
//# sourceMappingURL=TemplateGroups.esm.js.map
