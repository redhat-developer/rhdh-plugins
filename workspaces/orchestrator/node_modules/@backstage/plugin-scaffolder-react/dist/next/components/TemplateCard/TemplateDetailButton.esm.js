import { jsx } from 'react/jsx-runtime';
import Tooltip from '@material-ui/core/Tooltip';
import IconButton from '@material-ui/core/IconButton';
import Typography from '@material-ui/core/Typography';
import DescriptionIcon from '@material-ui/icons/Description';
import { Link } from '@backstage/core-components';
import { entityRouteRef, entityRouteParams } from '@backstage/plugin-catalog-react';
import { useRouteRef, useApp } from '@backstage/core-plugin-api';
import { stringifyEntityRef } from '@backstage/catalog-model';
import { scaffolderReactTranslationRef } from '../../../translation.esm.js';
import { useTranslationRef } from '@backstage/frontend-plugin-api';

const TemplateDetailButton = ({
  template,
  className
}) => {
  const catalogEntityRoute = useRouteRef(entityRouteRef);
  const { t } = useTranslationRef(scaffolderReactTranslationRef);
  const entityRef = stringifyEntityRef(template);
  const app = useApp();
  const TemplateIcon = app.getSystemIcon("kind:template") || DescriptionIcon;
  return /* @__PURE__ */ jsx(Tooltip, { id: `tooltip-${entityRef}`, title: t("cardHeader.detailBtnTitle"), children: /* @__PURE__ */ jsx(
    IconButton,
    {
      "aria-label": t("cardHeader.detailBtnTitle"),
      id: `viewDetail-${entityRef}`,
      style: { padding: 0 },
      children: /* @__PURE__ */ jsx(Typography, { component: "span", children: /* @__PURE__ */ jsx(
        Link,
        {
          to: catalogEntityRoute(entityRouteParams(template)),
          style: { display: "flex", alignItems: "center" },
          children: /* @__PURE__ */ jsx(TemplateIcon, { className })
        }
      ) })
    }
  ) });
};

export { TemplateDetailButton };
//# sourceMappingURL=TemplateDetailButton.esm.js.map
