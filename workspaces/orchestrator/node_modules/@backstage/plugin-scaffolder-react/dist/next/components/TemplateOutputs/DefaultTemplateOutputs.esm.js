import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { InfoCard, MarkdownContent } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import Box from '@material-ui/core/Box';
import Paper from '@material-ui/core/Paper';
import { useState, useEffect, useMemo } from 'react';
import { scaffolderReactTranslationRef } from '../../../translation.esm.js';
import { LinkOutputs } from './LinkOutputs.esm.js';
import { TextOutputs } from './TextOutputs.esm.js';

const DefaultTemplateOutputs = (props) => {
  const { t } = useTranslationRef(scaffolderReactTranslationRef);
  const { output } = props;
  const [textOutputIndex, setTextOutputIndex] = useState(
    void 0
  );
  useEffect(() => {
    if (textOutputIndex === void 0 && output?.text) {
      const defaultIndex = output.text.findIndex(
        (text) => text.default
      );
      setTextOutputIndex(defaultIndex >= 0 ? defaultIndex : 0);
    }
  }, [textOutputIndex, output]);
  const textOutput = useMemo(
    () => textOutputIndex !== void 0 ? output?.text?.[textOutputIndex] : null,
    [output, textOutputIndex]
  );
  if (!output) {
    return null;
  }
  const displayTextButtons = (output.text || []).length > 1;
  const emptyOutput = (output.links || []).length === 0 && !displayTextButtons;
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    !emptyOutput ? /* @__PURE__ */ jsx(Box, { paddingBottom: 2, "data-testid": "output-box", children: /* @__PURE__ */ jsx(Paper, { children: /* @__PURE__ */ jsxs(
      Box,
      {
        padding: 2,
        justifyContent: "center",
        display: "flex",
        gridGap: 16,
        flexWrap: "wrap",
        children: [
          displayTextButtons && /* @__PURE__ */ jsx(
            TextOutputs,
            {
              "data-testid": "text-outputs",
              output,
              index: textOutputIndex,
              setIndex: setTextOutputIndex
            }
          ),
          /* @__PURE__ */ jsx(LinkOutputs, { output })
        ]
      }
    ) }) }) : null,
    textOutput ? /* @__PURE__ */ jsx(Box, { paddingBottom: 2, "data-testid": "text-output-box", children: /* @__PURE__ */ jsx(
      InfoCard,
      {
        title: textOutput.title ?? t("templateOutputs.title"),
        noPadding: true,
        titleTypographyProps: { component: "h2" },
        children: /* @__PURE__ */ jsx(Box, { padding: 2, height: "100%", children: /* @__PURE__ */ jsx(MarkdownContent, { content: textOutput.content ?? "" }) })
      }
    ) }) : null
  ] });
};

export { DefaultTemplateOutputs };
//# sourceMappingURL=DefaultTemplateOutputs.esm.js.map
