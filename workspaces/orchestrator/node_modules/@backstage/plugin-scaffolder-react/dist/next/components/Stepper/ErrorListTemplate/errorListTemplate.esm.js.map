{"version":3,"file":"errorListTemplate.esm.js","sources":["../../../../../src/next/components/Stepper/ErrorListTemplate/errorListTemplate.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ErrorListProps, RJSFValidationError } from '@rjsf/utils';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport startCase from 'lodash/startCase';\n\nconst useStyles = makeStyles((_theme: Theme) =>\n  createStyles({\n    list: {\n      width: '100%',\n    },\n    text: {\n      textWrap: 'wrap',\n    },\n  }),\n);\n\n/**\n * Shows a list of errors found in the form\n *\n * @public\n */\nexport const ErrorListTemplate = ({ errors, schema }: ErrorListProps) => {\n  const classes = useStyles();\n\n  function formatErrorMessage(error: RJSFValidationError) {\n    if (error.property && error.message) {\n      const propertyName = error.property.startsWith('.')\n        ? error.property.substring(1)\n        : error.property;\n      if (schema.properties && propertyName in schema.properties) {\n        const property = schema.properties[propertyName];\n\n        if (typeof property === 'object' && 'title' in property) {\n          return `'${property.title}' ${error.message}`;\n        }\n      }\n      // fall back to property name\n      return `'${startCase(propertyName)}' ${error.message}`;\n    }\n    // fall back if property does not exist\n    return error.stack;\n  }\n\n  return (\n    <Paper>\n      <List dense className={classes.list}>\n        {errors.map((error, index) => (\n          <ListItem key={index}>\n            <ListItemIcon>\n              <ErrorIcon color=\"error\" />\n            </ListItemIcon>\n            <ListItemText\n              classes={{ primary: classes.text }}\n              primary={formatErrorMessage(error)}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AAyBA,MAAM,SAAA,GAAY,UAAA;AAAA,EAAW,CAAC,WAC5B,YAAA,CAAa;AAAA,IACX,IAAA,EAAM;AAAA,MACJ,KAAA,EAAO;AAAA,KACT;AAAA,IACA,IAAA,EAAM;AAAA,MACJ,QAAA,EAAU;AAAA;AACZ,GACD;AACH,CAAA;AAOO,MAAM,iBAAA,GAAoB,CAAC,EAAE,MAAA,EAAQ,QAAO,KAAsB;AACvE,EAAA,MAAM,UAAU,SAAA,EAAU;AAE1B,EAAA,SAAS,mBAAmB,KAAA,EAA4B;AACtD,IAAA,IAAI,KAAA,CAAM,QAAA,IAAY,KAAA,CAAM,OAAA,EAAS;AACnC,MAAA,MAAM,YAAA,GAAe,KAAA,CAAM,QAAA,CAAS,UAAA,CAAW,GAAG,CAAA,GAC9C,KAAA,CAAM,QAAA,CAAS,SAAA,CAAU,CAAC,CAAA,GAC1B,KAAA,CAAM,QAAA;AACV,MAAA,IAAI,MAAA,CAAO,UAAA,IAAc,YAAA,IAAgB,MAAA,CAAO,UAAA,EAAY;AAC1D,QAAA,MAAM,QAAA,GAAW,MAAA,CAAO,UAAA,CAAW,YAAY,CAAA;AAE/C,QAAA,IAAI,OAAO,QAAA,KAAa,QAAA,IAAY,OAAA,IAAW,QAAA,EAAU;AACvD,UAAA,OAAO,CAAA,CAAA,EAAI,QAAA,CAAS,KAAK,CAAA,EAAA,EAAK,MAAM,OAAO,CAAA,CAAA;AAAA,QAC7C;AAAA,MACF;AAEA,MAAA,OAAO,IAAI,SAAA,CAAU,YAAY,CAAC,CAAA,EAAA,EAAK,MAAM,OAAO,CAAA,CAAA;AAAA,IACtD;AAEA,IAAA,OAAO,KAAA,CAAM,KAAA;AAAA,EACf;AAEA,EAAA,uBACE,GAAA,CAAC,KAAA,EAAA,EACC,QAAA,kBAAA,GAAA,CAAC,IAAA,EAAA,EAAK,OAAK,IAAA,EAAC,SAAA,EAAW,OAAA,CAAQ,IAAA,EAC5B,iBAAO,GAAA,CAAI,CAAC,KAAA,EAAO,KAAA,0BACjB,QAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,YAAA,EAAA,EACC,QAAA,kBAAA,GAAA,CAAC,SAAA,EAAA,EAAU,KAAA,EAAM,SAAQ,CAAA,EAC3B,CAAA;AAAA,oBACA,GAAA;AAAA,MAAC,YAAA;AAAA,MAAA;AAAA,QACC,OAAA,EAAS,EAAE,OAAA,EAAS,OAAA,CAAQ,IAAA,EAAK;AAAA,QACjC,OAAA,EAAS,mBAAmB,KAAK;AAAA;AAAA;AACnC,GAAA,EAAA,EAPa,KAQf,CACD,CAAA,EACH,CAAA,EACF,CAAA;AAEJ;;;;"}