import { jsx } from 'react/jsx-runtime';
import { useState, useCallback } from 'react';
import useInterval from 'react-use/esm/useInterval';
import { DateTime, Interval } from 'luxon';
import humanizeDuration from 'humanize-duration';
import Typography from '@material-ui/core/Typography';
import { useMountEffect } from '@react-hookz/web';

const StepTime = (props) => {
  const [time, setTime] = useState("");
  const { step } = props;
  const getDelay = () => {
    if (step.startedAt && step.endedAt && time) {
      return null;
    }
    if (step.startedAt && step.endedAt) {
      return 1;
    }
    return 1e3;
  };
  const calculate = useCallback(() => {
    if (!step.startedAt) {
      setTime("");
      return;
    }
    const end = step.endedAt ? DateTime.fromISO(step.endedAt) : DateTime.local();
    const startedAt = DateTime.fromISO(step.startedAt);
    const formatted = Interval.fromDateTimes(startedAt, end).toDuration().valueOf();
    setTime(humanizeDuration(formatted, { round: true }));
  }, [step.endedAt, step.startedAt]);
  useMountEffect(calculate);
  useInterval(calculate, getDelay());
  return /* @__PURE__ */ jsx(Typography, { variant: "caption", children: time });
};

export { StepTime };
//# sourceMappingURL=StepTime.esm.js.map
