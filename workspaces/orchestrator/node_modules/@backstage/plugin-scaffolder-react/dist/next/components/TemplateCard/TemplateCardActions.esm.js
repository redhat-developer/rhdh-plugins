import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import { UserIcon } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { EntityRefLinks } from '@backstage/plugin-catalog-react';
import Button from '@material-ui/core/Button';
import { makeStyles } from '@material-ui/core/styles';
import { scaffolderReactTranslationRef } from '../../../translation.esm.js';

const useStyles = makeStyles((theme) => ({
  footer: {
    display: "flex",
    justifyContent: "space-between",
    flex: 1,
    alignItems: "center"
  },
  ownedBy: {
    display: "flex",
    alignItems: "center",
    flex: 1,
    color: theme.palette.link
  },
  actionContainer: { padding: "16px", flex: 1, alignItems: "flex-end" }
}));
const TemplateCardActions = ({
  canCreateTask,
  handleChoose,
  ownedByRelations
}) => {
  const { t } = useTranslationRef(scaffolderReactTranslationRef);
  const styles = useStyles();
  return /* @__PURE__ */ jsxs("div", { className: styles.footer, "data-testid": "template-card-actions--footer", children: [
    /* @__PURE__ */ jsx(
      "div",
      {
        className: styles.ownedBy,
        "data-testid": "template-card-actions--ownedby",
        children: ownedByRelations.length > 0 && /* @__PURE__ */ jsxs(Fragment, { children: [
          /* @__PURE__ */ jsx(UserIcon, { fontSize: "small" }),
          /* @__PURE__ */ jsx(
            EntityRefLinks,
            {
              style: { marginLeft: "8px" },
              entityRefs: ownedByRelations,
              defaultKind: "Group",
              hideIcons: true
            }
          )
        ] })
      }
    ),
    canCreateTask ? /* @__PURE__ */ jsx(
      Button,
      {
        size: "small",
        variant: "outlined",
        color: "primary",
        "data-testid": "template-card-actions--create",
        onClick: handleChoose,
        children: t("templateCard.chooseButtonText")
      }
    ) : null
  ] });
};

export { TemplateCardActions };
//# sourceMappingURL=TemplateCardActions.esm.js.map
