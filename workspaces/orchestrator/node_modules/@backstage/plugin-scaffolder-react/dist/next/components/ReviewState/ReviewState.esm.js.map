{"version":3,"file":"ReviewState.esm.js","sources":["../../../../src/next/components/ReviewState/ReviewState.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StructuredMetadataTable } from '@backstage/core-components';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { Draft07 as JSONSchema } from 'json-schema-library';\nimport { ParsedTemplateSchema } from '../../hooks/useTemplateSchema';\nimport { isJsonObject, formatKey, findSchemaForKey } from './util';\n\n/**\n * The props for the {@link ReviewState} component.\n * @alpha\n */\nexport type ReviewStateProps = {\n  schemas: ParsedTemplateSchema[];\n  formState: JsonObject;\n};\n\nfunction processSchema(\n  key: string,\n  value: JsonValue | undefined,\n  schema: ParsedTemplateSchema,\n  formState: JsonObject,\n): [string, JsonValue | undefined][] {\n  const parsedSchema = new JSONSchema(schema.mergedSchema);\n  const definitionInSchema = parsedSchema.getSchema({\n    pointer: `#/${key}`,\n    data: formState,\n  });\n\n  const name =\n    definitionInSchema?.['ui:backstage']?.review?.name ??\n    definitionInSchema?.title ??\n    key;\n\n  if (definitionInSchema) {\n    const backstageReviewOptions = definitionInSchema['ui:backstage']?.review;\n    if (backstageReviewOptions) {\n      if (backstageReviewOptions.mask) {\n        return [[name, backstageReviewOptions.mask]];\n      }\n      if (backstageReviewOptions.show === false) {\n        return [];\n      }\n    }\n\n    if (\n      definitionInSchema['ui:widget'] === 'password' ||\n      definitionInSchema['ui:field']?.toLocaleLowerCase('en-us') === 'secret'\n    ) {\n      return [[name, '******']];\n    }\n\n    if (definitionInSchema.enum && definitionInSchema.enumNames) {\n      return [\n        [\n          name,\n          definitionInSchema.enumNames[\n            definitionInSchema.enum.indexOf(value)\n          ] || value,\n        ],\n      ];\n    }\n\n    if (backstageReviewOptions?.explode !== false && isJsonObject(value)) {\n      // Recurse nested objects\n      return Object.entries(value).flatMap(([nestedKey, nestedValue]) =>\n        processSchema(`${key}/${nestedKey}`, nestedValue, schema, formState),\n      );\n    }\n  }\n\n  return [[name, value]];\n}\n\n/**\n * The component used by the {@link Stepper} to render the review step.\n * @alpha\n */\nexport const ReviewState = (props: ReviewStateProps) => {\n  const reviewData = Object.fromEntries(\n    Object.entries(props.formState)\n      .flatMap(([key, value]) => {\n        const schema = findSchemaForKey(key, props.schemas, props.formState);\n        return schema\n          ? processSchema(key, value, schema, props.formState)\n          : [[key, value]];\n      })\n      .filter(prop => prop.length > 0),\n  );\n  const options = {\n    titleFormat: formatKey,\n  };\n  return <StructuredMetadataTable metadata={reviewData} options={options} />;\n};\n"],"names":["JSONSchema"],"mappings":";;;;;AA8BA,SAAS,aAAA,CACP,GAAA,EACA,KAAA,EACA,MAAA,EACA,SAAA,EACmC;AACnC,EAAA,MAAM,YAAA,GAAe,IAAIA,OAAA,CAAW,MAAA,CAAO,YAAY,CAAA;AACvD,EAAA,MAAM,kBAAA,GAAqB,aAAa,SAAA,CAAU;AAAA,IAChD,OAAA,EAAS,KAAK,GAAG,CAAA,CAAA;AAAA,IACjB,IAAA,EAAM;AAAA,GACP,CAAA;AAED,EAAA,MAAM,OACJ,kBAAA,GAAqB,cAAc,GAAG,MAAA,EAAQ,IAAA,IAC9C,oBAAoB,KAAA,IACpB,GAAA;AAEF,EAAA,IAAI,kBAAA,EAAoB;AACtB,IAAA,MAAM,sBAAA,GAAyB,kBAAA,CAAmB,cAAc,CAAA,EAAG,MAAA;AACnE,IAAA,IAAI,sBAAA,EAAwB;AAC1B,MAAA,IAAI,uBAAuB,IAAA,EAAM;AAC/B,QAAA,OAAO,CAAC,CAAC,IAAA,EAAM,sBAAA,CAAuB,IAAI,CAAC,CAAA;AAAA,MAC7C;AACA,MAAA,IAAI,sBAAA,CAAuB,SAAS,KAAA,EAAO;AACzC,QAAA,OAAO,EAAC;AAAA,MACV;AAAA,IACF;AAEA,IAAA,IACE,kBAAA,CAAmB,WAAW,CAAA,KAAM,UAAA,IACpC,kBAAA,CAAmB,UAAU,CAAA,EAAG,iBAAA,CAAkB,OAAO,CAAA,KAAM,QAAA,EAC/D;AACA,MAAA,OAAO,CAAC,CAAC,IAAA,EAAM,QAAQ,CAAC,CAAA;AAAA,IAC1B;AAEA,IAAA,IAAI,kBAAA,CAAmB,IAAA,IAAQ,kBAAA,CAAmB,SAAA,EAAW;AAC3D,MAAA,OAAO;AAAA,QACL;AAAA,UACE,IAAA;AAAA,UACA,mBAAmB,SAAA,CACjB,kBAAA,CAAmB,KAAK,OAAA,CAAQ,KAAK,CACvC,CAAA,IAAK;AAAA;AACP,OACF;AAAA,IACF;AAEA,IAAA,IAAI,sBAAA,EAAwB,OAAA,KAAY,KAAA,IAAS,YAAA,CAAa,KAAK,CAAA,EAAG;AAEpE,MAAA,OAAO,MAAA,CAAO,OAAA,CAAQ,KAAK,CAAA,CAAE,OAAA;AAAA,QAAQ,CAAC,CAAC,SAAA,EAAW,WAAW,CAAA,KAC3D,aAAA,CAAc,CAAA,EAAG,GAAG,CAAA,CAAA,EAAI,SAAS,CAAA,CAAA,EAAI,WAAA,EAAa,QAAQ,SAAS;AAAA,OACrE;AAAA,IACF;AAAA,EACF;AAEA,EAAA,OAAO,CAAC,CAAC,IAAA,EAAM,KAAK,CAAC,CAAA;AACvB;AAMO,MAAM,WAAA,GAAc,CAAC,KAAA,KAA4B;AACtD,EAAA,MAAM,aAAa,MAAA,CAAO,WAAA;AAAA,IACxB,MAAA,CAAO,OAAA,CAAQ,KAAA,CAAM,SAAS,CAAA,CAC3B,QAAQ,CAAC,CAAC,GAAA,EAAK,KAAK,CAAA,KAAM;AACzB,MAAA,MAAM,SAAS,gBAAA,CAAiB,GAAA,EAAK,KAAA,CAAM,OAAA,EAAS,MAAM,SAAS,CAAA;AACnE,MAAA,OAAO,MAAA,GACH,aAAA,CAAc,GAAA,EAAK,KAAA,EAAO,MAAA,EAAQ,KAAA,CAAM,SAAS,CAAA,GACjD,CAAC,CAAC,GAAA,EAAK,KAAK,CAAC,CAAA;AAAA,IACnB,CAAC,CAAA,CACA,MAAA,CAAO,CAAA,IAAA,KAAQ,IAAA,CAAK,SAAS,CAAC;AAAA,GACnC;AACA,EAAA,MAAM,OAAA,GAAU;AAAA,IACd,WAAA,EAAa;AAAA,GACf;AACA,EAAA,uBAAO,GAAA,CAAC,uBAAA,EAAA,EAAwB,QAAA,EAAU,UAAA,EAAY,OAAA,EAAkB,CAAA;AAC1E;;;;"}