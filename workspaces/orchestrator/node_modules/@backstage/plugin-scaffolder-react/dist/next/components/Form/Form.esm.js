import { jsx } from 'react/jsx-runtime';
import { withTheme } from '@rjsf/core';
import { useMemo } from 'react';
import { FieldTemplate } from './FieldTemplate.esm.js';
import { DescriptionFieldTemplate } from './DescriptionFieldTemplate.esm.js';
import { Theme } from '@rjsf/material-ui';

const WrappedForm = withTheme(Theme);
const Form = (props) => {
  const wrappedFields = useMemo(
    () => Object.fromEntries(
      Object.entries(props.fields ?? {}).map(([key, Component]) => [
        key,
        (wrapperProps) => {
          return /* @__PURE__ */ jsx(
            Component,
            {
              ...wrapperProps,
              uiSchema: wrapperProps.uiSchema ?? {},
              formData: wrapperProps.formData,
              rawErrors: wrapperProps.rawErrors ?? [],
              disabled: wrapperProps.disabled ?? false,
              readonly: wrapperProps.readonly ?? false
            }
          );
        }
      ])
    ),
    [props.fields]
  );
  const templates = useMemo(
    () => ({
      FieldTemplate,
      DescriptionFieldTemplate,
      ...props.templates
    }),
    [props.templates]
  );
  return /* @__PURE__ */ jsx(WrappedForm, { ...props, templates, fields: wrappedFields });
};

export { Form };
//# sourceMappingURL=Form.esm.js.map
