import { jsxs, jsx } from 'react/jsx-runtime';
import { RELATION_OWNED_BY } from '@backstage/catalog-model';
import { useAnalytics } from '@backstage/core-plugin-api';
import { getEntityRelations } from '@backstage/plugin-catalog-react';
import Card from '@material-ui/core/Card';
import CardActions from '@material-ui/core/CardActions';
import CardContent from '@material-ui/core/CardContent';
import Divider from '@material-ui/core/Divider';
import Grid from '@material-ui/core/Grid';
import { makeStyles } from '@material-ui/core/styles';
import { useCallback } from 'react';
import { CardHeader } from './CardHeader.esm.js';
import { usePermission } from '@backstage/plugin-permission-react';
import { taskCreatePermission } from '@backstage/plugin-scaffolder-common/alpha';
import { TemplateCardContent } from './TemplateCardContent.esm.js';
import { TemplateCardTags } from './TemplateCardTags.esm.js';
import { TemplateCardLinks } from './TemplateCardLinks.esm.js';
import { TemplateCardActions } from './TemplateCardActions.esm.js';

const useStyles = makeStyles(() => ({
  actionContainer: { padding: "16px", flex: 1, alignItems: "flex-end" }
}));
const TemplateCard = (props) => {
  const { additionalLinks, onSelected, template } = props;
  const styles = useStyles();
  const analytics = useAnalytics();
  const ownedByRelations = getEntityRelations(template, RELATION_OWNED_BY);
  const hasTags = !!template.metadata.tags?.length;
  const hasLinks = !!additionalLinks?.length || !!template.metadata.links?.length;
  const displayDefaultDivider = !hasTags && !hasLinks;
  const { allowed: canCreateTask } = usePermission({
    permission: taskCreatePermission
  });
  const handleChoose = useCallback(() => {
    analytics.captureEvent("click", `Template has been opened`);
    onSelected?.(template);
  }, [analytics, onSelected, template]);
  return /* @__PURE__ */ jsxs(Card, { children: [
    /* @__PURE__ */ jsx(CardHeader, { template, "data-testid": "template-card-header" }),
    /* @__PURE__ */ jsx(CardContent, { children: /* @__PURE__ */ jsxs(Grid, { container: true, spacing: 2, "data-testid": "template-card-content", children: [
      /* @__PURE__ */ jsx(TemplateCardContent, { template }),
      displayDefaultDivider && /* @__PURE__ */ jsx(Grid, { item: true, xs: 12, children: /* @__PURE__ */ jsx(Divider, { "data-testid": "template-card-separator" }) }),
      hasTags && /* @__PURE__ */ jsx(TemplateCardTags, { template }),
      hasLinks && /* @__PURE__ */ jsx(
        TemplateCardLinks,
        {
          template,
          additionalLinks
        }
      )
    ] }) }),
    /* @__PURE__ */ jsx(
      CardActions,
      {
        className: styles.actionContainer,
        "data-testid": "template-card-actions",
        children: /* @__PURE__ */ jsx(
          TemplateCardActions,
          {
            canCreateTask,
            handleChoose,
            ownedByRelations
          }
        )
      }
    )
  ] });
};

export { TemplateCard };
//# sourceMappingURL=TemplateCard.esm.js.map
