import { jsx } from 'react/jsx-runtime';
import { lazy } from 'react';
import { createExtensionBlueprint, ExtensionBoundary } from '@backstage/frontend-plugin-api';
import { searchResultListItemDataRef } from './types.esm.js';
import { SearchResultListItemExtension } from '../../extensions.esm.js';

const SearchResultListItemBlueprint = createExtensionBlueprint({
  kind: "search-result-list-item",
  attachTo: {
    id: "page:search",
    input: "items"
  },
  config: {
    schema: {
      noTrack: (z) => z.boolean().default(false)
    }
  },
  output: [searchResultListItemDataRef],
  dataRefs: {
    item: searchResultListItemDataRef
  },
  *factory(params, { config, node }) {
    const ExtensionComponent = lazy(
      () => params.component({ config }).then((component) => ({ default: component }))
    );
    yield searchResultListItemDataRef({
      predicate: params.predicate,
      component: (props) => /* @__PURE__ */ jsx(ExtensionBoundary, { node, children: /* @__PURE__ */ jsx(
        SearchResultListItemExtension,
        {
          rank: props.rank,
          result: props.result,
          noTrack: config.noTrack,
          children: /* @__PURE__ */ jsx(ExtensionComponent, { ...props })
        }
      ) })
    });
  }
});

export { SearchResultListItemBlueprint };
//# sourceMappingURL=SearchResultListItemBlueprint.esm.js.map
