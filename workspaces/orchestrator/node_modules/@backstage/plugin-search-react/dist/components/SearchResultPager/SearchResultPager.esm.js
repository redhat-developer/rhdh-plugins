import { jsx, Fragment, jsxs } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import { makeStyles } from '@material-ui/core/styles';
import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';
import ArrowRightIcon from '@material-ui/icons/ArrowForwardIos';
import { useSearch } from '../../context/SearchContext.esm.js';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { searchReactTranslationRef } from '../../translation.esm.js';

const useStyles = makeStyles((theme) => ({
  root: {
    display: "flex",
    justifyContent: "space-between",
    gap: theme.spacing(2),
    margin: theme.spacing(2, 0)
  }
}));
const SearchResultPager = () => {
  const { fetchNextPage, fetchPreviousPage } = useSearch();
  const classes = useStyles();
  const { t } = useTranslationRef(searchReactTranslationRef);
  if (!fetchNextPage && !fetchPreviousPage) {
    return /* @__PURE__ */ jsx(Fragment, {});
  }
  return /* @__PURE__ */ jsxs("nav", { "aria-label": "pagination navigation", className: classes.root, children: [
    /* @__PURE__ */ jsx(
      Button,
      {
        "aria-label": "previous page",
        disabled: !fetchPreviousPage,
        onClick: fetchPreviousPage,
        startIcon: /* @__PURE__ */ jsx(ArrowBackIosIcon, {}),
        children: t("searchResultPager.previous")
      }
    ),
    /* @__PURE__ */ jsx(
      Button,
      {
        "aria-label": "next page",
        disabled: !fetchNextPage,
        onClick: fetchNextPage,
        endIcon: /* @__PURE__ */ jsx(ArrowRightIcon, {}),
        children: t("searchResultPager.next")
      }
    )
  ] });
};

export { SearchResultPager };
//# sourceMappingURL=SearchResultPager.esm.js.map
