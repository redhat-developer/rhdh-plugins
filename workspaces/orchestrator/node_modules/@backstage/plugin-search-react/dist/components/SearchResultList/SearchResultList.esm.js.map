{"version":3,"file":"SearchResultList.esm.js","sources":["../../../src/components/SearchResultList/SearchResultList.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode } from 'react';\n\nimport List, { ListProps } from '@material-ui/core/List';\n\nimport {\n  Progress,\n  EmptyState,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { AnalyticsContext } from '@backstage/core-plugin-api';\nimport { SearchResult } from '@backstage/plugin-search-common';\n\nimport { useSearchResultListItemExtensions } from '../../extensions';\n\nimport { DefaultResultListItem } from '../DefaultResultListItem';\nimport { SearchResultState, SearchResultStateProps } from '../SearchResult';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { searchReactTranslationRef } from '../../translation';\n\n/**\n * Props for {@link SearchResultListLayout}\n * @public\n */\nexport type SearchResultListLayoutProps = ListProps & {\n  /**\n   * If defined, will render a default error panel.\n   */\n  error?: Error;\n  /**\n   * If defined, will render a default loading progress.\n   */\n  loading?: boolean;\n  /**\n   * Search results to be rendered as a list.\n   */\n  resultItems?: SearchResult[];\n  /**\n   * Function to customize how result items are rendered.\n   */\n  renderResultItem?: (\n    value: SearchResult,\n    index: number,\n    array: SearchResult[],\n  ) => JSX.Element | null;\n  /**\n   * Optional component to render when no results. Default to <EmptyState /> component.\n   */\n  noResultsComponent?: ReactNode;\n  /**\n   * Optional property to provide if component should not render the component when no results are found.\n   */\n  disableRenderingWithNoResults?: boolean;\n};\n\n/**\n * Default layout for rendering search results in a list.\n * @param props - See {@link SearchResultListLayoutProps}.\n * @public\n */\nexport const SearchResultListLayout = (props: SearchResultListLayoutProps) => {\n  const { t } = useTranslationRef(searchReactTranslationRef);\n  const {\n    error,\n    loading,\n    resultItems,\n    renderResultItem = resultItem => (\n      <DefaultResultListItem\n        key={resultItem.document.location}\n        result={resultItem.document}\n      />\n    ),\n    disableRenderingWithNoResults,\n    noResultsComponent = disableRenderingWithNoResults ? null : (\n      <EmptyState missing=\"data\" title={t('noResultsDescription')} />\n    ),\n    ...rest\n  } = props;\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <ResponseErrorPanel\n        title=\"Error encountered while fetching search results\"\n        error={error}\n      />\n    );\n  }\n\n  if (!resultItems?.length) {\n    return <>{noResultsComponent}</>;\n  }\n\n  return <List {...rest}>{resultItems.map(renderResultItem)}</List>;\n};\n\n/**\n * Props for {@link SearchResultList}.\n * @public\n */\nexport type SearchResultListProps = Pick<SearchResultStateProps, 'query'> &\n  Omit<SearchResultListLayoutProps, 'loading' | 'error' | 'resultItems'>;\n\n/**\n * Given a query, search for results and render them as a list.\n * @param props - See {@link SearchResultListProps}.\n * @public\n */\nexport const SearchResultList = (props: SearchResultListProps) => {\n  const { query, renderResultItem, children, ...rest } = props;\n\n  const defaultRenderResultItem = useSearchResultListItemExtensions(children);\n\n  return (\n    <AnalyticsContext\n      attributes={{\n        pluginId: 'search',\n        extension: 'SearchResultList',\n      }}\n    >\n      <SearchResultState query={query}>\n        {({ loading, error, value }) => (\n          <SearchResultListLayout\n            {...rest}\n            error={error}\n            loading={loading}\n            resultItems={value?.results}\n            renderResultItem={renderResultItem ?? defaultRenderResultItem}\n          />\n        )}\n      </SearchResultState>\n    </AnalyticsContext>\n  );\n};\n"],"names":["DefaultResultListItem"],"mappings":";;;;;;;;;;AA2EO,MAAM,sBAAA,GAAyB,CAAC,KAAA,KAAuC;AAC5E,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,yBAAyB,CAAA;AACzD,EAAA,MAAM;AAAA,IACJ,KAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,IACA,mBAAmB,CAAA,UAAA,qBACjB,GAAA;AAAA,MAACA,gCAAA;AAAA,MAAA;AAAA,QAEC,QAAQ,UAAA,CAAW;AAAA,OAAA;AAAA,MADd,WAAW,QAAA,CAAS;AAAA,KAE3B;AAAA,IAEF,6BAAA;AAAA,IACA,kBAAA,GAAqB,6BAAA,GAAgC,IAAA,mBACnD,GAAA,CAAC,UAAA,EAAA,EAAW,SAAQ,MAAA,EAAO,KAAA,EAAO,CAAA,CAAE,sBAAsB,CAAA,EAAG,CAAA;AAAA,IAE/D,GAAG;AAAA,GACL,GAAI,KAAA;AAEJ,EAAA,IAAI,OAAA,EAAS;AACX,IAAA,2BAAQ,QAAA,EAAA,EAAS,CAAA;AAAA,EACnB;AAEA,EAAA,IAAI,KAAA,EAAO;AACT,IAAA,uBACE,GAAA;AAAA,MAAC,kBAAA;AAAA,MAAA;AAAA,QACC,KAAA,EAAM,iDAAA;AAAA,QACN;AAAA;AAAA,KACF;AAAA,EAEJ;AAEA,EAAA,IAAI,CAAC,aAAa,MAAA,EAAQ;AACxB,IAAA,uCAAU,QAAA,EAAA,kBAAA,EAAmB,CAAA;AAAA,EAC/B;AAEA,EAAA,2BAAQ,IAAA,EAAA,EAAM,GAAG,MAAO,QAAA,EAAA,WAAA,CAAY,GAAA,CAAI,gBAAgB,CAAA,EAAE,CAAA;AAC5D;AAcO,MAAM,gBAAA,GAAmB,CAAC,KAAA,KAAiC;AAChE,EAAA,MAAM,EAAE,KAAA,EAAO,gBAAA,EAAkB,QAAA,EAAU,GAAG,MAAK,GAAI,KAAA;AAEvD,EAAA,MAAM,uBAAA,GAA0B,kCAAkC,QAAQ,CAAA;AAE1E,EAAA,uBACE,GAAA;AAAA,IAAC,gBAAA;AAAA,IAAA;AAAA,MACC,UAAA,EAAY;AAAA,QACV,QAAA,EAAU,QAAA;AAAA,QACV,SAAA,EAAW;AAAA,OACb;AAAA,MAEA,QAAA,kBAAA,GAAA,CAAC,qBAAkB,KAAA,EAChB,QAAA,EAAA,CAAC,EAAE,OAAA,EAAS,KAAA,EAAO,OAAM,qBACxB,GAAA;AAAA,QAAC,sBAAA;AAAA,QAAA;AAAA,UACE,GAAG,IAAA;AAAA,UACJ,KAAA;AAAA,UACA,OAAA;AAAA,UACA,aAAa,KAAA,EAAO,OAAA;AAAA,UACpB,kBAAkB,gBAAA,IAAoB;AAAA;AAAA,OACxC,EAEJ;AAAA;AAAA,GACF;AAEJ;;;;"}