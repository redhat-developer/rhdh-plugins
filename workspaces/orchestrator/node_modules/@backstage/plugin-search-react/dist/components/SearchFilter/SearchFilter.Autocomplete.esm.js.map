{"version":3,"file":"SearchFilter.Autocomplete.esm.js","sources":["../../../src/components/SearchFilter/SearchFilter.Autocomplete.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeEvent, useState, useMemo } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, {\n  AutocompleteGetTagProps,\n  AutocompleteRenderInputParams,\n} from '@material-ui/lab/Autocomplete';\n\nimport { useSearch } from '../../context';\nimport { useAsyncFilterValues, useDefaultFilterValue } from './hooks';\nimport { SearchFilterComponentProps } from './SearchFilter';\nimport { ensureFilterValueWithLabel, FilterValueWithLabel } from './types';\n\n/**\n * @public\n */\nexport type SearchAutocompleteFilterProps = SearchFilterComponentProps & {\n  filterSelectedOptions?: boolean;\n  limitTags?: number;\n  multiple?: boolean;\n};\n\n/**\n * @public\n */\nexport const AutocompleteFilter = (props: SearchAutocompleteFilterProps) => {\n  const {\n    className,\n    defaultValue,\n    name,\n    values: givenValues,\n    valuesDebounceMs,\n    label,\n    filterSelectedOptions,\n    limitTags,\n    multiple,\n  } = props;\n  const [inputValue, setInputValue] = useState<string>('');\n  useDefaultFilterValue(name, defaultValue);\n  const asyncValues =\n    typeof givenValues === 'function' ? givenValues : undefined;\n  const defaultValues =\n    typeof givenValues === 'function'\n      ? undefined\n      : givenValues?.map(v => ensureFilterValueWithLabel(v));\n  const { value: values, loading } = useAsyncFilterValues(\n    asyncValues,\n    inputValue,\n    defaultValues,\n    valuesDebounceMs,\n  );\n  const { filters, setFilters } = useSearch();\n  const filterValueWithLabel = ensureFilterValueWithLabel(\n    filters[name] as string | string[] | undefined,\n  );\n  const filterValue = useMemo(\n    () => filterValueWithLabel || (multiple ? [] : null),\n    [filterValueWithLabel, multiple],\n  );\n\n  // Set new filter values on input change.\n  const handleChange = (\n    _: ChangeEvent<{}>,\n    newValue: FilterValueWithLabel | FilterValueWithLabel[] | null,\n  ) => {\n    setFilters(prevState => {\n      const { [name]: filter, ...others } = prevState;\n\n      if (newValue) {\n        return {\n          ...others,\n          [name]: Array.isArray(newValue)\n            ? newValue.map(v => v.value)\n            : newValue.value,\n        };\n      }\n      return { ...others };\n    });\n  };\n\n  // Provide the input field.\n  const renderInput = (params: AutocompleteRenderInputParams) => (\n    <TextField\n      {...params}\n      name=\"search\"\n      variant=\"outlined\"\n      label={label}\n      fullWidth\n    />\n  );\n\n  // Render tags as primary-colored chips.\n  const renderTags = (\n    tagValue: FilterValueWithLabel[],\n    getTagProps: AutocompleteGetTagProps,\n  ) =>\n    tagValue.map((option, index: number) => (\n      <Chip label={option.label} color=\"primary\" {...getTagProps({ index })} />\n    ));\n\n  return (\n    <Autocomplete\n      filterSelectedOptions={filterSelectedOptions}\n      limitTags={limitTags}\n      multiple={multiple}\n      className={className}\n      id={`${multiple ? 'multi-' : ''}select-filter-${name}--select`}\n      options={values || []}\n      loading={loading}\n      value={filterValue}\n      onChange={handleChange}\n      onInputChange={(_, newValue) => setInputValue(newValue)}\n      getOptionLabel={option => option.label}\n      renderInput={renderInput}\n      renderTags={renderTags}\n    />\n  );\n};\n"],"names":[],"mappings":"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"}