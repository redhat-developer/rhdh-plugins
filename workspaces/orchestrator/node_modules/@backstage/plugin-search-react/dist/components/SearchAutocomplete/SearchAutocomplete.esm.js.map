{"version":3,"file":"SearchAutocomplete.esm.js","sources":["../../../src/components/SearchAutocomplete/SearchAutocomplete.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeEvent, useCallback, useMemo } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Autocomplete, {\n  AutocompleteProps,\n  AutocompleteRenderInputParams,\n} from '@material-ui/lab/Autocomplete';\nimport {\n  AutocompleteChangeDetails,\n  AutocompleteChangeReason,\n} from '@material-ui/lab/useAutocomplete';\n\nimport { SearchContextProvider, useSearch } from '../../context';\nimport { SearchBar, SearchBarProps } from '../SearchBar';\n\nconst useStyles = makeStyles(theme => ({\n  loading: {\n    right: theme.spacing(1),\n    position: 'absolute',\n  },\n}));\n\n/**\n * Props for {@link SearchAutocomplete}.\n *\n * @public\n */\nexport type SearchAutocompleteProps<Option> = Omit<\n  AutocompleteProps<Option, undefined, undefined, boolean>,\n  'renderInput' | 'disableClearable' | 'multiple'\n> & {\n  'data-testid'?: string;\n  inputPlaceholder?: SearchBarProps['placeholder'];\n  inputDebounceTime?: SearchBarProps['debounceTime'];\n};\n\n/**\n * Type for {@link SearchAutocomplete}.\n *\n * @public\n */\nexport type SearchAutocompleteComponent = <Option>(\n  props: SearchAutocompleteProps<Option>,\n) => JSX.Element;\n\nconst withContext = (\n  Component: SearchAutocompleteComponent,\n): SearchAutocompleteComponent => {\n  return props => (\n    <SearchContextProvider inheritParentContextIfAvailable>\n      <Component {...props} />\n    </SearchContextProvider>\n  );\n};\n\nconst SearchAutocompleteLoadingAdornment = () => {\n  const classes = useStyles();\n  return (\n    <CircularProgress\n      className={classes.loading}\n      data-testid=\"search-autocomplete-progressbar\"\n      color=\"inherit\"\n      size={20}\n    />\n  );\n};\n\n/**\n * Recommended search autocomplete when you use the Search Provider or Search Context.\n *\n * @public\n */\nexport const SearchAutocomplete = withContext(\n  function SearchAutocompleteComponent<Option>(\n    props: SearchAutocompleteProps<Option>,\n  ) {\n    const {\n      loading,\n      value,\n      onChange = () => {},\n      options = [],\n      getOptionLabel = (option: Option) => String(option),\n      inputPlaceholder,\n      inputDebounceTime,\n      freeSolo = true,\n      fullWidth = true,\n      clearOnBlur = false,\n      'data-testid': dataTestId = 'search-autocomplete',\n      ...rest\n    } = props;\n\n    const { setTerm } = useSearch();\n\n    const getInputValue = useCallback(\n      (option?: null | string | Option) => {\n        if (!option) return '';\n        if (typeof option === 'string') return option;\n        return getOptionLabel(option);\n      },\n      [getOptionLabel],\n    );\n\n    const inputValue = useMemo(\n      () => getInputValue(value),\n      [value, getInputValue],\n    );\n\n    const handleChange = useCallback(\n      (\n        event: ChangeEvent<{}>,\n        option: null | string | Option,\n        reason: AutocompleteChangeReason,\n        details?: AutocompleteChangeDetails<Option>,\n      ) => {\n        setTerm(getInputValue(option));\n        onChange(event, option, reason, details);\n      },\n      [getInputValue, setTerm, onChange],\n    );\n\n    const renderInput = useCallback(\n      ({\n        InputProps: { ref, className, endAdornment },\n        InputLabelProps,\n        ...params\n      }: AutocompleteRenderInputParams) => (\n        <SearchBar\n          {...params}\n          ref={ref}\n          clearButton={false}\n          value={inputValue}\n          placeholder={inputPlaceholder}\n          debounceTime={inputDebounceTime}\n          endAdornment={\n            loading ? <SearchAutocompleteLoadingAdornment /> : endAdornment\n          }\n          InputProps={{ className }}\n        />\n      ),\n      [loading, inputValue, inputPlaceholder, inputDebounceTime],\n    );\n\n    return (\n      <Autocomplete\n        {...rest}\n        data-testid={dataTestId}\n        value={value}\n        onChange={handleChange}\n        options={options}\n        getOptionLabel={getOptionLabel}\n        renderInput={renderInput}\n        freeSolo={freeSolo}\n        fullWidth={fullWidth}\n        clearOnBlur={clearOnBlur}\n      />\n    );\n  },\n);\n"],"names":[],"mappings":"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"}