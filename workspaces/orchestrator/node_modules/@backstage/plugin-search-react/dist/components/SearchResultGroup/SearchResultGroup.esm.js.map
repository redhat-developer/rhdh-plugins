{"version":3,"file":"SearchResultGroup.esm.js","sources":["../../../src/components/SearchResultGroup/SearchResultGroup.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MouseEvent,\n  ChangeEvent,\n  PropsWithChildren,\n  ReactNode,\n  useCallback,\n  useState,\n} from 'react';\nimport qs from 'qs';\n\nimport List, { ListProps } from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowRightIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { JsonValue } from '@backstage/types';\nimport {\n  Link,\n  LinkProps,\n  Progress,\n  EmptyState,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { AnalyticsContext } from '@backstage/core-plugin-api';\nimport { SearchResult } from '@backstage/plugin-search-common';\n\nimport { useSearchResultListItemExtensions } from '../../extensions';\n\nimport { DefaultResultListItem } from '../DefaultResultListItem';\nimport { SearchResultState, SearchResultStateProps } from '../SearchResult';\nimport { searchReactTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  listSubheader: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  listSubheaderName: {\n    marginLeft: theme.spacing(1),\n    textTransform: 'uppercase',\n  },\n  listSubheaderChip: {\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(0, 0, 0, 1.5),\n  },\n  listSubheaderFilter: {\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(0, 0, 0, 1.5),\n  },\n  listSubheaderLink: {\n    marginLeft: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  listSubheaderLinkIcon: {\n    fontSize: 'inherit',\n    marginLeft: theme.spacing(0.5),\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupFilterFieldLayout}\n * @public\n */\nexport type SearchResultGroupFilterFieldLayoutProps = PropsWithChildren<{\n  label: string;\n  value?: JsonValue;\n  onDelete: () => void;\n}>;\n\n/**\n * Default layout for a search group filter field.\n * @param props - See {@link SearchResultGroupFilterFieldLayoutProps}.\n * @public\n */\nexport const SearchResultGroupFilterFieldLayout = (\n  props: SearchResultGroupFilterFieldLayoutProps,\n) => {\n  const classes = useStyles();\n  const { label, children, ...rest } = props;\n\n  return (\n    <Chip\n      {...rest}\n      className={classes.listSubheaderFilter}\n      variant=\"outlined\"\n      label={\n        <>\n          {label}: {children}\n        </>\n      }\n    />\n  );\n};\n\nconst NullIcon = () => null;\n\n/**\n * Common props for a result group filter field.\n * @public\n */\nexport type SearchResultGroupFilterFieldPropsWith<T> = T &\n  SearchResultGroupFilterFieldLayoutProps & {\n    onChange: (value: JsonValue) => void;\n  };\n\nconst useSearchResultGroupTextFilterStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontSize: 'inherit',\n    '&:focus': {\n      outline: 'none',\n      background: theme.palette.common.white,\n    },\n    '&:not(:focus)': {\n      cursor: 'pointer',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupTextFilterField}.\n * @public\n */\nexport type SearchResultGroupTextFilterFieldProps =\n  SearchResultGroupFilterFieldPropsWith<{}>;\n\n/**\n * A text field that can be used as filter on search result groups.\n * @param props - See {@link SearchResultGroupTextFilterFieldProps}.\n * @example\n * ```\n * <SearchResultGroupTextFilterField\n *   id=\"lifecycle\"\n *   label=\"Lifecycle\"\n *   value={value}\n *   onChange={handleChangeFilter}\n *   onDelete={handleDeleteFilter}\n * />\n * ```\n * @public\n */\nexport const SearchResultGroupTextFilterField = (\n  props: SearchResultGroupTextFilterFieldProps,\n) => {\n  const classes = useSearchResultGroupTextFilterStyles();\n  const { label, value = 'None', onChange, onDelete } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <SearchResultGroupFilterFieldLayout label={label} onDelete={onDelete}>\n      <Typography\n        role=\"textbox\"\n        component=\"span\"\n        className={classes.root}\n        onChange={handleChange}\n        contentEditable\n        suppressContentEditableWarning\n      >\n        {value?.toString()}\n      </Typography>\n    </SearchResultGroupFilterFieldLayout>\n  );\n};\n\nconst useSearchResultGroupSelectFilterStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontSize: 'inherit',\n    '&:not(:focus)': {\n      cursor: 'pointer',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n    },\n    '&:focus': {\n      outline: 'none',\n    },\n    '&>div:first-child': {\n      padding: 0,\n    },\n  },\n}));\n\n/**\n * Props for {@link SearchResultGroupTextFilterField}.\n * @public\n */\nexport type SearchResultGroupSelectFilterFieldProps =\n  SearchResultGroupFilterFieldPropsWith<{\n    children: ReactNode;\n  }>;\n\n/**\n * A select field that can be used as filter on search result groups.\n * @param props - See {@link SearchResultGroupSelectFilterFieldProps}.\n * @example\n * ```\n * <SearchResultGroupSelectFilterField\n *   id=\"lifecycle\"\n *   label=\"Lifecycle\"\n *   value={filters.lifecycle}\n *   onChange={handleChangeFilter}\n *   onDelete={handleDeleteFilter}\n * >\n *   <MenuItem value=\"experimental\">Experimental</MenuItem>\n *   <MenuItem value=\"production\">Production</MenuItem>\n *  </SearchResultGroupSelectFilterField>\n * ```\n * @public\n */\nexport const SearchResultGroupSelectFilterField = (\n  props: SearchResultGroupSelectFilterFieldProps,\n) => {\n  const classes = useSearchResultGroupSelectFilterStyles();\n  const { label, value = 'none', onChange, onDelete, children } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<{ value: unknown }>) => {\n      onChange(e.target.value as JsonValue);\n    },\n    [onChange],\n  );\n\n  return (\n    <SearchResultGroupFilterFieldLayout label={label} onDelete={onDelete}>\n      <Select\n        className={classes.root}\n        value={value}\n        onChange={handleChange}\n        input={<InputBase />}\n        IconComponent={NullIcon}\n      >\n        <MenuItem value=\"none\">None</MenuItem>\n        {children}\n      </Select>\n    </SearchResultGroupFilterFieldLayout>\n  );\n};\n\n/**\n * Props for {@link SearchResultGroupLayout}\n * @public\n */\nexport type SearchResultGroupLayoutProps<FilterOption> = ListProps & {\n  /**\n   * If defined, will render a default error panel.\n   */\n  error?: Error;\n  /**\n   * If defined, will render a default loading progress.\n   */\n  loading?: boolean;\n  /**\n   * Icon that representing a result group.\n   */\n  icon: JSX.Element;\n  /**\n   * The results group title content, it could be a text or an element.\n   */\n  title: ReactNode;\n  /**\n   * Props for the results group title.\n   */\n  titleProps?: Partial<TypographyProps>;\n  /**\n   * The results group link content, it could be a text or an element.\n   */\n  link?: ReactNode;\n  /**\n   * Props for the results group link, the \"to\" prop defaults to \"/search\".\n   */\n  linkProps?: Partial<LinkProps>;\n  /**\n   * A generic filter options that is rendered on the \"Add filter\" dropdown.\n   */\n  filterOptions?: FilterOption[];\n  /**\n   * Function to customize how filter options are rendered.\n   * @remarks Defaults to a menu item where its value and label bounds to the option string.\n   */\n  renderFilterOption?: (\n    value: FilterOption,\n    index: number,\n    array: FilterOption[],\n  ) => JSX.Element | null;\n  /**\n   * A list of search filter keys, also known as filter field names.\n   */\n  filterFields?: string[];\n  /**\n   * Function to customize how filter chips are rendered.\n   */\n  renderFilterField?: (key: string) => JSX.Element | null;\n  /**\n   * Search results to be rendered as a group.\n   */\n  resultItems?: SearchResult[];\n  /**\n   * Function to customize how result items are rendered.\n   */\n  renderResultItem?: (\n    value: SearchResult,\n    index: number,\n    array: SearchResult[],\n  ) => JSX.Element | null;\n  /**\n   * Optional component to render when no results. Default to <EmptyState /> component.\n   */\n  noResultsComponent?: ReactNode;\n  /**\n   * Optional property to provide if component should not render the component when no results are found.\n   */\n  disableRenderingWithNoResults?: boolean;\n};\n\n/**\n * Default layout for rendering search results in a group.\n * @param props - See {@link SearchResultGroupLayoutProps}.\n * @public\n */\nexport function SearchResultGroupLayout<FilterOption>(\n  props: SearchResultGroupLayoutProps<FilterOption>,\n) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { t } = useTranslationRef(searchReactTranslationRef);\n\n  const {\n    error,\n    loading,\n    icon,\n    title,\n    titleProps = {},\n    link = (\n      <>\n        {t('searchResultGroup.linkTitle')}\n        <ArrowRightIcon className={classes.listSubheaderLinkIcon} />\n      </>\n    ),\n    linkProps = {},\n    filterOptions,\n    renderFilterOption = filterOption => (\n      <MenuItem key={String(filterOption)} value={String(filterOption)}>\n        {String(filterOption)}\n      </MenuItem>\n    ),\n    filterFields,\n    renderFilterField,\n    resultItems,\n    renderResultItem = resultItem => (\n      <DefaultResultListItem\n        key={resultItem.document.location}\n        result={resultItem.document}\n      />\n    ),\n    disableRenderingWithNoResults,\n    noResultsComponent = disableRenderingWithNoResults ? null : (\n      <EmptyState missing=\"data\" title={t('noResultsDescription')} />\n    ),\n    ...rest\n  } = props;\n\n  const handleClick = useCallback((e: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(e.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <ResponseErrorPanel\n        title=\"Error encountered while fetching search results\"\n        error={error}\n      />\n    );\n  }\n\n  if (!resultItems?.length) {\n    return <>{noResultsComponent}</>;\n  }\n\n  return (\n    <List {...rest}>\n      <ListSubheader className={classes.listSubheader}>\n        {icon}\n        <Typography\n          className={classes.listSubheaderName}\n          component=\"strong\"\n          {...titleProps}\n        >\n          {title}\n        </Typography>\n        {filterOptions ? (\n          <Chip\n            className={classes.listSubheaderChip}\n            component=\"button\"\n            icon={<AddIcon />}\n            variant=\"outlined\"\n            label={t('searchResultGroup.addFilterButtonTitle')}\n            aria-controls=\"filters-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n          />\n        ) : null}\n        {filterOptions ? (\n          <Menu\n            id=\"filters-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n            onClick={handleClose}\n            keepMounted\n          >\n            {filterOptions.map(renderFilterOption)}\n          </Menu>\n        ) : null}\n        {filterFields?.map(\n          filterField => renderFilterField?.(filterField) ?? null,\n        )}\n        <Link className={classes.listSubheaderLink} to=\"/search\" {...linkProps}>\n          {link}\n        </Link>\n      </ListSubheader>\n      {resultItems.map(renderResultItem)}\n    </List>\n  );\n}\n\n/**\n * Props for {@link SearchResultGroup}.\n * @public\n */\nexport type SearchResultGroupProps<FilterOption> = Pick<\n  SearchResultStateProps,\n  'query'\n> &\n  Omit<\n    SearchResultGroupLayoutProps<FilterOption>,\n    'loading' | 'error' | 'resultItems' | 'filterFields'\n  >;\n\n/**\n * Given a query, search for results and render them as a group.\n * @param props - See {@link SearchResultGroupProps}.\n * @public\n */\nexport function SearchResultGroup<FilterOption>(\n  props: SearchResultGroupProps<FilterOption>,\n) {\n  const { query, children, renderResultItem, linkProps = {}, ...rest } = props;\n\n  const defaultRenderResultItem = useSearchResultListItemExtensions(children);\n\n  return (\n    <AnalyticsContext\n      attributes={{\n        pluginId: 'search',\n        extension: 'SearchResultGroup',\n      }}\n    >\n      <SearchResultState query={query}>\n        {(\n          { loading, error, value },\n          { term, types, pageCursor, filters = {} },\n        ) => {\n          const to = `/search?${qs.stringify(\n            { term, types, filters, pageCursor, query: term },\n            { arrayFormat: 'brackets' },\n          )}`;\n\n          return (\n            <SearchResultGroupLayout\n              {...rest}\n              error={error}\n              loading={loading}\n              linkProps={{ to, ...linkProps }}\n              filterFields={Object.keys(filters)}\n              resultItems={value?.results}\n              renderResultItem={renderResultItem ?? defaultRenderResultItem}\n            />\n          );\n        }}\n      </SearchResultState>\n    </AnalyticsContext>\n  );\n}\n"],"names":["DefaultResultListItem"],"mappings":"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"}