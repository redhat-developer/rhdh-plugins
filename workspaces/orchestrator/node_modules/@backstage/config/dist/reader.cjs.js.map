{"version":3,"file":"reader.cjs.js","sources":["../src/reader.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { AppConfig, Config } from './types';\n\n// Update the same pattern in config-loader package if this is changed\nconst CONFIG_KEY_PART_PATTERN = /^[a-z][a-z0-9]*(?:[-_:][a-z0-9]+)*$/i;\n\nfunction isObject(value: JsonValue | undefined): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction cloneDeep(value: JsonValue | null | undefined): JsonValue | undefined {\n  if (typeof value !== 'object' || value === null) {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map(cloneDeep) as JsonValue;\n  }\n  return Object.fromEntries(\n    Object.entries(value).map(([k, v]) => [k, cloneDeep(v)]),\n  );\n}\n\nfunction merge(\n  into: JsonValue | undefined,\n  from?: JsonValue | undefined,\n): JsonValue | undefined {\n  if (into === null) {\n    return undefined;\n  }\n  if (into === undefined) {\n    return from === undefined ? undefined : merge(from);\n  }\n  if (typeof into !== 'object' || Array.isArray(into)) {\n    return into;\n  }\n  const fromObj = isObject(from) ? from : {};\n\n  const out: JsonObject = {};\n  for (const key of new Set([...Object.keys(into), ...Object.keys(fromObj)])) {\n    const val = merge(into[key], fromObj[key]);\n    if (val !== undefined) {\n      out[key] = val;\n    }\n  }\n  return out;\n}\n\nfunction typeOf(value: JsonValue | undefined): string {\n  if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return 'array';\n  }\n  const type = typeof value;\n  if (type === 'number' && isNaN(value as number)) {\n    return 'nan';\n  }\n  if (type === 'string' && value === '') {\n    return 'empty-string';\n  }\n  return type;\n}\n\n// Separate out a couple of common error messages to reduce bundle size.\nconst errors = {\n  type(key: string, context: string, typeName: string, expected: string) {\n    return `Invalid type in config for key '${key}' in '${context}', got ${typeName}, wanted ${expected}`;\n  },\n  missing(key: string, context: string) {\n    return `Missing required config value at '${key}' in '${context}'`;\n  },\n  convert(key: string, context: string, expected: string) {\n    return `Unable to convert config value for key '${key}' in '${context}' to a ${expected}`;\n  },\n};\n\n/**\n * An implementation of the `Config` interface that uses a plain JavaScript object\n * for the backing data, with the ability of linking multiple readers together.\n *\n * @public\n */\nexport class ConfigReader implements Config {\n  /**\n   * A set of key paths that where removed from the config due to not being visible.\n   *\n   * This was added as a mutable private member to avoid changes to the public API.\n   * Its only purpose of this is to warn users of missing visibility when running\n   * the frontend in development mode.\n   */\n  private filteredKeys?: string[];\n  private notifiedFilteredKeys = new Set<string>();\n\n  /**\n   * Instantiates the config reader from a list of application config objects.\n   */\n  static fromConfigs(configs: AppConfig[]): ConfigReader {\n    if (configs.length === 0) {\n      return new ConfigReader(undefined);\n    }\n\n    // Merge together all configs into a single config with recursive fallback\n    // readers, giving the first config object in the array the lowest priority.\n    return configs.reduce<ConfigReader>(\n      (previousReader, { data, context, filteredKeys, deprecatedKeys }) => {\n        const reader = new ConfigReader(data, context, previousReader);\n        reader.filteredKeys = filteredKeys;\n\n        if (deprecatedKeys) {\n          for (const { key, description } of deprecatedKeys) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `The configuration key '${key}' of ${context} is deprecated and may be removed soon. ${\n                description || ''\n              }`,\n            );\n          }\n        }\n\n        return reader;\n      },\n      undefined!,\n    );\n  }\n\n  constructor(\n    private readonly data: JsonObject | undefined,\n    private readonly context: string = 'mock-config',\n    private readonly fallback?: ConfigReader,\n    private readonly prefix: string = '',\n  ) {}\n\n  /** {@inheritdoc Config.has} */\n  has(key: string): boolean {\n    const value = this.readValue(key);\n    if (value === null) {\n      return false;\n    }\n    if (value !== undefined) {\n      return true;\n    }\n    return this.fallback?.has(key) ?? false;\n  }\n\n  /** {@inheritdoc Config.keys} */\n  keys(): string[] {\n    const localKeys = this.data ? Object.keys(this.data) : [];\n    const fallbackKeys = this.fallback?.keys() ?? [];\n    return [...new Set([...localKeys, ...fallbackKeys])].filter(\n      k => this.data?.[k] !== null,\n    );\n  }\n\n  /** {@inheritdoc Config.get} */\n  get<T = JsonValue>(key?: string): T {\n    const value = this.getOptional(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key ?? ''), this.context));\n    }\n    return value as T;\n  }\n\n  /** {@inheritdoc Config.getOptional} */\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    const value = cloneDeep(this.readValue(key));\n    const fallbackValue = this.fallback?.getOptional(key);\n\n    if (value === null) {\n      return undefined;\n    }\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        if (fallbackValue === undefined && key) {\n          const fullKey = this.fullKey(key);\n          if (\n            this.filteredKeys?.includes(fullKey) &&\n            !this.notifiedFilteredKeys.has(fullKey)\n          ) {\n            this.notifiedFilteredKeys.add(fullKey);\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n                'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n            );\n          }\n        }\n      }\n      return merge(fallbackValue) as T;\n    } else if (fallbackValue === undefined) {\n      return merge(value) as T;\n    }\n\n    return merge(value, fallbackValue) as T;\n  }\n\n  /** {@inheritdoc Config.getConfig} */\n  getConfig(key: string): ConfigReader {\n    const value = this.getOptionalConfig(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfig} */\n  getOptionalConfig(key: string): ConfigReader | undefined {\n    const value = this.readValue(key);\n    const fallbackConfig = this.fallback?.getOptionalConfig(key);\n\n    if (isObject(value)) {\n      return this.copy(value, key, fallbackConfig);\n    }\n    if (value === null) {\n      return undefined;\n    }\n    if (value !== undefined) {\n      throw new TypeError(\n        errors.type(this.fullKey(key), this.context, typeOf(value), 'object'),\n      );\n    }\n    return fallbackConfig;\n  }\n\n  /** {@inheritdoc Config.getConfigArray} */\n  getConfigArray(key: string): ConfigReader[] {\n    const value = this.getOptionalConfigArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfigArray} */\n  getOptionalConfigArray(key: string): ConfigReader[] | undefined {\n    const configs = this.readConfigValue<JsonObject[]>(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'object-array' };\n      }\n\n      for (const [index, value] of values.entries()) {\n        if (!isObject(value)) {\n          return { expected: 'object-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n\n    if (!configs) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.some(k => k.startsWith(fullKey)) &&\n          !this.notifiedFilteredKeys.has(key)\n        ) {\n          this.notifiedFilteredKeys.add(key);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration array at '${key}' as it does not have any visible elements. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n      return undefined;\n    }\n\n    return configs.map((obj, index) => this.copy(obj, `${key}[${index}]`));\n  }\n\n  /** {@inheritdoc Config.getNumber} */\n  getNumber(key: string): number {\n    const value = this.getOptionalNumber(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalNumber} */\n  getOptionalNumber(key: string): number | undefined {\n    const value = this.readConfigValue<string | number>(\n      key,\n      val =>\n        typeof val === 'number' ||\n        typeof val === 'string' || { expected: 'number' },\n    );\n    if (typeof value === 'number' || value === undefined) {\n      return value;\n    }\n    const number = Number(value);\n    if (!Number.isFinite(number)) {\n      throw new Error(\n        errors.convert(this.fullKey(key), this.context, 'number'),\n      );\n    }\n    return number;\n  }\n\n  /** {@inheritdoc Config.getBoolean} */\n  getBoolean(key: string): boolean {\n    const value = this.getOptionalBoolean(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalBoolean} */\n  getOptionalBoolean(key: string): boolean | undefined {\n    const value = this.readConfigValue<string | number | boolean>(\n      key,\n      val =>\n        typeof val === 'boolean' ||\n        typeof val === 'number' ||\n        typeof val === 'string' || { expected: 'boolean' },\n    );\n    if (typeof value === 'boolean' || value === undefined) {\n      return value;\n    }\n    const valueString = String(value).trim();\n\n    if (/^(?:y|yes|true|1|on)$/i.test(valueString)) {\n      return true;\n    }\n    if (/^(?:n|no|false|0|off)$/i.test(valueString)) {\n      return false;\n    }\n    throw new Error(errors.convert(this.fullKey(key), this.context, 'boolean'));\n  }\n\n  /** {@inheritdoc Config.getString} */\n  getString(key: string): string {\n    const value = this.getOptionalString(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalString} */\n  getOptionalString(key: string): string | undefined {\n    return this.readConfigValue(\n      key,\n      value =>\n        (typeof value === 'string' && value !== '') || { expected: 'string' },\n    );\n  }\n\n  /** {@inheritdoc Config.getStringArray} */\n  getStringArray(key: string): string[] {\n    const value = this.getOptionalStringArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key), this.context));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalStringArray} */\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.readConfigValue(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'string-array' };\n      }\n      for (const [index, value] of values.entries()) {\n        if (typeof value !== 'string' || value === '') {\n          return { expected: 'string-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n  }\n\n  private fullKey(key: string): string {\n    return `${this.prefix}${this.prefix ? '.' : ''}${key}`;\n  }\n\n  private copy(data: JsonObject, key: string, fallback?: ConfigReader) {\n    const reader = new ConfigReader(\n      data,\n      this.context,\n      fallback,\n      this.fullKey(key),\n    );\n    reader.filteredKeys = this.filteredKeys;\n    return reader;\n  }\n\n  private readConfigValue<T extends JsonValue>(\n    key: string,\n    validate: (\n      value: JsonValue,\n    ) => { expected: string; value?: JsonValue; key?: string } | true,\n  ): T | undefined {\n    const value = this.readValue(key);\n\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.includes(fullKey) &&\n          !this.notifiedFilteredKeys.has(fullKey)\n        ) {\n          this.notifiedFilteredKeys.add(fullKey);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n\n      return this.fallback?.readConfigValue(key, validate);\n    }\n    if (value === null) {\n      return undefined;\n    }\n    const result = validate(value);\n    if (result !== true) {\n      const { key: keyName = key, value: theValue = value, expected } = result;\n      throw new TypeError(\n        errors.type(\n          this.fullKey(keyName),\n          this.context,\n          typeOf(theValue),\n          expected,\n        ),\n      );\n    }\n\n    return value as T;\n  }\n\n  private readValue(key?: string): JsonValue | undefined {\n    const parts = key ? key.split('.') : [];\n    for (const part of parts) {\n      if (!CONFIG_KEY_PART_PATTERN.test(part)) {\n        throw new TypeError(`Invalid config key '${key}'`);\n      }\n    }\n\n    if (this.data === undefined) {\n      return undefined;\n    }\n\n    let value: JsonValue | undefined = this.data;\n    for (const [index, part] of parts.entries()) {\n      if (isObject(value)) {\n        value = value[part];\n      } else if (value !== undefined && value !== null) {\n        const badKey = this.fullKey(parts.slice(0, index).join('.'));\n        throw new TypeError(\n          errors.type(badKey, this.context, typeOf(value), 'object'),\n        );\n      }\n    }\n\n    return value;\n  }\n}\n"],"names":[],"mappings":"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"}