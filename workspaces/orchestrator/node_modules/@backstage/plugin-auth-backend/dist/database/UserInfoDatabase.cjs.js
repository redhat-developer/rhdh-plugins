'use strict';

var luxon = require('luxon');

const TABLE = "user_info";
class UserInfoDatabase {
  constructor(client) {
    this.client = client;
  }
  async addUserInfo(userInfo) {
    await this.client(TABLE).insert({
      user_entity_ref: userInfo.claims.sub,
      user_info: JSON.stringify(userInfo),
      updated_at: luxon.DateTime.utc().toSQL({ includeOffset: false })
    }).onConflict("user_entity_ref").merge();
  }
  async getUserInfo(userEntityRef) {
    const info = await this.client(TABLE).where({ user_entity_ref: userEntityRef }).first();
    if (!info) {
      return void 0;
    }
    const userInfo = JSON.parse(info.user_info);
    return userInfo;
  }
  static async create(options) {
    const client = await options.database.get();
    return new UserInfoDatabase(client);
  }
}

exports.UserInfoDatabase = UserInfoDatabase;
//# sourceMappingURL=UserInfoDatabase.cjs.js.map
