import { jsx } from 'react/jsx-runtime';
import { convertLegacyRouteRef, compatWrapper } from '@backstage/core-compat-api';
import { PageBlueprint, createExtensionInput, NavItemBlueprint, ApiBlueprint, identityApiRef, fetchApiRef, discoveryApiRef } from '@backstage/frontend-plugin-api';
import { rootRouteRef } from '../routes.esm.js';
import CreateComponentIcon from '@material-ui/icons/AddCircleOutline';
import { FormFieldBlueprint } from '@backstage/plugin-scaffolder-react/alpha';
import { scmIntegrationsApiRef } from '@backstage/integration-react';
import { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';
import { ScaffolderClient } from '../api.esm.js';

const scaffolderPage = PageBlueprint.makeWithOverrides({
  inputs: {
    formFields: createExtensionInput([
      FormFieldBlueprint.dataRefs.formFieldLoader
    ])
  },
  factory(originalFactory, { inputs }) {
    const formFieldLoaders = inputs.formFields.map(
      (i) => i.get(FormFieldBlueprint.dataRefs.formFieldLoader)
    );
    return originalFactory({
      routeRef: convertLegacyRouteRef(rootRouteRef),
      path: "/create",
      loader: () => import('../components/Router/Router.esm.js').then(
        (m) => compatWrapper(
          /* @__PURE__ */ jsx(m.InternalRouter, { formFieldLoaders })
        )
      )
    });
  }
});
const scaffolderNavItem = NavItemBlueprint.make({
  params: {
    routeRef: convertLegacyRouteRef(rootRouteRef),
    title: "Create...",
    icon: CreateComponentIcon
  }
});
const repoUrlPickerFormField = FormFieldBlueprint.make({
  name: "repo-url-picker",
  params: {
    field: () => import('./fields/RepoUrlPicker.esm.js').then((m) => m.RepoUrlPicker)
  }
});
const scaffolderApi = ApiBlueprint.make({
  params: (defineParams) => defineParams({
    api: scaffolderApiRef,
    deps: {
      discoveryApi: discoveryApiRef,
      scmIntegrationsApi: scmIntegrationsApiRef,
      fetchApi: fetchApiRef,
      identityApi: identityApiRef
    },
    factory: ({ discoveryApi, scmIntegrationsApi, fetchApi, identityApi }) => new ScaffolderClient({
      discoveryApi,
      scmIntegrationsApi,
      fetchApi,
      identityApi
    })
  })
});

export { repoUrlPickerFormField, scaffolderApi, scaffolderNavItem, scaffolderPage };
//# sourceMappingURL=extensions.esm.js.map
