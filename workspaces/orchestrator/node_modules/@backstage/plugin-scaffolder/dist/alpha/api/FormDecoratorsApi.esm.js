import { ApiBlueprint, createExtensionInput } from '@backstage/frontend-plugin-api';
import { formDecoratorsApiRef } from './ref.esm.js';
import { FormDecoratorBlueprint } from '@backstage/plugin-scaffolder-react/alpha';

class DefaultScaffolderFormDecoratorsApi {
  constructor(options) {
    this.options = options;
  }
  static create(options) {
    return new DefaultScaffolderFormDecoratorsApi(
      options ?? { decorators: [] }
    );
  }
  async getFormDecorators() {
    return this.options.decorators;
  }
}
const formDecoratorsApi = ApiBlueprint.makeWithOverrides({
  name: "form-decorators",
  inputs: {
    formDecorators: createExtensionInput([
      FormDecoratorBlueprint.dataRefs.formDecoratorLoader
    ])
  },
  factory(originalFactory, { inputs }) {
    const formDecorators = inputs.formDecorators.map(
      (e) => e.get(FormDecoratorBlueprint.dataRefs.formDecoratorLoader)
    );
    return originalFactory(
      (defineParams) => defineParams({
        api: formDecoratorsApiRef,
        deps: {},
        factory: () => DefaultScaffolderFormDecoratorsApi.create({
          decorators: formDecorators
        })
      })
    );
  }
});

export { DefaultScaffolderFormDecoratorsApi, formDecoratorsApi };
//# sourceMappingURL=FormDecoratorsApi.esm.js.map
