import { jsx } from 'react/jsx-runtime';
import { DEFAULT_NAMESPACE } from '@backstage/catalog-model';
import { useApp, useRouteRef } from '@backstage/core-plugin-api';
import { useEntity } from '@backstage/plugin-catalog-react';
import CreateComponentIcon from '@material-ui/icons/AddCircleOutline';
import { taskCreatePermission } from '@backstage/plugin-scaffolder-common/alpha';
import { usePermission } from '@backstage/plugin-permission-react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../translation.esm.js';
import { selectedTemplateRouteRef } from '../../routes.esm.js';

function useScaffolderTemplateIconLinkProps() {
  const app = useApp();
  const { entity } = useEntity();
  const templateRoute = useRouteRef(selectedTemplateRouteRef);
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const Icon = app.getSystemIcon("scaffolder") ?? CreateComponentIcon;
  const { allowed: canCreateTemplateTask } = usePermission({
    permission: taskCreatePermission
  });
  return {
    label: t("aboutCard.launchTemplate"),
    icon: /* @__PURE__ */ jsx(Icon, {}),
    disabled: !templateRoute || !canCreateTemplateTask,
    href: templateRoute && templateRoute({
      templateName: entity.metadata.name,
      namespace: entity.metadata.namespace || DEFAULT_NAMESPACE
    })
  };
}

export { useScaffolderTemplateIconLinkProps };
//# sourceMappingURL=useScaffolderTemplateIconLinkProps.esm.js.map
