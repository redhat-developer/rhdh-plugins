{"version":3,"file":"DryRunContext.esm.js","sources":["../../../../src/alpha/components/TemplateEditorPage/DryRunContext.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport yaml from 'yaml';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  scaffolderApiRef,\n  ScaffolderDryRunResponse,\n  useTemplateSecrets,\n} from '@backstage/plugin-scaffolder-react';\nimport { useFormDecorators } from '../../hooks/useFormDecorators';\n\nconst MAX_CONTENT_SIZE = 64 * 1024;\nconst CHUNK_SIZE = 32 * 1024;\n\ninterface DryRunOptions {\n  templateContent: string;\n  values: JsonObject;\n  files: Array<{ path: string; content: string }>;\n}\n\nexport interface DryRunResult extends ScaffolderDryRunResponse {\n  id: number;\n}\n\ninterface DryRun {\n  results: DryRunResult[];\n  selectedResult: DryRunResult | undefined;\n\n  selectResult(id: number): void;\n  deleteResult(id: number): void;\n  execute(options: DryRunOptions): Promise<void>;\n}\n\nconst DryRunContext = createContext<DryRun | undefined>(undefined);\n\ninterface DryRunProviderProps {\n  children: ReactNode;\n}\n\nexport function base64EncodeContent(content: string): string {\n  if (content.length > MAX_CONTENT_SIZE) {\n    return window.btoa('<file too large>');\n  }\n\n  try {\n    return window.btoa(content);\n  } catch {\n    const decoder = new TextEncoder();\n    const buffer = decoder.encode(content);\n\n    const chunks = new Array<string>();\n    for (let offset = 0; offset < buffer.length; offset += CHUNK_SIZE) {\n      chunks.push(\n        String.fromCharCode(...buffer.slice(offset, offset + CHUNK_SIZE)),\n      );\n    }\n    return window.btoa(chunks.join(''));\n  }\n}\n\nexport function DryRunProvider(props: DryRunProviderProps) {\n  const decorators = useFormDecorators();\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const { secrets: contextSecrets } = useTemplateSecrets();\n  const [state, setState] = useState<\n    Pick<DryRun, 'results' | 'selectedResult'>\n  >({\n    results: [],\n    selectedResult: undefined,\n  });\n  const idRef = useRef(1);\n\n  const selectResult = useCallback((id: number) => {\n    setState(prevState => {\n      const result = prevState.results.find(r => r.id === id);\n      if (result === prevState.selectedResult) {\n        return prevState;\n      }\n      return {\n        results: prevState.results,\n        selectedResult: result,\n      };\n    });\n  }, []);\n\n  const deleteResult = useCallback((id: number) => {\n    setState(prevState => {\n      const index = prevState.results.findIndex(r => r.id === id);\n      if (index === -1) {\n        return prevState;\n      }\n      const newResults = prevState.results.slice();\n      const [deleted] = newResults.splice(index, 1);\n      return {\n        results: newResults,\n        selectedResult:\n          prevState.selectedResult?.id === deleted.id\n            ? newResults[0]\n            : prevState.selectedResult,\n      };\n    });\n  }, []);\n\n  const execute = useCallback(\n    async (options: DryRunOptions) => {\n      if (!scaffolderApi.dryRun) {\n        throw new Error('Scaffolder API does not support dry-run');\n      }\n\n      const parsed = yaml.parse(options.templateContent);\n\n      const { formState: values, secrets } = await decorators.run({\n        formState: options.values as Record<string, JsonValue>,\n        secrets: contextSecrets,\n        manifest: parsed?.spec,\n      });\n\n      const response = await scaffolderApi.dryRun({\n        template: parsed,\n        values,\n        secrets,\n        directoryContents: options.files.map(file => ({\n          path: file.path,\n          base64Content: base64EncodeContent(file.content),\n        })),\n      });\n\n      const result = {\n        ...response,\n        id: idRef.current++,\n      };\n\n      setState(prevState => ({\n        results: [...prevState.results, result],\n        selectedResult: prevState.selectedResult ?? result,\n      }));\n    },\n    [scaffolderApi, decorators, contextSecrets],\n  );\n\n  const dryRun = useMemo(\n    () => ({\n      ...state,\n      selectResult,\n      deleteResult,\n      execute,\n    }),\n    [state, selectResult, deleteResult, execute],\n  );\n\n  return (\n    <DryRunContext.Provider value={dryRun}>\n      {props.children}\n    </DryRunContext.Provider>\n  );\n}\n\nexport function useDryRun(): DryRun {\n  const value = useContext(DryRunContext);\n  if (!value) {\n    throw new Error('must be used within a DryRunProvider');\n  }\n  return value;\n}\n"],"names":[],"mappings":"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"}