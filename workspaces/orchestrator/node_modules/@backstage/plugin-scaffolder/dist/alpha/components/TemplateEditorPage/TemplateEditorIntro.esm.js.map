{"version":3,"file":"TemplateEditorIntro.esm.js","sources":["../../../../src/alpha/components/TemplateEditorPage/TemplateEditorIntro.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MouseEventHandler } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { WebFileSystemAccess } from '../../../lib/filesystem';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  gridRoot: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  cardGrid: {\n    maxWidth: 1000,\n    display: 'grid',\n    gridGap: theme.spacing(2),\n    gridAutoFlow: 'row',\n    [theme.breakpoints.up('md')]: {\n      gridTemplateRows: '1fr 1fr',\n      gridTemplateColumns: '1fr 1fr',\n    },\n  },\n  card: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridTemplateRows: '1fr',\n    alignItems: 'center',\n    margin: theme.spacing(0, 1),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  icon: {\n    justifySelf: 'center',\n    paddingTop: theme.spacing(1),\n    fontSize: 48,\n  },\n  introText: {\n    textAlign: 'center',\n    marginTop: theme.spacing(2),\n  },\n  infoIcon: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n  },\n  cardContent: {\n    padding: theme.spacing(1),\n  },\n}));\n\ninterface EditorIntroProps {\n  style?: JSX.IntrinsicElements['div']['style'];\n  onSelect?: (\n    option: 'create-template' | 'local' | 'form' | 'field-explorer',\n  ) => void;\n}\n\nfunction ActionCard(props: {\n  title: string;\n  description: string;\n  Icon: typeof SvgIcon;\n  action?: MouseEventHandler;\n  requireLoad?: boolean;\n}) {\n  const supportsLoad = props.requireLoad\n    ? WebFileSystemAccess.isSupported()\n    : true;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const classes = useStyles();\n  const { Icon, title, description, action } = props;\n  return (\n    <Card className={classes.card}>\n      {!supportsLoad && (\n        <Tooltip\n          placement=\"top\"\n          title={t(\n            'templateEditorPage.templateEditorIntro.loadLocal.unsupportedTooltip',\n          )}\n        >\n          <InfoOutlinedIcon />\n        </Tooltip>\n      )}\n\n      <CardActionArea onClick={action}>\n        <CardMedia>\n          <Icon\n            className={classes.icon}\n            color={supportsLoad ? undefined : 'disabled'}\n          />\n        </CardMedia>\n        <CardContent className={classes.cardContent}>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            color={supportsLoad ? undefined : 'textSecondary'}\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\nexport function TemplateEditorIntro(props: EditorIntroProps) {\n  const classes = useStyles();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  return (\n    <div style={props.style}>\n      <Typography variant=\"h4\" component=\"h2\" className={classes.introText}>\n        {t('templateEditorPage.templateEditorIntro.title')}\n      </Typography>\n      <div className={classes.gridRoot}>\n        <div className={classes.cardGrid}>\n          <ActionCard\n            title={t('templateEditorPage.templateEditorIntro.loadLocal.title')}\n            description={t(\n              'templateEditorPage.templateEditorIntro.loadLocal.description',\n            )}\n            requireLoad\n            Icon={PublishIcon}\n            action={() => props.onSelect?.('local')}\n          />\n          <ActionCard\n            title={t(\n              'templateEditorPage.templateEditorIntro.createLocal.title',\n            )}\n            description={t(\n              'templateEditorPage.templateEditorIntro.createLocal.description',\n            )}\n            requireLoad\n            action={() => props.onSelect?.('create-template')}\n            Icon={CreateNewFolderIcon}\n          />\n\n          <ActionCard\n            title={t('templateEditorPage.templateEditorIntro.formEditor.title')}\n            description={t(\n              'templateEditorPage.templateEditorIntro.formEditor.description',\n            )}\n            Icon={ListAltIcon}\n            action={() => props.onSelect?.('form')}\n          />\n\n          <ActionCard\n            title={t(\n              'templateEditorPage.templateEditorIntro.fieldExplorer.title',\n            )}\n            description={t(\n              'templateEditorPage.templateEditorIntro.fieldExplorer.description',\n            )}\n            Icon={FormatListBulletedIcon}\n            action={() => props.onSelect?.('field-explorer')}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}