{"version":3,"file":"TemplateEditorForm.esm.js","sources":["../../../../src/alpha/components/TemplateEditorPage/TemplateEditorForm.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApiHolder } from '@backstage/core-plugin-api';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Component, ReactNode, useMemo, useState } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport yaml from 'yaml';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport {\n  LayoutOptions,\n  TemplateParameterSchema,\n  FieldExtensionOptions,\n  FormProps,\n} from '@backstage/plugin-scaffolder-react';\nimport {\n  Stepper,\n  createAsyncValidators,\n} from '@backstage/plugin-scaffolder-react/alpha';\nimport { useDryRun } from './DryRunContext';\nimport { useDirectoryEditor } from './DirectoryEditorContext';\n\nimport { scaffolderTranslationRef } from '../../../translation';\n\nconst useStyles = makeStyles({\n  containerWrapper: {\n    width: '100%',\n  },\n});\n\ninterface ErrorBoundaryProps {\n  invalidator: unknown;\n  setErrorText(errorText: string | undefined): void;\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  shouldRender: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state = {\n    shouldRender: true,\n  };\n\n  componentDidUpdate(prevProps: { invalidator: unknown }) {\n    if (prevProps.invalidator !== this.props.invalidator) {\n      this.setState({ shouldRender: true });\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    this.props.setErrorText(error.message);\n    this.setState({ shouldRender: false });\n  }\n\n  render() {\n    return this.state.shouldRender ? this.props.children : null;\n  }\n}\n\ninterface TemplateEditorFormProps {\n  content?: string;\n  /** Setting this to true will cause the content to be parsed as if it is the template entity spec */\n  contentIsSpec?: boolean;\n  setErrorText: (errorText?: string) => void;\n\n  onDryRun?: (data: JsonObject) => Promise<void>;\n  fieldExtensions?: FieldExtensionOptions<any, any>[];\n  layouts?: LayoutOptions[];\n  formProps?: FormProps;\n}\n\nfunction isJsonObject(value: JsonValue | undefined): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\n/** Shows the a template form that is parsed from the provided content */\nexport function TemplateEditorForm(props: TemplateEditorFormProps) {\n  const {\n    content,\n    contentIsSpec,\n    onDryRun,\n    setErrorText,\n    fieldExtensions = [],\n    layouts = [],\n  } = props;\n  const classes = useStyles();\n  const apiHolder = useApiHolder();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const [steps, setSteps] = useState<TemplateParameterSchema['steps']>();\n\n  const fields = useMemo(() => {\n    return Object.fromEntries(\n      fieldExtensions.map(({ name, component }) => [name, component]),\n    );\n  }, [fieldExtensions]);\n\n  useDebounce(\n    () => {\n      try {\n        if (!content) {\n          setSteps(undefined);\n          return;\n        }\n        const parsed: JsonValue = yaml\n          .parseAllDocuments(content)\n          .filter(c => c)\n          .map(c => c.toJSON())[0];\n\n        if (!isJsonObject(parsed)) {\n          setSteps(undefined);\n          return;\n        }\n\n        let rootObj = parsed;\n        if (!contentIsSpec) {\n          const isTemplate =\n            String(parsed.kind).toLocaleLowerCase('en-US') === 'template';\n          if (!isTemplate) {\n            setSteps(undefined);\n            return;\n          }\n\n          rootObj = isJsonObject(parsed.spec) ? parsed.spec : {};\n        }\n\n        const { parameters } = rootObj;\n\n        if (!Array.isArray(parameters)) {\n          setErrorText('Template parameters must be an array');\n          setSteps(undefined);\n          return;\n        }\n\n        const fieldValidators = Object.fromEntries(\n          fieldExtensions.map(({ name, validation }) => [name, validation]),\n        );\n\n        setErrorText();\n        setSteps(\n          parameters.flatMap(param =>\n            isJsonObject(param)\n              ? [\n                  {\n                    title: String(param.title),\n                    schema: param,\n                    validate: createAsyncValidators(param, fieldValidators, {\n                      apiHolder,\n                    }),\n                  },\n                ]\n              : [],\n          ),\n        );\n      } catch (e) {\n        setErrorText(e.message);\n      }\n    },\n    250,\n    [contentIsSpec, content, apiHolder],\n  );\n\n  return (\n    <div className={classes.containerWrapper}>\n      {steps ? (\n        <Paper variant=\"outlined\">\n          <ErrorBoundary invalidator={steps} setErrorText={setErrorText}>\n            <Stepper\n              manifest={{ steps, title: 'Template Editor' }}\n              extensions={fieldExtensions}\n              components={fields}\n              onCreate={async options => {\n                await onDryRun?.(options);\n              }}\n              layouts={layouts}\n              formProps={props.formProps}\n            />\n          </ErrorBoundary>\n        </Paper>\n      ) : (\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {t('templateEditorForm.stepper.emptyText')}\n        </Typography>\n      )}\n    </div>\n  );\n}\n\n/** A version of the TemplateEditorForm that is connected to the DirectoryEditor and DryRun contexts */\nexport function TemplateEditorFormDirectoryEditorDryRun(\n  props: Pick<\n    TemplateEditorFormProps,\n    'setErrorText' | 'fieldExtensions' | 'layouts' | 'formProps'\n  >,\n) {\n  const { setErrorText, fieldExtensions = [], layouts } = props;\n  const dryRun = useDryRun();\n\n  const directoryEditor = useDirectoryEditor();\n  const { selectedFile } = directoryEditor ?? {};\n\n  const handleDryRun = async (data: JsonObject) => {\n    if (!selectedFile) {\n      return;\n    }\n\n    try {\n      await dryRun.execute({\n        templateContent: selectedFile.content,\n        values: data,\n        files: directoryEditor?.files ?? [],\n      });\n      setErrorText();\n    } catch (e) {\n      setErrorText(String(e.cause || e));\n      throw e;\n    }\n  };\n\n  const content =\n    selectedFile && selectedFile.path.match(/\\.ya?ml$/)\n      ? selectedFile.content\n      : undefined;\n\n  if (!directoryEditor) {\n    return null;\n  }\n\n  return (\n    <TemplateEditorForm\n      onDryRun={handleDryRun}\n      fieldExtensions={fieldExtensions}\n      setErrorText={setErrorText}\n      content={content}\n      layouts={layouts}\n      formProps={props.formProps}\n    />\n  );\n}\n\nTemplateEditorForm.DirectoryEditorDryRun =\n  TemplateEditorFormDirectoryEditorDryRun;\n"],"names":[],"mappings":"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"}