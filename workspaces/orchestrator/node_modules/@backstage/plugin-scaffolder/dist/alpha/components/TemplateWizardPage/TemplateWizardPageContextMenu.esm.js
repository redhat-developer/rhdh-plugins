import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import IconButton from '@material-ui/core/IconButton';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import MenuItem from '@material-ui/core/MenuItem';
import MenuList from '@material-ui/core/MenuList';
import Popover from '@material-ui/core/Popover';
import { makeStyles } from '@material-ui/core/styles';
import Edit from '@material-ui/icons/Edit';
import MoreVert from '@material-ui/icons/MoreVert';
import { useState } from 'react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../../translation.esm.js';
import { Link } from '@backstage/core-components';

const useStyles = makeStyles((theme) => ({
  button: {
    color: theme.page.fontColor
  }
}));
function TemplateWizardPageContextMenu(props) {
  const { editUrl } = props;
  const classes = useStyles();
  const [anchorEl, setAnchorEl] = useState();
  const { t } = useTranslationRef(scaffolderTranslationRef);
  if (!editUrl) {
    return null;
  }
  const onOpen = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const onClose = () => {
    setAnchorEl(void 0);
  };
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(
      IconButton,
      {
        id: "long-menu",
        "aria-label": "more",
        "aria-controls": "long-menu",
        "aria-expanded": !!anchorEl,
        "aria-haspopup": "true",
        role: "button",
        onClick: onOpen,
        "data-testid": "menu-button",
        color: "inherit",
        className: classes.button,
        children: /* @__PURE__ */ jsx(MoreVert, {})
      }
    ),
    /* @__PURE__ */ jsx(
      Popover,
      {
        "aria-labelledby": "long-menu",
        open: Boolean(anchorEl),
        onClose,
        anchorEl,
        anchorOrigin: { vertical: "bottom", horizontal: "right" },
        transformOrigin: { vertical: "top", horizontal: "right" },
        children: /* @__PURE__ */ jsx(MenuList, { children: /* @__PURE__ */ jsxs(MenuItem, { component: Link, to: editUrl, children: [
          /* @__PURE__ */ jsx(ListItemIcon, { children: /* @__PURE__ */ jsx(Edit, { fontSize: "small" }) }),
          /* @__PURE__ */ jsx(
            ListItemText,
            {
              primary: t(
                "templateWizardPage.pageContextMenu.editConfigurationTitle"
              )
            }
          )
        ] }) })
      }
    )
  ] });
}

export { TemplateWizardPageContextMenu };
//# sourceMappingURL=TemplateWizardPageContextMenu.esm.js.map
