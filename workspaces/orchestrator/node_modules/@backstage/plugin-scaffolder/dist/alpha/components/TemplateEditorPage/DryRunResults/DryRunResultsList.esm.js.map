{"version":3,"file":"DryRunResultsList.esm.js","sources":["../../../../../src/alpha/components/TemplateEditorPage/DryRunResults/DryRunResultsList.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport { useDryRun } from '../DryRunContext';\nimport { downloadBlob } from '../../../../lib/download';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../../translation';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflowY: 'auto',\n    background: theme.palette.background.default,\n  },\n  iconSuccess: {\n    minWidth: 0,\n    marginRight: theme.spacing(1),\n    color: theme.palette.status.ok,\n  },\n  iconFailure: {\n    minWidth: 0,\n    marginRight: theme.spacing(1),\n    color: theme.palette.status.error,\n  },\n}));\n\nexport function DryRunResultsList() {\n  const classes = useStyles();\n  const dryRun = useDryRun();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  return (\n    <List className={classes.root} dense>\n      {dryRun.results.map(result => {\n        const failed = result.log.some(l => l.body.status === 'failed');\n        let isLoading = false;\n\n        async function downloadResult() {\n          isLoading = true;\n          await downloadDirectoryContents(\n            result.directoryContents,\n            `dry-run-result-${result.id}.zip`,\n          );\n          isLoading = false;\n        }\n\n        return (\n          <ListItem\n            button\n            key={result.id}\n            selected={dryRun.selectedResult?.id === result.id}\n            onClick={() => dryRun.selectResult(result.id)}\n          >\n            <ListItemIcon\n              className={failed ? classes.iconFailure : classes.iconSuccess}\n            >\n              {failed ? <CancelIcon /> : <CheckIcon />}\n            </ListItemIcon>\n            <ListItemText\n              primary={t('templateEditorPage.dryRunResultsList.title', {\n                resultId: `${result.id}`,\n              })}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"download\"\n                title={t(\n                  'templateEditorPage.dryRunResultsList.downloadButtonTitle',\n                )}\n                disabled={isLoading}\n                onClick={() => downloadResult()}\n              >\n                <DownloadIcon />\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                title={t(\n                  'templateEditorPage.dryRunResultsList.deleteButtonTitle',\n                )}\n                onClick={() => dryRun.deleteResult(result.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nasync function downloadDirectoryContents(\n  directoryContents: {\n    path: string;\n    base64Content: string;\n    executable?: boolean;\n  }[],\n  name: string,\n) {\n  const { default: JSZip } = await import('jszip');\n  const zip = new JSZip();\n\n  for (const d of directoryContents) {\n    // Decode text content from base64 to ascii\n    const converted = atob(d.base64Content);\n\n    // add folder/file to zip\n    await zip.file(d.path, converted);\n  }\n\n  const blob = await zip.generateAsync({ type: 'blob' });\n  downloadBlob(blob, name);\n}\n"],"names":["CancelIcon"],"mappings":"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"}