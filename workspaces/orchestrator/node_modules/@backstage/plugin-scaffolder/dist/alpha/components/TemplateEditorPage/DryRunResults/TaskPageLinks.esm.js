import { jsx } from 'react/jsx-runtime';
import { parseEntityRef } from '@backstage/catalog-model';
import { entityRouteRef } from '@backstage/plugin-catalog-react';
import Box from '@material-ui/core/Box';
import LanguageIcon from '@material-ui/icons/Language';
import { IconLink } from './IconLink.esm.js';
import { useApp, useRouteRef } from '@backstage/core-plugin-api';

const TaskPageLinks = ({ output }) => {
  const { links = [] } = output;
  const app = useApp();
  const entityRoute = useRouteRef(entityRouteRef);
  const iconResolver = (key) => key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;
  return /* @__PURE__ */ jsx(Box, { px: 3, pb: 3, children: links.filter(({ url, entityRef }) => url || entityRef).map(({ url, entityRef, title, icon }) => {
    if (entityRef) {
      const entityName = parseEntityRef(entityRef, {
        defaultKind: "<unknown>",
        defaultNamespace: "<unknown>"
      });
      const target = entityRoute(entityName);
      return { title, icon, url: target };
    }
    return { title, icon, url };
  }).map(({ url, title, icon }, i) => /* @__PURE__ */ jsx(
    IconLink,
    {
      href: url,
      text: title ?? url,
      Icon: iconResolver(icon),
      target: "_blank"
    },
    `output-link-${i}`
  )) });
};

export { TaskPageLinks };
//# sourceMappingURL=TaskPageLinks.esm.js.map
