{"version":3,"file":"WebFileSystemAccess.esm.js","sources":["../../../src/lib/filesystem/WebFileSystemAccess.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateDirectoryAccess, TemplateFileAccess } from './types';\n\ntype WritableFileHandle = FileSystemFileHandle & {\n  createWritable(): Promise<{\n    write(data: string | Blob | BufferSource): Promise<void>;\n    close(): Promise<void>;\n  }>;\n};\n\n// A nicer type than the one from the TS lib\nexport interface IterableDirectoryHandle extends FileSystemDirectoryHandle {\n  values(): AsyncIterable<\n    | ({ kind: 'file' } & WritableFileHandle)\n    | ({ kind: 'directory' } & IterableDirectoryHandle)\n  >;\n}\n\nconst showDirectoryPicker = (window as any).showDirectoryPicker as\n  | (() => Promise<IterableDirectoryHandle>)\n  | undefined;\n\nclass WebFileAccess implements TemplateFileAccess {\n  constructor(\n    readonly path: string,\n    private readonly handle: WritableFileHandle,\n  ) {}\n\n  file(): Promise<File> {\n    return this.handle.getFile();\n  }\n\n  async save(data: string | Blob | BufferSource): Promise<void> {\n    const writable = await this.handle.createWritable();\n    await writable.write(data);\n    await writable.close();\n  }\n}\n\n/** @internal */\nexport class WebDirectoryAccess implements TemplateDirectoryAccess {\n  constructor(private readonly handle: IterableDirectoryHandle) {}\n\n  async listFiles(): Promise<TemplateFileAccess[]> {\n    const content = [];\n    for await (const entry of this.listDirectoryContents(this.handle)) {\n      content.push(entry);\n    }\n    return content;\n  }\n\n  private async *listDirectoryContents(\n    dirHandle: IterableDirectoryHandle,\n    basePath: string[] = [],\n  ): AsyncIterable<TemplateFileAccess> {\n    for await (const handle of dirHandle.values()) {\n      if (handle.kind === 'file') {\n        yield new WebFileAccess([...basePath, handle.name].join('/'), handle);\n      } else if (handle.kind === 'directory') {\n        // Skip git storage directory\n        if (handle.name === '.git') {\n          continue;\n        }\n        yield* this.listDirectoryContents(handle, [...basePath, handle.name]);\n      }\n    }\n  }\n\n  async createFile(options: { name: string; data: string }): Promise<void> {\n    const { name, data } = options;\n    let file: FileSystemFileHandle;\n\n    // Current create template does not require support for nested directories\n    if (name.includes('/')) {\n      const [dir, path] = name.split('/');\n      const handle = await this.handle.getDirectoryHandle(dir, {\n        create: true,\n      });\n      file = await handle.getFileHandle(path, { create: true });\n    } else {\n      file = await this.handle.getFileHandle(name, {\n        create: true,\n      });\n    }\n    const writable = await file.createWritable();\n    await writable.write(data);\n    await writable.close();\n  }\n}\n\n/** @internal */\nexport class WebFileSystemAccess {\n  static isSupported(): boolean {\n    return Boolean(showDirectoryPicker);\n  }\n\n  static fromHandle(handle: IterableDirectoryHandle) {\n    return new WebDirectoryAccess(handle);\n  }\n\n  static async requestDirectoryAccess(): Promise<TemplateDirectoryAccess> {\n    if (!showDirectoryPicker) {\n      throw new Error('File system access is not supported');\n    }\n    const handle = await showDirectoryPicker();\n    return new WebDirectoryAccess(handle);\n  }\n\n  private constructor() {}\n}\n"],"names":[],"mappings":"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"}