{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport {\n  createScaffolderFieldExtension,\n  scaffolderApiRef,\n} from '@backstage/plugin-scaffolder-react';\nimport { ScaffolderClient } from './api';\nimport {\n  EntityPicker,\n  EntityPickerSchema,\n} from './components/fields/EntityPicker/EntityPicker';\nimport { entityNamePickerValidation } from './components/fields/EntityNamePicker';\nimport {\n  EntityNamePicker,\n  EntityNamePickerSchema,\n} from './components/fields/EntityNamePicker/EntityNamePicker';\nimport {\n  OwnerPicker,\n  OwnerPickerSchema,\n} from './components/fields/OwnerPicker/OwnerPicker';\nimport {\n  MultiEntityPicker,\n  MultiEntityPickerSchema,\n  validateMultiEntityPickerValidation,\n} from './components/fields/MultiEntityPicker/MultiEntityPicker';\nimport { repoPickerValidation } from './components/fields/RepoUrlPicker';\nimport {\n  RepoUrlPicker,\n  RepoUrlPickerSchema,\n} from './components/fields/RepoUrlPicker/RepoUrlPicker';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  fetchApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  OwnedEntityPicker,\n  OwnedEntityPickerSchema,\n} from './components/fields/OwnedEntityPicker/OwnedEntityPicker';\nimport {\n  EntityTagsPicker,\n  EntityTagsPickerSchema,\n} from './components/fields/EntityTagsPicker/EntityTagsPicker';\nimport {\n  registerComponentRouteRef,\n  rootRouteRef,\n  viewTechDocRouteRef,\n  selectedTemplateRouteRef,\n  scaffolderTaskRouteRef,\n  scaffolderListTaskRouteRef,\n  actionsRouteRef,\n  editRouteRef,\n  editorRouteRef,\n  customFieldsRouteRef,\n  templateFormRouteRef,\n  templatingExtensionsRouteRef,\n} from './routes';\nimport {\n  MyGroupsPicker,\n  MyGroupsPickerSchema,\n} from './components/fields/MyGroupsPicker/MyGroupsPicker';\nimport { RepoBranchPicker } from './components/fields/RepoBranchPicker/RepoBranchPicker';\nimport { RepoBranchPickerSchema } from './components/fields/RepoBranchPicker/schema';\nimport { formDecoratorsApiRef } from './alpha/api/ref';\nimport { DefaultScaffolderFormDecoratorsApi } from './alpha/api/FormDecoratorsApi';\nimport { formFieldsApiRef } from '@backstage/plugin-scaffolder-react/alpha';\n\n/**\n * The main plugin export for the scaffolder.\n * @public\n */\nexport const scaffolderPlugin = createPlugin({\n  id: 'scaffolder',\n  apis: [\n    createApiFactory({\n      api: scaffolderApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n        fetchApi: fetchApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ discoveryApi, scmIntegrationsApi, fetchApi, identityApi }) =>\n        new ScaffolderClient({\n          discoveryApi,\n          scmIntegrationsApi,\n          fetchApi,\n          identityApi,\n        }),\n    }),\n    createApiFactory({\n      api: formDecoratorsApiRef,\n      deps: {},\n      factory: () => DefaultScaffolderFormDecoratorsApi.create(),\n    }),\n    createApiFactory({\n      api: formFieldsApiRef,\n      deps: {},\n      factory: () => ({ getFormFields: async () => [] }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n    selectedTemplate: selectedTemplateRouteRef,\n    ongoingTask: scaffolderTaskRouteRef,\n    actions: actionsRouteRef,\n    listTasks: scaffolderListTaskRouteRef,\n    edit: editRouteRef,\n    editor: editorRouteRef,\n    customFields: customFieldsRouteRef,\n    templateForm: templateFormRouteRef,\n    templatingExtensions: templatingExtensionsRouteRef,\n  },\n  externalRoutes: {\n    registerComponent: registerComponentRouteRef,\n    viewTechDoc: viewTechDocRouteRef,\n  },\n});\n\n/**\n * A field extension for selecting an Entity that exists in the Catalog.\n *\n * @public\n */\nexport const EntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityPicker,\n    name: 'EntityPicker',\n    schema: EntityPickerSchema,\n  }),\n);\n\n/**\n * The field extension for selecting a name for a new Entity in the Catalog.\n *\n * @public\n */\nexport const EntityNamePickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityNamePicker,\n    name: 'EntityNamePicker',\n    validation: entityNamePickerValidation,\n    schema: EntityNamePickerSchema,\n  }),\n);\n\n/**\n * A field extension for selecting multiple entities that exists in the Catalog.\n *\n * @public\n */\nexport const MultiEntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: MultiEntityPicker,\n    name: 'MultiEntityPicker',\n    schema: MultiEntityPickerSchema,\n    validation: validateMultiEntityPickerValidation,\n  }),\n);\n\n/**\n * The field extension which provides the ability to select a RepositoryUrl.\n * Currently, this is an encoded URL that looks something like the following `github.com?repo=myRepoName&owner=backstage`.\n *\n * @public\n */\nexport const RepoUrlPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: RepoUrlPicker,\n    name: 'RepoUrlPicker',\n    validation: repoPickerValidation,\n    schema: RepoUrlPickerSchema,\n  }),\n);\n\n/**\n * A field extension for picking users and groups out of the Catalog.\n *\n * @public\n */\nexport const OwnerPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnerPicker,\n    name: 'OwnerPicker',\n    schema: OwnerPickerSchema,\n  }),\n);\n\n/**\n * A field extension for picking groups a user belongs to out of the catalog.\n *\n * @public\n */\nexport const MyGroupsPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: MyGroupsPicker,\n    name: 'MyGroupsPicker',\n    schema: MyGroupsPickerSchema,\n  }),\n);\n\n/**\n * The Router and main entrypoint to the Scaffolder plugin.\n *\n * @public\n */\nexport const ScaffolderPage = scaffolderPlugin.provide(\n  createRoutableExtension({\n    name: 'ScaffolderPage',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * A field extension to show all the Entities that are owned by the current logged-in User for use in templates.\n *\n * @public\n */\nexport const OwnedEntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnedEntityPicker,\n    name: 'OwnedEntityPicker',\n    schema: OwnedEntityPickerSchema,\n  }),\n);\n\n/**\n * EntityTagsPickerFieldExtension\n * @public\n */\nexport const EntityTagsPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityTagsPicker,\n    name: 'EntityTagsPicker',\n    schema: EntityTagsPickerSchema,\n  }),\n);\n\n/**\n * A field extension to select a branch from a repository.\n *\n * @public\n */\nexport const RepoBranchPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: RepoBranchPicker,\n    name: 'RepoBranchPicker',\n    schema: RepoBranchPickerSchema,\n  }),\n);\n"],"names":[],"mappings":"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"}