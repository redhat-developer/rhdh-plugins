import { jsx, jsxs } from 'react/jsx-runtime';
import Card from '@material-ui/core/Card';
import List from '@material-ui/core/List';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import MenuItem from '@material-ui/core/MenuItem';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import SettingsIcon from '@material-ui/icons/Settings';
import { Fragment } from 'react';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { scaffolderTranslationRef } from '../../translation.esm.js';
import AllIcon from '@material-ui/icons/FontDownload';

const useStyles = makeStyles(
  (theme) => ({
    root: {
      backgroundColor: "rgba(0, 0, 0, .11)",
      boxShadow: "none",
      margin: theme.spacing(1, 0, 1, 0)
    },
    title: {
      margin: theme.spacing(1, 0, 0, 1),
      textTransform: "uppercase",
      fontSize: 12,
      fontWeight: "bold"
    },
    listIcon: {
      minWidth: 30,
      color: theme.palette.text.primary
    },
    menuItem: {
      minHeight: theme.spacing(6)
    },
    groupWrapper: {
      margin: theme.spacing(1, 1, 2, 1)
    }
  }),
  {
    name: "ScaffolderReactOwnerListPicker"
  }
);
function getFilterGroups(t) {
  return [
    {
      name: t("ownerListPicker.title"),
      items: [
        {
          id: "owned",
          label: t("ownerListPicker.options.owned"),
          icon: SettingsIcon
        },
        {
          id: "all",
          label: t("ownerListPicker.options.all"),
          icon: AllIcon
        }
      ]
    }
  ];
}
const OwnerListPicker = (props) => {
  const { filter, onSelectOwner } = props;
  const classes = useStyles();
  const { t } = useTranslationRef(scaffolderTranslationRef);
  const filterGroups = getFilterGroups(t);
  return /* @__PURE__ */ jsx(Card, { className: classes.root, children: filterGroups.map((group) => /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(
      Typography,
      {
        variant: "subtitle2",
        component: "span",
        className: classes.title,
        children: group.name
      }
    ),
    /* @__PURE__ */ jsx(Card, { className: classes.groupWrapper, children: /* @__PURE__ */ jsx(List, { disablePadding: true, dense: true, role: "menu", children: group.items.map((item, index) => /* @__PURE__ */ jsxs(
      MenuItem,
      {
        divider: index !== group.items.length - 1,
        ContainerProps: { role: "menuitem" },
        onClick: () => onSelectOwner(item.id),
        selected: item.id === filter,
        className: classes.menuItem,
        "data-testid": `owner-picker-${item.id}`,
        children: [
          item.icon && /* @__PURE__ */ jsx(ListItemIcon, { className: classes.listIcon, children: /* @__PURE__ */ jsx(item.icon, { fontSize: "small" }) }),
          /* @__PURE__ */ jsx(ListItemText, { children: /* @__PURE__ */ jsx(Typography, { variant: "body1", children: item.label }) })
        ]
      },
      item.id
    )) }) })
  ] }, group.name)) });
};

export { OwnerListPicker };
//# sourceMappingURL=OwnerListPicker.esm.js.map
