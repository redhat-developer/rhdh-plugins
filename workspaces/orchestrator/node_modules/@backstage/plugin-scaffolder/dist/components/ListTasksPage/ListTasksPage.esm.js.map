{"version":3,"file":"ListTasksPage.esm.js","sources":["../../../src/components/ListTasksPage/ListTasksPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Content,\n  EmptyState,\n  ErrorPanel,\n  Header,\n  Link,\n  Page,\n  Progress,\n  Table,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { CatalogFilterLayout } from '@backstage/plugin-catalog-react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { useState } from 'react';\nimport {\n  scaffolderApiRef,\n  ScaffolderTask,\n} from '@backstage/plugin-scaffolder-react';\nimport { OwnerListPicker } from './OwnerListPicker';\nimport {\n  CreatedAtColumn,\n  OwnerEntityColumn,\n  TaskStatusColumn,\n  TemplateTitleColumn,\n} from './columns';\nimport {\n  actionsRouteRef,\n  editRouteRef,\n  rootRouteRef,\n  templatingExtensionsRouteRef,\n} from '../../routes';\nimport { ScaffolderPageContextMenu } from '@backstage/plugin-scaffolder-react/alpha';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\n\nexport interface MyTaskPageProps {\n  initiallySelectedFilter?: 'owned' | 'all';\n  contextMenu?: {\n    editor?: boolean;\n    actions?: boolean;\n    create?: boolean;\n  };\n}\n\nconst ListTaskPageContent = (props: MyTaskPageProps) => {\n  const { initiallySelectedFilter = 'owned' } = props;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const rootLink = useRouteRef(rootRouteRef);\n\n  const [ownerFilter, setOwnerFilter] = useState(initiallySelectedFilter);\n  const { value, loading, error } = useAsync(() => {\n    if (scaffolderApi.listTasks) {\n      return scaffolderApi.listTasks?.({\n        filterByOwnership: ownerFilter,\n        limit,\n        offset: page * limit,\n      });\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      'listTasks is not implemented in the scaffolderApi, please make sure to implement this method.',\n    );\n\n    return Promise.resolve({ tasks: [], totalTasks: 0 });\n  }, [scaffolderApi, ownerFilter, limit, page]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <CatalogFilterLayout>\n        <CatalogFilterLayout.Filters>\n          <OwnerListPicker\n            filter={ownerFilter}\n            onSelectOwner={id => setOwnerFilter(id)}\n          />\n        </CatalogFilterLayout.Filters>\n        <CatalogFilterLayout.Content>\n          <ErrorPanel error={error} />\n          <EmptyState\n            missing=\"info\"\n            title={t('listTaskPage.content.emptyState.title')}\n            description={t('listTaskPage.content.emptyState.description')}\n          />\n        </CatalogFilterLayout.Content>\n      </CatalogFilterLayout>\n    );\n  }\n\n  return (\n    <CatalogFilterLayout>\n      <CatalogFilterLayout.Filters>\n        <OwnerListPicker\n          filter={ownerFilter}\n          onSelectOwner={id => setOwnerFilter(id)}\n        />\n      </CatalogFilterLayout.Filters>\n      <CatalogFilterLayout.Content>\n        <Table<ScaffolderTask>\n          onRowsPerPageChange={pageSize => {\n            setPage(0);\n            setLimit(pageSize);\n          }}\n          onPageChange={newPage => setPage(newPage)}\n          options={{ pageSize: limit, emptyRowsWhenPaging: false }}\n          data={value?.tasks ?? []}\n          page={page}\n          totalCount={value?.totalTasks ?? 0}\n          title={t('listTaskPage.content.tableTitle')}\n          columns={[\n            {\n              title: t('listTaskPage.content.tableCell.taskID'),\n              field: 'id',\n              render: row => (\n                <Link to={`${rootLink()}/tasks/${row.id}`}>{row.id}</Link>\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.template'),\n              field: 'spec.templateInfo.entity.metadata.title',\n              render: row => (\n                <TemplateTitleColumn\n                  entityRef={row.spec.templateInfo?.entityRef}\n                />\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.created'),\n              field: 'createdAt',\n              render: row => <CreatedAtColumn createdAt={row.createdAt} />,\n            },\n            {\n              title: t('listTaskPage.content.tableCell.owner'),\n              field: 'createdBy',\n              render: row => (\n                <OwnerEntityColumn entityRef={row.spec?.user?.ref} />\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.status'),\n              field: 'status',\n              render: row => <TaskStatusColumn status={row.status} />,\n            },\n          ]}\n        />\n      </CatalogFilterLayout.Content>\n    </CatalogFilterLayout>\n  );\n};\n\nexport const ListTasksPage = (props: MyTaskPageProps) => {\n  const navigate = useNavigate();\n  const editorLink = useRouteRef(editRouteRef);\n  const actionsLink = useRouteRef(actionsRouteRef);\n  const createLink = useRouteRef(rootRouteRef);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const templatingExtensionsLink = useRouteRef(templatingExtensionsRouteRef);\n\n  const scaffolderPageContextMenuProps = {\n    onEditorClicked:\n      props?.contextMenu?.editor !== false\n        ? () => navigate(editorLink())\n        : undefined,\n    onActionsClicked:\n      props?.contextMenu?.actions !== false\n        ? () => navigate(actionsLink())\n        : undefined,\n    onTasksClicked: undefined,\n    onCreateClicked:\n      props?.contextMenu?.create !== false\n        ? () => navigate(createLink())\n        : undefined,\n    onTemplatingExtensionsClicked: () => navigate(templatingExtensionsLink()),\n  };\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={t('listTaskPage.pageTitle')}\n        title={t('listTaskPage.title')}\n        subtitle={t('listTaskPage.subtitle')}\n      >\n        <ScaffolderPageContextMenu {...scaffolderPageContextMenuProps} />\n      </Header>\n      <Content>\n        <ListTaskPageContent {...props} />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AA4DA,MAAM,mBAAA,GAAsB,CAAC,KAAA,KAA2B;AACtD,EAAA,MAAM,EAAE,uBAAA,GAA0B,OAAA,EAAQ,GAAI,KAAA;AAC9C,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,wBAAwB,CAAA;AACxD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,SAAS,CAAC,CAAA;AACpC,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAI,SAAS,CAAC,CAAA;AAElC,EAAA,MAAM,aAAA,GAAgB,OAAO,gBAAgB,CAAA;AAC7C,EAAA,MAAM,QAAA,GAAW,YAAY,YAAY,CAAA;AAEzC,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAI,SAAS,uBAAuB,CAAA;AACtE,EAAA,MAAM,EAAE,KAAA,EAAO,OAAA,EAAS,KAAA,EAAM,GAAI,SAAS,MAAM;AAC/C,IAAA,IAAI,cAAc,SAAA,EAAW;AAC3B,MAAA,OAAO,cAAc,SAAA,GAAY;AAAA,QAC/B,iBAAA,EAAmB,WAAA;AAAA,QACnB,KAAA;AAAA,QACA,QAAQ,IAAA,GAAO;AAAA,OAChB,CAAA;AAAA,IACH;AAGA,IAAA,OAAA,CAAQ,IAAA;AAAA,MACN;AAAA,KACF;AAEA,IAAA,OAAO,OAAA,CAAQ,QAAQ,EAAE,KAAA,EAAO,EAAC,EAAG,UAAA,EAAY,GAAG,CAAA;AAAA,EACrD,GAAG,CAAC,aAAA,EAAe,WAAA,EAAa,KAAA,EAAO,IAAI,CAAC,CAAA;AAE5C,EAAA,IAAI,OAAA,EAAS;AACX,IAAA,2BAAQ,QAAA,EAAA,EAAS,CAAA;AAAA,EACnB;AAEA,EAAA,IAAI,KAAA,EAAO;AACT,IAAA,4BACG,mBAAA,EAAA,EACC,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,mBAAA,CAAoB,SAApB,EACC,QAAA,kBAAA,GAAA;AAAA,QAAC,eAAA;AAAA,QAAA;AAAA,UACC,MAAA,EAAQ,WAAA;AAAA,UACR,aAAA,EAAe,CAAA,EAAA,KAAM,cAAA,CAAe,EAAE;AAAA;AAAA,OACxC,EACF,CAAA;AAAA,sBACA,IAAA,CAAC,mBAAA,CAAoB,OAAA,EAApB,EACC,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,cAAW,KAAA,EAAc,CAAA;AAAA,wBAC1B,GAAA;AAAA,UAAC,UAAA;AAAA,UAAA;AAAA,YACC,OAAA,EAAQ,MAAA;AAAA,YACR,KAAA,EAAO,EAAE,uCAAuC,CAAA;AAAA,YAChD,WAAA,EAAa,EAAE,6CAA6C;AAAA;AAAA;AAC9D,OAAA,EACF;AAAA,KAAA,EACF,CAAA;AAAA,EAEJ;AAEA,EAAA,4BACG,mBAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,mBAAA,CAAoB,SAApB,EACC,QAAA,kBAAA,GAAA;AAAA,MAAC,eAAA;AAAA,MAAA;AAAA,QACC,MAAA,EAAQ,WAAA;AAAA,QACR,aAAA,EAAe,CAAA,EAAA,KAAM,cAAA,CAAe,EAAE;AAAA;AAAA,KACxC,EACF,CAAA;AAAA,oBACA,GAAA,CAAC,mBAAA,CAAoB,OAAA,EAApB,EACC,QAAA,kBAAA,GAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,qBAAqB,CAAA,QAAA,KAAY;AAC/B,UAAA,OAAA,CAAQ,CAAC,CAAA;AACT,UAAA,QAAA,CAAS,QAAQ,CAAA;AAAA,QACnB,CAAA;AAAA,QACA,YAAA,EAAc,CAAA,OAAA,KAAW,OAAA,CAAQ,OAAO,CAAA;AAAA,QACxC,OAAA,EAAS,EAAE,QAAA,EAAU,KAAA,EAAO,qBAAqB,KAAA,EAAM;AAAA,QACvD,IAAA,EAAM,KAAA,EAAO,KAAA,IAAS,EAAC;AAAA,QACvB,IAAA;AAAA,QACA,UAAA,EAAY,OAAO,UAAA,IAAc,CAAA;AAAA,QACjC,KAAA,EAAO,EAAE,iCAAiC,CAAA;AAAA,QAC1C,OAAA,EAAS;AAAA,UACP;AAAA,YACE,KAAA,EAAO,EAAE,uCAAuC,CAAA;AAAA,YAChD,KAAA,EAAO,IAAA;AAAA,YACP,MAAA,EAAQ,CAAA,GAAA,qBACN,GAAA,CAAC,IAAA,EAAA,EAAK,EAAA,EAAI,CAAA,EAAG,QAAA,EAAU,CAAA,OAAA,EAAU,GAAA,CAAI,EAAE,CAAA,CAAA,EAAK,cAAI,EAAA,EAAG;AAAA,WAEvD;AAAA,UACA;AAAA,YACE,KAAA,EAAO,EAAE,yCAAyC,CAAA;AAAA,YAClD,KAAA,EAAO,yCAAA;AAAA,YACP,QAAQ,CAAA,GAAA,qBACN,GAAA;AAAA,cAAC,mBAAA;AAAA,cAAA;AAAA,gBACC,SAAA,EAAW,GAAA,CAAI,IAAA,CAAK,YAAA,EAAc;AAAA;AAAA;AACpC,WAEJ;AAAA,UACA;AAAA,YACE,KAAA,EAAO,EAAE,wCAAwC,CAAA;AAAA,YACjD,KAAA,EAAO,WAAA;AAAA,YACP,QAAQ,CAAA,GAAA,qBAAO,GAAA,CAAC,eAAA,EAAA,EAAgB,SAAA,EAAW,IAAI,SAAA,EAAW;AAAA,WAC5D;AAAA,UACA;AAAA,YACE,KAAA,EAAO,EAAE,sCAAsC,CAAA;AAAA,YAC/C,KAAA,EAAO,WAAA;AAAA,YACP,MAAA,EAAQ,yBACN,GAAA,CAAC,iBAAA,EAAA,EAAkB,WAAW,GAAA,CAAI,IAAA,EAAM,MAAM,GAAA,EAAK;AAAA,WAEvD;AAAA,UACA;AAAA,YACE,KAAA,EAAO,EAAE,uCAAuC,CAAA;AAAA,YAChD,KAAA,EAAO,QAAA;AAAA,YACP,QAAQ,CAAA,GAAA,qBAAO,GAAA,CAAC,gBAAA,EAAA,EAAiB,MAAA,EAAQ,IAAI,MAAA,EAAQ;AAAA;AACvD;AACF;AAAA,KACF,EACF;AAAA,GAAA,EACF,CAAA;AAEJ,CAAA;AAEO,MAAM,aAAA,GAAgB,CAAC,KAAA,KAA2B;AACvD,EAAA,MAAM,WAAW,WAAA,EAAY;AAC7B,EAAA,MAAM,UAAA,GAAa,YAAY,YAAY,CAAA;AAC3C,EAAA,MAAM,WAAA,GAAc,YAAY,eAAe,CAAA;AAC/C,EAAA,MAAM,UAAA,GAAa,YAAY,YAAY,CAAA;AAC3C,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,wBAAwB,CAAA;AACxD,EAAA,MAAM,wBAAA,GAA2B,YAAY,4BAA4B,CAAA;AAEzE,EAAA,MAAM,8BAAA,GAAiC;AAAA,IACrC,eAAA,EACE,OAAO,WAAA,EAAa,MAAA,KAAW,QAC3B,MAAM,QAAA,CAAS,UAAA,EAAY,CAAA,GAC3B,MAAA;AAAA,IACN,gBAAA,EACE,OAAO,WAAA,EAAa,OAAA,KAAY,QAC5B,MAAM,QAAA,CAAS,WAAA,EAAa,CAAA,GAC5B,MAAA;AAAA,IACN,cAAA,EAAgB,MAAA;AAAA,IAChB,eAAA,EACE,OAAO,WAAA,EAAa,MAAA,KAAW,QAC3B,MAAM,QAAA,CAAS,UAAA,EAAY,CAAA,GAC3B,MAAA;AAAA,IACN,6BAAA,EAA+B,MAAM,QAAA,CAAS,wBAAA,EAA0B;AAAA,GAC1E;AACA,EAAA,uBACE,IAAA,CAAC,IAAA,EAAA,EAAK,OAAA,EAAQ,MAAA,EACZ,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,iBAAA,EAAmB,EAAE,wBAAwB,CAAA;AAAA,QAC7C,KAAA,EAAO,EAAE,oBAAoB,CAAA;AAAA,QAC7B,QAAA,EAAU,EAAE,uBAAuB,CAAA;AAAA,QAEnC,QAAA,kBAAA,GAAA,CAAC,yBAAA,EAAA,EAA2B,GAAG,8BAAA,EAAgC;AAAA;AAAA,KACjE;AAAA,wBACC,OAAA,EAAA,EACC,QAAA,kBAAA,GAAA,CAAC,mBAAA,EAAA,EAAqB,GAAG,OAAO,CAAA,EAClC;AAAA,GAAA,EACF,CAAA;AAEJ;;;;"}