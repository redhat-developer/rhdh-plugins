function isSchema(d) {
  return typeof d === "object";
}
function inspectFunctionArgSchema(schema) {
  const hasOnlyKey = (k) => (o) => k in o && Object.keys(o).every((ok) => ok.startsWith("$") || ok === k);
  if (isSchema(schema) && hasOnlyKey("anyOf")(schema) && schema.anyOf?.length === 2) {
    const alt0 = schema.anyOf[0];
    if (isSchema(alt0) && hasOnlyKey("not")(alt0)) {
      const not = alt0.not;
      if (isSchema(not) && !Object.keys(not).length) {
        return [schema.anyOf[1], false];
      }
    }
  }
  return [schema, true];
}

export { inspectFunctionArgSchema };
//# sourceMappingURL=functionArgs.esm.js.map
