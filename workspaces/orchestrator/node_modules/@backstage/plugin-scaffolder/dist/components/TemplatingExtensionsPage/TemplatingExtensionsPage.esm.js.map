{"version":3,"file":"TemplatingExtensionsPage.esm.js","sources":["../../../src/components/TemplatingExtensionsPage/TemplatingExtensionsPage.tsx"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\n\nimport {\n  actionsRouteRef,\n  editRouteRef,\n  rootRouteRef,\n  scaffolderListTaskRouteRef,\n  templatingExtensionsRouteRef,\n} from '../../routes';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\n\nimport {\n  Content,\n  EmptyState,\n  ErrorPanel,\n  Header,\n  Link,\n  Page,\n  Progress,\n} from '@backstage/core-components';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport {\n  ScaffolderPageContextMenu,\n  ScaffolderPageContextMenuProps,\n} from '@backstage/plugin-scaffolder-react/alpha';\nimport Box from '@material-ui/core/Box';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FunctionsIcon from '@material-ui/icons/Functions';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useAsync from 'react-use/esm/useAsync';\nimport {\n  Extension,\n  ExtensionKind,\n  listTemplatingExtensions,\n  parseFragment,\n} from './navigation';\nimport { TemplateFilters } from './TemplateFilters';\nimport {\n  TemplateGlobalFunctions,\n  TemplateGlobalValues,\n} from './TemplateGlobals';\n\nconst useStyles = makeStyles(theme => ({\n  code: {\n    fontFamily: 'Menlo, monospace',\n    padding: theme.spacing(1),\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[700]\n        : theme.palette.grey[300],\n    display: 'inline-block',\n    borderRadius: 5,\n    border: `1px solid ${theme.palette.grey[500]}`,\n    position: 'relative',\n  },\n\n  codeRequired: {\n    '&::after': {\n      position: 'absolute',\n      content: '\"*\"',\n      top: 0,\n      right: theme.spacing(0.5),\n      fontWeight: 'bolder',\n      color: theme.palette.error.light,\n    },\n  },\n\n  argRequired: {\n    position: 'relative',\n    '& > *': {\n      display: 'inline',\n      position: 'relative',\n      '&::after': {\n        position: 'absolute',\n        content: '\"*\"',\n        top: 0,\n        right: theme.spacing(-1),\n        fontWeight: 'bolder',\n        color: theme.palette.error.light,\n      },\n    },\n  },\n\n  link: {\n    paddingLeft: theme.spacing(1),\n    cursor: 'pointer',\n  },\n\n  tabs: {\n    display: 'block',\n    minHeight: 'initial',\n    overflow: 'initial',\n  },\n}));\n\nexport const TemplatingExtensionsPageContent = ({\n  linkLocal,\n}: {\n  linkLocal?: boolean;\n}) => {\n  const api = useApi(scaffolderApiRef);\n  const classes = useStyles();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const { loading, value, error } = useAsync(async () => {\n    if (api.listTemplatingExtensions) {\n      return api.listTemplatingExtensions();\n    }\n    // eslint-disable-next-line no-console\n    console.warn(\n      'listTemplatingExtensions is not implemented in the scaffolderApi; please make sure to implement this method.',\n    );\n    return Promise.resolve({\n      filters: {},\n      globals: { functions: {}, values: {} },\n    });\n  }, [api]);\n\n  const [tab, selectTab] = useState<ExtensionKind>('filter');\n  const [selectedItem, setSelectedItem] = useState<Extension | null>(null);\n  const [input, setInput] = useState<string>('');\n\n  const handleTab = (_event: any, kind: ExtensionKind) => {\n    if (selectedItem?.kind !== kind) {\n      setSelectedItem(null);\n      setInput('');\n    }\n    selectTab(kind);\n  };\n\n  const selectItem = (item: Extension | null) => {\n    setSelectedItem(item);\n    if (item) {\n      selectTab(item.kind);\n    }\n  };\n\n  useEffect(() => {\n    if (value && window.location.hash) {\n      try {\n        selectTab(parseFragment(window.location.hash.substring(1)).kind);\n        document.querySelector(window.location.hash)?.scrollIntoView();\n      } catch (e) {\n        // ignore bad link\n      }\n    }\n  }, [value]);\n\n  const extensionKinds = useMemo(\n    () => ({\n      filter: {\n        icon: <FilterListIcon />,\n        label: t('templatingExtensions.content.filters.title'),\n      },\n      function: {\n        icon: <FunctionsIcon />,\n        label: t('templatingExtensions.content.functions.title'),\n      },\n      value: {\n        icon: <AllInclusiveIcon />,\n        label: t('templatingExtensions.content.values.title'),\n      },\n    }),\n    [t],\n  );\n\n  const templatingExtensionsLink = useRouteRef(templatingExtensionsRouteRef);\n\n  if (loading) {\n    return <Progress />;\n  }\n  if (error || !value) {\n    return (\n      <div data-testid=\"empty\">\n        {error && <ErrorPanel error={error} />}\n        <EmptyState\n          missing=\"info\"\n          title={t('templatingExtensions.content.emptyState.title')}\n          description={t('templatingExtensions.content.emptyState.description')}\n        />\n      </div>\n    );\n  }\n  const { filters, globals } = value;\n\n  const baseLink = (\n    <Link\n      className={classes.link}\n      to={templatingExtensionsLink()}\n      {...(linkLocal ? {} : { target: '_blank', rel: 'noopener noreferrer' })}\n    >\n      <LinkIcon />\n    </Link>\n  );\n\n  return (\n    <>\n      <Autocomplete\n        renderInput={params => (\n          <TextField\n            {...params}\n            aria-label={t(\n              'templatingExtensions.content.searchFieldPlaceholder',\n            )}\n            placeholder={t(\n              'templatingExtensions.content.searchFieldPlaceholder',\n            )}\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        getOptionLabel={option => option.name}\n        getOptionSelected={(lhs, rhs) => lhs === rhs}\n        options={listTemplatingExtensions(value)}\n        groupBy={option => option.kind}\n        renderGroup={params => (\n          <>\n            <Box display=\"flex\" alignItems=\"center\">\n              {extensionKinds[params.group as ExtensionKind].icon}\n              <Box sx={{ ml: 1 }}>\n                {extensionKinds[params.group as ExtensionKind].label}\n              </Box>\n            </Box>\n            <ul>{params.children}</ul>\n          </>\n        )}\n        renderOption={(option: Extension) => (\n          <ListItemText primary={option.name} />\n        )}\n        onChange={(_event: any, option: Extension | null) => {\n          selectItem(option);\n        }}\n        inputValue={input}\n        onInputChange={(_event: any, s: string) => setInput(s)}\n        loading={loading}\n        fullWidth\n        clearOnEscape\n      />\n      <Tabs value={tab} onChange={handleTab} centered className={classes.tabs}>\n        {Object.entries(extensionKinds).map(([k, v]) => (\n          <Tab key={k} value={k} {...v} />\n        ))}\n      </Tabs>\n      {tab === 'filter' && (\n        <TemplateFilters {...{ baseLink, t, classes, filters, selectedItem }} />\n      )}\n      {tab === 'function' && (\n        <TemplateGlobalFunctions\n          functions={globals.functions}\n          {...{ baseLink, t, classes, selectedItem }}\n        />\n      )}\n      {tab === 'value' && (\n        <TemplateGlobalValues\n          values={globals.values}\n          {...{ baseLink, t, classes, selectedItem }}\n        />\n      )}\n    </>\n  );\n};\n\nexport const TemplatingExtensionsPage = () => {\n  const navigate = useNavigate();\n  const editorLink = useRouteRef(editRouteRef);\n  const tasksLink = useRouteRef(scaffolderListTaskRouteRef);\n  const createLink = useRouteRef(rootRouteRef);\n  const actionsLink = useRouteRef(actionsRouteRef);\n\n  const scaffolderPageContextMenuProps: ScaffolderPageContextMenuProps = {\n    onEditorClicked: () => navigate(editorLink()),\n    onActionsClicked: () => navigate(actionsLink()),\n    onTasksClicked: () => navigate(tasksLink()),\n    onCreateClicked: () => navigate(createLink()),\n  };\n\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={t('templatingExtensions.pageTitle')}\n        title={t('templatingExtensions.title')}\n        subtitle={t('templatingExtensions.subtitle')}\n      >\n        <ScaffolderPageContextMenu {...scaffolderPageContextMenuProps} />\n      </Header>\n      <Content>\n        <TemplatingExtensionsPageContent linkLocal />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":"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"}