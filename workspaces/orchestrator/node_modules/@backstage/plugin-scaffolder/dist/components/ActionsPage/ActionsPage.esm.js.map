{"version":3,"file":"ActionsPage.esm.js","sources":["../../../src/components/ActionsPage/ActionsPage.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useEffect, useState } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { Action, scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  Content,\n  EmptyState,\n  ErrorPanel,\n  Header,\n  Link,\n  MarkdownContent,\n  Page,\n  Progress,\n} from '@backstage/core-components';\nimport { ScaffolderPageContextMenu } from '@backstage/plugin-scaffolder-react/alpha';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  editRouteRef,\n  rootRouteRef,\n  scaffolderListTaskRouteRef,\n  templatingExtensionsRouteRef,\n} from '../../routes';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\nimport { Expanded, RenderSchema, SchemaRenderContext } from '../RenderSchema';\nimport { ScaffolderUsageExamplesTable } from '../ScaffolderUsageExamplesTable';\n\nconst useStyles = makeStyles(theme => ({\n  code: {\n    fontFamily: 'Menlo, monospace',\n    padding: theme.spacing(1),\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[700]\n        : theme.palette.grey[300],\n    display: 'inline-block',\n    borderRadius: 5,\n    border: `1px solid ${theme.palette.grey[500]}`,\n    position: 'relative',\n  },\n\n  codeRequired: {\n    '&::after': {\n      position: 'absolute',\n      content: '\"*\"',\n      top: 0,\n      right: theme.spacing(0.5),\n      fontWeight: 'bolder',\n      color: theme.palette.error.light,\n    },\n  },\n  link: {\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport const ActionPageContent = () => {\n  const api = useApi(scaffolderApiRef);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const classes = useStyles();\n  const {\n    loading,\n    value = [],\n    error,\n  } = useAsync(async () => {\n    return api.listActions();\n  }, [api]);\n\n  const [selectedAction, setSelectedAction] = useState<Action | null>(null);\n  const expanded = useState<Expanded>({});\n\n  useEffect(() => {\n    if (value.length && window.location.hash) {\n      document.querySelector(window.location.hash)?.scrollIntoView();\n    }\n  }, [value]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <>\n        <ErrorPanel error={error} />\n        <EmptyState\n          missing=\"info\"\n          title={t('actionsPage.content.emptyState.title')}\n          description={t('actionsPage.content.emptyState.description')}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Box pb={3}>\n        <Autocomplete\n          id=\"actions-autocomplete\"\n          options={value}\n          loading={loading}\n          getOptionLabel={option => option.id}\n          renderInput={params => (\n            <TextField\n              {...params}\n              aria-label={t('actionsPage.content.searchFieldPlaceholder')}\n              placeholder={t('actionsPage.content.searchFieldPlaceholder')}\n              variant=\"outlined\"\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          )}\n          onChange={(_event, option) => {\n            setSelectedAction(option);\n          }}\n          fullWidth\n        />\n      </Box>\n      {(selectedAction ? [selectedAction] : value).map(action => {\n        if (action.id.startsWith('legacy:')) {\n          return undefined;\n        }\n        const partialSchemaRenderContext: Omit<\n          SchemaRenderContext,\n          'parentId'\n        > = {\n          classes,\n          expanded,\n          headings: [<Typography variant=\"h6\" component=\"h4\" />],\n        };\n        return (\n          <Box pb={3} key={action.id}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography\n                id={action.id.replaceAll(':', '-')}\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.code}\n              >\n                {action.id}\n              </Typography>\n              <Link\n                className={classes.link}\n                to={`#${action.id.replaceAll(':', '-')}`}\n              >\n                <LinkIcon />\n              </Link>\n            </Box>\n            {action.description && (\n              <MarkdownContent content={action.description} />\n            )}\n            {action.schema?.input && (\n              <Box pb={2}>\n                <Typography variant=\"h6\" component=\"h3\">\n                  {t('actionsPage.action.input')}\n                </Typography>\n                <RenderSchema\n                  strategy=\"properties\"\n                  context={{\n                    parentId: `${action.id}.input`,\n                    ...partialSchemaRenderContext,\n                  }}\n                  schema={action?.schema?.input}\n                />\n              </Box>\n            )}\n            {action.schema?.output && (\n              <Box pb={2}>\n                <Typography variant=\"h5\" component=\"h3\">\n                  {t('actionsPage.action.output')}\n                </Typography>\n                <RenderSchema\n                  strategy=\"properties\"\n                  context={{\n                    parentId: `${action.id}.output`,\n                    ...partialSchemaRenderContext,\n                  }}\n                  schema={action?.schema?.output}\n                />\n              </Box>\n            )}\n            {action.examples && (\n              <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"h6\" component=\"h3\">\n                    {t('actionsPage.action.examples')}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Box pb={2}>\n                    <ScaffolderUsageExamplesTable examples={action.examples} />\n                  </Box>\n                </AccordionDetails>\n              </Accordion>\n            )}\n          </Box>\n        );\n      })}\n    </>\n  );\n};\n\nexport type ActionsPageProps = {\n  contextMenu?: {\n    editor?: boolean;\n    tasks?: boolean;\n    create?: boolean;\n  };\n};\n\nexport const ActionsPage = (props: ActionsPageProps) => {\n  const navigate = useNavigate();\n  const editorLink = useRouteRef(editRouteRef);\n  const tasksLink = useRouteRef(scaffolderListTaskRouteRef);\n  const createLink = useRouteRef(rootRouteRef);\n  const templatingExtensionsLink = useRouteRef(templatingExtensionsRouteRef);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const scaffolderPageContextMenuProps = {\n    onEditorClicked:\n      props?.contextMenu?.editor !== false\n        ? () => navigate(editorLink())\n        : undefined,\n    onActionsClicked: undefined,\n    onTasksClicked:\n      props?.contextMenu?.tasks !== false\n        ? () => navigate(tasksLink())\n        : undefined,\n    onCreateClicked:\n      props?.contextMenu?.create !== false\n        ? () => navigate(createLink())\n        : undefined,\n    onTemplatingExtensionsClicked: () => navigate(templatingExtensionsLink()),\n  };\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={t('actionsPage.pageTitle')}\n        title={t('actionsPage.title')}\n        subtitle={t('actionsPage.subtitle')}\n      >\n        <ScaffolderPageContextMenu {...scaffolderPageContextMenuProps} />\n      </Header>\n      <Content>\n        <ActionPageContent />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":"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"}