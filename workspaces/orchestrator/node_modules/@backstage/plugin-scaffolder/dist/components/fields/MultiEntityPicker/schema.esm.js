import { z } from 'zod';
import { makeFieldSchema } from '@backstage/plugin-scaffolder-react';

const entityQueryFilterExpressionSchema = z.record(
  z.string().or(z.object({ exists: z.boolean().optional() })).or(z.array(z.string()))
);
const MultiEntityPickerFieldSchema = makeFieldSchema({
  output: (z) => z.array(z.string()),
  uiOptions: (z) => z.object({
    defaultKind: z.string().optional().describe(
      "The default entity kind. Options of this kind will not be prefixed."
    ),
    allowArbitraryValues: z.boolean().optional().describe("Whether to allow arbitrary user input. Defaults to true"),
    defaultNamespace: z.union([z.string(), z.literal(false)]).optional().describe(
      "The default namespace. Options with this namespace will not be prefixed."
    ),
    catalogFilter: z.array(entityQueryFilterExpressionSchema).or(entityQueryFilterExpressionSchema).optional().describe("List of key-value filter expression for entities")
  })
});
const MultiEntityPickerSchema = MultiEntityPickerFieldSchema.schema;

export { MultiEntityPickerFieldSchema, MultiEntityPickerSchema, entityQueryFilterExpressionSchema };
//# sourceMappingURL=schema.esm.js.map
