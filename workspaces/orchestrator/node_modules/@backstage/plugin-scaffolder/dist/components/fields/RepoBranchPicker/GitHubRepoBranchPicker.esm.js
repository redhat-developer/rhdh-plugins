import { jsxs, jsx } from 'react/jsx-runtime';
import { useApi } from '@backstage/core-plugin-api';
import { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';
import FormControl from '@material-ui/core/FormControl';
import FormHelperText from '@material-ui/core/FormHelperText';
import TextField from '@material-ui/core/TextField';
import Autocomplete from '@material-ui/lab/Autocomplete';
import { useState, useCallback } from 'react';
import useDebounce from 'react-use/esm/useDebounce';

const GitHubRepoBranchPicker = ({
  onChange,
  state,
  rawErrors,
  accessToken,
  isDisabled,
  required
}) => {
  const { host, owner, repository, branch } = state;
  const [availableBranches, setAvailableBranches] = useState([]);
  const scaffolderApi = useApi(scaffolderApiRef);
  const updateAvailableBranches = useCallback(() => {
    if (!scaffolderApi.autocomplete || !owner || !repository || !accessToken || !host) {
      setAvailableBranches([]);
      return;
    }
    scaffolderApi.autocomplete({
      token: accessToken,
      resource: "branches",
      context: { host, owner, repository },
      provider: "github"
    }).then(({ results }) => {
      setAvailableBranches(results.map((r) => r.id));
    }).catch(() => {
      setAvailableBranches([]);
    });
  }, [host, owner, repository, accessToken, scaffolderApi]);
  useDebounce(updateAvailableBranches, 500, [updateAvailableBranches]);
  return /* @__PURE__ */ jsxs(
    FormControl,
    {
      margin: "normal",
      required,
      error: rawErrors?.length > 0 && !branch,
      children: [
        /* @__PURE__ */ jsx(
          Autocomplete,
          {
            value: branch,
            onChange: (_, newValue) => {
              onChange({ branch: newValue || "" });
            },
            disabled: isDisabled,
            options: availableBranches,
            renderInput: (params) => /* @__PURE__ */ jsx(
              TextField,
              {
                ...params,
                label: "Branch",
                disabled: isDisabled,
                required
              }
            ),
            freeSolo: true,
            autoSelect: true
          }
        ),
        /* @__PURE__ */ jsx(FormHelperText, { children: "The branch of the repository" })
      ]
    }
  );
};

export { GitHubRepoBranchPicker };
//# sourceMappingURL=GitHubRepoBranchPicker.esm.js.map
