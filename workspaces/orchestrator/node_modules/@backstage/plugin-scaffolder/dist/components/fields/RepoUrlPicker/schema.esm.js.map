{"version":3,"file":"schema.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/schema.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeFieldSchema } from '@backstage/plugin-scaffolder-react';\n\n/**\n * @public\n */\nexport const RepoUrlPickerFieldSchema = makeFieldSchema({\n  output: z => z.string(),\n  uiOptions: z =>\n    z.object({\n      allowedHosts: z\n        .array(z.string())\n        .optional()\n        .describe('List of allowed SCM platform hosts'),\n      allowedOrganizations: z\n        .array(z.string())\n        .optional()\n        .describe('List of allowed organizations in the given SCM platform'),\n      allowedOwners: z\n        .array(z.string())\n        .optional()\n        .describe('List of allowed owners in the given SCM platform'),\n      allowedProjects: z\n        .array(z.string())\n        .optional()\n        .describe('List of allowed projects in the given SCM platform'),\n      allowedRepos: z\n        .array(z.string())\n        .optional()\n        .describe('List of allowed repos in the given SCM platform'),\n      requestUserCredentials: z\n        .object({\n          secretsKey: z\n            .string()\n            .describe(\n              'Key used within the template secrets context to store the credential',\n            ),\n          additionalScopes: z\n            .object({\n              gitea: z\n                .array(z.string())\n                .optional()\n                .describe('Additional Gitea scopes to request'),\n              gerrit: z\n                .array(z.string())\n                .optional()\n                .describe('Additional Gerrit scopes to request'),\n              github: z\n                .array(z.string())\n                .optional()\n                .describe('Additional GitHub scopes to request'),\n              gitlab: z\n                .array(z.string())\n                .optional()\n                .describe('Additional GitLab scopes to request'),\n              bitbucket: z\n                .array(z.string())\n                .optional()\n                .describe('Additional BitBucket scopes to request'),\n              azure: z\n                .array(z.string())\n                .optional()\n                .describe('Additional Azure scopes to request'),\n            })\n            .optional()\n            .describe('Additional permission scopes to request'),\n        })\n        .optional()\n        .describe(\n          'If defined will request user credentials to auth against the given SCM platform',\n        ),\n    }),\n});\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `RepoUrlPicker` field extension.\n *\n * @public\n * @deprecated this will be removed as it's no longer used\n */\nexport type RepoUrlPickerUiOptions = NonNullable<\n  (typeof RepoUrlPickerFieldSchema.TProps.uiSchema)['ui:options']\n>;\n\nexport type RepoUrlPickerProps = typeof RepoUrlPickerFieldSchema.TProps;\n\n// This has been duplicated to /plugins/scaffolder/src/components/fields/RepoBranchPicker/schema.ts\n// NOTE: There is a bug with this failing validation in the custom field explorer due\n// to https://github.com/rjsf-team/react-jsonschema-form/issues/675 even if\n// requestUserCredentials is not defined\nexport const RepoUrlPickerSchema = RepoUrlPickerFieldSchema.schema;\n"],"names":[],"mappings":";;AAqBO,MAAM,2BAA2B,eAAA,CAAgB;AAAA,EACtD,MAAA,EAAQ,CAAA,CAAA,KAAK,CAAA,CAAE,MAAA,EAAO;AAAA,EACtB,SAAA,EAAW,CAAA,CAAA,KACT,CAAA,CAAE,MAAA,CAAO;AAAA,IACP,YAAA,EAAc,CAAA,CACX,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,oCAAoC,CAAA;AAAA,IAChD,oBAAA,EAAsB,CAAA,CACnB,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,yDAAyD,CAAA;AAAA,IACrE,aAAA,EAAe,CAAA,CACZ,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,kDAAkD,CAAA;AAAA,IAC9D,eAAA,EAAiB,CAAA,CACd,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,oDAAoD,CAAA;AAAA,IAChE,YAAA,EAAc,CAAA,CACX,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,iDAAiD,CAAA;AAAA,IAC7D,sBAAA,EAAwB,EACrB,MAAA,CAAO;AAAA,MACN,UAAA,EAAY,CAAA,CACT,MAAA,EAAO,CACP,QAAA;AAAA,QACC;AAAA,OACF;AAAA,MACF,gBAAA,EAAkB,EACf,MAAA,CAAO;AAAA,QACN,KAAA,EAAO,CAAA,CACJ,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,oCAAoC,CAAA;AAAA,QAChD,MAAA,EAAQ,CAAA,CACL,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,qCAAqC,CAAA;AAAA,QACjD,MAAA,EAAQ,CAAA,CACL,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,qCAAqC,CAAA;AAAA,QACjD,MAAA,EAAQ,CAAA,CACL,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,qCAAqC,CAAA;AAAA,QACjD,SAAA,EAAW,CAAA,CACR,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,wCAAwC,CAAA;AAAA,QACpD,KAAA,EAAO,CAAA,CACJ,KAAA,CAAM,CAAA,CAAE,MAAA,EAAQ,CAAA,CAChB,QAAA,EAAS,CACT,QAAA,CAAS,oCAAoC;AAAA,OACjD,CAAA,CACA,QAAA,EAAS,CACT,SAAS,yCAAyC;AAAA,KACtD,CAAA,CACA,QAAA,EAAS,CACT,QAAA;AAAA,MACC;AAAA;AACF,GACH;AACL,CAAC;AAmBM,MAAM,sBAAsB,wBAAA,CAAyB;;;;"}