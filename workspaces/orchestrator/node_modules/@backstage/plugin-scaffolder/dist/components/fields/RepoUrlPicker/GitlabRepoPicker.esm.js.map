{"version":3,"file":"GitlabRepoPicker.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/GitlabRepoPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useCallback, useState } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { BaseRepoUrlPickerProps } from './types';\n\nexport const GitlabRepoPicker = (\n  props: BaseRepoUrlPickerProps<{\n    allowedOwners?: string[];\n    allowedRepos?: string[];\n    accessToken?: string;\n  }>,\n) => {\n  const {\n    allowedOwners = [],\n    state,\n    onChange,\n    rawErrors,\n    accessToken,\n    isDisabled,\n  } = props;\n  const [availableGroups, setAvailableGroups] = useState<\n    { title: string; id: string }[]\n  >([]);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner, host } = state;\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const updateAvailableGroups = useCallback(() => {\n    if (!scaffolderApi.autocomplete || !accessToken || !host) {\n      setAvailableGroups([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'groups',\n        provider: 'gitlab',\n        context: { host },\n      })\n      .then(({ results }) => {\n        setAvailableGroups(\n          results.map(r => {\n            return {\n              title: r.title!,\n              id: r.id,\n            };\n          }),\n        );\n      })\n      .catch(() => {\n        setAvailableGroups([]);\n      });\n  }, [scaffolderApi, accessToken, host]);\n\n  useDebounce(updateAvailableGroups, 500, [updateAvailableGroups]);\n\n  // Update available repositories when client is available and group changes\n  const updateAvailableRepositories = useCallback(() => {\n    if (!scaffolderApi.autocomplete || !accessToken || !host || !owner) {\n      onChange({ availableRepos: [] });\n      return;\n    }\n\n    const selectedGroup = availableGroups.find(group => group.title === owner);\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'repositories',\n        context: {\n          id: selectedGroup?.id ?? '',\n          host,\n        },\n        provider: 'gitlab',\n      })\n      .then(({ results }) => {\n        onChange({\n          availableRepos: results.map(r => {\n            return { name: r.title!, id: r.id };\n          }),\n        });\n      })\n      .catch(() => {\n        onChange({ availableRepos: [] });\n      });\n  }, [scaffolderApi, accessToken, host, owner, onChange, availableGroups]);\n\n  useDebounce(updateAvailableRepositories, 500, [updateAvailableRepositories]);\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <>\n            <Select\n              native\n              label={t('fields.gitlabRepoPicker.owner.title')}\n              onChange={selected =>\n                onChange({\n                  owner: String(\n                    Array.isArray(selected) ? selected[0] : selected,\n                  ),\n                })\n              }\n              disabled={isDisabled || allowedOwners.length === 1}\n              selected={owner}\n              items={ownerItems}\n            />\n            <FormHelperText>\n              {t('fields.gitlabRepoPicker.owner.description')}\n            </FormHelperText>\n          </>\n        ) : (\n          <Autocomplete\n            value={owner}\n            onChange={(_, newValue) => {\n              onChange({ owner: newValue || '' });\n            }}\n            options={availableGroups.map(group => group.title)}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={t('fields.gitlabRepoPicker.owner.title')}\n                disabled={isDisabled}\n                required\n              />\n            )}\n            freeSolo\n            disabled={isDisabled}\n            autoSelect\n          />\n        )}\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}