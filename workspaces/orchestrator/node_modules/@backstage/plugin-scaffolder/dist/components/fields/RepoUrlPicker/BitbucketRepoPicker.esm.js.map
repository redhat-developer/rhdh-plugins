{"version":3,"file":"BitbucketRepoPicker.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/BitbucketRepoPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useCallback, useEffect, useState } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { BaseRepoUrlPickerProps } from './types';\n\n/**\n * The underlying component that is rendered in the form for the `BitbucketRepoPicker`\n * field extension.\n *\n * @public\n * @param allowedOwners - Allowed workspaces for the Bitbucket cloud repository\n * @param allowedProjects - Allowed projects for the Bitbucket cloud repository\n *\n */\nexport const BitbucketRepoPicker = (\n  props: BaseRepoUrlPickerProps<{\n    allowedOwners?: string[];\n    allowedProjects?: string[];\n    accessToken?: string;\n  }>,\n) => {\n  const {\n    allowedOwners = [],\n    allowedProjects = [],\n    onChange,\n    rawErrors,\n    state,\n    accessToken,\n    isDisabled,\n  } = props;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const { host, workspace, project } = state;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners?.map(i => ({ label: i, value: i }))\n    : [];\n  const projectItems: SelectItem[] = allowedProjects\n    ? allowedProjects?.map(i => ({ label: i, value: i }))\n    : [];\n\n  useEffect(() => {\n    if (host === 'bitbucket.org' && allowedOwners.length) {\n      onChange({ workspace: allowedOwners[0] });\n    }\n  }, [allowedOwners, host, onChange]);\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const [availableWorkspaces, setAvailableWorkspaces] = useState<string[]>([]);\n  const [availableProjects, setAvailableProjects] = useState<string[]>([]);\n\n  // Update available workspaces when client is available\n  const updateAvailableWorkspaces = useCallback(() => {\n    if (\n      !scaffolderApi.autocomplete ||\n      !accessToken ||\n      host !== 'bitbucket.org'\n    ) {\n      setAvailableWorkspaces([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        context: {},\n        token: accessToken,\n        resource: 'workspaces',\n        provider: 'bitbucket-cloud',\n      })\n      .then(({ results }) => {\n        setAvailableWorkspaces(results.map(r => r.id));\n      })\n      .catch(() => {\n        setAvailableWorkspaces([]);\n      });\n  }, [scaffolderApi, accessToken, host]);\n\n  useDebounce(updateAvailableWorkspaces, 500, [updateAvailableWorkspaces]);\n\n  // Update available projects when client is available and workspace changes\n  const updateAvailableProjects = useCallback(() => {\n    if (\n      !scaffolderApi.autocomplete ||\n      !accessToken ||\n      host !== 'bitbucket.org' ||\n      !workspace\n    ) {\n      setAvailableProjects([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'projects',\n        context: { workspace },\n        provider: 'bitbucket-cloud',\n      })\n      .then(({ results }) => {\n        setAvailableProjects(results.map(r => r.id));\n      })\n      .catch(() => {\n        setAvailableProjects([]);\n      });\n  }, [scaffolderApi, accessToken, host, workspace]);\n\n  useDebounce(updateAvailableProjects, 500, [updateAvailableProjects]);\n\n  // Update available repositories when client is available and workspace or project changes\n  const updateAvailableRepositories = useCallback(() => {\n    if (\n      !scaffolderApi.autocomplete ||\n      !accessToken ||\n      host !== 'bitbucket.org' ||\n      !workspace ||\n      !project\n    ) {\n      onChange({ availableRepos: [] });\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'repositories',\n        context: { workspace, project },\n        provider: 'bitbucket-cloud',\n      })\n      .then(({ results }) => {\n        onChange({\n          availableRepos: results.map(r => {\n            return { name: r.id };\n          }),\n        });\n      })\n      .catch(() => {\n        onChange({ availableRepos: [] });\n      });\n  }, [scaffolderApi, accessToken, host, workspace, project, onChange]);\n\n  useDebounce(updateAvailableRepositories, 500, [updateAvailableRepositories]);\n\n  return (\n    <>\n      {host === 'bitbucket.org' && (\n        <FormControl\n          margin=\"normal\"\n          required\n          error={rawErrors?.length > 0 && !workspace}\n        >\n          {allowedOwners?.length ? (\n            <Select\n              native\n              label={t('fields.bitbucketRepoPicker.workspaces.title')}\n              onChange={s =>\n                onChange({ workspace: String(Array.isArray(s) ? s[0] : s) })\n              }\n              disabled={isDisabled || allowedOwners.length === 1}\n              selected={workspace}\n              items={ownerItems}\n            />\n          ) : (\n            <Autocomplete\n              value={workspace}\n              onChange={(_, newValue) => {\n                onChange({ workspace: newValue || '' });\n              }}\n              options={availableWorkspaces}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label={t('fields.bitbucketRepoPicker.workspaces.inputTitle')}\n                  disabled={isDisabled}\n                  required\n                />\n              )}\n              disabled={isDisabled}\n              freeSolo\n              autoSelect\n            />\n          )}\n          <FormHelperText>\n            {t('fields.bitbucketRepoPicker.workspaces.description')}\n          </FormHelperText>\n        </FormControl>\n      )}\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !project}\n      >\n        {allowedProjects?.length ? (\n          <Select\n            native\n            label={t('fields.bitbucketRepoPicker.project.title')}\n            onChange={s =>\n              onChange({ project: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={isDisabled || allowedProjects.length === 1}\n            selected={project}\n            items={projectItems}\n          />\n        ) : (\n          <Autocomplete\n            value={project}\n            onChange={(_, newValue) => {\n              onChange({ project: newValue || '' });\n            }}\n            options={availableProjects}\n            disabled={isDisabled}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={t('fields.bitbucketRepoPicker.project.inputTitle')}\n                disabled={isDisabled}\n                required\n              />\n            )}\n            freeSolo\n            autoSelect\n          />\n        )}\n        <FormHelperText>\n          {t('fields.bitbucketRepoPicker.project.description')}\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAqCO,MAAM,mBAAA,GAAsB,CACjC,KAAA,KAKG;AACH,EAAA,MAAM;AAAA,IACJ,gBAAgB,EAAC;AAAA,IACjB,kBAAkB,EAAC;AAAA,IACnB,QAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,GACF,GAAI,KAAA;AACJ,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,wBAAwB,CAAA;AAExD,EAAA,MAAM,EAAE,IAAA,EAAM,SAAA,EAAW,OAAA,EAAQ,GAAI,KAAA;AACrC,EAAA,MAAM,UAAA,GAA2B,aAAA,GAC7B,aAAA,EAAe,GAAA,CAAI,CAAA,CAAA,MAAM,EAAE,KAAA,EAAO,CAAA,EAAG,KAAA,EAAO,CAAA,EAAE,CAAE,CAAA,GAChD,EAAC;AACL,EAAA,MAAM,YAAA,GAA6B,eAAA,GAC/B,eAAA,EAAiB,GAAA,CAAI,CAAA,CAAA,MAAM,EAAE,KAAA,EAAO,CAAA,EAAG,KAAA,EAAO,CAAA,EAAE,CAAE,CAAA,GAClD,EAAC;AAEL,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,IAAA,KAAS,eAAA,IAAmB,aAAA,CAAc,MAAA,EAAQ;AACpD,MAAA,QAAA,CAAS,EAAE,SAAA,EAAW,aAAA,CAAc,CAAC,GAAG,CAAA;AAAA,IAC1C;AAAA,EACF,CAAA,EAAG,CAAC,aAAA,EAAe,IAAA,EAAM,QAAQ,CAAC,CAAA;AAElC,EAAA,MAAM,aAAA,GAAgB,OAAO,gBAAgB,CAAA;AAE7C,EAAA,MAAM,CAAC,mBAAA,EAAqB,sBAAsB,CAAA,GAAI,QAAA,CAAmB,EAAE,CAAA;AAC3E,EAAA,MAAM,CAAC,iBAAA,EAAmB,oBAAoB,CAAA,GAAI,QAAA,CAAmB,EAAE,CAAA;AAGvE,EAAA,MAAM,yBAAA,GAA4B,YAAY,MAAM;AAClD,IAAA,IACE,CAAC,aAAA,CAAc,YAAA,IACf,CAAC,WAAA,IACD,SAAS,eAAA,EACT;AACA,MAAA,sBAAA,CAAuB,EAAE,CAAA;AACzB,MAAA;AAAA,IACF;AAEA,IAAA,aAAA,CACG,YAAA,CAAa;AAAA,MACZ,SAAS,EAAC;AAAA,MACV,KAAA,EAAO,WAAA;AAAA,MACP,QAAA,EAAU,YAAA;AAAA,MACV,QAAA,EAAU;AAAA,KACX,CAAA,CACA,IAAA,CAAK,CAAC,EAAE,SAAQ,KAAM;AACrB,MAAA,sBAAA,CAAuB,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAA,KAAK,CAAA,CAAE,EAAE,CAAC,CAAA;AAAA,IAC/C,CAAC,CAAA,CACA,KAAA,CAAM,MAAM;AACX,MAAA,sBAAA,CAAuB,EAAE,CAAA;AAAA,IAC3B,CAAC,CAAA;AAAA,EACL,CAAA,EAAG,CAAC,aAAA,EAAe,WAAA,EAAa,IAAI,CAAC,CAAA;AAErC,EAAA,WAAA,CAAY,yBAAA,EAA2B,GAAA,EAAK,CAAC,yBAAyB,CAAC,CAAA;AAGvE,EAAA,MAAM,uBAAA,GAA0B,YAAY,MAAM;AAChD,IAAA,IACE,CAAC,cAAc,YAAA,IACf,CAAC,eACD,IAAA,KAAS,eAAA,IACT,CAAC,SAAA,EACD;AACA,MAAA,oBAAA,CAAqB,EAAE,CAAA;AACvB,MAAA;AAAA,IACF;AAEA,IAAA,aAAA,CACG,YAAA,CAAa;AAAA,MACZ,KAAA,EAAO,WAAA;AAAA,MACP,QAAA,EAAU,UAAA;AAAA,MACV,OAAA,EAAS,EAAE,SAAA,EAAU;AAAA,MACrB,QAAA,EAAU;AAAA,KACX,CAAA,CACA,IAAA,CAAK,CAAC,EAAE,SAAQ,KAAM;AACrB,MAAA,oBAAA,CAAqB,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAA,KAAK,CAAA,CAAE,EAAE,CAAC,CAAA;AAAA,IAC7C,CAAC,CAAA,CACA,KAAA,CAAM,MAAM;AACX,MAAA,oBAAA,CAAqB,EAAE,CAAA;AAAA,IACzB,CAAC,CAAA;AAAA,EACL,GAAG,CAAC,aAAA,EAAe,WAAA,EAAa,IAAA,EAAM,SAAS,CAAC,CAAA;AAEhD,EAAA,WAAA,CAAY,uBAAA,EAAyB,GAAA,EAAK,CAAC,uBAAuB,CAAC,CAAA;AAGnE,EAAA,MAAM,2BAAA,GAA8B,YAAY,MAAM;AACpD,IAAA,IACE,CAAC,aAAA,CAAc,YAAA,IACf,CAAC,WAAA,IACD,SAAS,eAAA,IACT,CAAC,SAAA,IACD,CAAC,OAAA,EACD;AACA,MAAA,QAAA,CAAS,EAAE,cAAA,EAAgB,EAAC,EAAG,CAAA;AAC/B,MAAA;AAAA,IACF;AAEA,IAAA,aAAA,CACG,YAAA,CAAa;AAAA,MACZ,KAAA,EAAO,WAAA;AAAA,MACP,QAAA,EAAU,cAAA;AAAA,MACV,OAAA,EAAS,EAAE,SAAA,EAAW,OAAA,EAAQ;AAAA,MAC9B,QAAA,EAAU;AAAA,KACX,CAAA,CACA,IAAA,CAAK,CAAC,EAAE,SAAQ,KAAM;AACrB,MAAA,QAAA,CAAS;AAAA,QACP,cAAA,EAAgB,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAA,KAAK;AAC/B,UAAA,OAAO,EAAE,IAAA,EAAM,CAAA,CAAE,EAAA,EAAG;AAAA,QACtB,CAAC;AAAA,OACF,CAAA;AAAA,IACH,CAAC,CAAA,CACA,KAAA,CAAM,MAAM;AACX,MAAA,QAAA,CAAS,EAAE,cAAA,EAAgB,EAAC,EAAG,CAAA;AAAA,IACjC,CAAC,CAAA;AAAA,EACL,CAAA,EAAG,CAAC,aAAA,EAAe,WAAA,EAAa,MAAM,SAAA,EAAW,OAAA,EAAS,QAAQ,CAAC,CAAA;AAEnE,EAAA,WAAA,CAAY,2BAAA,EAA6B,GAAA,EAAK,CAAC,2BAA2B,CAAC,CAAA;AAE3E,EAAA,uBACE,IAAA,CAAA,QAAA,EAAA,EACG,QAAA,EAAA;AAAA,IAAA,IAAA,KAAS,eAAA,oBACR,IAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,MAAA,EAAO,QAAA;AAAA,QACP,QAAA,EAAQ,IAAA;AAAA,QACR,KAAA,EAAO,SAAA,EAAW,MAAA,GAAS,CAAA,IAAK,CAAC,SAAA;AAAA,QAEhC,QAAA,EAAA;AAAA,UAAA,aAAA,EAAe,MAAA,mBACd,GAAA;AAAA,YAAC,MAAA;AAAA,YAAA;AAAA,cACC,MAAA,EAAM,IAAA;AAAA,cACN,KAAA,EAAO,EAAE,6CAA6C,CAAA;AAAA,cACtD,QAAA,EAAU,CAAA,CAAA,KACR,QAAA,CAAS,EAAE,WAAW,MAAA,CAAO,KAAA,CAAM,OAAA,CAAQ,CAAC,IAAI,CAAA,CAAE,CAAC,CAAA,GAAI,CAAC,GAAG,CAAA;AAAA,cAE7D,QAAA,EAAU,UAAA,IAAc,aAAA,CAAc,MAAA,KAAW,CAAA;AAAA,cACjD,QAAA,EAAU,SAAA;AAAA,cACV,KAAA,EAAO;AAAA;AAAA,WACT,mBAEA,GAAA;AAAA,YAAC,YAAA;AAAA,YAAA;AAAA,cACC,KAAA,EAAO,SAAA;AAAA,cACP,QAAA,EAAU,CAAC,CAAA,EAAG,QAAA,KAAa;AACzB,gBAAA,QAAA,CAAS,EAAE,SAAA,EAAW,QAAA,IAAY,EAAA,EAAI,CAAA;AAAA,cACxC,CAAA;AAAA,cACA,OAAA,EAAS,mBAAA;AAAA,cACT,aAAa,CAAA,MAAA,qBACX,GAAA;AAAA,gBAAC,SAAA;AAAA,gBAAA;AAAA,kBACE,GAAG,MAAA;AAAA,kBACJ,KAAA,EAAO,EAAE,kDAAkD,CAAA;AAAA,kBAC3D,QAAA,EAAU,UAAA;AAAA,kBACV,QAAA,EAAQ;AAAA;AAAA,eACV;AAAA,cAEF,QAAA,EAAU,UAAA;AAAA,cACV,QAAA,EAAQ,IAAA;AAAA,cACR,UAAA,EAAU;AAAA;AAAA,WACZ;AAAA,0BAEF,GAAA,CAAC,cAAA,EAAA,EACE,QAAA,EAAA,CAAA,CAAE,mDAAmD,CAAA,EACxD;AAAA;AAAA;AAAA,KACF;AAAA,oBAEF,IAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,MAAA,EAAO,QAAA;AAAA,QACP,QAAA,EAAQ,IAAA;AAAA,QACR,KAAA,EAAO,SAAA,EAAW,MAAA,GAAS,CAAA,IAAK,CAAC,OAAA;AAAA,QAEhC,QAAA,EAAA;AAAA,UAAA,eAAA,EAAiB,MAAA,mBAChB,GAAA;AAAA,YAAC,MAAA;AAAA,YAAA;AAAA,cACC,MAAA,EAAM,IAAA;AAAA,cACN,KAAA,EAAO,EAAE,0CAA0C,CAAA;AAAA,cACnD,QAAA,EAAU,CAAA,CAAA,KACR,QAAA,CAAS,EAAE,SAAS,MAAA,CAAO,KAAA,CAAM,OAAA,CAAQ,CAAC,IAAI,CAAA,CAAE,CAAC,CAAA,GAAI,CAAC,GAAG,CAAA;AAAA,cAE3D,QAAA,EAAU,UAAA,IAAc,eAAA,CAAgB,MAAA,KAAW,CAAA;AAAA,cACnD,QAAA,EAAU,OAAA;AAAA,cACV,KAAA,EAAO;AAAA;AAAA,WACT,mBAEA,GAAA;AAAA,YAAC,YAAA;AAAA,YAAA;AAAA,cACC,KAAA,EAAO,OAAA;AAAA,cACP,QAAA,EAAU,CAAC,CAAA,EAAG,QAAA,KAAa;AACzB,gBAAA,QAAA,CAAS,EAAE,OAAA,EAAS,QAAA,IAAY,EAAA,EAAI,CAAA;AAAA,cACtC,CAAA;AAAA,cACA,OAAA,EAAS,iBAAA;AAAA,cACT,QAAA,EAAU,UAAA;AAAA,cACV,aAAa,CAAA,MAAA,qBACX,GAAA;AAAA,gBAAC,SAAA;AAAA,gBAAA;AAAA,kBACE,GAAG,MAAA;AAAA,kBACJ,KAAA,EAAO,EAAE,+CAA+C,CAAA;AAAA,kBACxD,QAAA,EAAU,UAAA;AAAA,kBACV,QAAA,EAAQ;AAAA;AAAA,eACV;AAAA,cAEF,QAAA,EAAQ,IAAA;AAAA,cACR,UAAA,EAAU;AAAA;AAAA,WACZ;AAAA,0BAEF,GAAA,CAAC,cAAA,EAAA,EACE,QAAA,EAAA,CAAA,CAAE,gDAAgD,CAAA,EACrD;AAAA;AAAA;AAAA;AACF,GAAA,EACF,CAAA;AAEJ;;;;"}