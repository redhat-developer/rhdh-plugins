{"version":3,"file":"schema.esm.js","sources":["../../../../src/components/fields/OwnerPicker/schema.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { makeFieldSchema } from '@backstage/plugin-scaffolder-react';\nimport { createEntityQueryFilterExpressionSchema } from '../EntityPicker/schema';\n\n/**\n * @public\n */\nexport const OwnerPickerFieldSchema = makeFieldSchema({\n  output: z => z.string(),\n  uiOptions: z =>\n    z.object({\n      /**\n       * @deprecated Use `catalogFilter` instead.\n       */\n      allowedKinds: z\n        .array(z.string())\n        .default(['Group', 'User'])\n        .optional()\n        .describe(\n          'DEPRECATED: Use `catalogFilter` instead. List of kinds of entities to derive options from. Defaults to Group and User',\n        ),\n      allowArbitraryValues: z\n        .boolean()\n        .optional()\n        .describe('Whether to allow arbitrary user input. Defaults to true'),\n      defaultNamespace: z\n        .union([z.string(), z.literal(false)])\n        .optional()\n        .describe(\n          'The default namespace. Options with this namespace will not be prefixed.',\n        ),\n      catalogFilter: (t => t.or(t.array()))(\n        createEntityQueryFilterExpressionSchema(z),\n      )\n        .optional()\n        .describe('List of key-value filter expression for entities'),\n    }),\n});\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnerPicker` field extension.\n *\n * @public\n */\nexport type OwnerPickerUiOptions = NonNullable<\n  (typeof OwnerPickerFieldSchema.TProps.uiSchema)['ui:options']\n>;\n\nexport type OwnerPickerProps = typeof OwnerPickerFieldSchema.TProps;\n\nexport const OwnerPickerSchema = OwnerPickerFieldSchema.schema;\n"],"names":[],"mappings":";;;AAqBO,MAAM,yBAAyB,eAAA,CAAgB;AAAA,EACpD,MAAA,EAAQ,CAAA,CAAA,KAAK,CAAA,CAAE,MAAA,EAAO;AAAA,EACtB,SAAA,EAAW,CAAA,CAAA,KACT,CAAA,CAAE,MAAA,CAAO;AAAA;AAAA;AAAA;AAAA,IAIP,YAAA,EAAc,CAAA,CACX,KAAA,CAAM,CAAA,CAAE,QAAQ,CAAA,CAChB,OAAA,CAAQ,CAAC,OAAA,EAAS,MAAM,CAAC,CAAA,CACzB,UAAS,CACT,QAAA;AAAA,MACC;AAAA,KACF;AAAA,IACF,sBAAsB,CAAA,CACnB,OAAA,GACA,QAAA,EAAS,CACT,SAAS,yDAAyD,CAAA;AAAA,IACrE,gBAAA,EAAkB,CAAA,CACf,KAAA,CAAM,CAAC,EAAE,MAAA,EAAO,EAAG,CAAA,CAAE,OAAA,CAAQ,KAAK,CAAC,CAAC,CAAA,CACpC,UAAS,CACT,QAAA;AAAA,MACC;AAAA,KACF;AAAA,IACF,gBAAgB,CAAA,CAAA,KAAK,CAAA,CAAE,EAAA,CAAG,CAAA,CAAE,OAAO,CAAA;AAAA,MACjC,wCAAwC,CAAC;AAAA,KAC3C,CACG,QAAA,EAAS,CACT,QAAA,CAAS,kDAAkD;AAAA,GAC/D;AACL,CAAC;AAcM,MAAM,oBAAoB,sBAAA,CAAuB;;;;"}