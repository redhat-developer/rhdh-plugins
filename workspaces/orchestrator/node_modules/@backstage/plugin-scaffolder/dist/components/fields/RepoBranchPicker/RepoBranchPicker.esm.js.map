{"version":3,"file":"RepoBranchPicker.esm.js","sources":["../../../../src/components/fields/RepoBranchPicker/RepoBranchPicker.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  scmIntegrationsApiRef,\n  scmAuthApiRef,\n} from '@backstage/integration-react';\nimport { useEffect, useState, useCallback } from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { useTemplateSecrets } from '@backstage/plugin-scaffolder-react';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { RepoBranchPickerProps } from './schema';\nimport { RepoBranchPickerState } from './types';\nimport { BitbucketRepoBranchPicker } from './BitbucketRepoBranchPicker';\nimport { DefaultRepoBranchPicker } from './DefaultRepoBranchPicker';\nimport { GitHubRepoBranchPicker } from './GitHubRepoBranchPicker';\nimport { MarkdownContent } from '@backstage/core-components';\n\n/**\n * The underlying component that is rendered in the form for the `RepoBranchPicker`\n * field extension.\n *\n * @public\n */\nexport const RepoBranchPicker = (props: RepoBranchPickerProps) => {\n  const {\n    uiSchema,\n    onChange,\n    rawErrors,\n    formData,\n    schema,\n    formContext,\n    required,\n  } = props;\n  const {\n    formData: { repoUrl },\n  } = formContext;\n\n  const [state, setState] = useState<RepoBranchPickerState>({\n    branch: formData || '',\n  });\n  const { host, branch } = state;\n\n  const integrationApi = useApi(scmIntegrationsApiRef);\n  const scmAuthApi = useApi(scmAuthApiRef);\n\n  const { secrets, setSecrets } = useTemplateSecrets();\n\n  useDebounce(\n    async () => {\n      const { requestUserCredentials } = uiSchema?.['ui:options'] ?? {};\n\n      if (!requestUserCredentials || !host) {\n        return;\n      }\n\n      // don't show login prompt if secret value is already in state\n      if (secrets[requestUserCredentials.secretsKey]) {\n        return;\n      }\n\n      // user has requested that we use the users credentials\n      // so lets grab them using the scmAuthApi and pass through\n      // any additional scopes from the ui:options\n      const { token } = await scmAuthApi.getCredentials({\n        url: `https://${host}`,\n        additionalScope: {\n          repoWrite: true,\n          customScopes: requestUserCredentials.additionalScopes,\n        },\n      });\n\n      // set the secret using the key provided in the ui:options for use\n      // in the templating the manifest with ${{ secrets[secretsKey] }}\n      setSecrets({ [requestUserCredentials.secretsKey]: token });\n    },\n    500,\n    [host, uiSchema],\n  );\n\n  useEffect(() => {\n    if (repoUrl) {\n      const url = new URL(`https://${repoUrl}`);\n\n      setState(prevState => ({\n        ...prevState,\n        host: url.host,\n        workspace: url.searchParams.get('workspace') || '',\n        repository: url.searchParams.get('repo') || '',\n        owner: url.searchParams.get('owner') || '',\n      }));\n    }\n  }, [repoUrl]);\n\n  useEffect(() => {\n    onChange(branch);\n  }, [branch, onChange]);\n\n  const updateLocalState = useCallback(\n    (newState: RepoBranchPickerState) => {\n      setState(prevState => ({ ...prevState, ...newState }));\n    },\n    [setState],\n  );\n\n  const hostType = (host && integrationApi.byHost(host)?.type) ?? null;\n\n  const renderRepoBranchPicker = () => {\n    switch (hostType) {\n      case 'bitbucket':\n        return (\n          <BitbucketRepoBranchPicker\n            onChange={updateLocalState}\n            state={state}\n            rawErrors={rawErrors}\n            accessToken={\n              uiSchema?.['ui:options']?.requestUserCredentials?.secretsKey &&\n              secrets[uiSchema['ui:options'].requestUserCredentials.secretsKey]\n            }\n            isDisabled={uiSchema?.['ui:disabled'] ?? false}\n            required={required}\n          />\n        );\n      case 'github':\n        return (\n          <GitHubRepoBranchPicker\n            onChange={updateLocalState}\n            state={state}\n            rawErrors={rawErrors}\n            accessToken={\n              uiSchema?.['ui:options']?.requestUserCredentials?.secretsKey &&\n              secrets[uiSchema['ui:options'].requestUserCredentials.secretsKey]\n            }\n            isDisabled={uiSchema?.['ui:disabled'] ?? false}\n            required={required}\n          />\n        );\n      default:\n        return (\n          <DefaultRepoBranchPicker\n            onChange={updateLocalState}\n            state={state}\n            rawErrors={rawErrors}\n            isDisabled={uiSchema?.['ui:disabled'] ?? false}\n            required={required}\n          />\n        );\n    }\n  };\n\n  const description = uiSchema['ui:description'] ?? schema.description;\n\n  return (\n    <>\n      {schema.title && (\n        <Box my={1}>\n          <Typography variant=\"h5\">{schema.title}</Typography>\n          <Divider />\n        </Box>\n      )}\n      {description && (\n        <Typography variant=\"body1\">\n          <MarkdownContent content={description} />\n        </Typography>\n      )}\n      {renderRepoBranchPicker()}\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}