{"version":3,"file":"RepoUrlPickerRepoName.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/RepoUrlPickerRepoName.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useEffect } from 'react';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { AvailableRepositories } from './types';\n\nexport const RepoUrlPickerRepoName = (props: {\n  repoName?: string;\n  allowedRepos?: string[];\n  onChange: (chosenRepo: AvailableRepositories) => void;\n  rawErrors: string[];\n  availableRepos?: AvailableRepositories[];\n  isDisabled?: boolean;\n}) => {\n  const {\n    repoName,\n    allowedRepos,\n    onChange,\n    rawErrors,\n    availableRepos,\n    isDisabled,\n  } = props;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  useEffect(() => {\n    // If there is no repoName chosen currently\n    if (!repoName) {\n      // Set the first of the allowedRepos option if that available\n      if (allowedRepos?.length) {\n        onChange({ name: allowedRepos[0] });\n      }\n    }\n  }, [allowedRepos, repoName, onChange]);\n\n  const repoItems: SelectItem[] = allowedRepos\n    ? allowedRepos.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        {allowedRepos?.length ? (\n          <Select\n            native\n            label={t('fields.repoUrlPicker.repository.title')}\n            onChange={selected =>\n              onChange({\n                name: String(Array.isArray(selected) ? selected[0] : selected),\n              })\n            }\n            disabled={isDisabled || allowedRepos.length === 1}\n            selected={repoName}\n            items={repoItems}\n          />\n        ) : (\n          <Autocomplete\n            value={repoName}\n            onInputChange={(_, newValue) => {\n              const selectedRepo = availableRepos?.find(\n                r => r.name === newValue,\n              );\n              onChange(selectedRepo || { name: newValue || '' });\n            }}\n            options={(availableRepos || []).map(r => r.name)}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={t('fields.repoUrlPicker.repository.inputTitle')}\n                required\n              />\n            )}\n            freeSolo\n            autoSelect\n            disabled={isDisabled}\n          />\n        )}\n        <FormHelperText>\n          {t('fields.repoUrlPicker.repository.description')}\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AAyBO,MAAM,qBAAA,GAAwB,CAAC,KAAA,KAOhC;AACJ,EAAA,MAAM;AAAA,IACJ,QAAA;AAAA,IACA,YAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA;AAAA,GACF,GAAI,KAAA;AACJ,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,wBAAwB,CAAA;AAExD,EAAA,SAAA,CAAU,MAAM;AAEd,IAAA,IAAI,CAAC,QAAA,EAAU;AAEb,MAAA,IAAI,cAAc,MAAA,EAAQ;AACxB,QAAA,QAAA,CAAS,EAAE,IAAA,EAAM,YAAA,CAAa,CAAC,GAAG,CAAA;AAAA,MACpC;AAAA,IACF;AAAA,EACF,CAAA,EAAG,CAAC,YAAA,EAAc,QAAA,EAAU,QAAQ,CAAC,CAAA;AAErC,EAAA,MAAM,YAA0B,YAAA,GAC5B,YAAA,CAAa,IAAI,CAAA,CAAA,MAAM,EAAE,OAAO,CAAA,EAAG,KAAA,EAAO,CAAA,EAAE,CAAE,IAC9C,CAAC,EAAE,OAAO,YAAA,EAAc,KAAA,EAAO,WAAW,CAAA;AAE9C,EAAA,uBACE,GAAA,CAAA,QAAA,EAAA,EACE,QAAA,kBAAA,IAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,MAAA,EAAO,QAAA;AAAA,MACP,QAAA,EAAQ,IAAA;AAAA,MACR,KAAA,EAAO,SAAA,EAAW,MAAA,GAAS,CAAA,IAAK,CAAC,QAAA;AAAA,MAEhC,QAAA,EAAA;AAAA,QAAA,YAAA,EAAc,MAAA,mBACb,GAAA;AAAA,UAAC,MAAA;AAAA,UAAA;AAAA,YACC,MAAA,EAAM,IAAA;AAAA,YACN,KAAA,EAAO,EAAE,uCAAuC,CAAA;AAAA,YAChD,QAAA,EAAU,cACR,QAAA,CAAS;AAAA,cACP,IAAA,EAAM,OAAO,KAAA,CAAM,OAAA,CAAQ,QAAQ,CAAA,GAAI,QAAA,CAAS,CAAC,CAAA,GAAI,QAAQ;AAAA,aAC9D,CAAA;AAAA,YAEH,QAAA,EAAU,UAAA,IAAc,YAAA,CAAa,MAAA,KAAW,CAAA;AAAA,YAChD,QAAA,EAAU,QAAA;AAAA,YACV,KAAA,EAAO;AAAA;AAAA,SACT,mBAEA,GAAA;AAAA,UAAC,YAAA;AAAA,UAAA;AAAA,YACC,KAAA,EAAO,QAAA;AAAA,YACP,aAAA,EAAe,CAAC,CAAA,EAAG,QAAA,KAAa;AAC9B,cAAA,MAAM,eAAe,cAAA,EAAgB,IAAA;AAAA,gBACnC,CAAA,CAAA,KAAK,EAAE,IAAA,KAAS;AAAA,eAClB;AACA,cAAA,QAAA,CAAS,YAAA,IAAgB,EAAE,IAAA,EAAM,QAAA,IAAY,IAAI,CAAA;AAAA,YACnD,CAAA;AAAA,YACA,UAAU,cAAA,IAAkB,IAAI,GAAA,CAAI,CAAA,CAAA,KAAK,EAAE,IAAI,CAAA;AAAA,YAC/C,aAAa,CAAA,MAAA,qBACX,GAAA;AAAA,cAAC,SAAA;AAAA,cAAA;AAAA,gBACE,GAAG,MAAA;AAAA,gBACJ,KAAA,EAAO,EAAE,4CAA4C,CAAA;AAAA,gBACrD,QAAA,EAAQ;AAAA;AAAA,aACV;AAAA,YAEF,QAAA,EAAQ,IAAA;AAAA,YACR,UAAA,EAAU,IAAA;AAAA,YACV,QAAA,EAAU;AAAA;AAAA,SACZ;AAAA,wBAEF,GAAA,CAAC,cAAA,EAAA,EACE,QAAA,EAAA,CAAA,CAAE,6CAA6C,CAAA,EAClD;AAAA;AAAA;AAAA,GACF,EACF,CAAA;AAEJ;;;;"}