{"version":3,"file":"types.cjs.js","sources":["../../src/database/types.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Knex } from 'knex';\nimport { getDockerImageForName } from '../util/getDockerImageForName';\n\nexport interface Engine {\n  createDatabaseInstance(): Promise<Knex>;\n  shutdown(): Promise<void>;\n}\n\n/**\n * The possible databases to test against.\n *\n * @public\n */\nexport type TestDatabaseId =\n  | 'POSTGRES_17'\n  | 'POSTGRES_16'\n  | 'POSTGRES_15'\n  | 'POSTGRES_14'\n  | 'POSTGRES_13'\n  | 'POSTGRES_12'\n  | 'POSTGRES_11'\n  | 'POSTGRES_9'\n  | 'MYSQL_8'\n  | 'SQLITE_3';\n\nexport type TestDatabaseProperties = {\n  name: string;\n  driver: string;\n  dockerImageName?: string;\n  connectionStringEnvironmentVariableName?: string;\n};\n\nexport const allDatabases: Record<TestDatabaseId, TestDatabaseProperties> =\n  Object.freeze({\n    POSTGRES_17: {\n      name: 'Postgres 17.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:17'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES17_CONNECTION_STRING',\n    },\n    POSTGRES_16: {\n      name: 'Postgres 16.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:16'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES16_CONNECTION_STRING',\n    },\n    POSTGRES_15: {\n      name: 'Postgres 15.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:15'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES15_CONNECTION_STRING',\n    },\n    POSTGRES_14: {\n      name: 'Postgres 14.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:14'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES14_CONNECTION_STRING',\n    },\n    POSTGRES_13: {\n      name: 'Postgres 13.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:13'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING',\n    },\n    POSTGRES_12: {\n      name: 'Postgres 12.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:12'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES12_CONNECTION_STRING',\n    },\n    POSTGRES_11: {\n      name: 'Postgres 11.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:11'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES11_CONNECTION_STRING',\n    },\n    POSTGRES_9: {\n      name: 'Postgres 9.x',\n      driver: 'pg',\n      dockerImageName: getDockerImageForName('postgres:9'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING',\n    },\n    MYSQL_8: {\n      name: 'MySQL 8.x',\n      driver: 'mysql2',\n      dockerImageName: getDockerImageForName('mysql:8'),\n      connectionStringEnvironmentVariableName:\n        'BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING',\n    },\n    SQLITE_3: {\n      name: 'SQLite 3.x',\n      driver: 'better-sqlite3',\n    },\n  });\n\nexport const LARGER_POOL_CONFIG = {\n  pool: {\n    min: 0,\n    max: 50,\n  },\n};\n"],"names":["getDockerImageForName"],"mappings":";;;;AAgDO,MAAM,YAAA,GACX,OAAO,MAAA,CAAO;AAAA,EACZ,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,WAAA,EAAa;AAAA,IACX,IAAA,EAAM,eAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,aAAa,CAAA;AAAA,IACpD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,UAAA,EAAY;AAAA,IACV,IAAA,EAAM,cAAA;AAAA,IACN,MAAA,EAAQ,IAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,YAAY,CAAA;AAAA,IACnD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,OAAA,EAAS;AAAA,IACP,IAAA,EAAM,WAAA;AAAA,IACN,MAAA,EAAQ,QAAA;AAAA,IACR,eAAA,EAAiBA,4CAAsB,SAAS,CAAA;AAAA,IAChD,uCAAA,EACE;AAAA,GACJ;AAAA,EACA,QAAA,EAAU;AAAA,IACR,IAAA,EAAM,YAAA;AAAA,IACN,MAAA,EAAQ;AAAA;AAEZ,CAAC;AAEI,MAAM,kBAAA,GAAqB;AAAA,EAChC,IAAA,EAAM;AAAA,IACJ,GAAA,EAAK,CAAA;AAAA,IACL,GAAA,EAAK;AAAA;AAET;;;;;"}