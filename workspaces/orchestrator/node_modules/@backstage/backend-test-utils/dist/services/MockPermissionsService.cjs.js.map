{"version":3,"file":"MockPermissionsService.cjs.js","sources":["../../src/services/MockPermissionsService.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsService } from '@backstage/backend-plugin-api';\nimport {\n  AuthorizePermissionRequest,\n  AuthorizePermissionResponse,\n  AuthorizeResult,\n  QueryPermissionRequest,\n  QueryPermissionResponse,\n} from '@backstage/plugin-permission-common';\n\nexport class MockPermissionsService implements PermissionsService {\n  readonly #result: AuthorizeResult.ALLOW | AuthorizeResult.DENY;\n\n  constructor(options?: {\n    result: AuthorizeResult.ALLOW | AuthorizeResult.DENY;\n  }) {\n    this.#result = options?.result ?? AuthorizeResult.ALLOW;\n  }\n\n  async authorize(\n    requests: AuthorizePermissionRequest[],\n  ): Promise<AuthorizePermissionResponse[]> {\n    return requests.map(request => ({\n      ...request,\n      result: this.#result,\n    }));\n  }\n\n  async authorizeConditional(\n    requests: QueryPermissionRequest[],\n  ): Promise<QueryPermissionResponse[]> {\n    return requests.map(request => ({\n      ...request,\n      result: this.#result,\n    }));\n  }\n}\n"],"names":["AuthorizeResult"],"mappings":";;;;AAyBO,MAAM,sBAAA,CAAqD;AAAA,EACvD,OAAA;AAAA,EAET,YAAY,OAAA,EAET;AACD,IAAA,IAAA,CAAK,OAAA,GAAU,OAAA,EAAS,MAAA,IAAUA,sCAAA,CAAgB,KAAA;AAAA,EACpD;AAAA,EAEA,MAAM,UACJ,QAAA,EACwC;AACxC,IAAA,OAAO,QAAA,CAAS,IAAI,CAAA,OAAA,MAAY;AAAA,MAC9B,GAAG,OAAA;AAAA,MACH,QAAQ,IAAA,CAAK;AAAA,KACf,CAAE,CAAA;AAAA,EACJ;AAAA,EAEA,MAAM,qBACJ,QAAA,EACoC;AACpC,IAAA,OAAO,QAAA,CAAS,IAAI,CAAA,OAAA,MAAY;AAAA,MAC9B,GAAG,OAAA;AAAA,MACH,QAAQ,IAAA,CAAK;AAAA,KACf,CAAE,CAAA;AAAA,EACJ;AACF;;;;"}