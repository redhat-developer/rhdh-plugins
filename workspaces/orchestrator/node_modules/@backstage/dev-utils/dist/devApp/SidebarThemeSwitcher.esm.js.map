{"version":3,"file":"SidebarThemeSwitcher.esm.js","sources":["../../src/devApp/SidebarThemeSwitcher.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SidebarItem } from '@backstage/core-components';\nimport { appThemeApiRef, useApi } from '@backstage/core-plugin-api';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AutoIcon from '@material-ui/icons/BrightnessAuto';\nimport { MouseEvent, cloneElement, useCallback, useState } from 'react';\nimport useObservable from 'react-use/esm/useObservable';\n\ntype ThemeIconProps = {\n  active?: boolean;\n  icon: JSX.Element | undefined;\n};\n\nconst ThemeIcon = ({ active, icon }: ThemeIconProps) =>\n  icon ? (\n    cloneElement(icon, {\n      color: active ? 'primary' : undefined,\n    })\n  ) : (\n    <AutoIcon color={active ? 'primary' : undefined} />\n  );\n\nexport const SidebarThemeSwitcher = () => {\n  const appThemeApi = useApi(appThemeApiRef);\n  const themeId = useObservable(\n    appThemeApi.activeThemeId$(),\n    appThemeApi.getActiveThemeId(),\n  );\n  const themeIds = appThemeApi.getInstalledThemes();\n  const activeTheme = themeIds.find(t => t.id === themeId);\n\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>();\n  const open = Boolean(anchorEl);\n\n  const handleOpen = (event: MouseEvent) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelectTheme = (newThemeId: string | undefined) => {\n    if (themeIds.some(t => t.id === newThemeId)) {\n      appThemeApi.setActiveThemeId(newThemeId);\n    } else {\n      appThemeApi.setActiveThemeId(undefined);\n    }\n\n    setAnchorEl(undefined);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(undefined);\n  };\n\n  const ActiveIcon = useCallback(\n    () => <ThemeIcon icon={activeTheme?.icon} />,\n    [activeTheme],\n  );\n\n  return (\n    <>\n      <SidebarItem\n        icon={ActiveIcon}\n        text=\"Switch Theme\"\n        id=\"theme-button\"\n        aria-haspopup=\"listbox\"\n        aria-controls=\"theme-menu\"\n        aria-label=\"switch theme\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpen}\n      />\n\n      <Menu\n        id=\"theme-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'theme-button',\n          role: 'listbox',\n        }}\n      >\n        <MenuItem disabled>Choose a theme</MenuItem>\n        <MenuItem\n          selected={themeId === undefined}\n          onClick={() => handleSelectTheme(undefined)}\n        >\n          <ListItemIcon>\n            <ThemeIcon icon={undefined} active={themeId === undefined} />\n          </ListItemIcon>\n          <ListItemText>Auto</ListItemText>\n        </MenuItem>\n\n        {themeIds.map(theme => {\n          const active = theme.id === themeId;\n          return (\n            <MenuItem\n              key={theme.id}\n              selected={active}\n              aria-selected={active}\n              onClick={() => handleSelectTheme(theme.id)}\n            >\n              <ListItemIcon>\n                <ThemeIcon icon={theme.icon} active={active} />\n              </ListItemIcon>\n              <ListItemText>{theme.title}</ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}