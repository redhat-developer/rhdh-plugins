{"version":3,"file":"SidebarLanguageSwitcher.esm.js","sources":["../../../src/components/SidebarLanguageSwitcher/SidebarLanguageSwitcher.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MouseEvent, useState } from 'react';\nimport { appLanguageApiRef } from '@backstage/core-plugin-api/alpha';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useObservable from 'react-use/esm/useObservable';\nimport { SidebarItem } from '@backstage/core-components';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n/** @public */\nexport const SidebarLanguageSwitcher = () => {\n  const languageApi = useApi(appLanguageApiRef);\n\n  const [languageObservable] = useState(() => languageApi.language$());\n  const { language: currentLanguage } = useObservable(\n    languageObservable,\n    languageApi.getLanguage(),\n  );\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>();\n\n  const { languages } = languageApi.getAvailableLanguages();\n\n  if (languages.length <= 1) {\n    return null;\n  }\n\n  const open = Boolean(anchorEl);\n\n  const handleClose = () => {\n    setAnchorEl(undefined);\n  };\n\n  const handleOpen = (event: MouseEvent) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSetLanguage = (newLanguage: string | undefined) => {\n    languageApi.setLanguage(newLanguage);\n    setAnchorEl(undefined);\n  };\n\n  const getLanguageDisplayName = (language: string) => {\n    try {\n      const names = new Intl.DisplayNames([language], {\n        type: 'language',\n      });\n      return names.of(language) || language;\n    } catch (err) {\n      return language;\n    }\n  };\n\n  return (\n    <>\n      <SidebarItem\n        icon={TranslateIcon}\n        text=\"Language\"\n        id=\"language-button\"\n        aria-haspopup=\"listbox\"\n        aria-controls=\"language-menu\"\n        aria-label=\"switch language\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpen}\n      />\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'language-button',\n          role: 'listbox',\n        }}\n      >\n        <MenuItem disabled>Choose language</MenuItem>\n        {languages.map(lang => {\n          const active = currentLanguage === lang;\n          return (\n            <MenuItem\n              key={lang}\n              selected={active}\n              aria-selected={active}\n              onClick={() => handleSetLanguage(lang)}\n            >\n              <ListItemText>{getLanguageDisplayName(lang)}</ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;AA2BO,MAAM,0BAA0B,MAAM;AAC3C,EAAA,MAAM,WAAA,GAAc,OAAO,iBAAiB,CAAA;AAE5C,EAAA,MAAM,CAAC,kBAAkB,CAAA,GAAI,SAAS,MAAM,WAAA,CAAY,WAAW,CAAA;AACnE,EAAA,MAAM,EAAE,QAAA,EAAU,eAAA,EAAgB,GAAI,aAAA;AAAA,IACpC,kBAAA;AAAA,IACA,YAAY,WAAA;AAAY,GAC1B;AACA,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,QAAA,EAA8B;AAE9D,EAAA,MAAM,EAAE,SAAA,EAAU,GAAI,WAAA,CAAY,qBAAA,EAAsB;AAExD,EAAA,IAAI,SAAA,CAAU,UAAU,CAAA,EAAG;AACzB,IAAA,OAAO,IAAA;AAAA,EACT;AAEA,EAAA,MAAM,IAAA,GAAO,QAAQ,QAAQ,CAAA;AAE7B,EAAA,MAAM,cAAc,MAAM;AACxB,IAAA,WAAA,CAAY,MAAS,CAAA;AAAA,EACvB,CAAA;AAEA,EAAA,MAAM,UAAA,GAAa,CAAC,KAAA,KAAsB;AACxC,IAAA,WAAA,CAAY,MAAM,aAAa,CAAA;AAAA,EACjC,CAAA;AAEA,EAAA,MAAM,iBAAA,GAAoB,CAAC,WAAA,KAAoC;AAC7D,IAAA,WAAA,CAAY,YAAY,WAAW,CAAA;AACnC,IAAA,WAAA,CAAY,MAAS,CAAA;AAAA,EACvB,CAAA;AAEA,EAAA,MAAM,sBAAA,GAAyB,CAAC,QAAA,KAAqB;AACnD,IAAA,IAAI;AACF,MAAA,MAAM,QAAQ,IAAI,IAAA,CAAK,YAAA,CAAa,CAAC,QAAQ,CAAA,EAAG;AAAA,QAC9C,IAAA,EAAM;AAAA,OACP,CAAA;AACD,MAAA,OAAO,KAAA,CAAM,EAAA,CAAG,QAAQ,CAAA,IAAK,QAAA;AAAA,IAC/B,SAAS,GAAA,EAAK;AACZ,MAAA,OAAO,QAAA;AAAA,IACT;AAAA,EACF,CAAA;AAEA,EAAA,uBACE,IAAA,CAAA,QAAA,EAAA,EACE,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,IAAA,EAAM,aAAA;AAAA,QACN,IAAA,EAAK,UAAA;AAAA,QACL,EAAA,EAAG,iBAAA;AAAA,QACH,eAAA,EAAc,SAAA;AAAA,QACd,eAAA,EAAc,eAAA;AAAA,QACd,YAAA,EAAW,iBAAA;AAAA,QACX,eAAA,EAAe,OAAO,MAAA,GAAS,MAAA;AAAA,QAC/B,OAAA,EAAS;AAAA;AAAA,KACX;AAAA,oBACA,IAAA;AAAA,MAAC,IAAA;AAAA,MAAA;AAAA,QACC,EAAA,EAAG,eAAA;AAAA,QACH,QAAA;AAAA,QACA,IAAA;AAAA,QACA,OAAA,EAAS,WAAA;AAAA,QACT,aAAA,EAAe;AAAA,UACb,iBAAA,EAAmB,iBAAA;AAAA,UACnB,IAAA,EAAM;AAAA,SACR;AAAA,QAEA,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,QAAA,EAAA,EAAS,QAAA,EAAQ,IAAA,EAAC,QAAA,EAAA,iBAAA,EAAe,CAAA;AAAA,UACjC,SAAA,CAAU,IAAI,CAAA,IAAA,KAAQ;AACrB,YAAA,MAAM,SAAS,eAAA,KAAoB,IAAA;AACnC,YAAA,uBACE,GAAA;AAAA,cAAC,QAAA;AAAA,cAAA;AAAA,gBAEC,QAAA,EAAU,MAAA;AAAA,gBACV,eAAA,EAAe,MAAA;AAAA,gBACf,OAAA,EAAS,MAAM,iBAAA,CAAkB,IAAI,CAAA;AAAA,gBAErC,QAAA,kBAAA,GAAA,CAAC,YAAA,EAAA,EAAc,QAAA,EAAA,sBAAA,CAAuB,IAAI,CAAA,EAAE;AAAA,eAAA;AAAA,cALvC;AAAA,aAMP;AAAA,UAEJ,CAAC;AAAA;AAAA;AAAA;AACH,GAAA,EACF,CAAA;AAEJ;;;;"}