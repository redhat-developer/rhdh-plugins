import { jsxs, jsx } from 'react/jsx-runtime';
import Button from '@material-ui/core/Button';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import DialogContentText from '@material-ui/core/DialogContentText';
import DialogTitle from '@material-ui/core/DialogTitle';
import { useEffect } from 'react';
import { coreComponentsTranslationRef } from '../../translation.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';

const StillTherePrompt = (props) => {
  const {
    idleTimer,
    setOpen,
    open,
    promptTimeoutMillis,
    remainingTime,
    setRemainingTime
  } = props;
  const { t } = useTranslationRef(coreComponentsTranslationRef);
  useEffect(() => {
    const interval = setInterval(() => {
      setRemainingTime(Math.ceil(idleTimer.getRemainingTime()));
    }, 500);
    return () => {
      clearInterval(interval);
    };
  }, [idleTimer, setRemainingTime]);
  const handleStillHere = () => {
    setOpen(false);
    idleTimer.activate();
  };
  const timeTillPrompt = Math.max(
    remainingTime - promptTimeoutMillis / 1e3,
    0
  );
  const seconds = timeTillPrompt > 1 ? "seconds" : "second";
  return /* @__PURE__ */ jsxs(Dialog, { open, "data-testid": "inactivity-prompt-dialog", children: [
    /* @__PURE__ */ jsx(DialogTitle, { children: t("autoLogout.stillTherePrompt.title") }),
    /* @__PURE__ */ jsx(DialogContent, { children: /* @__PURE__ */ jsxs(DialogContentText, { children: [
      "You are about to be disconnected in",
      " ",
      /* @__PURE__ */ jsxs("b", { children: [
        Math.ceil(remainingTime / 1e3),
        " ",
        seconds
      ] }),
      ". Are you still there?"
    ] }) }),
    /* @__PURE__ */ jsx(DialogActions, { children: /* @__PURE__ */ jsx(
      Button,
      {
        onClick: handleStillHere,
        color: "secondary",
        variant: "contained",
        size: "small",
        children: t("autoLogout.stillTherePrompt.buttonText")
      }
    ) })
  ] });
};

export { StillTherePrompt };
//# sourceMappingURL=StillTherePrompt.esm.js.map
