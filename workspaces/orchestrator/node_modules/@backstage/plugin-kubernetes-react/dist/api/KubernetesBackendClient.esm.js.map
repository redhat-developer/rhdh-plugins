{"version":3,"file":"KubernetesBackendClient.esm.js","sources":["../../src/api/KubernetesBackendClient.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { KubernetesApi } from './types';\nimport {\n  KubernetesRequestBody,\n  ObjectsByEntityResponse,\n  WorkloadsByEntityRequest,\n  CustomObjectsByEntityRequest,\n} from '@backstage/plugin-kubernetes-common';\nimport { DiscoveryApi, FetchApi } from '@backstage/core-plugin-api';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { KubernetesAuthProvidersApi } from '../kubernetes-auth-provider';\nimport { NotFoundError } from '@backstage/errors';\n\n/** @public */\nexport class KubernetesBackendClient implements KubernetesApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly fetchApi: FetchApi;\n  private readonly kubernetesAuthProvidersApi: KubernetesAuthProvidersApi;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    fetchApi: FetchApi;\n    kubernetesAuthProvidersApi: KubernetesAuthProvidersApi;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.fetchApi = options.fetchApi;\n    this.kubernetesAuthProvidersApi = options.kubernetesAuthProvidersApi;\n  }\n\n  private async handleResponse(response: Response): Promise<any> {\n    if (!response.ok) {\n      const payload = await response.text();\n      let message;\n      switch (response.status) {\n        case 404:\n          message =\n            'Could not find the Kubernetes Backend (HTTP 404). Make sure the plugin has been fully installed.';\n          break;\n        default:\n          message = `Request failed with ${response.status} ${response.statusText}, ${payload}`;\n      }\n      throw new Error(message);\n    }\n\n    return await response.json();\n  }\n\n  private async postRequired(path: string, requestBody: any): Promise<any> {\n    const url = `${await this.discoveryApi.getBaseUrl('kubernetes')}${path}`;\n    const response = await this.fetchApi.fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestBody),\n    });\n\n    return this.handleResponse(response);\n  }\n\n  public async getCluster(clusterName: string): Promise<{\n    name: string;\n    authProvider: string;\n    oidcTokenProvider?: string;\n  }> {\n    const cluster = await this.getClusters().then(clusters =>\n      clusters.find(c => c.name === clusterName),\n    );\n    if (!cluster) {\n      throw new NotFoundError(`Cluster ${clusterName} not found`);\n    }\n\n    return cluster;\n  }\n\n  private async getCredentials(\n    authProvider: string,\n    oidcTokenProvider?: string,\n  ): Promise<{ token?: string }> {\n    return await this.kubernetesAuthProvidersApi.getCredentials(\n      authProvider === 'oidc'\n        ? `${authProvider}.${oidcTokenProvider}`\n        : authProvider,\n    );\n  }\n\n  async getObjectsByEntity(\n    requestBody: KubernetesRequestBody,\n  ): Promise<ObjectsByEntityResponse> {\n    return await this.postRequired(\n      `/services/${requestBody.entity.metadata.name}`,\n      requestBody,\n    );\n  }\n\n  async getWorkloadsByEntity(\n    request: WorkloadsByEntityRequest,\n  ): Promise<ObjectsByEntityResponse> {\n    return await this.postRequired('/resources/workloads/query', {\n      auth: request.auth,\n      entityRef: stringifyEntityRef(request.entity),\n    });\n  }\n\n  async getCustomObjectsByEntity(\n    request: CustomObjectsByEntityRequest,\n  ): Promise<ObjectsByEntityResponse> {\n    return await this.postRequired(`/resources/custom/query`, {\n      entityRef: stringifyEntityRef(request.entity),\n      auth: request.auth,\n      customResources: request.customResources,\n    });\n  }\n\n  async getClusters(): Promise<{ name: string; authProvider: string }[]> {\n    const url = `${await this.discoveryApi.getBaseUrl('kubernetes')}/clusters`;\n    const response = await this.fetchApi.fetch(url);\n\n    return (await this.handleResponse(response)).items;\n  }\n\n  async proxy(options: {\n    clusterName: string;\n    path: string;\n    init?: RequestInit;\n  }): Promise<Response> {\n    const { authProvider, oidcTokenProvider } = await this.getCluster(\n      options.clusterName,\n    );\n    const kubernetesCredentials = await this.getCredentials(\n      authProvider,\n      oidcTokenProvider,\n    );\n    const url = `${await this.discoveryApi.getBaseUrl('kubernetes')}/proxy${\n      options.path\n    }`;\n    const headers = KubernetesBackendClient.getKubernetesHeaders(\n      options,\n      kubernetesCredentials?.token,\n      authProvider,\n      oidcTokenProvider,\n    );\n    return await this.fetchApi.fetch(url, { ...options.init, headers });\n  }\n\n  private static getKubernetesHeaders(\n    options: {\n      clusterName: string;\n      path: string;\n      init?: RequestInit;\n    },\n    k8sToken: string | undefined,\n    authProvider: string,\n    oidcTokenProvider: string | undefined,\n  ) {\n    const kubernetesAuthHeader =\n      KubernetesBackendClient.getKubernetesAuthHeaderByAuthProvider(\n        authProvider,\n        oidcTokenProvider,\n      );\n    return {\n      ...options.init?.headers,\n      [`Backstage-Kubernetes-Cluster`]: options.clusterName,\n      ...(k8sToken && {\n        [kubernetesAuthHeader]: k8sToken,\n      }),\n    };\n  }\n\n  private static getKubernetesAuthHeaderByAuthProvider(\n    authProvider: string,\n    oidcTokenProvider: string | undefined,\n  ): string {\n    let header: string = 'Backstage-Kubernetes-Authorization';\n\n    header = header.concat('-', authProvider);\n\n    if (oidcTokenProvider) header = header.concat('-', oidcTokenProvider);\n\n    return header;\n  }\n}\n"],"names":[],"mappings":"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"}