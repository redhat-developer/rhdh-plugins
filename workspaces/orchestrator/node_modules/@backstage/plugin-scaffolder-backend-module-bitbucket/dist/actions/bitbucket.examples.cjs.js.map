{"version":3,"file":"bitbucket.examples.cjs.js","sources":["../../src/actions/bitbucket.examples.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Initializes a git repository with the content in the workspace, and publishes it to Bitbucket with the default configuration.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Bitbucket repository with a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            description: 'Initialize a git repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket repository with public repo visibility, if not set defaults to private',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            repoVisibility: 'public',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket repository with a default branch, if not set defaults to master',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            defaultBranch: 'main',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            sourcePath: './repoRoot',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Bitbucket repository with LFS enabled',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl: 'hosted.bitbucket.com?project=project&repo=repo',\n            enableLFS: true,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket repository with a custom authentication token',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            token: 'your-auth-token',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket repository with an initial commit message, if not set defaults to `initial commit`',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            gitCommitMessage: 'Initial commit with custom message',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Initializes a Bitbucket repository with a custom author',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            gitAuthorName: 'Your Name',\n            gitAuthorEmail: 'your.email@example.com',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a Bitbucket repository with all properties being set',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:bitbucket',\n          name: 'Publish to Bitbucket',\n          input: {\n            repoUrl:\n              'bitbucket.org?repo=repo&workspace=workspace&project=project',\n            description: 'Initialize a git repository',\n            repoVisibility: 'public',\n            defaultBranch: 'main',\n            token: 'your-auth-token',\n            gitCommitMessage: 'Initial commit with custom message',\n            gitAuthorName: 'Your Name',\n            gitAuthorEmail: 'your.email@example.com',\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}