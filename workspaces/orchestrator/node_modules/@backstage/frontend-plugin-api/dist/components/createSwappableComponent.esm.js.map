{"version":3,"file":"createSwappableComponent.esm.js","sources":["../../src/components/createSwappableComponent.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OpaqueSwappableComponentRef } from '@internal/frontend';\nimport { swappableComponentsApiRef, useApi } from '../apis';\nimport { lazy } from 'react';\n\n/** @public */\nexport type SwappableComponentRef<\n  TInnerComponentProps extends {} = {},\n  TExternalComponentProps extends {} = TInnerComponentProps,\n> = {\n  id: string;\n  TProps: TInnerComponentProps;\n  TExternalProps: TExternalComponentProps;\n  $$type: '@backstage/SwappableComponentRef';\n};\n\n/**\n * Options for creating an SwappableComponent.\n *\n * @public\n */\nexport type CreateSwappableComponentOptions<\n  TInnerComponentProps extends {},\n  TExternalComponentProps extends {} = TInnerComponentProps,\n> = {\n  id: string;\n  loader?:\n    | (() => (props: TInnerComponentProps) => JSX.Element | null)\n    | (() => Promise<(props: TInnerComponentProps) => JSX.Element | null>);\n  transformProps?: (props: TExternalComponentProps) => TInnerComponentProps;\n};\n\nconst useComponentRefApi = () => {\n  try {\n    return useApi(swappableComponentsApiRef);\n  } catch (e) {\n    return undefined;\n  }\n};\n\n/**\n * Creates a SwappableComponent that can be used to render the component, optionally overridden by the app.\n *\n * @public\n */\nexport function createSwappableComponent<\n  TInnerComponentProps extends {},\n  TExternalComponentProps extends {} = TInnerComponentProps,\n>(\n  options: CreateSwappableComponentOptions<\n    TInnerComponentProps,\n    TExternalComponentProps\n  >,\n): {\n  (props: TExternalComponentProps): JSX.Element | null;\n  ref: SwappableComponentRef<TInnerComponentProps, TExternalComponentProps>;\n} {\n  const FallbackComponent = (p: JSX.IntrinsicAttributes) => (\n    <div data-testid={options.id} {...p} />\n  );\n\n  const ref = OpaqueSwappableComponentRef.createInstance('v1', {\n    id: options.id,\n    TProps: null as unknown as TInnerComponentProps,\n    TExternalProps: null as unknown as TExternalComponentProps,\n    toString() {\n      return `SwappableComponentRef{id=${options.id}}`;\n    },\n    defaultComponent: lazy(async () => {\n      const Component = (await options.loader?.()) ?? FallbackComponent;\n      return { default: Component };\n    }) as (typeof OpaqueSwappableComponentRef.TInternal)['defaultComponent'],\n    transformProps:\n      options.transformProps as (typeof OpaqueSwappableComponentRef.TInternal)['transformProps'],\n  });\n\n  const ComponentRefImpl = (props: TExternalComponentProps) => {\n    const api = useComponentRefApi();\n\n    if (!api) {\n      const internalRef = OpaqueSwappableComponentRef.toInternal(ref);\n      const Component = internalRef.defaultComponent;\n      const innerProps = internalRef.transformProps?.(props) ?? props;\n      return <Component {...innerProps} />;\n    }\n\n    const Component = api.getComponent<any>(ref);\n    return <Component {...props} />;\n  };\n\n  Object.assign(ComponentRefImpl, { ref });\n\n  return ComponentRefImpl as {\n    (props: TExternalComponentProps): JSX.Element | null;\n    ref: SwappableComponentRef<TInnerComponentProps, TExternalComponentProps>;\n  };\n}\n"],"names":["Component"],"mappings":";;;;;;;;;;;;;AA+CA,MAAM,qBAAqB,MAAM;AAC/B,EAAA,IAAI;AACF,IAAA,OAAO,OAAO,yBAAyB,CAAA;AAAA,EACzC,SAAS,CAAA,EAAG;AACV,IAAA,OAAO,MAAA;AAAA,EACT;AACF,CAAA;AAOO,SAAS,yBAId,OAAA,EAOA;AACA,EAAA,MAAM,iBAAA,GAAoB,CAAC,CAAA,qBACzB,GAAA,CAAC,SAAI,aAAA,EAAa,OAAA,CAAQ,EAAA,EAAK,GAAG,CAAA,EAAG,CAAA;AAGvC,EAAA,MAAM,GAAA,GAAM,2BAAA,CAA4B,cAAA,CAAe,IAAA,EAAM;AAAA,IAC3D,IAAI,OAAA,CAAQ,EAAA;AAAA,IACZ,MAAA,EAAQ,IAAA;AAAA,IACR,cAAA,EAAgB,IAAA;AAAA,IAChB,QAAA,GAAW;AACT,MAAA,OAAO,CAAA,yBAAA,EAA4B,QAAQ,EAAE,CAAA,CAAA,CAAA;AAAA,IAC/C,CAAA;AAAA,IACA,gBAAA,EAAkB,KAAK,YAAY;AACjC,MAAA,MAAM,SAAA,GAAa,MAAM,OAAA,CAAQ,MAAA,IAAS,IAAM,iBAAA;AAChD,MAAA,OAAO,EAAE,SAAS,SAAA,EAAU;AAAA,IAC9B,CAAC,CAAA;AAAA,IACD,gBACE,OAAA,CAAQ;AAAA,GACX,CAAA;AAED,EAAA,MAAM,gBAAA,GAAmB,CAAC,KAAA,KAAmC;AAC3D,IAAA,MAAM,MAAM,kBAAA,EAAmB;AAE/B,IAAA,IAAI,CAAC,GAAA,EAAK;AACR,MAAA,MAAM,WAAA,GAAc,2BAAA,CAA4B,UAAA,CAAW,GAAG,CAAA;AAC9D,MAAA,MAAMA,aAAY,WAAA,CAAY,gBAAA;AAC9B,MAAA,MAAM,UAAA,GAAa,WAAA,CAAY,cAAA,GAAiB,KAAK,CAAA,IAAK,KAAA;AAC1D,MAAA,uBAAO,GAAA,CAACA,UAAAA,EAAA,EAAW,GAAG,UAAA,EAAY,CAAA;AAAA,IACpC;AAEA,IAAA,MAAM,SAAA,GAAY,GAAA,CAAI,YAAA,CAAkB,GAAG,CAAA;AAC3C,IAAA,uBAAO,GAAA,CAAC,SAAA,EAAA,EAAW,GAAG,KAAA,EAAO,CAAA;AAAA,EAC/B,CAAA;AAEA,EAAA,MAAA,CAAO,MAAA,CAAO,gBAAA,EAAkB,EAAE,GAAA,EAAK,CAAA;AAEvC,EAAA,OAAO,gBAAA;AAIT;;;;"}