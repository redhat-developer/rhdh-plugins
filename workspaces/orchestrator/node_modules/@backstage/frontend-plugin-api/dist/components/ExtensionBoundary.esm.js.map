{"version":3,"file":"ExtensionBoundary.esm.js","sources":["../../src/components/ExtensionBoundary.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PropsWithChildren,\n  ReactNode,\n  Suspense,\n  useEffect,\n  lazy as reactLazy,\n} from 'react';\nimport { AnalyticsContext, useAnalytics } from '@backstage/core-plugin-api';\nimport { ErrorBoundary } from './ErrorBoundary';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { routableExtensionRenderedEvent } from '../../../core-plugin-api/src/analytics/Tracker';\nimport { AppNode } from '../apis';\nimport { coreExtensionData } from '../wiring';\nimport { AppNodeProvider } from './AppNodeProvider';\nimport { Progress } from './DefaultSwappableComponents';\n\ntype RouteTrackerProps = PropsWithChildren<{\n  enabled?: boolean;\n}>;\n\nconst RouteTracker = (props: RouteTrackerProps) => {\n  const { enabled, children } = props;\n  const analytics = useAnalytics();\n\n  // This event, never exposed to end-users of the analytics API,\n  // helps inform which extension metadata gets associated with a\n  // navigation event when the route navigated to is a gathered\n  // mountpoint.\n  useEffect(() => {\n    if (enabled) {\n      analytics.captureEvent(routableExtensionRenderedEvent, '');\n    }\n  }, [analytics, enabled]);\n\n  return <>{children}</>;\n};\n\n/** @public */\nexport interface ExtensionBoundaryProps {\n  node: AppNode;\n  children: ReactNode;\n}\n\n/** @public */\nexport function ExtensionBoundary(props: ExtensionBoundaryProps) {\n  const { node, children } = props;\n\n  const hasRoutePathOutput = Boolean(\n    node.instance?.getData(coreExtensionData.routePath),\n  );\n\n  const plugin = node.spec.plugin;\n\n  // Skipping \"routeRef\" attribute in the new system, the extension \"id\" should provide more insight\n  const attributes = {\n    extensionId: node.spec.id,\n    pluginId: node.spec.plugin?.id ?? 'app',\n  };\n\n  return (\n    <AppNodeProvider node={node}>\n      <Suspense fallback={<Progress />}>\n        <ErrorBoundary plugin={plugin}>\n          <AnalyticsContext attributes={attributes}>\n            <RouteTracker enabled={hasRoutePathOutput}>{children}</RouteTracker>\n          </AnalyticsContext>\n        </ErrorBoundary>\n      </Suspense>\n    </AppNodeProvider>\n  );\n}\n\n/** @public */\nexport namespace ExtensionBoundary {\n  export function lazy(\n    appNode: AppNode,\n    loader: () => Promise<JSX.Element>,\n  ): JSX.Element {\n    const ExtensionComponent = reactLazy(() =>\n      loader().then(element => ({ default: () => element })),\n    );\n    return (\n      <ExtensionBoundary node={appNode}>\n        <ExtensionComponent />\n      </ExtensionBoundary>\n    );\n  }\n\n  export function lazyComponent<TProps extends {}>(\n    appNode: AppNode,\n    loader: () => Promise<(props: TProps) => JSX.Element>,\n  ): (props: TProps) => JSX.Element {\n    const ExtensionComponent = reactLazy(() =>\n      loader().then(Component => ({ default: Component })),\n    ) as unknown as React.ComponentType<TProps>;\n\n    return (props: TProps) => (\n      <ExtensionBoundary node={appNode}>\n        <ExtensionComponent {...props} />\n      </ExtensionBoundary>\n    );\n  }\n}\n"],"names":["ExtensionBoundary","lazy","reactLazy"],"mappings":";;;;;;;;;;;;AAoCA,MAAM,YAAA,GAAe,CAAC,KAAA,KAA6B;AACjD,EAAA,MAAM,EAAE,OAAA,EAAS,QAAA,EAAS,GAAI,KAAA;AAC9B,EAAA,MAAM,YAAY,YAAA,EAAa;AAM/B,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,OAAA,EAAS;AACX,MAAA,SAAA,CAAU,YAAA,CAAa,gCAAgC,EAAE,CAAA;AAAA,IAC3D;AAAA,EACF,CAAA,EAAG,CAAC,SAAA,EAAW,OAAO,CAAC,CAAA;AAEvB,EAAA,uCAAU,QAAA,EAAS,CAAA;AACrB,CAAA;AASO,SAAS,kBAAkB,KAAA,EAA+B;AAC/D,EAAA,MAAM,EAAE,IAAA,EAAM,QAAA,EAAS,GAAI,KAAA;AAE3B,EAAA,MAAM,kBAAA,GAAqB,OAAA;AAAA,IACzB,IAAA,CAAK,QAAA,EAAU,OAAA,CAAQ,iBAAA,CAAkB,SAAS;AAAA,GACpD;AAEA,EAAA,MAAM,MAAA,GAAS,KAAK,IAAA,CAAK,MAAA;AAGzB,EAAA,MAAM,UAAA,GAAa;AAAA,IACjB,WAAA,EAAa,KAAK,IAAA,CAAK,EAAA;AAAA,IACvB,QAAA,EAAU,IAAA,CAAK,IAAA,CAAK,MAAA,EAAQ,EAAA,IAAM;AAAA,GACpC;AAEA,EAAA,uBACE,GAAA,CAAC,mBAAgB,IAAA,EACf,QAAA,kBAAA,GAAA,CAAC,YAAS,QAAA,kBAAU,GAAA,CAAC,QAAA,EAAA,EAAS,CAAA,EAC5B,QAAA,kBAAA,GAAA,CAAC,aAAA,EAAA,EAAc,QACb,QAAA,kBAAA,GAAA,CAAC,gBAAA,EAAA,EAAiB,UAAA,EAChB,QAAA,kBAAA,GAAA,CAAC,YAAA,EAAA,EAAa,OAAA,EAAS,oBAAqB,QAAA,EAAS,CAAA,EACvD,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA;AAEJ;AAAA,CAGO,CAAUA,kBAAAA,KAAV;AACE,EAAA,SAASC,MAAA,CACd,SACA,MAAA,EACa;AACb,IAAA,MAAM,kBAAA,GAAqBC,IAAA;AAAA,MAAU,MACnC,QAAO,CAAE,IAAA,CAAK,cAAY,EAAE,OAAA,EAAS,MAAM,OAAA,EAAQ,CAAE;AAAA,KACvD;AACA,IAAA,2BACGF,kBAAAA,EAAA,EAAkB,MAAM,OAAA,EACvB,QAAA,kBAAA,GAAA,CAAC,sBAAmB,CAAA,EACtB,CAAA;AAAA,EAEJ;AAZO,EAAAA,kBAAAA,CAAS,IAAA,GAAAC,MAAA;AAcT,EAAA,SAAS,aAAA,CACd,SACA,MAAA,EACgC;AAChC,IAAA,MAAM,kBAAA,GAAqBC,IAAA;AAAA,MAAU,MACnC,QAAO,CAAE,IAAA,CAAK,gBAAc,EAAE,OAAA,EAAS,WAAU,CAAE;AAAA,KACrD;AAEA,IAAA,OAAO,CAAC,KAAA,qBACN,GAAA,CAACF,kBAAAA,EAAA,EAAkB,IAAA,EAAM,OAAA,EACvB,QAAA,kBAAA,GAAA,CAAC,kBAAA,EAAA,EAAoB,GAAG,KAAA,EAAO,CAAA,EACjC,CAAA;AAAA,EAEJ;AAbO,EAAAA,kBAAAA,CAAS,aAAA,GAAA,aAAA;AAAA,CAAA,EAfD,iBAAA,KAAA,iBAAA,GAAA,EAAA,CAAA,CAAA;;;;"}