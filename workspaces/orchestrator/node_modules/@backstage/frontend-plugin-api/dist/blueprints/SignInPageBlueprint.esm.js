import { jsx } from 'react/jsx-runtime';
import { lazy } from 'react';
import '../wiring/coreExtensionData.esm.js';
import 'zod';
import 'zod-to-json-schema';
import { createExtensionDataRef } from '../wiring/createExtensionDataRef.esm.js';
import { createExtensionBlueprint } from '../wiring/createExtensionBlueprint.esm.js';
import { ExtensionBoundary } from '../components/ExtensionBoundary.esm.js';
import '../apis/definitions/AppTreeApi.esm.js';
import '@backstage/core-plugin-api';
import '../apis/definitions/SwappableComponentsApi.esm.js';
import '../apis/definitions/IconsApi.esm.js';
import '../apis/definitions/DialogApi.esm.js';
import '../apis/definitions/RouteResolutionApi.esm.js';
import '../apis/definitions/AnalyticsApi.esm.js';
import '../components/AppNodeProvider.esm.js';
import '../components/DefaultSwappableComponents.esm.js';

const componentDataRef = createExtensionDataRef().with({ id: "core.sign-in-page.component" });
const SignInPageBlueprint = createExtensionBlueprint({
  kind: "sign-in-page",
  attachTo: { id: "app/root", input: "signInPage" },
  output: [componentDataRef],
  dataRefs: {
    component: componentDataRef
  },
  *factory({
    loader
  }, { node }) {
    const ExtensionComponent = lazy(
      () => loader().then((component) => ({ default: component }))
    );
    yield componentDataRef((props) => /* @__PURE__ */ jsx(ExtensionBoundary, { node, children: /* @__PURE__ */ jsx(ExtensionComponent, { ...props }) }));
  }
});

export { SignInPageBlueprint };
//# sourceMappingURL=SignInPageBlueprint.esm.js.map
