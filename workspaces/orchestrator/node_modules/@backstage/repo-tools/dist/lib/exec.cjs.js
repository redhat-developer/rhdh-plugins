'use strict';

var util = require('util');
var child_process = require('child_process');

const execPromise = util.promisify(child_process.exec);
const exec = (command, args = [], options) => {
  return execPromise(
    [
      command,
      ...args.filter((e) => e).map((e) => e.startsWith("-") ? e : `"${e}"`)
    ].join(" "),
    options
  );
};
const spawn = (command, args, options) => {
  return new Promise((resolve, reject) => {
    const cp = child_process.spawn(command, args, options ?? {});
    const error = [];
    const stdout = [];
    cp.stdout?.on("data", (data) => {
      stdout.push(data.toString());
    });
    cp.on("error", (e) => {
      error.push(e.toString());
    });
    cp.on("close", (exitCode) => {
      if (exitCode) reject(error.join(""));
      else resolve(stdout.join(""));
    });
  });
};

exports.exec = exec;
exports.spawn = spawn;
//# sourceMappingURL=exec.cjs.js.map
