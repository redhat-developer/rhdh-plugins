{"version":3,"file":"catalogApiMock.esm.js","sources":["../../src/testUtils/catalogApiMock.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiFactory,\n  ApiRef,\n  createApiFactory,\n} from '@backstage/frontend-plugin-api';\nimport { InMemoryCatalogClient } from '@backstage/catalog-client/testUtils';\nimport { Entity } from '@backstage/catalog-model';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { ApiMock } from '@backstage/frontend-test-utils';\n\n/** @internal */\nfunction simpleMock<TApi>(\n  ref: ApiRef<TApi>,\n  mockFactory: () => jest.Mocked<TApi>,\n): (partialImpl?: Partial<TApi>) => ApiMock<TApi> {\n  return partialImpl => {\n    const mock = mockFactory();\n    if (partialImpl) {\n      for (const [key, impl] of Object.entries(partialImpl)) {\n        if (typeof impl === 'function') {\n          (mock as any)[key].mockImplementation(impl);\n        } else {\n          (mock as any)[key] = impl;\n        }\n      }\n    }\n    return Object.assign(mock, {\n      factory: createApiFactory({\n        api: ref,\n        deps: {},\n        factory: () => mock,\n      }),\n    }) as ApiMock<TApi>;\n  };\n}\n\n/**\n * Creates a fake catalog client that handles entities in memory storage. Note\n * that this client may be severely limited in functionality, and advanced\n * functions may not be available at all.\n *\n * @public\n */\nexport function catalogApiMock(options?: { entities?: Entity[] }): CatalogApi {\n  return new InMemoryCatalogClient(options);\n}\n\n/**\n * A collection of mock functionality for the catalog service.\n *\n * @public\n */\nexport namespace catalogApiMock {\n  /**\n   * Creates a fake catalog client that handles entities in memory storage. Note\n   * that this client may be severely limited in functionality, and advanced\n   * functions may not be available at all.\n   */\n  export const factory = (options?: {\n    entities?: Entity[];\n  }): ApiFactory<CatalogApi, CatalogApi, {}> =>\n    createApiFactory({\n      api: catalogApiRef,\n      deps: {},\n      factory: () => new InMemoryCatalogClient(options),\n    });\n  /**\n   * Creates a catalog client whose methods are mock functions, possibly with\n   * some of them overloaded by the caller.\n   */\n  export const mock = simpleMock(catalogApiRef, () => ({\n    getEntities: jest.fn(),\n    getEntitiesByRefs: jest.fn(),\n    queryEntities: jest.fn(),\n    getEntityAncestors: jest.fn(),\n    getEntityByRef: jest.fn(),\n    removeEntityByUid: jest.fn(),\n    refreshEntity: jest.fn(),\n    getEntityFacets: jest.fn(),\n    getLocations: jest.fn(),\n    getLocationById: jest.fn(),\n    getLocationByRef: jest.fn(),\n    addLocation: jest.fn(),\n    removeLocationById: jest.fn(),\n    getLocationByEntity: jest.fn(),\n    validateEntity: jest.fn(),\n    analyzeLocation: jest.fn(),\n    streamEntities: jest.fn(),\n    streamEntityPages: jest.fn(),\n  }));\n}\n"],"names":["catalogApiMock"],"mappings":";;;;AA4BA,SAAS,UAAA,CACP,KACA,WAAA,EACgD;AAChD,EAAA,OAAO,CAAA,WAAA,KAAe;AACpB,IAAA,MAAM,OAAO,WAAA,EAAY;AACzB,IAAA,IAAI,WAAA,EAAa;AACf,MAAA,KAAA,MAAW,CAAC,GAAA,EAAK,IAAI,KAAK,MAAA,CAAO,OAAA,CAAQ,WAAW,CAAA,EAAG;AACrD,QAAA,IAAI,OAAO,SAAS,UAAA,EAAY;AAC9B,UAAC,IAAA,CAAa,GAAG,CAAA,CAAE,kBAAA,CAAmB,IAAI,CAAA;AAAA,QAC5C,CAAA,MAAO;AACL,UAAC,IAAA,CAAa,GAAG,CAAA,GAAI,IAAA;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AACA,IAAA,OAAO,MAAA,CAAO,OAAO,IAAA,EAAM;AAAA,MACzB,SAAS,gBAAA,CAAiB;AAAA,QACxB,GAAA,EAAK,GAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,SAAS,MAAM;AAAA,OAChB;AAAA,KACF,CAAA;AAAA,EACH,CAAA;AACF;AASO,SAAS,eAAe,OAAA,EAA+C;AAC5E,EAAA,OAAO,IAAI,sBAAsB,OAAO,CAAA;AAC1C;AAAA,CAOO,CAAUA,eAAAA,KAAV;AAME,EAAMA,eAAAA,CAAA,OAAA,GAAU,CAAC,OAAA,KAGtB,gBAAA,CAAiB;AAAA,IACf,GAAA,EAAK,aAAA;AAAA,IACL,MAAM,EAAC;AAAA,IACP,OAAA,EAAS,MAAM,IAAI,qBAAA,CAAsB,OAAO;AAAA,GACjD,CAAA;AAKI,EAAMA,eAAAA,CAAA,IAAA,GAAO,UAAA,CAAW,aAAA,EAAe,OAAO;AAAA,IACnD,WAAA,EAAa,KAAK,EAAA,EAAG;AAAA,IACrB,iBAAA,EAAmB,KAAK,EAAA,EAAG;AAAA,IAC3B,aAAA,EAAe,KAAK,EAAA,EAAG;AAAA,IACvB,kBAAA,EAAoB,KAAK,EAAA,EAAG;AAAA,IAC5B,cAAA,EAAgB,KAAK,EAAA,EAAG;AAAA,IACxB,iBAAA,EAAmB,KAAK,EAAA,EAAG;AAAA,IAC3B,aAAA,EAAe,KAAK,EAAA,EAAG;AAAA,IACvB,eAAA,EAAiB,KAAK,EAAA,EAAG;AAAA,IACzB,YAAA,EAAc,KAAK,EAAA,EAAG;AAAA,IACtB,eAAA,EAAiB,KAAK,EAAA,EAAG;AAAA,IACzB,gBAAA,EAAkB,KAAK,EAAA,EAAG;AAAA,IAC1B,WAAA,EAAa,KAAK,EAAA,EAAG;AAAA,IACrB,kBAAA,EAAoB,KAAK,EAAA,EAAG;AAAA,IAC5B,mBAAA,EAAqB,KAAK,EAAA,EAAG;AAAA,IAC7B,cAAA,EAAgB,KAAK,EAAA,EAAG;AAAA,IACxB,eAAA,EAAiB,KAAK,EAAA,EAAG;AAAA,IACzB,cAAA,EAAgB,KAAK,EAAA,EAAG;AAAA,IACxB,iBAAA,EAAmB,KAAK,EAAA;AAAG,GAC7B,CAAE,CAAA;AAAA,CAAA,EArCa,cAAA,KAAA,cAAA,GAAA,EAAA,CAAA,CAAA;;;;"}