{"version":3,"file":"EntityProcessingStatusPicker.esm.js","sources":["../../../src/components/EntityProcessingStatusPicker/EntityProcessingStatusPicker.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityErrorFilter, EntityOrphanFilter } from '../../filters';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { useState } from 'react';\nimport { useEntityList } from '../../hooks';\nimport { catalogReactTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { CatalogAutocomplete } from '../CatalogAutocomplete';\n\n/** @public */\nexport type CatalogReactEntityProcessingStatusPickerClassKey = 'input';\n\nconst useStyles = makeStyles(\n  {\n    root: {},\n    input: {},\n    label: {},\n  },\n  { name: 'CatalogReactEntityProcessingStatusPickerPicker' },\n);\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/** @public */\nexport const EntityProcessingStatusPicker = () => {\n  const classes = useStyles();\n  const { updateFilters } = useEntityList();\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  const [selectedAdvancedItems, setSelectedAdvancedItems] = useState<string[]>(\n    [],\n  );\n\n  function orphanChange(value: boolean) {\n    updateFilters({\n      orphan: value ? new EntityOrphanFilter(value) : undefined,\n    });\n  }\n\n  function errorChange(value: boolean) {\n    updateFilters({\n      error: value ? new EntityErrorFilter(value) : undefined,\n    });\n  }\n\n  const availableAdvancedItems = ['Is Orphan', 'Has Error'];\n\n  return (\n    <Box className={classes.root} pb={1} pt={1}>\n      <CatalogAutocomplete<string, true>\n        label={t('entityProcessingStatusPicker.title')}\n        multiple\n        disableCloseOnSelect\n        options={availableAdvancedItems}\n        value={selectedAdvancedItems}\n        onChange={(_: object, value: string[]) => {\n          setSelectedAdvancedItems(value);\n          orphanChange(value.includes('Is Orphan'));\n          errorChange(value.includes('Has Error'));\n        }}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                checked={selected}\n              />\n            }\n            onClick={event => event.preventDefault()}\n            label={option}\n          />\n        )}\n        name=\"processing-status-picker\"\n        LabelProps={{ className: classes.label }}\n        TextFieldProps={{ className: classes.input }}\n      />\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAM,SAAA,GAAY,UAAA;AAAA,EAChB;AAAA,IACE,MAAM,EAAC;AAAA,IACP,OAAO,EAAC;AAAA,IACR,OAAO;AAAC,GACV;AAAA,EACA,EAAE,MAAM,gDAAA;AACV,CAAA;AAEA,MAAM,IAAA,mBAAO,GAAA,CAAC,wBAAA,EAAA,EAAyB,QAAA,EAAS,OAAA,EAAQ,CAAA;AACxD,MAAM,WAAA,mBAAc,GAAA,CAAC,YAAA,EAAA,EAAa,QAAA,EAAS,OAAA,EAAQ,CAAA;AAG5C,MAAM,+BAA+B,MAAM;AAChD,EAAA,MAAM,UAAU,SAAA,EAAU;AAC1B,EAAA,MAAM,EAAE,aAAA,EAAc,GAAI,aAAA,EAAc;AACxC,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,0BAA0B,CAAA;AAE1D,EAAA,MAAM,CAAC,qBAAA,EAAuB,wBAAwB,CAAA,GAAI,QAAA;AAAA,IACxD;AAAC,GACH;AAEA,EAAA,SAAS,aAAa,KAAA,EAAgB;AACpC,IAAA,aAAA,CAAc;AAAA,MACZ,MAAA,EAAQ,KAAA,GAAQ,IAAI,kBAAA,CAAmB,KAAK,CAAA,GAAI;AAAA,KACjD,CAAA;AAAA,EACH;AAEA,EAAA,SAAS,YAAY,KAAA,EAAgB;AACnC,IAAA,aAAA,CAAc;AAAA,MACZ,KAAA,EAAO,KAAA,GAAQ,IAAI,iBAAA,CAAkB,KAAK,CAAA,GAAI;AAAA,KAC/C,CAAA;AAAA,EACH;AAEA,EAAA,MAAM,sBAAA,GAAyB,CAAC,WAAA,EAAa,WAAW,CAAA;AAExD,EAAA,uBACE,GAAA,CAAC,OAAI,SAAA,EAAW,OAAA,CAAQ,MAAM,EAAA,EAAI,CAAA,EAAG,IAAI,CAAA,EACvC,QAAA,kBAAA,GAAA;AAAA,IAAC,mBAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,EAAE,oCAAoC,CAAA;AAAA,MAC7C,QAAA,EAAQ,IAAA;AAAA,MACR,oBAAA,EAAoB,IAAA;AAAA,MACpB,OAAA,EAAS,sBAAA;AAAA,MACT,KAAA,EAAO,qBAAA;AAAA,MACP,QAAA,EAAU,CAAC,CAAA,EAAW,KAAA,KAAoB;AACxC,QAAA,wBAAA,CAAyB,KAAK,CAAA;AAC9B,QAAA,YAAA,CAAa,KAAA,CAAM,QAAA,CAAS,WAAW,CAAC,CAAA;AACxC,QAAA,WAAA,CAAY,KAAA,CAAM,QAAA,CAAS,WAAW,CAAC,CAAA;AAAA,MACzC,CAAA;AAAA,MACA,YAAA,EAAc,CAAC,MAAA,EAAQ,EAAE,UAAS,qBAChC,GAAA;AAAA,QAAC,gBAAA;AAAA,QAAA;AAAA,UACC,OAAA,kBACE,GAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,IAAA;AAAA,cACA,WAAA;AAAA,cACA,OAAA,EAAS;AAAA;AAAA,WACX;AAAA,UAEF,OAAA,EAAS,CAAA,KAAA,KAAS,KAAA,CAAM,cAAA,EAAe;AAAA,UACvC,KAAA,EAAO;AAAA;AAAA,OACT;AAAA,MAEF,IAAA,EAAK,0BAAA;AAAA,MACL,UAAA,EAAY,EAAE,SAAA,EAAW,OAAA,CAAQ,KAAA,EAAM;AAAA,MACvC,cAAA,EAAgB,EAAE,SAAA,EAAW,OAAA,CAAQ,KAAA;AAAM;AAAA,GAC7C,EACF,CAAA;AAEJ;;;;"}