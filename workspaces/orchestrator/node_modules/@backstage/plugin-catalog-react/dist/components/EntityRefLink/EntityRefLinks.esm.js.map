{"version":3,"file":"EntityRefLinks.esm.js","sources":["../../../src/components/EntityRefLink/EntityRefLinks.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Fragment } from 'react';\nimport { EntityRefLink } from './EntityRefLink';\nimport { LinkProps } from '@backstage/core-components';\n\n/**\n * Props for {@link EntityRefLink}.\n *\n * @public\n */\nexport type EntityRefLinksProps<\n  TRef extends string | CompoundEntityRef | Entity,\n> = {\n  defaultKind?: string;\n  entityRefs: TRef[];\n  hideIcons?: boolean;\n  /** @deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead */\n  fetchEntities?: boolean;\n  /** @deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead */\n  getTitle?(entity: TRef): string | undefined;\n} & Omit<LinkProps, 'to'>;\n\n/**\n * Shows a list of clickable links to entities.\n *\n * @public\n */\nexport function EntityRefLinks<\n  TRef extends string | CompoundEntityRef | Entity,\n>(props: EntityRefLinksProps<TRef>) {\n  const { entityRefs, hideIcons, ...linkProps } = props;\n\n  return (\n    <>\n      {entityRefs.map((r: TRef, i: number) => {\n        const entityRefString =\n          typeof r === 'string' ? r : stringifyEntityRef(r);\n        return (\n          <Fragment key={`${i}.${entityRefString}`}>\n            {i > 0 && ', '}\n            <EntityRefLink {...linkProps} entityRef={r} hideIcon={hideIcons} />\n          </Fragment>\n        );\n      })}\n    </>\n  );\n}\n"],"names":["Fragment"],"mappings":";;;;;AA8CO,SAAS,eAEd,KAAA,EAAkC;AAClC,EAAA,MAAM,EAAE,UAAA,EAAY,SAAA,EAAW,GAAG,WAAU,GAAI,KAAA;AAEhD,EAAA,uBACE,GAAA,CAAA,QAAA,EAAA,EACG,QAAA,EAAA,UAAA,CAAW,GAAA,CAAI,CAAC,GAAS,CAAA,KAAc;AACtC,IAAA,MAAM,kBACJ,OAAO,CAAA,KAAM,QAAA,GAAW,CAAA,GAAI,mBAAmB,CAAC,CAAA;AAClD,IAAA,uBACE,IAAA,CAACA,YAAA,EACE,QAAA,EAAA;AAAA,MAAA,CAAA,GAAI,CAAA,IAAK,IAAA;AAAA,0BACT,aAAA,EAAA,EAAe,GAAG,WAAW,SAAA,EAAW,CAAA,EAAG,UAAU,SAAA,EAAW;AAAA,KAAA,EAAA,EAFpD,CAAA,EAAG,CAAC,CAAA,CAAA,EAAI,eAAe,CAAA,CAGtC,CAAA;AAAA,EAEJ,CAAC,CAAA,EACH,CAAA;AAEJ;;;;"}