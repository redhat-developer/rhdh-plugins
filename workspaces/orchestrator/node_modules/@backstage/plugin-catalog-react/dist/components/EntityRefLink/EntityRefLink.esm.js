import { jsx } from 'react/jsx-runtime';
import { Link } from '@backstage/core-components';
import { useRouteRef } from '@backstage/core-plugin-api';
import { forwardRef } from 'react';
import { entityRouteRef, entityRouteParams } from '../../routes.esm.js';
import { EntityDisplayName } from '../EntityDisplayName/EntityDisplayName.esm.js';

const EntityRefLink = forwardRef(
  (props, ref) => {
    const {
      entityRef,
      defaultKind,
      defaultNamespace,
      title,
      children,
      hideIcon,
      disableTooltip,
      ...linkProps
    } = props;
    const entityRoute = useEntityRoute(props.entityRef);
    const content = children ?? title ?? /* @__PURE__ */ jsx(
      EntityDisplayName,
      {
        entityRef,
        defaultKind,
        defaultNamespace,
        hideIcon,
        disableTooltip
      }
    );
    return /* @__PURE__ */ jsx(Link, { ...linkProps, ref, to: entityRoute, children: content });
  }
);
function useEntityRoute(entityRef) {
  const entityRoute = useRouteRef(entityRouteRef);
  const routeParams = entityRouteParams(entityRef, { encodeParams: true });
  return entityRoute(routeParams);
}

export { EntityRefLink };
//# sourceMappingURL=EntityRefLink.esm.js.map
