import { jsx, Fragment, jsxs } from 'react/jsx-runtime';
import { stringifyEntityRef } from '@backstage/catalog-model';
import { Fragment as Fragment$1 } from 'react';
import { EntityRefLink } from './EntityRefLink.esm.js';

function EntityRefLinks(props) {
  const { entityRefs, hideIcons, ...linkProps } = props;
  return /* @__PURE__ */ jsx(Fragment, { children: entityRefs.map((r, i) => {
    const entityRefString = typeof r === "string" ? r : stringifyEntityRef(r);
    return /* @__PURE__ */ jsxs(Fragment$1, { children: [
      i > 0 && ", ",
      /* @__PURE__ */ jsx(EntityRefLink, { ...linkProps, entityRef: r, hideIcon: hideIcons })
    ] }, `${i}.${entityRefString}`);
  }) });
}

export { EntityRefLinks };
//# sourceMappingURL=EntityRefLinks.esm.js.map
