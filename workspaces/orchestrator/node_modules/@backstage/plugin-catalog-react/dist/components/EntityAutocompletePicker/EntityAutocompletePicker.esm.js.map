{"version":3,"file":"EntityAutocompletePicker.esm.js","sources":["../../../src/components/EntityAutocompletePicker/EntityAutocompletePicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Box from '@material-ui/core/Box';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/esm/useAsync';\nimport { catalogApiRef } from '../../api';\nimport { EntityAutocompletePickerOption } from './EntityAutocompletePickerOption';\nimport {\n  DefaultEntityFilters,\n  useEntityList,\n} from '../../hooks/useEntityListProvider';\nimport { EntityFilter } from '../../types';\nimport { reduceBackendCatalogFilters } from '../../utils/filters';\nimport { CatalogAutocomplete } from '../CatalogAutocomplete';\nimport { isEqual } from 'lodash';\n\n/** @public */\nexport type AllowedEntityFilters<T extends DefaultEntityFilters> = {\n  [K in keyof T]-?: NonNullable<T[K]> extends EntityFilter & {\n    values: string[];\n  }\n    ? K\n    : never;\n}[keyof T];\n\n/** @public */\nexport type EntityAutocompletePickerProps<\n  T extends DefaultEntityFilters = DefaultEntityFilters,\n  Name extends AllowedEntityFilters<T> = AllowedEntityFilters<T>,\n> = {\n  label: string;\n  name: Name;\n  path: string;\n  showCounts?: boolean;\n  Filter: { new (values: string[]): NonNullable<T[Name]> };\n  InputProps?: TextFieldProps;\n  initialSelectedOptions?: string[];\n  filtersForAvailableValues?: Array<keyof T>;\n  hidden?: boolean;\n};\n\n/** @public */\nexport type CatalogReactEntityAutocompletePickerClassKey = 'root' | 'label';\n\nconst useStyles = makeStyles(\n  {\n    root: {},\n    label: {\n      textTransform: 'none',\n      fontWeight: 'bold',\n    },\n  },\n  { name: 'CatalogReactEntityAutocompletePicker' },\n);\n\n/** @public */\nexport function EntityAutocompletePicker<\n  T extends DefaultEntityFilters = DefaultEntityFilters,\n  Name extends AllowedEntityFilters<T> = AllowedEntityFilters<T>,\n>(props: EntityAutocompletePickerProps<T, Name>) {\n  const {\n    label,\n    name,\n    path,\n    showCounts,\n    Filter,\n    InputProps,\n    initialSelectedOptions = [],\n    filtersForAvailableValues = ['kind'],\n    hidden,\n  } = props;\n  const classes = useStyles();\n\n  const {\n    updateFilters,\n    filters,\n    queryParameters: { [name]: queryParameter },\n  } = useEntityList<T>();\n\n  const catalogApi = useApi(catalogApiRef);\n  const availableValuesFilters = filtersForAvailableValues.map(\n    f => filters[f] as EntityFilter | undefined,\n  );\n  const { value: availableValues } = useAsync(async () => {\n    const facet = path;\n    const { facets } = await catalogApi.getEntityFacets({\n      facets: [facet],\n      filter: reduceBackendCatalogFilters(\n        availableValuesFilters.filter(Boolean) as EntityFilter[],\n      ),\n    });\n\n    return Object.fromEntries(\n      facets[facet].map(({ value, count }) => [value, count]),\n    );\n  }, [...availableValuesFilters]);\n\n  const queryParameters = useMemo(\n    () => [queryParameter].flat().filter(Boolean) as string[],\n    [queryParameter],\n  );\n\n  const filteredOptions = (filters[name] as unknown as { values: string[] })\n    ?.values;\n\n  const [selectedOptions, setSelectedOptions] = useState(\n    queryParameters.length\n      ? queryParameters\n      : filteredOptions ?? initialSelectedOptions,\n  );\n\n  // Set selected options on query parameter updates; this happens at initial page load and from\n  // external updates to the page location\n  useEffect(() => {\n    if (queryParameters.length) {\n      setSelectedOptions(queryParameters);\n    }\n  }, [queryParameters]);\n\n  const availableOptions = Object.keys(availableValues ?? {});\n  const shouldAddFilter = selectedOptions.length && availableOptions.length;\n\n  // Update filter value when selectedOptions change\n  useEffect(() => {\n    updateFilters({\n      [name]: shouldAddFilter ? new Filter(selectedOptions) : undefined,\n    } as Partial<T>);\n  }, [name, shouldAddFilter, selectedOptions, Filter, updateFilters]);\n\n  // Update selected options when filter value changes\n  useEffect(() => {\n    if (!shouldAddFilter) return;\n\n    const newSelectedOptions = filteredOptions ?? [];\n\n    // Check value is actually different (not just a different reference) to prevent selectedOptions <> filters loop\n    if (!isEqual(newSelectedOptions, selectedOptions)) {\n      setSelectedOptions(newSelectedOptions);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Don't re-set filter value when selectedOptions changes\n  }, [filteredOptions]);\n\n  const filter = filters[name];\n  if (\n    (filter && typeof filter === 'object' && !('values' in filter)) ||\n    !availableOptions.length\n  ) {\n    return null;\n  }\n\n  return hidden ? null : (\n    <Box className={classes.root} pb={1} pt={1}>\n      <CatalogAutocomplete<string, true>\n        multiple\n        disableCloseOnSelect\n        label={label}\n        name={`${String(name)}-picker`}\n        options={availableOptions}\n        value={selectedOptions}\n        TextFieldProps={InputProps}\n        onChange={(_event: object, options: string[]) =>\n          setSelectedOptions(options)\n        }\n        renderOption={(option, { selected }) => (\n          <EntityAutocompletePickerOption\n            selected={selected}\n            value={option}\n            availableOptions={availableValues}\n            showCounts={!!showCounts}\n          />\n        )}\n      />\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}