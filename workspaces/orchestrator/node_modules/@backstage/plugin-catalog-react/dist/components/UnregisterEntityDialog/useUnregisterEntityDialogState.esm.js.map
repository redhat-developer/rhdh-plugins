{"version":3,"file":"useUnregisterEntityDialogState.esm.js","sources":["../../../src/components/UnregisterEntityDialog/useUnregisterEntityDialogState.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  getCompoundEntityRef,\n  ANNOTATION_ORIGIN_LOCATION,\n} from '@backstage/catalog-model';\nimport { catalogApiRef } from '../../api';\nimport { useCallback } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/**\n * Each distinct state that the dialog can be in at any given time.\n */\nexport type UseUnregisterEntityDialogState =\n  | {\n      type: 'loading';\n    }\n  | {\n      type: 'error';\n      error: Error;\n    }\n  | {\n      type: 'bootstrap';\n      location: string;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'unregister';\n      location: string;\n      colocatedEntities: CompoundEntityRef[];\n      unregisterLocation: () => Promise<void>;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'only-delete';\n      deleteEntity: () => Promise<void>;\n    };\n\n/**\n * Houses the main logic for unregistering entities and their locations.\n */\nexport function useUnregisterEntityDialogState(\n  entity: Entity,\n): UseUnregisterEntityDialogState {\n  const catalogApi = useApi(catalogApiRef);\n  const locationRef = entity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n  const uid = entity.metadata.uid;\n  const isBootstrap = locationRef === 'bootstrap:bootstrap';\n\n  // Load the prerequisite data: what entities that are colocated with us, and\n  // what location that spawned us\n  const prerequisites = useAsync(async () => {\n    const locationPromise = catalogApi.getLocationByRef(locationRef!);\n\n    let colocatedEntitiesPromise: Promise<Entity[]>;\n    if (!locationRef) {\n      colocatedEntitiesPromise = Promise.resolve([]);\n    } else {\n      const locationAnnotationFilter = `metadata.annotations.${ANNOTATION_ORIGIN_LOCATION}`;\n      colocatedEntitiesPromise = catalogApi\n        .getEntities({\n          filter: { [locationAnnotationFilter]: locationRef },\n          fields: [\n            'kind',\n            'metadata.uid',\n            'metadata.name',\n            'metadata.namespace',\n          ],\n        })\n        .then(response => response.items);\n    }\n\n    return Promise.all([locationPromise, colocatedEntitiesPromise]).then(\n      ([location, colocatedEntities]) => ({\n        location,\n        colocatedEntities,\n      }),\n    );\n  }, [catalogApi, entity]);\n\n  // Unregisters the underlying location which will remove all of the entities that are spawned from\n  // it. Can only ever be called when the prerequisites have finished loading successfully, and if\n  // there was a matching location.\n  const unregisterLocation = useCallback(\n    async function unregisterLocationFn() {\n      const { location } = prerequisites.value!;\n      await catalogApi.removeLocationById(location!.id);\n    },\n    [catalogApi, prerequisites],\n  );\n\n  // Just removes the entity, without affecting locations in any way.\n  const deleteEntity = useCallback(\n    async function deleteEntityFn() {\n      await catalogApi.removeEntityByUid(uid!);\n    },\n    [catalogApi, uid],\n  );\n\n  // If this is a bootstrap location entity, don't even block on loading\n  // prerequisites. We know that all that we will do is to offer to remove the\n  // entity, and that doesn't require anything from the prerequisites.\n  if (isBootstrap) {\n    return { type: 'bootstrap', location: locationRef!, deleteEntity };\n  }\n\n  // Return early if prerequisites still loading or failing\n  const { loading, error, value } = prerequisites;\n  if (loading) {\n    return { type: 'loading' };\n  } else if (error) {\n    return { type: 'error', error };\n  }\n\n  const { location, colocatedEntities } = value!;\n  if (!location) {\n    return { type: 'only-delete', deleteEntity };\n  }\n  return {\n    type: 'unregister',\n    location: locationRef!,\n    colocatedEntities: colocatedEntities.map(getCompoundEntityRef),\n    unregisterLocation,\n    deleteEntity,\n  };\n}\n"],"names":["location","colocatedEntities"],"mappings":";;;;;;AA0DO,SAAS,+BACd,MAAA,EACgC;AAChC,EAAA,MAAM,UAAA,GAAa,OAAO,aAAa,CAAA;AACvC,EAAA,MAAM,WAAA,GAAc,MAAA,CAAO,QAAA,CAAS,WAAA,GAAc,0BAA0B,CAAA;AAC5E,EAAA,MAAM,GAAA,GAAM,OAAO,QAAA,CAAS,GAAA;AAC5B,EAAA,MAAM,cAAc,WAAA,KAAgB,qBAAA;AAIpC,EAAA,MAAM,aAAA,GAAgB,SAAS,YAAY;AACzC,IAAA,MAAM,eAAA,GAAkB,UAAA,CAAW,gBAAA,CAAiB,WAAY,CAAA;AAEhE,IAAA,IAAI,wBAAA;AACJ,IAAA,IAAI,CAAC,WAAA,EAAa;AAChB,MAAA,wBAAA,GAA2B,OAAA,CAAQ,OAAA,CAAQ,EAAE,CAAA;AAAA,IAC/C,CAAA,MAAO;AACL,MAAA,MAAM,wBAAA,GAA2B,wBAAwB,0BAA0B,CAAA,CAAA;AACnF,MAAA,wBAAA,GAA2B,WACxB,WAAA,CAAY;AAAA,QACX,MAAA,EAAQ,EAAE,CAAC,wBAAwB,GAAG,WAAA,EAAY;AAAA,QAClD,MAAA,EAAQ;AAAA,UACN,MAAA;AAAA,UACA,cAAA;AAAA,UACA,eAAA;AAAA,UACA;AAAA;AACF,OACD,CAAA,CACA,IAAA,CAAK,CAAA,QAAA,KAAY,SAAS,KAAK,CAAA;AAAA,IACpC;AAEA,IAAA,OAAO,QAAQ,GAAA,CAAI,CAAC,eAAA,EAAiB,wBAAwB,CAAC,CAAA,CAAE,IAAA;AAAA,MAC9D,CAAC,CAACA,SAAAA,EAAUC,kBAAiB,CAAA,MAAO;AAAA,QAClC,QAAA,EAAAD,SAAAA;AAAA,QACA,iBAAA,EAAAC;AAAA,OACF;AAAA,KACF;AAAA,EACF,CAAA,EAAG,CAAC,UAAA,EAAY,MAAM,CAAC,CAAA;AAKvB,EAAA,MAAM,kBAAA,GAAqB,WAAA;AAAA,IACzB,eAAe,oBAAA,GAAuB;AACpC,MAAA,MAAM,EAAE,QAAA,EAAAD,SAAAA,EAAS,GAAI,aAAA,CAAc,KAAA;AACnC,MAAA,MAAM,UAAA,CAAW,kBAAA,CAAmBA,SAAAA,CAAU,EAAE,CAAA;AAAA,IAClD,CAAA;AAAA,IACA,CAAC,YAAY,aAAa;AAAA,GAC5B;AAGA,EAAA,MAAM,YAAA,GAAe,WAAA;AAAA,IACnB,eAAe,cAAA,GAAiB;AAC9B,MAAA,MAAM,UAAA,CAAW,kBAAkB,GAAI,CAAA;AAAA,IACzC,CAAA;AAAA,IACA,CAAC,YAAY,GAAG;AAAA,GAClB;AAKA,EAAA,IAAI,WAAA,EAAa;AACf,IAAA,OAAO,EAAE,IAAA,EAAM,WAAA,EAAa,QAAA,EAAU,aAAc,YAAA,EAAa;AAAA,EACnE;AAGA,EAAA,MAAM,EAAE,OAAA,EAAS,KAAA,EAAO,KAAA,EAAM,GAAI,aAAA;AAClC,EAAA,IAAI,OAAA,EAAS;AACX,IAAA,OAAO,EAAE,MAAM,SAAA,EAAU;AAAA,EAC3B,WAAW,KAAA,EAAO;AAChB,IAAA,OAAO,EAAE,IAAA,EAAM,OAAA,EAAS,KAAA,EAAM;AAAA,EAChC;AAEA,EAAA,MAAM,EAAE,QAAA,EAAU,iBAAA,EAAkB,GAAI,KAAA;AACxC,EAAA,IAAI,CAAC,QAAA,EAAU;AACb,IAAA,OAAO,EAAE,IAAA,EAAM,aAAA,EAAe,YAAA,EAAa;AAAA,EAC7C;AACA,EAAA,OAAO;AAAA,IACL,IAAA,EAAM,YAAA;AAAA,IACN,QAAA,EAAU,WAAA;AAAA,IACV,iBAAA,EAAmB,iBAAA,CAAkB,GAAA,CAAI,oBAAoB,CAAA;AAAA,IAC7D,kBAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}