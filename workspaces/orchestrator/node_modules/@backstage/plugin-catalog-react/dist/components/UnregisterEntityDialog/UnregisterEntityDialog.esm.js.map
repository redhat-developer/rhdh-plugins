{"version":3,"file":"UnregisterEntityDialog.esm.js","sources":["../../../src/components/UnregisterEntityDialog/UnregisterEntityDialog.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityRefLink } from '../EntityRefLink';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { useCallback, useState } from 'react';\nimport { useUnregisterEntityDialogState } from './useUnregisterEntityDialogState';\n\nimport { alertApiRef, configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { assertError } from '@backstage/errors';\nimport { catalogReactTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst useStyles = makeStyles({\n  advancedButton: {\n    fontSize: '0.7em',\n  },\n  dialogActions: {\n    display: 'inline-block',\n  },\n});\n\nconst Contents = ({\n  entity,\n  onConfirm,\n  onClose,\n}: {\n  entity: Entity;\n  onConfirm: () => any;\n  onClose: () => any;\n}) => {\n  const alertApi = useApi(alertApiRef);\n  const configApi = useApi(configApiRef);\n  const classes = useStyles();\n  const state = useUnregisterEntityDialogState(entity);\n  const [showDelete, setShowDelete] = useState(false);\n  const [busy, setBusy] = useState(false);\n  const appTitle = configApi.getOptionalString('app.title') ?? 'Backstage';\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  const onUnregister = useCallback(\n    async function onUnregisterFn() {\n      if ('unregisterLocation' in state) {\n        setBusy(true);\n        try {\n          await state.unregisterLocation();\n          onConfirm();\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  const onDelete = useCallback(\n    async function onDeleteFn() {\n      if ('deleteEntity' in state) {\n        setBusy(true);\n        try {\n          await state.deleteEntity();\n          const entityName = entity.metadata.title ?? entity.metadata.name;\n          onConfirm();\n          alertApi.post({\n            message: t('unregisterEntityDialog.deleteEntitySuccessMessage', {\n              entityName,\n            }),\n            severity: 'success',\n            display: 'transient',\n          });\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state, entity, t],\n  );\n\n  const DialogActionsPanel = () => (\n    <DialogActions className={classes.dialogActions}>\n      <Button onClick={onClose} color=\"primary\">\n        {t('unregisterEntityDialog.cancelButtonTitle')}\n      </Button>\n    </DialogActions>\n  );\n\n  if (state.type === 'loading') {\n    return <Progress />;\n  }\n\n  if (state.type === 'error') {\n    return <ResponseErrorPanel error={state.error} />;\n  }\n\n  if (state.type === 'bootstrap') {\n    return (\n      <>\n        <Alert severity=\"info\">\n          {t('unregisterEntityDialog.bootstrapState.title', {\n            appTitle,\n            location: state.location,\n          })}\n        </Alert>\n\n        <Box marginTop={2}>\n          {!showDelete && (\n            <>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                {t('unregisterEntityDialog.bootstrapState.advancedOptions')}\n              </Button>\n              <DialogActionsPanel />\n            </>\n          )}\n\n          {showDelete && (\n            <>\n              <DialogContentText>\n                {t('unregisterEntityDialog.bootstrapState.advancedDescription')}\n              </DialogContentText>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={busy}\n                onClick={onDelete}\n              >\n                {t('unregisterEntityDialog.deleteButtonTitle')}\n              </Button>\n              <DialogActionsPanel />\n            </>\n          )}\n        </Box>\n      </>\n    );\n  }\n\n  if (state.type === 'only-delete') {\n    return (\n      <>\n        <DialogContentText>\n          {t('unregisterEntityDialog.onlyDeleteStateTitle')}\n        </DialogContentText>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={busy}\n          onClick={onDelete}\n        >\n          {t('unregisterEntityDialog.deleteButtonTitle')}\n        </Button>\n        <DialogActionsPanel />\n      </>\n    );\n  }\n\n  if (state.type === 'unregister') {\n    return (\n      <>\n        <DialogContentText>\n          {t('unregisterEntityDialog.unregisterState.title')}\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          {state.colocatedEntities.map(e => (\n            <li key={`${e.kind}:${e.namespace}/${e.name}`}>\n              <EntityRefLink entityRef={e} />\n            </li>\n          ))}\n        </DialogContentText>\n        <DialogContentText>\n          {t('unregisterEntityDialog.unregisterState.subTitle')}\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          <li>{state.location}</li>\n        </DialogContentText>\n        <DialogContentText>\n          {t('unregisterEntityDialog.unregisterState.description', {\n            appTitle,\n          })}\n        </DialogContentText>\n        <Box marginTop={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={busy}\n            onClick={onUnregister}\n          >\n            {t('unregisterEntityDialog.unregisterState.unregisterButtonTitle')}\n          </Button>\n          {!showDelete && (\n            <Box component=\"span\" marginLeft={2}>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                {t('unregisterEntityDialog.unregisterState.advancedOptions')}\n              </Button>\n            </Box>\n          )}\n        </Box>\n\n        {showDelete && (\n          <>\n            <Box paddingTop={4} paddingBottom={4}>\n              <Divider />\n            </Box>\n            <DialogContentText>\n              {t('unregisterEntityDialog.unregisterState.advancedDescription')}\n            </DialogContentText>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={busy}\n              onClick={onDelete}\n            >\n              {t('unregisterEntityDialog.deleteButtonTitle')}\n            </Button>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Alert severity=\"error\">\n      {t('unregisterEntityDialog.errorStateTitle')}\n    </Alert>\n  );\n};\n\n/** @public */\nexport type UnregisterEntityDialogProps = {\n  open: boolean;\n  onConfirm: () => any;\n  onClose: () => any;\n  entity: Entity;\n};\n\n/** @public */\nexport const UnregisterEntityDialog = (props: UnregisterEntityDialogProps) => {\n  const { open, onConfirm, onClose, entity } = props;\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle id=\"responsive-dialog-title\">\n        {t('unregisterEntityDialog.title')}\n      </DialogTitle>\n      <DialogContent>\n        <Contents entity={entity} onConfirm={onConfirm} onClose={onClose} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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"}