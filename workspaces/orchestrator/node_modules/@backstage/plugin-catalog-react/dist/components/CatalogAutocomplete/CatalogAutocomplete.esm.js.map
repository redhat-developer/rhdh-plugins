{"version":3,"file":"CatalogAutocomplete.esm.js","sources":["../../../src/components/CatalogAutocomplete/CatalogAutocomplete.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Box from '@material-ui/core/Box';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport TextField, { OutlinedTextFieldProps } from '@material-ui/core/TextField';\nimport Grow from '@material-ui/core/Grow';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Autocomplete, {\n  AutocompleteProps,\n  AutocompleteRenderInputParams,\n} from '@material-ui/lab/Autocomplete';\nimport { ReactNode, useCallback } from 'react';\nimport { merge } from 'lodash';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(\n  theme => ({\n    root: {\n      margin: theme.spacing(1, 0),\n    },\n    label: {\n      position: 'relative',\n      fontWeight: 'bold',\n      fontSize: theme.typography.body2.fontSize,\n      fontFamily: theme.typography.fontFamily,\n      color: theme.palette.text.primary,\n      '& > span': {\n        top: 0,\n        left: 0,\n        position: 'absolute',\n      },\n    },\n  }),\n  { name: 'BackstageAutocomplete' },\n);\n\nconst BootstrapAutocomplete = withStyles(\n  (theme: Theme) =>\n    createStyles({\n      root: {},\n      paper: {\n        margin: 0,\n      },\n      hasClearIcon: {},\n      hasPopupIcon: {},\n      focused: {},\n      inputRoot: {\n        marginTop: 24,\n        backgroundColor: theme.palette.background.paper,\n        '$root$hasClearIcon$hasPopupIcon &': {\n          paddingBlock: theme.spacing(0.75),\n          paddingInlineStart: theme.spacing(0.75),\n        },\n        '$root$focused &': {\n          outline: 'none',\n        },\n        '$root &:hover > fieldset': {\n          borderColor: '#ced4da',\n        },\n        '$root$focused & > fieldset': {\n          borderWidth: 1,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n      popupIndicator: {\n        padding: 0,\n        margin: 0,\n        color: '#616161',\n        '&:hover': {\n          backgroundColor: 'unset',\n        },\n        '& [class*=\"MuiTouchRipple-root\"]': {\n          display: 'none',\n        },\n      },\n      endAdornment: {\n        '$root$hasClearIcon$hasPopupIcon &': {\n          right: 4,\n        },\n      },\n      input: {\n        '$root$hasClearIcon$hasPopupIcon &': {\n          fontSize: theme.typography.body1.fontSize,\n          paddingBlock: theme.spacing(0.8125),\n        },\n      },\n    }),\n  { name: 'BackstageAutocompleteBase' },\n)(Autocomplete) as typeof Autocomplete;\n\nconst PopperComponent = (props: PopperProps) => (\n  <Popper {...props} transition placement=\"bottom-start\">\n    {({ TransitionProps }) => (\n      <Grow {...TransitionProps} style={{ transformOrigin: '0 0 0' }}>\n        <Box>{props.children as ReactNode}</Box>\n      </Grow>\n    )}\n  </Popper>\n);\n\nconst PaperComponent = (props: PaperProps) => (\n  <Paper {...props} elevation={8} />\n);\n\n/**\n * Props for {@link CatalogAutocomplete}\n *\n * @public\n */\nexport type CatalogAutocompleteProps<\n  T,\n  Multiple extends boolean | undefined = undefined,\n  DisableClearable extends boolean | undefined = undefined,\n  FreeSolo extends boolean | undefined = undefined,\n> = Omit<\n  AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n  'PopperComponent' | 'PaperComponent' | 'popupIcon' | 'renderInput'\n> & {\n  name: string;\n  label?: string;\n  LabelProps?: TypographyProps<'label'>;\n  TextFieldProps?: Omit<OutlinedTextFieldProps, 'variant'>;\n  renderInput?: AutocompleteProps<\n    T,\n    Multiple,\n    DisableClearable,\n    FreeSolo\n  >['renderInput'];\n};\n\n/** @public */\nexport function CatalogAutocomplete<\n  T,\n  Multiple extends boolean | undefined = undefined,\n  DisableClearable extends boolean | undefined = undefined,\n  FreeSolo extends boolean | undefined = undefined,\n>(props: CatalogAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  const { label, name, LabelProps, TextFieldProps, ...rest } = props;\n  const classes = useStyles();\n  const renderInput = useCallback(\n    (params: AutocompleteRenderInputParams) => (\n      <TextField {...merge(params, TextFieldProps)} variant=\"outlined\" />\n    ),\n    [TextFieldProps],\n  );\n  const autocomplete = (\n    <BootstrapAutocomplete\n      size=\"small\"\n      {...rest}\n      renderInput={rest.renderInput ?? renderInput}\n      popupIcon={<ExpandMoreIcon data-testid={`${name}-expand`} />}\n      PaperComponent={PaperComponent}\n      PopperComponent={PopperComponent}\n    />\n  );\n\n  return (\n    <Box className={classes.root}>\n      {label ? (\n        <Typography\n          {...LabelProps}\n          className={classNames(classes.label, LabelProps?.className)}\n          component=\"label\"\n        >\n          <Box component=\"span\">{label}</Box>\n          {autocomplete}\n        </Typography>\n      ) : (\n        autocomplete\n      )}\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}