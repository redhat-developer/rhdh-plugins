{"version":3,"file":"AncestryPage.esm.js","sources":["../../../../src/components/InspectEntityDialog/components/AncestryPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n  Link,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi, useApp, useRouteRef } from '@backstage/core-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useAsync from 'react-use/esm/useAsync';\nimport { catalogApiRef } from '../../../api';\nimport { humanizeEntityRef } from '../../EntityRefLink';\nimport { entityRouteRef } from '../../../routes';\nimport { EntityKindIcon } from './EntityKindIcon';\nimport { catalogReactTranslationRef } from '../../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst useStyles = makeStyles(theme => ({\n  node: {\n    fill: theme.palette.grey[300],\n    stroke: theme.palette.grey[300],\n    '&.primary': {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.light,\n      stroke: theme.palette.secondary.light,\n    },\n  },\n  text: {\n    fill: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&.primary': {\n      fill: theme.palette.primary.contrastText,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.contrastText,\n    },\n    '&.focused': {\n      fontWeight: 'bold',\n    },\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n}));\n\ntype NodeType = Entity & { root: boolean };\n\nfunction useAncestry(root: Entity): {\n  loading: boolean;\n  error?: Error;\n  nodes: DependencyGraphTypes.DependencyNode<NodeType>[];\n  edges: DependencyGraphTypes.DependencyEdge[];\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const entityRef = stringifyEntityRef(root);\n\n  const { loading, error, value } = useAsync(async () => {\n    const response = await catalogClient.getEntityAncestors({ entityRef });\n    const nodes = new Array<DependencyGraphTypes.DependencyNode<NodeType>>();\n    const edges = new Array<DependencyGraphTypes.DependencyEdge>();\n    for (const current of response.items) {\n      const currentRef = stringifyEntityRef(current.entity);\n      const isRootNode = currentRef === response.rootEntityRef;\n      nodes.push({ id: currentRef, root: isRootNode, ...current.entity });\n      for (const parentRef of current.parentEntityRefs) {\n        edges.push({ from: currentRef, to: parentRef });\n      }\n    }\n    return { nodes, edges };\n  }, [entityRef]);\n\n  return {\n    loading,\n    error,\n    nodes: value?.nodes || [],\n    edges: value?.edges || [],\n  };\n}\n\nfunction CustomNode({ node }: DependencyGraphTypes.RenderNodeProps<NodeType>) {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const entityRoute = useRouteRef(entityRouteRef);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const app = useApp();\n  const idRef = useRef<SVGTextElement | null>(null);\n\n  useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const hasKindIcon = app.getSystemIcon(\n    `kind:${node.kind.toLocaleLowerCase('en-US')}`,\n  );\n  const padding = 10;\n  const iconSize = height;\n  const paddedIconWidth = hasKindIcon ? iconSize + padding : 0;\n  const paddedWidth = paddedIconWidth + width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  const displayTitle =\n    node.metadata.title ||\n    (node.kind && node.metadata.name && node.metadata.namespace\n      ? humanizeEntityRef({\n          kind: node.kind,\n          name: node.metadata.name,\n          namespace: node.metadata.namespace || '',\n        })\n      : node.id);\n\n  const onClick = () => {\n    navigate(\n      entityRoute({\n        kind: node.kind,\n        namespace: node.metadata.namespace || DEFAULT_NAMESPACE,\n        name: node.metadata.name,\n      }),\n    );\n  };\n\n  return (\n    <g onClick={onClick} className={classes.clickable}>\n      <rect\n        className={classNames(\n          classes.node,\n          node.root ? 'secondary' : 'primary',\n        )}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      {hasKindIcon && (\n        <EntityKindIcon\n          kind={node.kind}\n          y={padding}\n          x={padding}\n          width={iconSize}\n          height={iconSize}\n          className={classNames(\n            classes.text,\n            node.root ? 'secondary' : 'primary',\n          )}\n        />\n      )}\n      <text\n        ref={idRef}\n        className={classNames(\n          classes.text,\n          node.root ? 'secondary' : 'primary',\n        )}\n        y={paddedHeight / 2}\n        x={paddedIconWidth + (width + padding * 2) / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {displayTitle}\n      </text>\n    </g>\n  );\n}\n\nexport function AncestryPage(props: { entity: Entity }) {\n  const { loading, error, nodes, edges } = useAncestry(props.entity);\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <>\n      <DialogContentText variant=\"h2\">\n        {t('inspectEntityDialog.ancestryPage.title')}\n      </DialogContentText>\n      <DialogContentText gutterBottom>\n        This is the ancestry of entities above the current one - as in, the\n        chain(s) of entities down to the current one, where{' '}\n        <Link to=\"https://backstage.io/docs/features/software-catalog/life-of-an-entity\">\n          processors emitted\n        </Link>{' '}\n        child entities that ultimately led to the current one existing. Note\n        that this is a completely different mechanism from relations.\n      </DialogContentText>\n      <Box mt={4}>\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={CustomNode}\n          direction={DependencyGraphTypes.Direction.BOTTOM_TOP}\n          zoom=\"enable-on-click\"\n        />\n      </Box>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}