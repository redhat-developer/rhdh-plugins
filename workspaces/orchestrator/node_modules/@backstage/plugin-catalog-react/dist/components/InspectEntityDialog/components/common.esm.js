import { jsx, jsxs } from 'react/jsx-runtime';
import { Link } from '@backstage/core-components';
import Box from '@material-ui/core/Box';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText$1 from '@material-ui/core/ListItemText';
import MuiListSubheader from '@material-ui/core/ListSubheader';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import HelpOutlineIcon from '@material-ui/icons/HelpOutline';

const useStyles = makeStyles((theme) => ({
  root: {
    display: "flex",
    flexDirection: "column"
  },
  marginTop: {
    marginTop: theme.spacing(2)
  },
  helpIcon: {
    marginLeft: theme.spacing(1),
    color: theme.palette.text.disabled
  },
  monospace: {
    fontFamily: "monospace"
  }
}));
function ListItemText(props) {
  const classes = useStyles();
  return /* @__PURE__ */ jsx(
    ListItemText$1,
    {
      ...props,
      primaryTypographyProps: { className: classes.monospace },
      secondaryTypographyProps: { className: classes.monospace }
    }
  );
}
function ListSubheader(props) {
  const classes = useStyles();
  return /* @__PURE__ */ jsx(MuiListSubheader, { className: classes.monospace, children: props.children });
}
function Container(props) {
  return /* @__PURE__ */ jsx(Box, { mt: 2, children: /* @__PURE__ */ jsx(Card, { variant: "outlined", children: /* @__PURE__ */ jsxs(CardContent, { children: [
    /* @__PURE__ */ jsxs(Typography, { variant: "h6", gutterBottom: true, children: [
      props.title,
      props.helpLink && /* @__PURE__ */ jsx(HelpIcon, { to: props.helpLink })
    ] }),
    props.children
  ] }) }) });
}
function findLink(value) {
  if (value.match(/^url:https?:\/\//)) {
    return value.slice("url:".length);
  }
  if (value.match(/^https?:\/\//)) {
    return value;
  }
  return void 0;
}
function KeyValueListItem(props) {
  const [key, value] = props.entry;
  const link = findLink(value);
  return /* @__PURE__ */ jsxs(ListItem, { children: [
    props.indent && /* @__PURE__ */ jsx(ListItemIcon, {}),
    /* @__PURE__ */ jsx(
      ListItemText,
      {
        primary: key,
        secondary: link ? /* @__PURE__ */ jsx(Link, { to: link, children: value }) : value
      }
    )
  ] });
}
function HelpIcon(props) {
  const classes = useStyles();
  return /* @__PURE__ */ jsx(Link, { to: props.to, className: classes.helpIcon, children: /* @__PURE__ */ jsx(HelpOutlineIcon, { fontSize: "inherit" }) });
}

export { Container, HelpIcon, KeyValueListItem, ListItemText, ListSubheader };
//# sourceMappingURL=common.esm.js.map
