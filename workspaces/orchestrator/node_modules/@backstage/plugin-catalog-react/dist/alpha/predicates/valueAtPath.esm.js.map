{"version":3,"file":"valueAtPath.esm.js","sources":["../../../src/alpha/predicates/valueAtPath.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue } from '@backstage/types';\n\n/**\n * Looks up a value by path in a nested object structure.\n *\n * @remarks\n *\n * The path should be a dot-separated string of keys to traverse. The traversal\n * will tolerate object keys containing dots, and will keep searching until a\n * value has been found or all matching keys have been traversed.\n *\n * This lookup does not traverse into arrays, returning `undefined` instead.\n *\n * @internal\n */\nexport function valueAtPath(\n  value: JsonValue | undefined,\n  path: string,\n): JsonValue | undefined {\n  if (!path) {\n    return undefined;\n  }\n  if (\n    value === undefined ||\n    value === null ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return undefined;\n  }\n\n  for (const valueKey in value) {\n    if (!Object.hasOwn(value, valueKey)) {\n      continue;\n    }\n    if (valueKey === path) {\n      if (value[valueKey] !== undefined) {\n        return value[valueKey];\n      }\n    }\n    if (path.startsWith(`${valueKey}.`)) {\n      const found = valueAtPath(\n        value[valueKey],\n        path.slice(valueKey.length + 1),\n      );\n      if (found !== undefined) {\n        return found;\n      }\n    }\n  }\n\n  return undefined;\n}\n"],"names":[],"mappings":"AA+BO,SAAS,WAAA,CACd,OACA,IAAA,EACuB;AACvB,EAAA,IAAI,CAAC,IAAA,EAAM;AACT,IAAA,OAAO,MAAA;AAAA,EACT;AACA,EAAA,IACE,KAAA,KAAU,MAAA,IACV,KAAA,KAAU,IAAA,IACV,OAAO,UAAU,QAAA,IACjB,KAAA,CAAM,OAAA,CAAQ,KAAK,CAAA,EACnB;AACA,IAAA,OAAO,MAAA;AAAA,EACT;AAEA,EAAA,KAAA,MAAW,YAAY,KAAA,EAAO;AAC5B,IAAA,IAAI,CAAC,MAAA,CAAO,MAAA,CAAO,KAAA,EAAO,QAAQ,CAAA,EAAG;AACnC,MAAA;AAAA,IACF;AACA,IAAA,IAAI,aAAa,IAAA,EAAM;AACrB,MAAA,IAAI,KAAA,CAAM,QAAQ,CAAA,KAAM,MAAA,EAAW;AACjC,QAAA,OAAO,MAAM,QAAQ,CAAA;AAAA,MACvB;AAAA,IACF;AACA,IAAA,IAAI,IAAA,CAAK,UAAA,CAAW,CAAA,EAAG,QAAQ,GAAG,CAAA,EAAG;AACnC,MAAA,MAAM,KAAA,GAAQ,WAAA;AAAA,QACZ,MAAM,QAAQ,CAAA;AAAA,QACd,IAAA,CAAK,KAAA,CAAM,QAAA,CAAS,MAAA,GAAS,CAAC;AAAA,OAChC;AACA,MAAA,IAAI,UAAU,MAAA,EAAW;AACvB,QAAA,OAAO,KAAA;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,EAAA,OAAO,MAAA;AACT;;;;"}