{"version":3,"file":"convertLegacyEntityContentExtension.esm.js","sources":["../../../src/alpha/converters/convertLegacyEntityContentExtension.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\nimport {\n  BackstagePlugin,\n  getComponentData,\n  RouteRef as LegacyRouteRef,\n} from '@backstage/core-plugin-api';\nimport { ExtensionDefinition } from '@backstage/frontend-plugin-api';\nimport kebabCase from 'lodash/kebabCase';\nimport startCase from 'lodash/startCase';\nimport { ComponentType } from 'react';\nimport { EntityContentBlueprint } from '../blueprints/EntityContentBlueprint';\nimport { EntityPredicate } from '../predicates/types';\nimport { Entity } from '@backstage/catalog-model';\n\n/** @alpha */\nexport function convertLegacyEntityContentExtension(\n  LegacyExtension: ComponentType<{}>,\n  overrides?: {\n    name?: string;\n    filter?: string | EntityPredicate | ((entity: Entity) => boolean);\n    path?: string;\n    title?: string;\n\n    /**\n     * @deprecated Use the `path` param instead.\n     */\n    defaultPath?: [Error: `Use the 'path' override instead`];\n\n    /**\n     * @deprecated Use the `path` param instead.\n     */\n    defaultTitle?: [Error: `Use the 'title' override instead`];\n  },\n): ExtensionDefinition {\n  const element = <LegacyExtension />;\n\n  const extName = getComponentData<string>(element, 'core.extensionName');\n  if (!extName) {\n    throw new Error('Extension has no name');\n  }\n\n  const mountPoint = getComponentData<LegacyRouteRef>(\n    element,\n    'core.mountPoint',\n  );\n\n  const plugin = getComponentData<BackstagePlugin>(element, 'core.plugin');\n  const pluginId = plugin?.getId();\n\n  const match = extName.match(/^Entity(.*)Content$/);\n  const infix = match?.[1] ?? extName;\n\n  let name: string | undefined = infix;\n  if (\n    pluginId &&\n    name\n      .toLocaleLowerCase('en-US')\n      .startsWith(pluginId.toLocaleLowerCase('en-US'))\n  ) {\n    name = name.slice(pluginId.length);\n    if (!name) {\n      name = undefined;\n    }\n  }\n  name = name && kebabCase(name);\n  // TODO(blam): Remove support for all the `default*` props in the future, this breaks backwards compatibility without it\n  // As this is marked as BREAKING ALPHA, it doesn't affect the public API so it falls in range and gets picked\n  // up by packages that depend on `catalog-react`.\n  return EntityContentBlueprint.make({\n    name: overrides?.name ?? name,\n    params: {\n      filter: overrides?.filter,\n      path: (overrides?.path ??\n        overrides?.defaultPath ??\n        `/${kebabCase(infix)}`) as string,\n      title: (overrides?.title ??\n        overrides?.defaultTitle ??\n        startCase(infix)) as string,\n      routeRef: mountPoint && convertLegacyRouteRef(mountPoint),\n      loader: async () => compatWrapper(element),\n    },\n  });\n}\n"],"names":[],"mappings":";;;;;;;AAkCO,SAAS,mCAAA,CACd,iBACA,SAAA,EAgBqB;AACrB,EAAA,MAAM,OAAA,uBAAW,eAAA,EAAA,EAAgB,CAAA;AAEjC,EAAA,MAAM,OAAA,GAAU,gBAAA,CAAyB,OAAA,EAAS,oBAAoB,CAAA;AACtE,EAAA,IAAI,CAAC,OAAA,EAAS;AACZ,IAAA,MAAM,IAAI,MAAM,uBAAuB,CAAA;AAAA,EACzC;AAEA,EAAA,MAAM,UAAA,GAAa,gBAAA;AAAA,IACjB,OAAA;AAAA,IACA;AAAA,GACF;AAEA,EAAA,MAAM,MAAA,GAAS,gBAAA,CAAkC,OAAA,EAAS,aAAa,CAAA;AACvE,EAAA,MAAM,QAAA,GAAW,QAAQ,KAAA,EAAM;AAE/B,EAAA,MAAM,KAAA,GAAQ,OAAA,CAAQ,KAAA,CAAM,qBAAqB,CAAA;AACjD,EAAA,MAAM,KAAA,GAAQ,KAAA,GAAQ,CAAC,CAAA,IAAK,OAAA;AAE5B,EAAA,IAAI,IAAA,GAA2B,KAAA;AAC/B,EAAA,IACE,QAAA,IACA,IAAA,CACG,iBAAA,CAAkB,OAAO,CAAA,CACzB,WAAW,QAAA,CAAS,iBAAA,CAAkB,OAAO,CAAC,CAAA,EACjD;AACA,IAAA,IAAA,GAAO,IAAA,CAAK,KAAA,CAAM,QAAA,CAAS,MAAM,CAAA;AACjC,IAAA,IAAI,CAAC,IAAA,EAAM;AACT,MAAA,IAAA,GAAO,MAAA;AAAA,IACT;AAAA,EACF;AACA,EAAA,IAAA,GAAO,IAAA,IAAQ,UAAU,IAAI,CAAA;AAI7B,EAAA,OAAO,uBAAuB,IAAA,CAAK;AAAA,IACjC,IAAA,EAAM,WAAW,IAAA,IAAQ,IAAA;AAAA,IACzB,MAAA,EAAQ;AAAA,MACN,QAAQ,SAAA,EAAW,MAAA;AAAA,MACnB,IAAA,EAAO,WAAW,IAAA,IAChB,SAAA,EAAW,eACX,CAAA,CAAA,EAAI,SAAA,CAAU,KAAK,CAAC,CAAA,CAAA;AAAA,MACtB,OAAQ,SAAA,EAAW,KAAA,IACjB,SAAA,EAAW,YAAA,IACX,UAAU,KAAK,CAAA;AAAA,MACjB,QAAA,EAAU,UAAA,IAAc,qBAAA,CAAsB,UAAU,CAAA;AAAA,MACxD,MAAA,EAAQ,YAAY,aAAA,CAAc,OAAO;AAAA;AAC3C,GACD,CAAA;AACH;;;;"}