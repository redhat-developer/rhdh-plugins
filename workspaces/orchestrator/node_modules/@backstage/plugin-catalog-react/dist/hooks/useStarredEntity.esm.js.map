{"version":3,"file":"useStarredEntity.esm.js","sources":["../../src/hooks/useStarredEntity.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useCallback, useEffect, useState } from 'react';\nimport { starredEntitiesApiRef } from '../apis';\n\nfunction getEntityRef(\n  entityOrRef: Entity | CompoundEntityRef | string,\n): string {\n  return typeof entityOrRef === 'string'\n    ? entityOrRef\n    : stringifyEntityRef(entityOrRef);\n}\n\n/** @public */\nexport function useStarredEntity(\n  entityOrRef: Entity | CompoundEntityRef | string,\n): {\n  toggleStarredEntity: () => void;\n  isStarredEntity: boolean;\n} {\n  const starredEntitiesApi = useApi(starredEntitiesApiRef);\n\n  const [isStarredEntity, setIsStarredEntity] = useState(false);\n\n  useEffect(() => {\n    const subscription = starredEntitiesApi.starredEntitie$().subscribe({\n      next(starredEntities: Set<string>) {\n        setIsStarredEntity(starredEntities.has(getEntityRef(entityOrRef)));\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [entityOrRef, starredEntitiesApi]);\n\n  const toggleStarredEntity = useCallback(\n    () => starredEntitiesApi.toggleStarred(getEntityRef(entityOrRef)).then(),\n    [entityOrRef, starredEntitiesApi],\n  );\n\n  return {\n    toggleStarredEntity,\n    isStarredEntity,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AAyBA,SAAS,aACP,WAAA,EACQ;AACR,EAAA,OAAO,OAAO,WAAA,KAAgB,QAAA,GAC1B,WAAA,GACA,mBAAmB,WAAW,CAAA;AACpC;AAGO,SAAS,iBACd,WAAA,EAIA;AACA,EAAA,MAAM,kBAAA,GAAqB,OAAO,qBAAqB,CAAA;AAEvD,EAAA,MAAM,CAAC,eAAA,EAAiB,kBAAkB,CAAA,GAAI,SAAS,KAAK,CAAA;AAE5D,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,YAAA,GAAe,kBAAA,CAAmB,eAAA,EAAgB,CAAE,SAAA,CAAU;AAAA,MAClE,KAAK,eAAA,EAA8B;AACjC,QAAA,kBAAA,CAAmB,eAAA,CAAgB,GAAA,CAAI,YAAA,CAAa,WAAW,CAAC,CAAC,CAAA;AAAA,MACnE;AAAA,KACD,CAAA;AAED,IAAA,OAAO,MAAM;AACX,MAAA,YAAA,CAAa,WAAA,EAAY;AAAA,IAC3B,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,WAAA,EAAa,kBAAkB,CAAC,CAAA;AAEpC,EAAA,MAAM,mBAAA,GAAsB,WAAA;AAAA,IAC1B,MAAM,kBAAA,CAAmB,aAAA,CAAc,aAAa,WAAW,CAAC,EAAE,IAAA,EAAK;AAAA,IACvE,CAAC,aAAa,kBAAkB;AAAA,GAClC;AAEA,EAAA,OAAO;AAAA,IACL,mBAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}