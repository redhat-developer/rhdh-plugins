{"version":3,"file":"guestProvider.esm.js","sources":["../../../src/layout/SignInPage/guestProvider.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { InfoCard } from '../InfoCard/InfoCard';\nimport { GridItem } from './styles';\nimport { ProviderComponent, ProviderLoader, SignInProvider } from './types';\nimport { ProxiedSignInIdentity } from '../ProxiedSignInPage/ProxiedSignInIdentity';\nimport { discoveryApiRef, useApi } from '@backstage/core-plugin-api';\nimport { GuestUserIdentity } from './GuestUserIdentity';\nimport useLocalStorage from 'react-use/esm/useLocalStorage';\nimport { ResponseError } from '@backstage/errors';\nimport { coreComponentsTranslationRef } from '../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst getIdentity = async (identity: ProxiedSignInIdentity) => {\n  try {\n    const identityResponse = await identity.getBackstageIdentity();\n    return identityResponse;\n  } catch (error) {\n    if (\n      error.name === 'ResponseError' &&\n      (error as ResponseError).cause.name === 'NotFoundError'\n    ) {\n      return undefined;\n    }\n    throw error;\n  }\n};\n\nconst Component: ProviderComponent = ({\n  onSignInStarted,\n  onSignInSuccess,\n  onSignInFailure,\n}) => {\n  const discoveryApi = useApi(discoveryApiRef);\n  const [_, setUseLegacyGuestToken] = useLocalStorage('enableLegacyGuestToken');\n  const { t } = useTranslationRef(coreComponentsTranslationRef);\n\n  const handle = async () => {\n    onSignInStarted();\n\n    const identity = new ProxiedSignInIdentity({\n      provider: 'guest',\n      discoveryApi,\n    });\n\n    const identityResponse = await getIdentity(identity).catch(error => {\n      // eslint-disable-next-line no-console\n      console.warn(`Failed to sign in as a guest, ${error}`);\n      return undefined;\n    });\n\n    if (!identityResponse) {\n      // eslint-disable-next-line no-alert\n      const useLegacyGuestTokenResponse = confirm(\n        'Failed to sign in as a guest using the auth backend. Do you want to fallback to the legacy guest token?',\n      );\n      if (useLegacyGuestTokenResponse) {\n        setUseLegacyGuestToken(true);\n        onSignInSuccess(new GuestUserIdentity());\n        return;\n      }\n      onSignInFailure();\n      throw new Error(\n        `You cannot sign in as a guest, you must either enable the legacy guest token or configure the auth backend to support guest sign in.`,\n      );\n    }\n\n    onSignInSuccess(identity);\n  };\n\n  return (\n    <GridItem>\n      <InfoCard\n        title=\"Guest\"\n        variant=\"fullHeight\"\n        actions={\n          <Button color=\"primary\" variant=\"outlined\" onClick={handle}>\n            {t('signIn.guestProvider.enter')}\n          </Button>\n        }\n      >\n        <Typography variant=\"body1\" style={{ whiteSpace: 'pre-line' }}>\n          {t('signIn.guestProvider.subtitle')}\n        </Typography>\n      </InfoCard>\n    </GridItem>\n  );\n};\n\nconst loader: ProviderLoader = async apis => {\n  const useLegacyGuestToken =\n    localStorage.getItem('enableLegacyGuestToken') === 'true';\n\n  const identity = new ProxiedSignInIdentity({\n    provider: 'guest',\n    discoveryApi: apis.get(discoveryApiRef)!,\n  });\n  const identityResponse = await getIdentity(identity).catch(error => {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to sign in as a guest, ${error}`);\n    return undefined;\n  });\n\n  if (!identityResponse && !useLegacyGuestToken) {\n    return undefined;\n  } else if (identityResponse && useLegacyGuestToken) {\n    // eslint-disable-next-line no-alert\n    const switchToNewGuestToken = confirm(\n      'You are currently using the legacy guest token, but you have the new guest backend module installed. Do you want to use the new module?',\n    );\n    if (switchToNewGuestToken) {\n      localStorage.removeItem('enableLegacyGuestToken');\n    } else {\n      return new GuestUserIdentity();\n    }\n  } else if (useLegacyGuestToken) {\n    return new GuestUserIdentity();\n  }\n\n  return identity;\n};\n\nexport const guestProvider: SignInProvider = { Component, loader };\n"],"names":[],"mappings":"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"}