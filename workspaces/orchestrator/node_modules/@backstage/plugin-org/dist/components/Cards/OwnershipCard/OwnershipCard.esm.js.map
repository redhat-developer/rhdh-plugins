{"version":3,"file":"OwnershipCard.esm.js","sources":["../../../../src/components/Cards/OwnershipCard/OwnershipCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { ComponentsGrid } from './ComponentsGrid';\nimport { EntityRelationAggregation } from '../types';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { orgTranslationRef } from '../../../translation';\nimport Box from '@material-ui/core/Box';\n\n/** @public */\nexport type OwnershipCardClassKey =\n  | 'card'\n  | 'cardContent'\n  | 'list'\n  | 'listItemText'\n  | 'listItemSecondaryAction'\n  | 'grid';\n\nconst useStyles = makeStyles(\n  theme =>\n    createStyles({\n      card: {\n        maxHeight: '100%',\n      },\n      cardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n      },\n      list: {\n        [theme.breakpoints.down('xs')]: {\n          padding: `0 0 12px`,\n        },\n      },\n      listItemText: {\n        [theme.breakpoints.down('xs')]: {\n          paddingRight: 0,\n          paddingLeft: 0,\n        },\n      },\n      listItemSecondaryAction: {\n        [theme.breakpoints.down('xs')]: {\n          width: '100%',\n          top: 'auto',\n          right: 'auto',\n          position: 'relative',\n          transform: 'unset',\n        },\n      },\n      grid: {\n        overflowY: 'auto',\n        marginTop: 0,\n      },\n      box: {\n        overflowY: 'auto',\n        padding: theme.spacing(0, 1, 1),\n        margin: theme.spacing(0, -1),\n      },\n    }),\n  {\n    name: 'PluginOrgOwnershipCard',\n  },\n);\n\n/** @public */\nexport const OwnershipCard = (props: {\n  variant?: InfoCardVariants;\n  entityFilterKind?: string[];\n  hideRelationsToggle?: boolean;\n  /** @deprecated Please use relationAggregation instead */\n  relationsType?: EntityRelationAggregation;\n  relationAggregation?: EntityRelationAggregation;\n  entityLimit?: number;\n  maxScrollHeight?: string;\n}) => {\n  const {\n    variant,\n    entityFilterKind,\n    hideRelationsToggle,\n    entityLimit = 6,\n    maxScrollHeight: propMaxScrollHeight,\n  } = props;\n  const relationAggregation = props.relationAggregation ?? props.relationsType;\n  const relationsToggle =\n    hideRelationsToggle === undefined ? false : hideRelationsToggle;\n  const maxScrollHeight =\n    variant !== 'fullHeight' ? propMaxScrollHeight : undefined;\n  const classes = useStyles();\n  const { entity } = useEntity();\n  const { t } = useTranslationRef(orgTranslationRef);\n\n  const defaultRelationAggregation =\n    entity.kind === 'User' ? 'aggregated' : 'direct';\n  const [getRelationAggregation, setRelationAggregation] = useState(\n    relationAggregation ?? defaultRelationAggregation,\n  );\n\n  useEffect(() => {\n    if (!relationAggregation) {\n      setRelationAggregation(defaultRelationAggregation);\n    }\n  }, [setRelationAggregation, defaultRelationAggregation, relationAggregation]);\n\n  return (\n    <InfoCard\n      title={t('ownershipCard.title')}\n      variant={variant}\n      className={classes.card}\n      cardClassName={classes.cardContent}\n    >\n      {!relationsToggle && (\n        <List dense>\n          <ListItem className={classes.list}>\n            <ListItemText className={classes.listItemText} />\n            <ListItemSecondaryAction\n              className={classes.listItemSecondaryAction}\n            >\n              {t('ownershipCard.aggregateRelationsToggle.directRelations')}\n              <Tooltip\n                placement=\"top\"\n                arrow\n                title={\n                  getRelationAggregation === 'direct'\n                    ? t(\n                        'ownershipCard.aggregateRelationsToggle.directRelations',\n                      )\n                    : t(\n                        'ownershipCard.aggregateRelationsToggle.aggregatedRelations',\n                      )\n                }\n              >\n                <Switch\n                  color=\"primary\"\n                  checked={getRelationAggregation !== 'direct'}\n                  onChange={() => {\n                    const updatedRelationAggregation =\n                      getRelationAggregation === 'direct'\n                        ? 'aggregated'\n                        : 'direct';\n                    setRelationAggregation(updatedRelationAggregation);\n                  }}\n                  name=\"pin\"\n                  inputProps={{\n                    'aria-label': t(\n                      'ownershipCard.aggregateRelationsToggle.ariaLabel',\n                    ),\n                  }}\n                />\n              </Tooltip>\n              {t('ownershipCard.aggregateRelationsToggle.aggregatedRelations')}\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      <Box maxHeight={maxScrollHeight} className={classes.box}>\n        <ComponentsGrid\n          className={classes.grid}\n          entity={entity}\n          entityLimit={entityLimit}\n          relationAggregation={getRelationAggregation}\n          entityFilterKind={entityFilterKind}\n        />\n      </Box>\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}