{"version":3,"file":"MembersListCard.esm.js","sources":["../../../../../src/components/Cards/Group/MembersList/MembersListCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_NAMESPACE,\n  GroupEntity,\n  UserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  useEntity,\n  EntityRefLink,\n} from '@backstage/plugin-catalog-react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useState, ChangeEvent } from 'react';\nimport useAsync from 'react-use/esm/useAsync';\n\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  Link,\n  OverflowTooltip,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  getAllDesendantMembersForGroupEntity,\n  removeDuplicateEntitiesFrom,\n} from '../../../../helpers/helpers';\nimport { EntityRelationAggregation } from '../../types';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { orgTranslationRef } from '../../../../translation';\n\n/** @public */\nexport type MemberComponentClassKey = 'card' | 'avatar';\n\nconst useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      card: {\n        border: `1px solid ${theme.palette.divider}`,\n        boxShadow: theme.shadows[2],\n        borderRadius: '4px',\n        overflow: 'visible',\n        position: 'relative',\n        margin: theme.spacing(4, 1, 1),\n        flex: '1',\n        minWidth: '0px',\n      },\n      avatar: {\n        position: 'absolute',\n        top: '-2rem',\n      },\n    }),\n  { name: 'PluginOrgMemberComponent' },\n);\n\nconst MemberComponent = (props: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName, description },\n    spec: { profile },\n  } = props.member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Box className={classes.card}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        m={3}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Avatar\n          displayName={displayName}\n          picture={profile?.picture}\n          classes={classes}\n        />\n        <Box\n          pt={2}\n          sx={{\n            width: '100%',\n          }}\n          textAlign=\"center\"\n        >\n          <Typography variant=\"h6\">\n            <EntityRefLink\n              data-testid=\"user-link\"\n              entityRef={props.member}\n              title={displayName}\n            />\n          </Typography>\n          {profile?.email && (\n            <Link to={`mailto:${profile.email}`}>\n              <OverflowTooltip text={profile.email} />\n            </Link>\n          )}\n          {description && (\n            <Typography variant=\"subtitle2\">\n              <OverflowTooltip text={description} line={5} />\n            </Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\n/** @public */\nexport type MembersListCardClassKey = 'root' | 'cardContent' | 'memberList';\n\nconst useListStyles = makeStyles(\n  theme => ({\n    root: {\n      height: '100%',\n    },\n    cardContent: {\n      overflow: 'auto',\n    },\n    memberList: {\n      display: 'grid',\n      gap: theme.spacing(1.5),\n      gridTemplateColumns: `repeat(auto-fit, minmax(auto, ${theme.spacing(\n        34,\n      )}px))`,\n    },\n  }),\n  { name: 'PluginOrgMembersListCardComponent' },\n);\n\n/** @public */\nexport const MembersListCard = (props: {\n  memberDisplayTitle?: string;\n  pageSize?: number;\n  showAggregateMembersToggle?: boolean;\n  relationType?: string;\n  /** @deprecated Please use `relationAggregation` instead */\n  relationsType?: EntityRelationAggregation;\n  relationAggregation?: EntityRelationAggregation;\n}) => {\n  const { t } = useTranslationRef(orgTranslationRef);\n  const {\n    memberDisplayTitle = t('membersListCard.title'),\n    pageSize = 50,\n    showAggregateMembersToggle,\n    relationType = 'memberof',\n  } = props;\n  const relationAggregation =\n    props.relationAggregation ?? props.relationsType ?? 'direct';\n  const classes = useListStyles();\n\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || DEFAULT_NAMESPACE;\n\n  const [page, setPage] = useState(1);\n  const pageChange = (_: ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n\n  const [showAggregateMembers, setShowAggregateMembers] = useState(\n    relationAggregation === 'aggregated',\n  );\n\n  const { loading: loadingDescendantMembers, value: descendantMembers } =\n    useAsync(async () => {\n      if (!showAggregateMembers) {\n        return [] as UserEntity[];\n      }\n\n      return await getAllDesendantMembersForGroupEntity(\n        groupEntity,\n        catalogApi,\n        relationType,\n      );\n    }, [catalogApi, groupEntity, showAggregateMembers]);\n  const {\n    loading,\n    error,\n    value: directMembers,\n  } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: {\n        kind: 'User',\n        [`relations.${relationType.toLocaleLowerCase('en-US')}`]: [\n          stringifyEntityRef({\n            kind: 'group',\n            namespace: groupNamespace.toLocaleLowerCase('en-US'),\n            name: groupName.toLocaleLowerCase('en-US'),\n          }),\n        ],\n      },\n    });\n\n    return membersList.items as UserEntity[];\n  }, [catalogApi, groupEntity]);\n\n  const members = removeDuplicateEntitiesFrom(\n    [\n      ...(directMembers ?? []),\n      ...(descendantMembers && showAggregateMembers ? descendantMembers : []),\n    ].sort((a, b) =>\n      stringifyEntityRef(a).localeCompare(stringifyEntityRef(b)),\n    ),\n  ) as UserEntity[];\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel =\n    nbPages < 2\n      ? ''\n      : t('membersListCard.paginationLabel', {\n          page: String(page),\n          nbPages: String(nbPages),\n        });\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  let memberList: JSX.Element;\n  if (members && members.length > 0) {\n    memberList = (\n      <Box className={classes.memberList}>\n        {members.slice(pageSize * (page - 1), pageSize * page).map(member => (\n          <MemberComponent member={member} key={stringifyEntityRef(member)} />\n        ))}\n      </Box>\n    );\n  } else {\n    memberList = (\n      <Box p={2}>\n        <Typography>{t('membersListCard.noMembersDescription')}</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid item className={classes.root}>\n      <InfoCard\n        title={`${memberDisplayTitle} (${\n          members?.length || 0\n        }${paginationLabel})`}\n        subheader={t('membersListCard.subtitle', {\n          groupName: displayName,\n        })}\n        {...(nbPages <= 1 ? {} : { actions: pagination })}\n        className={classes.root}\n        cardClassName={classes.cardContent}\n      >\n        {showAggregateMembersToggle && (\n          <>\n            {t('membersListCard.aggregateMembersToggle.directMembers')}\n            <Switch\n              color=\"primary\"\n              checked={showAggregateMembers}\n              onChange={() => {\n                setShowAggregateMembers(!showAggregateMembers);\n              }}\n              inputProps={{\n                'aria-label': t(\n                  'membersListCard.aggregateMembersToggle.ariaLabel',\n                ),\n              }}\n            />\n            {t('membersListCard.aggregateMembersToggle.aggregatedMembers')}\n          </>\n        )}\n        {showAggregateMembers && loadingDescendantMembers ? (\n          <Progress />\n        ) : (\n          memberList\n        )}\n      </InfoCard>\n    </Grid>\n  );\n};\n"],"names":[],"mappings":"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"}