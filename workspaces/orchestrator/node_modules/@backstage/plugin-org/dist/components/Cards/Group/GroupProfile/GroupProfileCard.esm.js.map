{"version":3,"file":"GroupProfileCard.esm.js","sources":["../../../../../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  EntityRefLinks,\n  catalogApiRef,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { useCallback } from 'react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Alert from '@material-ui/lab/Alert';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { LinksGroup } from '../../Meta';\nimport { useEntityPermission } from '@backstage/plugin-catalog-react/alpha';\nimport { catalogEntityRefreshPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { orgTranslationRef } from '../../../../translation';\n\nconst CardTitle = (props: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{props.title}</Box>\n  </Box>\n);\n\n/** @public */\nexport const GroupProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n  const { allowed: canRefresh } = useEntityPermission(\n    catalogEntityRefreshPermission,\n  );\n  const { t } = useTranslationRef(orgTranslationRef);\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({\n      message: 'Refresh scheduled',\n      severity: 'info',\n      display: 'transient',\n    });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return (\n      <Alert severity=\"error\">{t('groupProfileCard.groupNotFound')}</Alert>\n    );\n  }\n\n  const {\n    metadata: { name, description, title, annotations, links },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? title ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label={t('groupProfileCard.editIconButtonTitle')}\n      title={t('groupProfileCard.editIconButtonTitle')}\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label={t('groupProfileCard.editIconButtonTitle')}\n      disabled\n      title={t('groupProfileCard.editIconButtonTitle')}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {allowRefresh && canRefresh && (\n            <IconButton\n              aria-label={t('groupProfileCard.refreshIconButtonAriaLabel')}\n              title={t('groupProfileCard.refreshIconButtonTitle')}\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title={t('groupProfileCard.listItemTitle.entityRef')}>\n                  <PermIdentityIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={stringifyEntityRef(group)}\n                secondary={t('groupProfileCard.listItemTitle.entityRef')}\n              />\n            </ListItem>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title={t('groupProfileCard.listItemTitle.email')}>\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText\n                  primary={<Link to={emailHref}>{profile.email}</Link>}\n                  secondary={t('groupProfileCard.listItemTitle.email')}\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip\n                  title={t('groupProfileCard.listItemTitle.parentGroup')}\n                >\n                  <AccountTreeIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  parentRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={parentRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary={t('groupProfileCard.listItemTitle.parentGroup')}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip\n                  title={t('groupProfileCard.listItemTitle.childGroups')}\n                >\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  childRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={childRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary={t('groupProfileCard.listItemTitle.childGroups')}\n              />\n            </ListItem>\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}