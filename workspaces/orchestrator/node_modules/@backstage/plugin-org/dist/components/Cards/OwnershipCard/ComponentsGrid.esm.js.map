{"version":3,"file":"ComponentsGrid.esm.js","sources":["../../../../src/components/Cards/OwnershipCard/ComponentsGrid.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  Link,\n  OverflowTooltip,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport pluralize from 'pluralize';\nimport { catalogIndexRouteRef } from '../../../routes';\nimport { useGetEntities } from './useGetEntities';\nimport { EntityRelationAggregation } from '../types';\n\n/** @public */\nexport type ComponentsGridClassKey =\n  | 'card'\n  | 'bold'\n  | 'smallFont'\n  | 'entityTypeBox';\n\nconst useStyles = makeStyles(\n  theme =>\n    createStyles({\n      card: {\n        border: `1px solid ${theme.palette.divider}`,\n        boxShadow: theme.shadows[2],\n        borderRadius: '4px',\n        padding: theme.spacing(2),\n        transition: `${theme.transitions.duration.standard}ms`,\n        '&:hover': {\n          boxShadow: theme.shadows[4],\n        },\n        height: '100%',\n      },\n      bold: {\n        fontWeight: theme.typography.fontWeightBold,\n      },\n      smallFont: {\n        fontSize: theme.typography.body2.fontSize,\n      },\n      entityTypeBox: {\n        background: (props: { type: string }) =>\n          theme.getPageTheme({ themeId: props.type }).backgroundImage,\n        color: (props: { type: string }) =>\n          theme.getPageTheme({ themeId: props.type }).fontColor,\n      },\n    }),\n  { name: 'PluginOrgComponentsGrid' },\n);\n\nconst EntityCountTile = ({\n  counter,\n  type,\n  kind,\n  url,\n}: {\n  counter: number;\n  type?: string;\n  kind: string;\n  url?: string;\n}) => {\n  const classes = useStyles({ type: type ?? kind });\n\n  const rawTitle = type ?? kind;\n  const isLongText = rawTitle.length > 10;\n\n  const tile = (\n    <Box\n      className={`${classes.card} ${classes.entityTypeBox}`}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <Typography className={classes.bold} variant=\"h6\">\n        {counter}\n      </Typography>\n      <Box sx={{ width: '100%', textAlign: 'center' }}>\n        <Typography\n          className={`${classes.bold} ${isLongText && classes.smallFont}`}\n          variant=\"h6\"\n        >\n          <OverflowTooltip\n            text={pluralize(rawTitle.toLocaleUpperCase('en-US'), counter)}\n          />\n        </Typography>\n      </Box>\n      {type && <Typography variant=\"subtitle1\">{kind}</Typography>}\n    </Box>\n  );\n\n  if (url) {\n    return (\n      <Link to={url} variant=\"body2\">\n        {tile}\n      </Link>\n    );\n  }\n  return tile;\n};\n\nexport const ComponentsGrid = ({\n  className,\n  entity,\n  relationsType,\n  relationAggregation,\n  entityFilterKind,\n  entityLimit = 6,\n}: {\n  className?: string;\n  entity: Entity;\n  /** @deprecated Please use relationAggregation instead */\n  relationsType?: EntityRelationAggregation;\n  relationAggregation?: EntityRelationAggregation;\n  entityFilterKind?: string[];\n  entityLimit?: number;\n}) => {\n  const catalogLink = useRouteRef(catalogIndexRouteRef);\n\n  if (!relationsType && !relationAggregation) {\n    throw new Error(\n      'The relationAggregation property must be set as an EntityRelationAggregation type.',\n    );\n  }\n  const { componentsWithCounters, loading, error } = useGetEntities(\n    entity,\n    (relationAggregation ?? relationsType)!, // we can safely use the non-null assertion here because of the run-time check above\n    entityFilterKind,\n    entityLimit,\n  );\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <Grid container className={className}>\n      {componentsWithCounters?.map(c => (\n        <Grid item xs={6} md={6} lg={4} key={c.type ?? c.kind}>\n          <EntityCountTile\n            counter={c.counter}\n            kind={c.kind}\n            type={c.type}\n            url={catalogLink && `${catalogLink()}?${c.queryParams}`}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n"],"names":[],"mappings":"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"}