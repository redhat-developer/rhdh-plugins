import { jsx } from 'react/jsx-runtime';
import { compatWrapper, convertLegacyRouteRefs } from '@backstage/core-compat-api';
import { createFrontendPlugin } from '@backstage/frontend-plugin-api';
import { catalogIndexRouteRef } from './routes.esm.js';
import { EntityCardBlueprint } from '@backstage/plugin-catalog-react/alpha';
export { orgTranslationRef } from './translation.esm.js';

const EntityGroupProfileCard = EntityCardBlueprint.make({
  name: "group-profile",
  params: {
    type: "info",
    filter: { kind: "group" },
    loader: async () => import('./components/Cards/Group/GroupProfile/GroupProfileCard.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ jsx(m.GroupProfileCard, {}))
    )
  }
});
const EntityMembersListCard = EntityCardBlueprint.make({
  name: "members-list",
  params: {
    filter: { kind: "group" },
    loader: async () => import('./components/Cards/Group/MembersList/MembersListCard.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ jsx(m.MembersListCard, {}))
    )
  }
});
const EntityOwnershipCard = EntityCardBlueprint.make({
  name: "ownership",
  params: {
    filter: { kind: { $in: ["group", "user"] } },
    loader: async () => import('./components/Cards/OwnershipCard/OwnershipCard.esm.js').then(
      (m) => compatWrapper(/* @__PURE__ */ jsx(m.OwnershipCard, {}))
    )
  }
});
const EntityUserProfileCard = EntityCardBlueprint.makeWithOverrides({
  name: "user-profile",
  config: {
    schema: {
      maxRelations: (z) => z.number().optional(),
      hideIcons: (z) => z.boolean().default(false)
    }
  },
  factory(originalFactory, { config }) {
    return originalFactory({
      type: "info",
      filter: { kind: "user" },
      loader: async () => import('./components/Cards/User/UserProfileCard/UserProfileCard.esm.js').then(
        (m) => compatWrapper(
          /* @__PURE__ */ jsx(
            m.UserProfileCard,
            {
              maxRelations: config.maxRelations,
              hideIcons: config.hideIcons
            }
          )
        )
      )
    });
  }
});
var alpha = createFrontendPlugin({
  pluginId: "org",
  info: { packageJson: () => import('./package.json.esm.js') },
  extensions: [
    EntityGroupProfileCard,
    EntityMembersListCard,
    EntityOwnershipCard,
    EntityUserProfileCard
  ],
  externalRoutes: convertLegacyRouteRefs({
    catalogIndex: catalogIndexRouteRef
  })
});

export { alpha as default };
//# sourceMappingURL=alpha.esm.js.map
