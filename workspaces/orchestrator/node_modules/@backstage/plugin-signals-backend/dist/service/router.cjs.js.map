{"version":3,"file":"router.cjs.js","sources":["../../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express, { NextFunction, Request, Response } from 'express';\nimport Router from 'express-promise-router';\nimport {\n  AuthService,\n  BackstageUserInfo,\n  DiscoveryService,\n  LifecycleService,\n  LoggerService,\n  UserInfoService,\n} from '@backstage/backend-plugin-api';\nimport * as https from 'https';\nimport http, { IncomingMessage } from 'http';\nimport { SignalManager } from './SignalManager';\nimport { EventsService } from '@backstage/plugin-events-node';\nimport { WebSocket, WebSocketServer } from 'ws';\nimport { Duplex } from 'stream';\nimport { Config } from '@backstage/config';\n\nexport interface RouterOptions {\n  logger: LoggerService;\n  events: EventsService;\n  discovery: DiscoveryService;\n  config: Config;\n  lifecycle: LifecycleService;\n  userInfo: UserInfoService;\n  auth: AuthService;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger, discovery, auth, userInfo } = options;\n\n  const manager = SignalManager.create(options);\n  let subscribedToUpgradeRequests = false;\n  let apiUrl: string | undefined = undefined;\n\n  const webSocketServer = new WebSocketServer({\n    noServer: true, // handle upgrade manually\n    clientTracking: false, // handle connections in SignalManager\n  });\n\n  webSocketServer.on('error', (error: Error) => {\n    logger.error(`WebSocket server error: ${error}`);\n  });\n\n  const handleUpgrade = async (\n    request: Request<any, any, any, any, any>,\n    socket: Duplex,\n    head: Buffer,\n  ) => {\n    if (!apiUrl) {\n      apiUrl = await discovery.getBaseUrl('signals');\n    }\n\n    if (!request.url || !apiUrl || !apiUrl.endsWith(request.url)) {\n      return;\n    }\n\n    let userIdentity: BackstageUserInfo | undefined = undefined;\n\n    // Authentication token is passed in Sec-WebSocket-Protocol header as there\n    // is no other way to pass the token with plain websockets\n    try {\n      const token = request.headers['sec-websocket-protocol'];\n      if (token) {\n        const credentials = await auth.authenticate(token);\n        if (auth.isPrincipal(credentials, 'user')) {\n          userIdentity = await userInfo.getUserInfo(credentials);\n        }\n      }\n    } catch (e) {\n      logger.error(`Failed to authenticate WebSocket connection: ${e}`);\n      socket.write(\n        'HTTP/1.1 401 Web Socket Protocol Handshake\\r\\n' +\n          'Upgrade: WebSocket\\r\\n' +\n          'Connection: Upgrade\\r\\n' +\n          '\\r\\n',\n      );\n      socket.destroy();\n      return;\n    }\n\n    try {\n      webSocketServer.handleUpgrade(\n        request,\n        socket,\n        head,\n        (ws: WebSocket, __: IncomingMessage) => {\n          manager.addConnection(ws, userIdentity);\n        },\n      );\n    } catch (e) {\n      logger.error(`Failed to handle WebSocket upgrade: ${e}`);\n      socket.write(\n        'HTTP/1.1 500 Web Socket Protocol Handshake\\r\\n' +\n          'Upgrade: WebSocket\\r\\n' +\n          'Connection: Upgrade\\r\\n' +\n          '\\r\\n',\n      );\n      socket.destroy();\n    }\n  };\n\n  const upgradeMiddleware = async (\n    req: Request,\n    _: Response,\n    next: NextFunction,\n  ) => {\n    const server: https.Server | http.Server = (req.socket as any)?.server;\n    if (\n      subscribedToUpgradeRequests ||\n      !server ||\n      !req.headers ||\n      req.headers.upgrade === undefined ||\n      req.headers.upgrade.toLowerCase() !== 'websocket'\n    ) {\n      next();\n      return;\n    }\n\n    subscribedToUpgradeRequests = true;\n    server.on('upgrade', handleUpgrade);\n  };\n\n  const router = Router();\n  router.use(express.json());\n  router.use(upgradeMiddleware);\n\n  router.get('/health', (_, response) => {\n    response.json({ status: 'ok' });\n  });\n\n  return router;\n}\n"],"names":["SignalManager","WebSocketServer","Router","express"],"mappings":"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"}