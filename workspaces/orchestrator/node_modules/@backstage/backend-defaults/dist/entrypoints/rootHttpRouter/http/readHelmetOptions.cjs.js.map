{"version":3,"file":"readHelmetOptions.cjs.js","sources":["../../../../src/entrypoints/rootHttpRouter/http/readHelmetOptions.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport helmet from 'helmet';\nimport { HelmetOptions } from 'helmet';\nimport kebabCase from 'lodash/kebabCase';\n\n/**\n * Attempts to read Helmet options from the backend configuration object.\n *\n * @public\n * @param config - The backend configuration object.\n * @returns A Helmet options object, or undefined if no Helmet configuration is present.\n *\n * @example\n * ```ts\n * const helmetOptions = readHelmetOptions(config.getConfig('backend'));\n * ```\n */\nexport function readHelmetOptions(config?: Config): HelmetOptions {\n  const cspOptions = readCspDirectives(config);\n  return {\n    contentSecurityPolicy: {\n      useDefaults: false,\n      directives: applyCspDirectives(cspOptions),\n    },\n    // These are all disabled in order to maintain backwards compatibility\n    // when bumping helmet v5. We can't enable these by default because\n    // there is no way for users to configure them.\n    // TODO(Rugvip): We should give control of this setup to consumers\n    crossOriginEmbedderPolicy: false,\n    crossOriginOpenerPolicy: false,\n    crossOriginResourcePolicy: false,\n    originAgentCluster: false,\n  };\n}\n\ntype CspDirectives = Record<string, string[] | false> | undefined;\n\n/**\n * Attempts to read a CSP directives from the backend configuration object.\n *\n * @example\n * ```yaml\n * backend:\n *   csp:\n *     connect-src: [\"'self'\", 'http:', 'https:']\n *     upgrade-insecure-requests: false\n * ```\n */\nfunction readCspDirectives(config?: Config): CspDirectives {\n  const cc = config?.getOptionalConfig('csp');\n  if (!cc) {\n    return undefined;\n  }\n\n  const result: Record<string, string[] | false> = {};\n  for (const key of cc.keys()) {\n    if (cc.get(key) === false) {\n      result[key] = false;\n    } else {\n      result[key] = cc.getStringArray(key);\n    }\n  }\n\n  return result;\n}\n\ntype ContentSecurityPolicyDirectives = Exclude<\n  HelmetOptions['contentSecurityPolicy'],\n  boolean | undefined\n>['directives'];\n\nexport function applyCspDirectives(\n  directives: CspDirectives,\n): ContentSecurityPolicyDirectives {\n  const result: ContentSecurityPolicyDirectives =\n    helmet.contentSecurityPolicy.getDefaultDirectives();\n\n  // TODO(Rugvip): We currently use non-precompiled AJV for validation in the frontend, which uses eval.\n  //               It should be replaced by any other solution that doesn't require unsafe-eval.\n  result['script-src'] = [\"'self'\", \"'unsafe-eval'\"];\n\n  // TODO(Rugvip): This is removed so that we maintained backwards compatibility\n  //               when bumping to helmet v5, we could remove this as well as\n  //               skip setting `useDefaults: false` in the future.\n  delete result['form-action'];\n\n  if (directives) {\n    for (const [key, value] of Object.entries(directives)) {\n      const kebabCaseKey = kebabCase(key);\n      if (value === false) {\n        delete result[kebabCaseKey];\n      } else {\n        result[kebabCaseKey] = value;\n      }\n    }\n  }\n\n  return result;\n}\n"],"names":["helmet","kebabCase"],"mappings":";;;;;;;;;;AAiCO,SAAS,kBAAkB,MAAA,EAAgC;AAChE,EAAA,MAAM,UAAA,GAAa,kBAAkB,MAAM,CAAA;AAC3C,EAAA,OAAO;AAAA,IACL,qBAAA,EAAuB;AAAA,MACrB,WAAA,EAAa,KAAA;AAAA,MACb,UAAA,EAAY,mBAAmB,UAAU;AAAA,KAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,yBAAA,EAA2B,KAAA;AAAA,IAC3B,uBAAA,EAAyB,KAAA;AAAA,IACzB,yBAAA,EAA2B,KAAA;AAAA,IAC3B,kBAAA,EAAoB;AAAA,GACtB;AACF;AAeA,SAAS,kBAAkB,MAAA,EAAgC;AACzD,EAAA,MAAM,EAAA,GAAK,MAAA,EAAQ,iBAAA,CAAkB,KAAK,CAAA;AAC1C,EAAA,IAAI,CAAC,EAAA,EAAI;AACP,IAAA,OAAO,MAAA;AAAA,EACT;AAEA,EAAA,MAAM,SAA2C,EAAC;AAClD,EAAA,KAAA,MAAW,GAAA,IAAO,EAAA,CAAG,IAAA,EAAK,EAAG;AAC3B,IAAA,IAAI,EAAA,CAAG,GAAA,CAAI,GAAG,CAAA,KAAM,KAAA,EAAO;AACzB,MAAA,MAAA,CAAO,GAAG,CAAA,GAAI,KAAA;AAAA,IAChB,CAAA,MAAO;AACL,MAAA,MAAA,CAAO,GAAG,CAAA,GAAI,EAAA,CAAG,cAAA,CAAe,GAAG,CAAA;AAAA,IACrC;AAAA,EACF;AAEA,EAAA,OAAO,MAAA;AACT;AAOO,SAAS,mBACd,UAAA,EACiC;AACjC,EAAA,MAAM,MAAA,GACJA,uBAAA,CAAO,qBAAA,CAAsB,oBAAA,EAAqB;AAIpD,EAAA,MAAA,CAAO,YAAY,CAAA,GAAI,CAAC,QAAA,EAAU,eAAe,CAAA;AAKjD,EAAA,OAAO,OAAO,aAAa,CAAA;AAE3B,EAAA,IAAI,UAAA,EAAY;AACd,IAAA,KAAA,MAAW,CAAC,GAAA,EAAK,KAAK,KAAK,MAAA,CAAO,OAAA,CAAQ,UAAU,CAAA,EAAG;AACrD,MAAA,MAAM,YAAA,GAAeC,2BAAU,GAAG,CAAA;AAClC,MAAA,IAAI,UAAU,KAAA,EAAO;AACnB,QAAA,OAAO,OAAO,YAAY,CAAA;AAAA,MAC5B,CAAA,MAAO;AACL,QAAA,MAAA,CAAO,YAAY,CAAA,GAAI,KAAA;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AAEA,EAAA,OAAO,MAAA;AACT;;;;;"}