{"version":3,"file":"CacheClient.cjs.js","sources":["../../../src/entrypoints/cache/CacheClient.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CacheService,\n  CacheServiceOptions,\n  CacheServiceSetOptions,\n} from '@backstage/backend-plugin-api';\nimport { JsonValue } from '@backstage/types';\nimport { createHash } from 'crypto';\nimport Keyv from 'keyv';\nimport { ttlToMilliseconds } from './types';\n\nexport type CacheClientFactory = (options: CacheServiceOptions) => Keyv;\n\n/**\n * A basic, concrete implementation of the CacheService, suitable for almost\n * all uses in Backstage.\n */\nexport class DefaultCacheClient implements CacheService {\n  #client: Keyv;\n  #clientFactory: CacheClientFactory;\n  #options: CacheServiceOptions;\n\n  constructor(\n    client: Keyv,\n    clientFactory: CacheClientFactory,\n    options: CacheServiceOptions,\n  ) {\n    this.#client = client;\n    this.#clientFactory = clientFactory;\n    this.#options = options;\n  }\n\n  async get<TValue extends JsonValue>(\n    key: string,\n  ): Promise<TValue | undefined> {\n    const k = this.getNormalizedKey(key);\n    const value = await this.#client.get(k);\n    return value as TValue | undefined;\n  }\n\n  async set(\n    key: string,\n    value: JsonValue,\n    opts: CacheServiceSetOptions = {},\n  ): Promise<void> {\n    const k = this.getNormalizedKey(key);\n    const ttl =\n      opts.ttl !== undefined ? ttlToMilliseconds(opts.ttl) : undefined;\n    await this.#client.set(k, value, ttl);\n  }\n\n  async delete(key: string): Promise<void> {\n    const k = this.getNormalizedKey(key);\n    await this.#client.delete(k);\n  }\n\n  withOptions(options: CacheServiceOptions): CacheService {\n    const newOptions = { ...this.#options, ...options };\n    return new DefaultCacheClient(\n      this.#clientFactory(newOptions),\n      this.#clientFactory,\n      newOptions,\n    );\n  }\n\n  /**\n   * Ensures keys are well-formed for any/all cache stores.\n   */\n  private getNormalizedKey(candidateKey: string): string {\n    // Remove potentially invalid characters.\n    const wellFormedKey = Buffer.from(candidateKey).toString('base64');\n\n    // Memcache in particular doesn't do well with keys > 250 bytes.\n    // Padded because a plugin ID is also prepended to the key.\n    if (wellFormedKey.length < 200) {\n      return wellFormedKey;\n    }\n\n    return createHash('sha256').update(candidateKey).digest('base64');\n  }\n}\n"],"names":["ttlToMilliseconds","createHash"],"mappings":";;;;;AAgCO,MAAM,kBAAA,CAA2C;AAAA,EACtD,OAAA;AAAA,EACA,cAAA;AAAA,EACA,QAAA;AAAA,EAEA,WAAA,CACE,MAAA,EACA,aAAA,EACA,OAAA,EACA;AACA,IAAA,IAAA,CAAK,OAAA,GAAU,MAAA;AACf,IAAA,IAAA,CAAK,cAAA,GAAiB,aAAA;AACtB,IAAA,IAAA,CAAK,QAAA,GAAW,OAAA;AAAA,EAClB;AAAA,EAEA,MAAM,IACJ,GAAA,EAC6B;AAC7B,IAAA,MAAM,CAAA,GAAI,IAAA,CAAK,gBAAA,CAAiB,GAAG,CAAA;AACnC,IAAA,MAAM,KAAA,GAAQ,MAAM,IAAA,CAAK,OAAA,CAAQ,IAAI,CAAC,CAAA;AACtC,IAAA,OAAO,KAAA;AAAA,EACT;AAAA,EAEA,MAAM,GAAA,CACJ,GAAA,EACA,KAAA,EACA,IAAA,GAA+B,EAAC,EACjB;AACf,IAAA,MAAM,CAAA,GAAI,IAAA,CAAK,gBAAA,CAAiB,GAAG,CAAA;AACnC,IAAA,MAAM,MACJ,IAAA,CAAK,GAAA,KAAQ,SAAYA,uBAAA,CAAkB,IAAA,CAAK,GAAG,CAAA,GAAI,MAAA;AACzD,IAAA,MAAM,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,EAAG,OAAO,GAAG,CAAA;AAAA,EACtC;AAAA,EAEA,MAAM,OAAO,GAAA,EAA4B;AACvC,IAAA,MAAM,CAAA,GAAI,IAAA,CAAK,gBAAA,CAAiB,GAAG,CAAA;AACnC,IAAA,MAAM,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAC,CAAA;AAAA,EAC7B;AAAA,EAEA,YAAY,OAAA,EAA4C;AACtD,IAAA,MAAM,aAAa,EAAE,GAAG,IAAA,CAAK,QAAA,EAAU,GAAG,OAAA,EAAQ;AAClD,IAAA,OAAO,IAAI,kBAAA;AAAA,MACT,IAAA,CAAK,eAAe,UAAU,CAAA;AAAA,MAC9B,IAAA,CAAK,cAAA;AAAA,MACL;AAAA,KACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,iBAAiB,YAAA,EAA8B;AAErD,IAAA,MAAM,gBAAgB,MAAA,CAAO,IAAA,CAAK,YAAY,CAAA,CAAE,SAAS,QAAQ,CAAA;AAIjE,IAAA,IAAI,aAAA,CAAc,SAAS,GAAA,EAAK;AAC9B,MAAA,OAAO,aAAA;AAAA,IACT;AAEA,IAAA,OAAOC,kBAAW,QAAQ,CAAA,CAAE,OAAO,YAAY,CAAA,CAAE,OAAO,QAAQ,CAAA;AAAA,EAClE;AACF;;;;"}