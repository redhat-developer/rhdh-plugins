{"version":3,"file":"DefaultUserInfoService.cjs.js","sources":["../../../src/entrypoints/userInfo/DefaultUserInfoService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UserInfoService,\n  BackstageUserInfo,\n  DiscoveryService,\n  BackstageCredentials,\n} from '@backstage/backend-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { decodeJwt } from 'jose';\nimport { toInternalBackstageCredentials } from '../auth/helpers';\n\nexport type Options = {\n  discovery: DiscoveryService;\n};\n\nexport class DefaultUserInfoService implements UserInfoService {\n  private readonly discovery: DiscoveryService;\n\n  constructor(options: Options) {\n    this.discovery = options.discovery;\n  }\n\n  async getUserInfo(\n    credentials: BackstageCredentials,\n  ): Promise<BackstageUserInfo> {\n    const internalCredentials = toInternalBackstageCredentials(credentials);\n    if (internalCredentials.principal.type !== 'user') {\n      throw new Error('Only user credentials are supported');\n    }\n    if (!internalCredentials.token) {\n      throw new Error('User credentials is unexpectedly missing token');\n    }\n    const { sub: userEntityRef, ent: tokenEnt } = decodeJwt(\n      internalCredentials.token,\n    );\n\n    if (typeof userEntityRef !== 'string') {\n      throw new Error('User entity ref must be a string');\n    }\n\n    let ownershipEntityRefs = tokenEnt;\n\n    if (!ownershipEntityRefs) {\n      const userInfoResp = await fetch(\n        `${await this.discovery.getBaseUrl('auth')}/v1/userinfo`,\n        {\n          headers: {\n            Authorization: `Bearer ${internalCredentials.token}`,\n          },\n        },\n      );\n\n      if (!userInfoResp.ok) {\n        throw await ResponseError.fromResponse(userInfoResp);\n      }\n\n      const {\n        claims: { ent },\n      } = await userInfoResp.json();\n      ownershipEntityRefs = ent;\n    }\n\n    if (!ownershipEntityRefs) {\n      throw new Error('Ownership entity refs can not be determined');\n    } else if (\n      !Array.isArray(ownershipEntityRefs) ||\n      ownershipEntityRefs.some(ref => typeof ref !== 'string')\n    ) {\n      throw new Error('Ownership entity refs must be an array of strings');\n    }\n\n    return { userEntityRef, ownershipEntityRefs };\n  }\n}\n"],"names":["toInternalBackstageCredentials","decodeJwt","ResponseError"],"mappings":";;;;;;AA8BO,MAAM,sBAAA,CAAkD;AAAA,EAC5C,SAAA;AAAA,EAEjB,YAAY,OAAA,EAAkB;AAC5B,IAAA,IAAA,CAAK,YAAY,OAAA,CAAQ,SAAA;AAAA,EAC3B;AAAA,EAEA,MAAM,YACJ,WAAA,EAC4B;AAC5B,IAAA,MAAM,mBAAA,GAAsBA,uCAA+B,WAAW,CAAA;AACtE,IAAA,IAAI,mBAAA,CAAoB,SAAA,CAAU,IAAA,KAAS,MAAA,EAAQ;AACjD,MAAA,MAAM,IAAI,MAAM,qCAAqC,CAAA;AAAA,IACvD;AACA,IAAA,IAAI,CAAC,oBAAoB,KAAA,EAAO;AAC9B,MAAA,MAAM,IAAI,MAAM,gDAAgD,CAAA;AAAA,IAClE;AACA,IAAA,MAAM,EAAE,GAAA,EAAK,aAAA,EAAe,GAAA,EAAK,UAAS,GAAIC,cAAA;AAAA,MAC5C,mBAAA,CAAoB;AAAA,KACtB;AAEA,IAAA,IAAI,OAAO,kBAAkB,QAAA,EAAU;AACrC,MAAA,MAAM,IAAI,MAAM,kCAAkC,CAAA;AAAA,IACpD;AAEA,IAAA,IAAI,mBAAA,GAAsB,QAAA;AAE1B,IAAA,IAAI,CAAC,mBAAA,EAAqB;AACxB,MAAA,MAAM,eAAe,MAAM,KAAA;AAAA,QACzB,GAAG,MAAM,IAAA,CAAK,SAAA,CAAU,UAAA,CAAW,MAAM,CAAC,CAAA,YAAA,CAAA;AAAA,QAC1C;AAAA,UACE,OAAA,EAAS;AAAA,YACP,aAAA,EAAe,CAAA,OAAA,EAAU,mBAAA,CAAoB,KAAK,CAAA;AAAA;AACpD;AACF,OACF;AAEA,MAAA,IAAI,CAAC,aAAa,EAAA,EAAI;AACpB,QAAA,MAAM,MAAMC,oBAAA,CAAc,YAAA,CAAa,YAAY,CAAA;AAAA,MACrD;AAEA,MAAA,MAAM;AAAA,QACJ,MAAA,EAAQ,EAAE,GAAA;AAAI,OAChB,GAAI,MAAM,YAAA,CAAa,IAAA,EAAK;AAC5B,MAAA,mBAAA,GAAsB,GAAA;AAAA,IACxB;AAEA,IAAA,IAAI,CAAC,mBAAA,EAAqB;AACxB,MAAA,MAAM,IAAI,MAAM,6CAA6C,CAAA;AAAA,IAC/D,CAAA,MAAA,IACE,CAAC,KAAA,CAAM,OAAA,CAAQ,mBAAmB,CAAA,IAClC,mBAAA,CAAoB,IAAA,CAAK,CAAA,GAAA,KAAO,OAAO,GAAA,KAAQ,QAAQ,CAAA,EACvD;AACA,MAAA,MAAM,IAAI,MAAM,mDAAmD,CAAA;AAAA,IACrE;AAEA,IAAA,OAAO,EAAE,eAAe,mBAAA,EAAoB;AAAA,EAC9C;AACF;;;;"}