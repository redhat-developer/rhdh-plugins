{"version":3,"file":"jwks.cjs.js","sources":["../../../../src/entrypoints/auth/external/jwks.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jwtVerify, createRemoteJWKSet, JWTVerifyGetKey } from 'jose';\nimport { Config } from '@backstage/config';\nimport {\n  readAccessRestrictionsFromConfig,\n  readStringOrStringArrayFromConfig,\n} from './helpers';\nimport { AccessRestriptionsMap, TokenHandler } from './types';\n\n/**\n * Handles `type: jwks` access.\n *\n * @internal\n */\nexport class JWKSHandler implements TokenHandler {\n  #entries: Array<{\n    algorithms?: string[];\n    audiences?: string[];\n    issuers?: string[];\n    subjectPrefix?: string;\n    url: URL;\n    jwks: JWTVerifyGetKey;\n    allAccessRestrictions?: AccessRestriptionsMap;\n  }> = [];\n\n  add(config: Config) {\n    if (!config.getString('options.url').match(/^\\S+$/)) {\n      throw new Error(\n        'Illegal JWKS URL, must be a set of non-space characters',\n      );\n    }\n\n    const algorithms = readStringOrStringArrayFromConfig(\n      config,\n      'options.algorithm',\n    );\n    const issuers = readStringOrStringArrayFromConfig(config, 'options.issuer');\n    const audiences = readStringOrStringArrayFromConfig(\n      config,\n      'options.audience',\n    );\n    const subjectPrefix = config.getOptionalString('options.subjectPrefix');\n    const url = new URL(config.getString('options.url'));\n    const jwks = createRemoteJWKSet(url);\n    const allAccessRestrictions = readAccessRestrictionsFromConfig(config);\n\n    this.#entries.push({\n      algorithms,\n      audiences,\n      issuers,\n      jwks,\n      subjectPrefix,\n      url,\n      allAccessRestrictions,\n    });\n  }\n\n  async verifyToken(token: string) {\n    for (const entry of this.#entries) {\n      try {\n        const {\n          payload: { sub },\n        } = await jwtVerify(token, entry.jwks, {\n          algorithms: entry.algorithms,\n          issuer: entry.issuers,\n          audience: entry.audiences,\n        });\n\n        if (sub) {\n          const prefix = entry.subjectPrefix\n            ? `external:${entry.subjectPrefix}:`\n            : 'external:';\n          return {\n            subject: `${prefix}${sub}`,\n            allAccessRestrictions: entry.allAccessRestrictions,\n          };\n        }\n      } catch {\n        continue;\n      }\n    }\n    return undefined;\n  }\n}\n"],"names":["readStringOrStringArrayFromConfig","createRemoteJWKSet","readAccessRestrictionsFromConfig","jwtVerify"],"mappings":";;;;;AA6BO,MAAM,WAAA,CAAoC;AAAA,EAC/C,WAQK,EAAC;AAAA,EAEN,IAAI,MAAA,EAAgB;AAClB,IAAA,IAAI,CAAC,MAAA,CAAO,SAAA,CAAU,aAAa,CAAA,CAAE,KAAA,CAAM,OAAO,CAAA,EAAG;AACnD,MAAA,MAAM,IAAI,KAAA;AAAA,QACR;AAAA,OACF;AAAA,IACF;AAEA,IAAA,MAAM,UAAA,GAAaA,yCAAA;AAAA,MACjB,MAAA;AAAA,MACA;AAAA,KACF;AACA,IAAA,MAAM,OAAA,GAAUA,yCAAA,CAAkC,MAAA,EAAQ,gBAAgB,CAAA;AAC1E,IAAA,MAAM,SAAA,GAAYA,yCAAA;AAAA,MAChB,MAAA;AAAA,MACA;AAAA,KACF;AACA,IAAA,MAAM,aAAA,GAAgB,MAAA,CAAO,iBAAA,CAAkB,uBAAuB,CAAA;AACtE,IAAA,MAAM,MAAM,IAAI,GAAA,CAAI,MAAA,CAAO,SAAA,CAAU,aAAa,CAAC,CAAA;AACnD,IAAA,MAAM,IAAA,GAAOC,wBAAmB,GAAG,CAAA;AACnC,IAAA,MAAM,qBAAA,GAAwBC,yCAAiC,MAAM,CAAA;AAErE,IAAA,IAAA,CAAK,SAAS,IAAA,CAAK;AAAA,MACjB,UAAA;AAAA,MACA,SAAA;AAAA,MACA,OAAA;AAAA,MACA,IAAA;AAAA,MACA,aAAA;AAAA,MACA,GAAA;AAAA,MACA;AAAA,KACD,CAAA;AAAA,EACH;AAAA,EAEA,MAAM,YAAY,KAAA,EAAe;AAC/B,IAAA,KAAA,MAAW,KAAA,IAAS,KAAK,QAAA,EAAU;AACjC,MAAA,IAAI;AACF,QAAA,MAAM;AAAA,UACJ,OAAA,EAAS,EAAE,GAAA;AAAI,SACjB,GAAI,MAAMC,cAAA,CAAU,KAAA,EAAO,MAAM,IAAA,EAAM;AAAA,UACrC,YAAY,KAAA,CAAM,UAAA;AAAA,UAClB,QAAQ,KAAA,CAAM,OAAA;AAAA,UACd,UAAU,KAAA,CAAM;AAAA,SACjB,CAAA;AAED,QAAA,IAAI,GAAA,EAAK;AACP,UAAA,MAAM,SAAS,KAAA,CAAM,aAAA,GACjB,CAAA,SAAA,EAAY,KAAA,CAAM,aAAa,CAAA,CAAA,CAAA,GAC/B,WAAA;AACJ,UAAA,OAAO;AAAA,YACL,OAAA,EAAS,CAAA,EAAG,MAAM,CAAA,EAAG,GAAG,CAAA,CAAA;AAAA,YACxB,uBAAuB,KAAA,CAAM;AAAA,WAC/B;AAAA,QACF;AAAA,MACF,CAAA,CAAA,MAAQ;AACN,QAAA;AAAA,MACF;AAAA,IACF;AACA,IAAA,OAAO,MAAA;AAAA,EACT;AACF;;;;"}