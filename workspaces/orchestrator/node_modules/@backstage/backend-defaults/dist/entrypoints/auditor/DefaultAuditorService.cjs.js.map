{"version":3,"file":"DefaultAuditorService.cjs.js","sources":["../../../src/entrypoints/auditor/DefaultAuditorService.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AuditorService,\n  AuditorServiceCreateEventOptions,\n  AuditorServiceEvent,\n  AuditorServiceEventSeverityLevel,\n  AuthService,\n  BackstageCredentials,\n  HttpAuthService,\n  PluginMetadataService,\n} from '@backstage/backend-plugin-api';\nimport { ForwardedError } from '@backstage/errors';\nimport type { JsonObject } from '@backstage/types';\nimport type { Request } from 'express';\n\n/** @public */\nexport type AuditorEventActorDetails = {\n  actorId?: string;\n  ip?: string;\n  hostname?: string;\n  userAgent?: string;\n};\n\n/** @public */\nexport type AuditorEventRequest = {\n  url: string;\n  method: string;\n};\n\n/** @public */\nexport type AuditorEventStatus =\n  | { status: 'initiated' }\n  | { status: 'succeeded' }\n  | {\n      status: 'failed';\n      error: Error;\n    };\n\n/**\n * Options for creating an auditor event.\n *\n * @public\n */\nexport type AuditorEventOptions<TMeta extends JsonObject> = {\n  /**\n   * Use kebab-case to name audit events (e.g., \"user-login\", \"file-download\").\n   *\n   * The `pluginId` already provides plugin/module context, so avoid redundant prefixes in the `eventId`.\n   */\n  eventId: string;\n\n  severityLevel?: AuditorServiceEventSeverityLevel;\n\n  /** (Optional) The associated HTTP request, if applicable. */\n  request?: Request<any, any, any, any, any>;\n\n  /** (Optional) Additional metadata relevant to the event, structured as a JSON object. */\n  meta?: TMeta;\n} & AuditorEventStatus;\n\n/**\n * Common fields of an audit event.\n *\n * @public\n */\nexport type AuditorEvent = {\n  plugin: string;\n  eventId: string;\n  severityLevel: AuditorServiceEventSeverityLevel;\n  actor: AuditorEventActorDetails;\n  meta?: JsonObject;\n  request?: AuditorEventRequest;\n} & AuditorEventStatus;\n\n/**\n * Logging function used by the auditor.\n * @public\n */\nexport type AuditorLogFunction = (event: AuditorEvent) => void | Promise<void>;\n\n/**\n * A {@link @backstage/backend-plugin-api#AuditorService} implementation that logs events using a provided callback.\n *\n * @public\n *\n * @example\n * ```ts\n * export const auditorServiceFactory = createServiceFactory({\n *   service: coreServices.auditor,\n *   deps: {\n *     logger: coreServices.logger,\n *     auth: coreServices.auth,\n *     httpAuth: coreServices.httpAuth,\n *     plugin: coreServices.pluginMetadata,\n *   },\n *   factory({ logger, plugin, auth, httpAuth }) {\n *     const auditLogger = logger.child({ isAuditEvent: true });\n *     return DefaultAuditorService.create(\n *       event => auditLogger.info(`${event.plugin}.${event.eventId}`, event),\n *       { plugin, auth, httpAuth },\n *     );\n *   },\n * });\n * ```\n */\nexport class DefaultAuditorService implements AuditorService {\n  private readonly logFn: AuditorLogFunction;\n  private readonly auth: AuthService;\n  private readonly httpAuth: HttpAuthService;\n  private readonly plugin: PluginMetadataService;\n\n  private constructor(\n    logFn: AuditorLogFunction,\n    deps: {\n      auth: AuthService;\n      httpAuth: HttpAuthService;\n      plugin: PluginMetadataService;\n    },\n  ) {\n    this.logFn = logFn;\n    this.auth = deps.auth;\n    this.httpAuth = deps.httpAuth;\n    this.plugin = deps.plugin;\n  }\n\n  /**\n   * Creates a {@link DefaultAuditorService} instance.\n   */\n  static create(\n    logFn: AuditorLogFunction,\n    deps: {\n      auth: AuthService;\n      httpAuth: HttpAuthService;\n      plugin: PluginMetadataService;\n    },\n  ): DefaultAuditorService {\n    return new DefaultAuditorService(logFn, deps);\n  }\n\n  private async log<TMeta extends JsonObject>(\n    options: AuditorEventOptions<TMeta>,\n  ): Promise<void> {\n    const { eventId, severityLevel = 'low', request, meta, ...rest } = options;\n\n    await this.logFn({\n      plugin: this.plugin.getId(),\n      eventId,\n      severityLevel,\n      actor: {\n        actorId: await this.getActorId(request),\n        ip: request?.ip,\n        hostname: request?.hostname,\n        userAgent: request?.get('user-agent'),\n      },\n      request: request\n        ? {\n            url: request?.originalUrl,\n            method: request?.method,\n          }\n        : undefined,\n      meta: Object.keys(meta ?? {}).length === 0 ? undefined : meta,\n      ...rest,\n    });\n  }\n\n  async createEvent(\n    options: AuditorServiceCreateEventOptions,\n  ): Promise<AuditorServiceEvent> {\n    await this.log({ ...options, status: 'initiated' });\n\n    return {\n      success: async params => {\n        await this.log({\n          ...options,\n          meta: { ...options.meta, ...params?.meta },\n          status: 'succeeded',\n        });\n      },\n      fail: async params => {\n        await this.log({\n          ...options,\n          ...params,\n          error: params.error,\n          meta: { ...options.meta, ...params?.meta },\n          status: 'failed',\n        });\n      },\n    };\n  }\n\n  private async getActorId(\n    request?: Request<any, any, any, any, any>,\n  ): Promise<string | undefined> {\n    let credentials: BackstageCredentials =\n      await this.auth.getOwnServiceCredentials();\n\n    if (request) {\n      try {\n        credentials = await this.httpAuth.credentials(request);\n      } catch (error) {\n        throw new ForwardedError('Could not resolve credentials', error);\n      }\n    }\n\n    if (this.auth.isPrincipal(credentials, 'user')) {\n      return credentials.principal.userEntityRef;\n    }\n\n    if (this.auth.isPrincipal(credentials, 'service')) {\n      return credentials.principal.subject;\n    }\n\n    return undefined;\n  }\n}\n"],"names":["ForwardedError"],"mappings":"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"}