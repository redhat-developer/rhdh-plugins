'use strict';

var backendPluginApi = require('@backstage/backend-plugin-api');
var DefaultAuditorService = require('./DefaultAuditorService.cjs.js');
var utils = require('./utils.cjs.js');

const auditorServiceFactory = backendPluginApi.createServiceFactory({
  service: backendPluginApi.coreServices.auditor,
  deps: {
    config: backendPluginApi.coreServices.rootConfig,
    logger: backendPluginApi.coreServices.logger,
    auth: backendPluginApi.coreServices.auth,
    httpAuth: backendPluginApi.coreServices.httpAuth,
    plugin: backendPluginApi.coreServices.pluginMetadata
  },
  factory({ config, logger, plugin, auth, httpAuth }) {
    const auditLogger = logger.child({ isAuditEvent: true });
    const severityLogLevelMappings = utils.getSeverityLogLevelMappings(config);
    return DefaultAuditorService.DefaultAuditorService.create(
      (event) => {
        if ("error" in event) {
          const { error, ...rest } = event;
          const childAuditLogger = auditLogger.child(rest);
          childAuditLogger[severityLogLevelMappings[event.severityLevel]](
            `${event.plugin}.${event.eventId}`,
            error
          );
        } else {
          auditLogger[severityLogLevelMappings[event.severityLevel]](
            `${event.plugin}.${event.eventId}`,
            event
          );
        }
      },
      { plugin, auth, httpAuth }
    );
  }
});

exports.auditorServiceFactory = auditorServiceFactory;
//# sourceMappingURL=auditorServiceFactory.cjs.js.map
