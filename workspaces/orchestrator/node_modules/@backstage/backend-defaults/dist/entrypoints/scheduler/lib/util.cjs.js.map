{"version":3,"file":"util.cjs.js","sources":["../../../../src/entrypoints/scheduler/lib/util.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  InputError,\n  serializeError as internalSerializeError,\n} from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { DateTime, Duration } from 'luxon';\n\nexport const TRACER_ID = 'backstage-service-scheduler';\n\n// Keep the IDs compatible with e.g. Prometheus labels\nexport function validateId(id: string) {\n  if (typeof id !== 'string' || !id.trim()) {\n    throw new InputError(`${id} is not a valid ID, expected non-empty string`);\n  }\n}\n\nexport function dbTime(t: Date | string): DateTime {\n  if (typeof t === 'string') {\n    return DateTime.fromSQL(t);\n  }\n  return DateTime.fromJSDate(t);\n}\n\nexport function nowPlus(duration: Duration | undefined, knex: Knex) {\n  const seconds = duration?.as('seconds') ?? 0;\n  if (!seconds) {\n    return knex.fn.now();\n  }\n\n  if (knex.client.config.client.includes('sqlite3')) {\n    return knex.raw(`datetime('now', ?)`, [`${seconds} seconds`]);\n  }\n\n  if (knex.client.config.client.includes('mysql')) {\n    return knex.raw(`now() + interval ${seconds} second`);\n  }\n\n  return knex.raw(`now() + interval '${seconds} seconds'`);\n}\n\n/**\n * Sleep for the given duration, but return sooner if the abort signal\n * triggers.\n *\n * @param duration - The amount of time to sleep, at most\n * @param abortSignal - An optional abort signal that short circuits the wait\n */\nexport async function sleep(\n  duration: Duration,\n  abortSignal?: AbortSignal,\n): Promise<void> {\n  if (abortSignal?.aborted) {\n    return;\n  }\n\n  await new Promise<void>(resolve => {\n    let timeoutHandle: NodeJS.Timeout | undefined = undefined;\n\n    const done = () => {\n      if (timeoutHandle) {\n        clearTimeout(timeoutHandle);\n      }\n      abortSignal?.removeEventListener('abort', done);\n      resolve();\n    };\n\n    timeoutHandle = setTimeout(done, duration.as('milliseconds'));\n    abortSignal?.addEventListener('abort', done);\n  });\n}\n\n/**\n * Creates a new AbortController that, in addition to working as a regular\n * standalone controller, also gets aborted if the given parent signal\n * reaches aborted state.\n *\n * @param parent - The \"parent\" signal that can trigger the delegate\n */\nexport function delegateAbortController(parent?: AbortSignal): AbortController {\n  const delegate = new AbortController();\n\n  if (parent) {\n    if (parent.aborted) {\n      delegate.abort();\n    } else {\n      const onParentAborted = () => {\n        delegate.abort();\n      };\n\n      const onChildAborted = () => {\n        parent.removeEventListener('abort', onParentAborted);\n      };\n\n      parent.addEventListener('abort', onParentAborted, { once: true });\n      delegate.signal.addEventListener('abort', onChildAborted, { once: true });\n    }\n  }\n\n  return delegate;\n}\n\nexport function serializeError(error: Error): string {\n  return JSON.stringify(\n    internalSerializeError(error, {\n      includeStack: process.env.NODE_ENV === 'development',\n    }),\n  );\n}\n"],"names":["InputError","DateTime","internalSerializeError"],"mappings":"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"}