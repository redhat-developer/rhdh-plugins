{"version":3,"file":"UrlReaderPredicateMux.cjs.js","sources":["../../../../src/entrypoints/urlReader/lib/UrlReaderPredicateMux.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UrlReaderServiceReadTreeOptions,\n  UrlReaderServiceReadTreeResponse,\n  UrlReaderServiceReadUrlOptions,\n  UrlReaderServiceReadUrlResponse,\n  UrlReaderServiceSearchOptions,\n  UrlReaderServiceSearchResponse,\n  UrlReaderService,\n} from '@backstage/backend-plugin-api';\nimport { NotAllowedError } from '@backstage/errors';\nimport { UrlReaderPredicateTuple } from './types';\n\nfunction notAllowedMessage(url: string) {\n  return (\n    `Reading from '${url}' is not allowed. ` +\n    `You may need to configure an integration for the target host, or add it ` +\n    `to the configured list of allowed hosts at 'backend.reading.allow'`\n  );\n}\n\n/**\n * A UrlReaderService implementation that selects from a set of readers\n * based on a predicate tied to each reader.\n */\nexport class UrlReaderPredicateMux implements UrlReaderService {\n  private readonly readers: UrlReaderPredicateTuple[] = [];\n\n  register(tuple: UrlReaderPredicateTuple): void {\n    this.readers.push(tuple);\n  }\n\n  async readUrl(\n    url: string,\n    options?: UrlReaderServiceReadUrlOptions,\n  ): Promise<UrlReaderServiceReadUrlResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return reader.readUrl(url, options);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  async readTree(\n    url: string,\n    options?: UrlReaderServiceReadTreeOptions,\n  ): Promise<UrlReaderServiceReadTreeResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return await reader.readTree(url, options);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  async search(\n    url: string,\n    options?: UrlReaderServiceSearchOptions,\n  ): Promise<UrlReaderServiceSearchResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return await reader.search(url, options);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  toString() {\n    return `predicateMux{readers=${this.readers.map(t => t.reader).join(',')}`;\n  }\n}\n"],"names":["NotAllowedError"],"mappings":";;;;AA4BA,SAAS,kBAAkB,GAAA,EAAa;AACtC,EAAA,OACE,iBAAiB,GAAG,CAAA,4JAAA,CAAA;AAIxB;AAMO,MAAM,qBAAA,CAAkD;AAAA,EAC5C,UAAqC,EAAC;AAAA,EAEvD,SAAS,KAAA,EAAsC;AAC7C,IAAA,IAAA,CAAK,OAAA,CAAQ,KAAK,KAAK,CAAA;AAAA,EACzB;AAAA,EAEA,MAAM,OAAA,CACJ,GAAA,EACA,OAAA,EAC0C;AAC1C,IAAA,MAAM,MAAA,GAAS,IAAI,GAAA,CAAI,GAAG,CAAA;AAE1B,IAAA,KAAA,MAAW,EAAE,SAAA,EAAW,MAAA,EAAO,IAAK,KAAK,OAAA,EAAS;AAChD,MAAA,IAAI,SAAA,CAAU,MAAM,CAAA,EAAG;AACrB,QAAA,OAAO,MAAA,CAAO,OAAA,CAAQ,GAAA,EAAK,OAAO,CAAA;AAAA,MACpC;AAAA,IACF;AAEA,IAAA,MAAM,IAAIA,sBAAA,CAAgB,iBAAA,CAAkB,GAAG,CAAC,CAAA;AAAA,EAClD;AAAA,EAEA,MAAM,QAAA,CACJ,GAAA,EACA,OAAA,EAC2C;AAC3C,IAAA,MAAM,MAAA,GAAS,IAAI,GAAA,CAAI,GAAG,CAAA;AAE1B,IAAA,KAAA,MAAW,EAAE,SAAA,EAAW,MAAA,EAAO,IAAK,KAAK,OAAA,EAAS;AAChD,MAAA,IAAI,SAAA,CAAU,MAAM,CAAA,EAAG;AACrB,QAAA,OAAO,MAAM,MAAA,CAAO,QAAA,CAAS,GAAA,EAAK,OAAO,CAAA;AAAA,MAC3C;AAAA,IACF;AAEA,IAAA,MAAM,IAAIA,sBAAA,CAAgB,iBAAA,CAAkB,GAAG,CAAC,CAAA;AAAA,EAClD;AAAA,EAEA,MAAM,MAAA,CACJ,GAAA,EACA,OAAA,EACyC;AACzC,IAAA,MAAM,MAAA,GAAS,IAAI,GAAA,CAAI,GAAG,CAAA;AAE1B,IAAA,KAAA,MAAW,EAAE,SAAA,EAAW,MAAA,EAAO,IAAK,KAAK,OAAA,EAAS;AAChD,MAAA,IAAI,SAAA,CAAU,MAAM,CAAA,EAAG;AACrB,QAAA,OAAO,MAAM,MAAA,CAAO,MAAA,CAAO,GAAA,EAAK,OAAO,CAAA;AAAA,MACzC;AAAA,IACF;AAEA,IAAA,MAAM,IAAIA,sBAAA,CAAgB,iBAAA,CAAkB,GAAG,CAAC,CAAA;AAAA,EAClD;AAAA,EAEA,QAAA,GAAW;AACT,IAAA,OAAO,CAAA,qBAAA,EAAwB,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAA,KAAK,EAAE,MAAM,CAAA,CAAE,IAAA,CAAK,GAAG,CAAC,CAAA,CAAA;AAAA,EAC1E;AACF;;;;"}