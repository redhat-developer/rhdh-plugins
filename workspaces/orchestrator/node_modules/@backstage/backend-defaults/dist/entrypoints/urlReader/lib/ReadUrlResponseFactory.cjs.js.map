{"version":3,"file":"ReadUrlResponseFactory.cjs.js","sources":["../../../../src/entrypoints/urlReader/lib/ReadUrlResponseFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConflictError } from '@backstage/errors';\nimport { UrlReaderServiceReadUrlResponse } from '@backstage/backend-plugin-api';\nimport getRawBody from 'raw-body';\nimport { Readable } from 'stream';\nimport { ReadUrlResponseFactoryFromStreamOptions } from './types';\nimport { parseLastModified, responseToReadable } from './util';\n\n/**\n * Utility class for UrlReader implementations to create valid ReadUrlResponse\n * instances from common response primitives.\n *\n * @public\n */\nexport class ReadUrlResponseFactory {\n  /**\n   * Resolves a UrlReaderServiceReadUrlResponse from a Readable stream.\n   */\n  static async fromReadable(\n    stream: Readable,\n    options?: ReadUrlResponseFactoryFromStreamOptions,\n  ): Promise<UrlReaderServiceReadUrlResponse> {\n    // Reference to eventual buffer enables callers to call buffer() multiple\n    // times without consequence.\n    let buffer: Promise<Buffer>;\n\n    // Prevent \"stream is not readable\" errors from bubbling up.\n    const conflictError = new ConflictError(\n      'Cannot use buffer() and stream() from the same ReadUrlResponse',\n    );\n    let hasCalledStream = false;\n    let hasCalledBuffer = false;\n\n    return {\n      buffer: () => {\n        hasCalledBuffer = true;\n        if (hasCalledStream) throw conflictError;\n        if (buffer) return buffer;\n        buffer = getRawBody(stream);\n        return buffer;\n      },\n      stream: () => {\n        hasCalledStream = true;\n        if (hasCalledBuffer) throw conflictError;\n        return stream;\n      },\n      etag: options?.etag,\n      lastModifiedAt: options?.lastModifiedAt,\n    };\n  }\n\n  /**\n   * Resolves a UrlReaderServiceReadUrlResponse from an old-style NodeJS.ReadableStream.\n   */\n  static async fromNodeJSReadable(\n    oldStyleStream: NodeJS.ReadableStream,\n    options?: ReadUrlResponseFactoryFromStreamOptions,\n  ): Promise<UrlReaderServiceReadUrlResponse> {\n    const readable = Readable.from(oldStyleStream);\n    return ReadUrlResponseFactory.fromReadable(readable, options);\n  }\n\n  /**\n   * Resolves a UrlReaderServiceReadUrlResponse from a native fetch response body.\n   */\n  static async fromResponse(\n    response: Response,\n  ): Promise<UrlReaderServiceReadUrlResponse> {\n    const etag = response.headers.get('etag') || undefined;\n    const lastModifiedAt = parseLastModified(\n      response.headers.get('last-modified'),\n    );\n\n    return ReadUrlResponseFactory.fromReadable(responseToReadable(response), {\n      etag,\n      lastModifiedAt,\n    });\n  }\n}\n"],"names":["ConflictError","getRawBody","Readable","parseLastModified","responseToReadable"],"mappings":";;;;;;;;;;;AA6BO,MAAM,sBAAA,CAAuB;AAAA;AAAA;AAAA;AAAA,EAIlC,aAAa,YAAA,CACX,MAAA,EACA,OAAA,EAC0C;AAG1C,IAAA,IAAI,MAAA;AAGJ,IAAA,MAAM,gBAAgB,IAAIA,oBAAA;AAAA,MACxB;AAAA,KACF;AACA,IAAA,IAAI,eAAA,GAAkB,KAAA;AACtB,IAAA,IAAI,eAAA,GAAkB,KAAA;AAEtB,IAAA,OAAO;AAAA,MACL,QAAQ,MAAM;AACZ,QAAA,eAAA,GAAkB,IAAA;AAClB,QAAA,IAAI,iBAAiB,MAAM,aAAA;AAC3B,QAAA,IAAI,QAAQ,OAAO,MAAA;AACnB,QAAA,MAAA,GAASC,4BAAW,MAAM,CAAA;AAC1B,QAAA,OAAO,MAAA;AAAA,MACT,CAAA;AAAA,MACA,QAAQ,MAAM;AACZ,QAAA,eAAA,GAAkB,IAAA;AAClB,QAAA,IAAI,iBAAiB,MAAM,aAAA;AAC3B,QAAA,OAAO,MAAA;AAAA,MACT,CAAA;AAAA,MACA,MAAM,OAAA,EAAS,IAAA;AAAA,MACf,gBAAgB,OAAA,EAAS;AAAA,KAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,kBAAA,CACX,cAAA,EACA,OAAA,EAC0C;AAC1C,IAAA,MAAM,QAAA,GAAWC,eAAA,CAAS,IAAA,CAAK,cAAc,CAAA;AAC7C,IAAA,OAAO,sBAAA,CAAuB,YAAA,CAAa,QAAA,EAAU,OAAO,CAAA;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,aACX,QAAA,EAC0C;AAC1C,IAAA,MAAM,IAAA,GAAO,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,MAAM,CAAA,IAAK,MAAA;AAC7C,IAAA,MAAM,cAAA,GAAiBC,sBAAA;AAAA,MACrB,QAAA,CAAS,OAAA,CAAQ,GAAA,CAAI,eAAe;AAAA,KACtC;AAEA,IAAA,OAAO,sBAAA,CAAuB,YAAA,CAAaC,uBAAA,CAAmB,QAAQ,CAAA,EAAG;AAAA,MACvE,IAAA;AAAA,MACA;AAAA,KACD,CAAA;AAAA,EACH;AACF;;;;"}