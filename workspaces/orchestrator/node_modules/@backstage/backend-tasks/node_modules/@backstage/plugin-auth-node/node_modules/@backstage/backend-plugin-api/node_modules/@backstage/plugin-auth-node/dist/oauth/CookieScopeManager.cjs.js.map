{"version":3,"file":"CookieScopeManager.cjs.js","sources":["../../src/oauth/CookieScopeManager.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport {\n  OAuthAuthenticator,\n  OAuthAuthenticatorResult,\n  OAuthAuthenticatorScopeOptions,\n} from './types';\nimport { OAuthCookieManager } from './OAuthCookieManager';\nimport { OAuthState } from './state';\nimport { AuthenticationError } from '@backstage/errors';\nimport { Config } from '@backstage/config';\n\nfunction reqRes(req: express.Request): express.Response {\n  const res = req.res;\n  if (!res) {\n    throw new Error('No response object found in request');\n  }\n  return res;\n}\n\nconst defaultTransform: Required<OAuthAuthenticatorScopeOptions>['transform'] =\n  ({ requested, granted, required, additional }) => {\n    return [...requested, ...granted, ...required, ...additional];\n  };\n\nfunction splitScope(scope?: string): Iterable<string> {\n  if (!scope) {\n    return [];\n  }\n\n  return scope.split(/[\\s|,]/).filter(Boolean);\n}\n\nexport class CookieScopeManager {\n  static create(options: {\n    config?: Config;\n    additionalScopes?: string[];\n    authenticator: OAuthAuthenticator<any, any>;\n    cookieManager: OAuthCookieManager;\n  }) {\n    const { authenticator, config } = options;\n\n    const shouldPersistScopes =\n      authenticator.scopes?.persist ??\n      authenticator.shouldPersistScopes ??\n      false;\n\n    const configScopes =\n      typeof config?.getOptional('additionalScopes') === 'string'\n        ? splitScope(config.getString('additionalScopes'))\n        : config?.getOptionalStringArray('additionalScopes') ?? [];\n\n    const transform = authenticator?.scopes?.transform ?? defaultTransform;\n    const additional = [...configScopes, ...(options.additionalScopes ?? [])];\n    const required = authenticator?.scopes?.required ?? [];\n\n    return new CookieScopeManager(\n      (requested, granted) =>\n        Array.from(\n          new Set(transform({ required, additional, requested, granted })),\n        ).join(' '),\n      shouldPersistScopes ? options.cookieManager : undefined,\n    );\n  }\n\n  private constructor(\n    private readonly scopeTransform: (\n      requested: Iterable<string>,\n      granted: Iterable<string>,\n    ) => string,\n    private readonly cookieManager?: OAuthCookieManager,\n  ) {}\n\n  async start(\n    req: express.Request,\n  ): Promise<{ scopeState?: Partial<OAuthState>; scope: string }> {\n    const requestScope = splitScope(req.query.scope?.toString());\n    const grantedScope = splitScope(this.cookieManager?.getGrantedScopes(req));\n\n    const scope = this.scopeTransform(requestScope, grantedScope);\n\n    if (this.cookieManager) {\n      // If scopes are persisted then we pass them through the state so that we\n      // can set the cookie on successful auth\n      return {\n        scope,\n        scopeState: { scope },\n      };\n    }\n    return { scope };\n  }\n\n  async handleCallback(\n    req: express.Request,\n    ctx: {\n      result: OAuthAuthenticatorResult<any>;\n      state: OAuthState;\n      origin?: string;\n    },\n  ): Promise<string> {\n    // If we are not persisting scopes we can forward the scope from the result\n    if (!this.cookieManager) {\n      return Array.from(splitScope(ctx.result.session.scope)).join(' ');\n    }\n\n    const scope = ctx.state.scope;\n    if (scope === undefined) {\n      throw new AuthenticationError('No scope found in OAuth state');\n    }\n\n    // Store the scope that we have been granted for this session. This is useful if\n    // the provider does not return granted scopes on refresh or if they are normalized.\n    this.cookieManager.setGrantedScopes(reqRes(req), scope, ctx.origin);\n\n    return scope;\n  }\n\n  async clear(req: express.Request): Promise<void> {\n    if (this.cookieManager) {\n      this.cookieManager.removeGrantedScopes(reqRes(req), req.get('origin'));\n    }\n  }\n\n  async refresh(req: express.Request): Promise<{\n    scope: string;\n    scopeAlreadyGranted?: boolean;\n    commit(result: OAuthAuthenticatorResult<any>): Promise<string>;\n  }> {\n    const requestScope = splitScope(req.query.scope?.toString());\n    const grantedScope = splitScope(this.cookieManager?.getGrantedScopes(req));\n\n    const scope = this.scopeTransform(requestScope, grantedScope);\n\n    return {\n      scope,\n      scopeAlreadyGranted: this.cookieManager\n        ? hasScopeBeenGranted(grantedScope, scope)\n        : undefined,\n      commit: async result => {\n        if (this.cookieManager) {\n          this.cookieManager.setGrantedScopes(\n            reqRes(req),\n            scope,\n            req.get('origin'),\n          );\n          return scope;\n        }\n\n        return Array.from(splitScope(result.session.scope)).join(' ');\n      },\n    };\n  }\n}\n\nfunction hasScopeBeenGranted(\n  grantedScope: Iterable<string>,\n  requestedScope: string,\n): boolean {\n  const granted = new Set(grantedScope);\n  for (const requested of splitScope(requestedScope)) {\n    if (!granted.has(requested)) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"names":["AuthenticationError"],"mappings":"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"}