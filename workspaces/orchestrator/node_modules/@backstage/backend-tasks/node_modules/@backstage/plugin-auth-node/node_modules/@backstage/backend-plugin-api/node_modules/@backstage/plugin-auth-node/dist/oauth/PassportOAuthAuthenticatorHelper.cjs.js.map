{"version":3,"file":"PassportOAuthAuthenticatorHelper.cjs.js","sources":["../../src/oauth/PassportOAuthAuthenticatorHelper.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Strategy } from 'passport';\nimport {\n  PassportDoneCallback,\n  PassportHelpers,\n  PassportProfile,\n} from '../passport';\nimport { ProfileTransform } from '../types';\nimport {\n  OAuthAuthenticatorAuthenticateInput,\n  OAuthAuthenticatorRefreshInput,\n  OAuthAuthenticatorResult,\n  OAuthAuthenticatorStartInput,\n} from './types';\n\n/** @public */\nexport type PassportOAuthResult = {\n  fullProfile: PassportProfile;\n  params: {\n    id_token?: string;\n    scope: string;\n    token_type?: string;\n    expires_in: number;\n  };\n  accessToken: string;\n};\n\n/** @public */\nexport type PassportOAuthPrivateInfo = {\n  refreshToken?: string;\n};\n\n/** @public */\nexport type PassportOAuthDoneCallback = PassportDoneCallback<\n  PassportOAuthResult,\n  PassportOAuthPrivateInfo\n>;\n\n/** @public */\nexport class PassportOAuthAuthenticatorHelper {\n  static defaultProfileTransform: ProfileTransform<\n    OAuthAuthenticatorResult<PassportProfile>\n  > = async input => ({\n    profile: PassportHelpers.transformProfile(\n      input.fullProfile ?? {},\n      input.session.idToken,\n    ),\n  });\n\n  static from(strategy: Strategy) {\n    return new PassportOAuthAuthenticatorHelper(strategy);\n  }\n\n  readonly #strategy: Strategy;\n\n  private constructor(strategy: Strategy) {\n    this.#strategy = strategy;\n  }\n\n  async start(\n    input: OAuthAuthenticatorStartInput,\n    options: Record<string, string>,\n  ): Promise<{ url: string; status?: number }> {\n    return PassportHelpers.executeRedirectStrategy(input.req, this.#strategy, {\n      scope: input.scope,\n      state: input.state,\n      ...options,\n    });\n  }\n\n  async authenticate(\n    input: OAuthAuthenticatorAuthenticateInput,\n    options?: Record<string, string>,\n  ): Promise<OAuthAuthenticatorResult<PassportProfile>> {\n    const { result, privateInfo } =\n      await PassportHelpers.executeFrameHandlerStrategy<\n        PassportOAuthResult,\n        PassportOAuthPrivateInfo\n      >(input.req, this.#strategy, options);\n\n    return {\n      fullProfile: result.fullProfile as PassportProfile,\n      session: {\n        accessToken: result.accessToken,\n        tokenType: result.params.token_type ?? 'bearer',\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n        idToken: result.params.id_token,\n        refreshToken: privateInfo.refreshToken,\n      },\n    };\n  }\n\n  async refresh(\n    input: OAuthAuthenticatorRefreshInput,\n  ): Promise<OAuthAuthenticatorResult<PassportProfile>> {\n    const result = await PassportHelpers.executeRefreshTokenStrategy(\n      this.#strategy,\n      input.refreshToken,\n      input.scope,\n    );\n    const fullProfile = await this.fetchProfile(result.accessToken);\n    return {\n      fullProfile,\n      session: {\n        accessToken: result.accessToken,\n        tokenType: result.params.token_type ?? 'bearer',\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n        idToken: result.params.id_token,\n        refreshToken: result.refreshToken,\n      },\n    };\n  }\n\n  async fetchProfile(accessToken: string): Promise<PassportProfile> {\n    const profile = await PassportHelpers.executeFetchUserProfileStrategy(\n      this.#strategy,\n      accessToken,\n    );\n    return profile;\n  }\n}\n"],"names":["PassportHelpers"],"mappings":";;;;AAsDO,MAAM,gCAAA,CAAiC;AAAA,EAC5C,OAAO,uBAAA,GAEH,OAAM,KAAA,MAAU;AAAA,IAClB,SAASA,+BAAA,CAAgB,gBAAA;AAAA,MACvB,KAAA,CAAM,eAAe,EAAC;AAAA,MACtB,MAAM,OAAA,CAAQ;AAAA;AAChB,GACF,CAAA;AAAA,EAEA,OAAO,KAAK,QAAA,EAAoB;AAC9B,IAAA,OAAO,IAAI,iCAAiC,QAAQ,CAAA;AAAA,EACtD;AAAA,EAES,SAAA;AAAA,EAED,YAAY,QAAA,EAAoB;AACtC,IAAA,IAAA,CAAK,SAAA,GAAY,QAAA;AAAA,EACnB;AAAA,EAEA,MAAM,KAAA,CACJ,KAAA,EACA,OAAA,EAC2C;AAC3C,IAAA,OAAOA,+BAAA,CAAgB,uBAAA,CAAwB,KAAA,CAAM,GAAA,EAAK,KAAK,SAAA,EAAW;AAAA,MACxE,OAAO,KAAA,CAAM,KAAA;AAAA,MACb,OAAO,KAAA,CAAM,KAAA;AAAA,MACb,GAAG;AAAA,KACJ,CAAA;AAAA,EACH;AAAA,EAEA,MAAM,YAAA,CACJ,KAAA,EACA,OAAA,EACoD;AACpD,IAAA,MAAM,EAAE,MAAA,EAAQ,WAAA,EAAY,GAC1B,MAAMA,+BAAA,CAAgB,2BAAA,CAGpB,KAAA,CAAM,GAAA,EAAK,IAAA,CAAK,SAAA,EAAW,OAAO,CAAA;AAEtC,IAAA,OAAO;AAAA,MACL,aAAa,MAAA,CAAO,WAAA;AAAA,MACpB,OAAA,EAAS;AAAA,QACP,aAAa,MAAA,CAAO,WAAA;AAAA,QACpB,SAAA,EAAW,MAAA,CAAO,MAAA,CAAO,UAAA,IAAc,QAAA;AAAA,QACvC,KAAA,EAAO,OAAO,MAAA,CAAO,KAAA;AAAA,QACrB,gBAAA,EAAkB,OAAO,MAAA,CAAO,UAAA;AAAA,QAChC,OAAA,EAAS,OAAO,MAAA,CAAO,QAAA;AAAA,QACvB,cAAc,WAAA,CAAY;AAAA;AAC5B,KACF;AAAA,EACF;AAAA,EAEA,MAAM,QACJ,KAAA,EACoD;AACpD,IAAA,MAAM,MAAA,GAAS,MAAMA,+BAAA,CAAgB,2BAAA;AAAA,MACnC,IAAA,CAAK,SAAA;AAAA,MACL,KAAA,CAAM,YAAA;AAAA,MACN,KAAA,CAAM;AAAA,KACR;AACA,IAAA,MAAM,WAAA,GAAc,MAAM,IAAA,CAAK,YAAA,CAAa,OAAO,WAAW,CAAA;AAC9D,IAAA,OAAO;AAAA,MACL,WAAA;AAAA,MACA,OAAA,EAAS;AAAA,QACP,aAAa,MAAA,CAAO,WAAA;AAAA,QACpB,SAAA,EAAW,MAAA,CAAO,MAAA,CAAO,UAAA,IAAc,QAAA;AAAA,QACvC,KAAA,EAAO,OAAO,MAAA,CAAO,KAAA;AAAA,QACrB,gBAAA,EAAkB,OAAO,MAAA,CAAO,UAAA;AAAA,QAChC,OAAA,EAAS,OAAO,MAAA,CAAO,QAAA;AAAA,QACvB,cAAc,MAAA,CAAO;AAAA;AACvB,KACF;AAAA,EACF;AAAA,EAEA,MAAM,aAAa,WAAA,EAA+C;AAChE,IAAA,MAAM,OAAA,GAAU,MAAMA,+BAAA,CAAgB,+BAAA;AAAA,MACpC,IAAA,CAAK,SAAA;AAAA,MACL;AAAA,KACF;AACA,IAAA,OAAO,OAAA;AAAA,EACT;AACF;;;;"}