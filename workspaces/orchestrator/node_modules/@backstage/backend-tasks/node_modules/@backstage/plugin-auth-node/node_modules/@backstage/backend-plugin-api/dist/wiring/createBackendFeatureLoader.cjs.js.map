{"version":3,"file":"createBackendFeatureLoader.cjs.js","sources":["../../src/wiring/createBackendFeatureLoader.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ServiceRef } from '../services';\nimport { BackendFeature } from '../types';\nimport { describeParentCallSite } from './describeParentCallSite';\nimport { InternalBackendFeatureLoader } from './types';\n\n/**\n * @public\n * Options for creating a new backend feature loader.\n */\nexport interface CreateBackendFeatureLoaderOptions<\n  TDeps extends { [name in string]: unknown },\n> {\n  deps?: {\n    [name in keyof TDeps]: ServiceRef<TDeps[name], 'root'>;\n  };\n  loader(\n    deps: TDeps,\n  ):\n    | Iterable<BackendFeature | Promise<{ default: BackendFeature }>>\n    | Promise<Iterable<BackendFeature | Promise<{ default: BackendFeature }>>>\n    | AsyncIterable<BackendFeature | { default: BackendFeature }>;\n}\n\n/**\n * @public\n * Creates a new backend feature loader.\n */\nexport function createBackendFeatureLoader<\n  TDeps extends { [name in string]: unknown },\n>(options: CreateBackendFeatureLoaderOptions<TDeps>): BackendFeature {\n  return {\n    $$type: '@backstage/BackendFeature',\n    version: 'v1',\n    featureType: 'loader',\n    description: `created at '${describeParentCallSite()}'`,\n    deps: options.deps,\n    async loader(deps: TDeps) {\n      const it = await options.loader(deps);\n      const result = new Array<BackendFeature>();\n      for await (const item of it) {\n        if ('$$type' in item && item.$$type === '@backstage/BackendFeature') {\n          result.push(item);\n        } else if ('default' in item) {\n          result.push(item.default);\n        } else {\n          throw new Error(`Invalid item \"${item}\"`);\n        }\n      }\n      return result;\n    },\n  } as InternalBackendFeatureLoader;\n}\n"],"names":["describeParentCallSite"],"mappings":";;;;AA2CO,SAAS,2BAEd,OAAA,EAAmE;AACnE,EAAA,OAAO;AAAA,IACL,MAAA,EAAQ,2BAAA;AAAA,IACR,OAAA,EAAS,IAAA;AAAA,IACT,WAAA,EAAa,QAAA;AAAA,IACb,WAAA,EAAa,CAAA,YAAA,EAAeA,6CAAA,EAAwB,CAAA,CAAA,CAAA;AAAA,IACpD,MAAM,OAAA,CAAQ,IAAA;AAAA,IACd,MAAM,OAAO,IAAA,EAAa;AACxB,MAAA,MAAM,EAAA,GAAK,MAAM,OAAA,CAAQ,MAAA,CAAO,IAAI,CAAA;AACpC,MAAA,MAAM,MAAA,GAAS,IAAI,KAAA,EAAsB;AACzC,MAAA,WAAA,MAAiB,QAAQ,EAAA,EAAI;AAC3B,QAAA,IAAI,QAAA,IAAY,IAAA,IAAQ,IAAA,CAAK,MAAA,KAAW,2BAAA,EAA6B;AACnE,UAAA,MAAA,CAAO,KAAK,IAAI,CAAA;AAAA,QAClB,CAAA,MAAA,IAAW,aAAa,IAAA,EAAM;AAC5B,UAAA,MAAA,CAAO,IAAA,CAAK,KAAK,OAAO,CAAA;AAAA,QAC1B,CAAA,MAAO;AACL,UAAA,MAAM,IAAI,KAAA,CAAM,CAAA,cAAA,EAAiB,IAAI,CAAA,CAAA,CAAG,CAAA;AAAA,QAC1C;AAAA,MACF;AACA,MAAA,OAAO,MAAA;AAAA,IACT;AAAA,GACF;AACF;;;;"}