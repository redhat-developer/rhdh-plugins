'use strict';

var errors = require('@backstage/errors');
var codeowners = require('../codeowners/codeowners.cjs.js');
var tasks = require('../tasks.cjs.js');
var installNewPackage = require('./installNewPackage.cjs.js');
var writeTemplateContents = require('./writeTemplateContents.cjs.js');

async function executePortableTemplate(options) {
  const { template, input } = options;
  let modified = false;
  try {
    const { targetDir } = await tasks.Task.forItem(
      "templating",
      input.packagePath,
      () => writeTemplateContents.writeTemplateContents(template, input)
    );
    modified = true;
    await installNewPackage.installNewPackage(input);
    if (input.owner) {
      await codeowners.addCodeownersEntry(targetDir, input.owner);
    }
    if (!options.skipInstall) {
      await tasks.Task.forCommand("yarn install", {
        cwd: targetDir,
        optional: true
      });
      await tasks.Task.forCommand("yarn lint --fix", {
        cwd: targetDir,
        optional: true
      });
    }
    tasks.Task.log();
    tasks.Task.log(`\u{1F389}  Successfully created ${template.name}`);
    tasks.Task.log();
  } catch (error) {
    errors.assertError(error);
    tasks.Task.error(error.message);
    if (modified) {
      tasks.Task.log("It seems that something went wrong in the creation process \u{1F914}");
      tasks.Task.log();
      tasks.Task.log(
        "We have left the changes that were made intact in case you want to"
      );
      tasks.Task.log(
        "continue manually, but you can also revert the changes and try again."
      );
      tasks.Task.error(`\u{1F525}  Failed to create ${template.name}!`);
    }
  }
}

exports.executePortableTemplate = executePortableTemplate;
//# sourceMappingURL=executePortableTemplate.cjs.js.map
