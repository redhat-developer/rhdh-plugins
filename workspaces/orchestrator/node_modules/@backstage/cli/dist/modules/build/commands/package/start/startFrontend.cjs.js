'use strict';

var fs = require('fs-extra');
var path = require('path');
require('yn');
require('@rspack/core');
require('react-dev-utils/FileSizeReporter');
require('react-dev-utils/formatWebpackMessages');
require('eslint-rspack-plugin');
require('ts-checker-rspack-plugin');
require('html-webpack-plugin');
require('react-dev-utils/ModuleScopePlugin');
require('@module-federation/enhanced/rspack');
var paths = require('../../../../../lib/paths.cjs.js');
require('lodash/pickBy');
require('../../../../../lib/run.cjs.js');
require('../../../../../lib/version.cjs.js');
var hasReactDomClient = require('../../../lib/bundler/hasReactDomClient.cjs.js');
require('@manypkg/get-packages');
require('chalk');
require('../../../lib/bundler/packageDetection.cjs.js');
var moduleFederation = require('../../../lib/bundler/moduleFederation.cjs.js');
var server = require('../../../lib/bundler/server.cjs.js');

async function startFrontend(options) {
  const packageJson = await fs.readJson(
    path.resolve(options.targetDir ?? paths.paths.targetDir, "package.json")
  );
  if (!hasReactDomClient.hasReactDomClient()) {
    console.warn(
      "React 17 is now deprecated! Please follow the Backstage migration guide to update to React 18: https://backstage.io/docs/tutorials/react18-migration/"
    );
  }
  const waitForExit = await server.serveBundle({
    entry: options.entry,
    targetDir: options.targetDir,
    checksEnabled: options.checksEnabled,
    configPaths: options.configPaths,
    verifyVersions: options.verifyVersions,
    skipOpenBrowser: options.skipOpenBrowser,
    linkedWorkspace: options.linkedWorkspace,
    moduleFederation: await moduleFederation.getModuleFederationOptions(
      packageJson,
      path.resolve(paths.paths.targetDir),
      options.isModuleFederationRemote
    )
  });
  await waitForExit();
}

exports.startFrontend = startFrontend;
//# sourceMappingURL=startFrontend.cjs.js.map
