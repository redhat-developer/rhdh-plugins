'use strict';

var errors = require('@backstage/errors');
var fs = require('fs-extra');
var posix = require('path/posix');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var fs__default = /*#__PURE__*/_interopDefaultCompat(fs);

async function resolveLinkedWorkspace(linkPath) {
  if (!linkPath) {
    return void 0;
  }
  const dir = posix.resolve(linkPath);
  if (!fs__default.default.pathExistsSync(dir)) {
    throw new Error(`Invalid workspace link, directory does not exist: ${dir}`);
  }
  const pkgJson = await fs__default.default.readJson(posix.resolve(dir, "package.json")).catch((error) => {
    throw new errors.ForwardedError(
      "Failed to read package.json in linked workspace",
      error
    );
  });
  if (!pkgJson.workspaces) {
    throw new Error(
      `Invalid workspace link, directory is not a workspace: ${dir}`
    );
  }
  return dir;
}

exports.resolveLinkedWorkspace = resolveLinkedWorkspace;
//# sourceMappingURL=resolveLinkedWorkspace.cjs.js.map
