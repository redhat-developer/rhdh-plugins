{"version":3,"file":"LocationAnalyzer.cjs.js","sources":["../../src/ingestion/LocationAnalyzer.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parseGitUrl from 'git-url-parse';\nimport { Entity } from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport {\n  AnalyzeLocationRequest,\n  AnalyzeLocationResponse,\n} from '@backstage/plugin-catalog-common';\nimport {\n  LocationAnalyzer,\n  ScmLocationAnalyzer,\n} from '@backstage/plugin-catalog-node';\nimport { LoggerService } from '@backstage/backend-plugin-api';\n\nexport class RepoLocationAnalyzer implements LocationAnalyzer {\n  private readonly logger: LoggerService;\n  private readonly scmIntegrations: ScmIntegrationRegistry;\n  private readonly analyzers: ScmLocationAnalyzer[];\n\n  constructor(\n    logger: LoggerService,\n    scmIntegrations: ScmIntegrationRegistry,\n    analyzers: ScmLocationAnalyzer[],\n  ) {\n    this.logger = logger;\n    this.scmIntegrations = scmIntegrations;\n    this.analyzers = analyzers;\n  }\n  async analyzeLocation(\n    request: AnalyzeLocationRequest,\n  ): Promise<AnalyzeLocationResponse> {\n    const integration = this.scmIntegrations.byUrl(request.location.target);\n    const { owner, name } = parseGitUrl(request.location.target);\n\n    let annotationPrefix;\n    switch (integration?.type) {\n      case 'azure':\n        annotationPrefix = 'dev.azure.com';\n        break;\n      case 'bitbucket':\n        annotationPrefix = 'bitbucket.org';\n        break;\n      case 'github':\n        annotationPrefix = 'github.com';\n        break;\n      case 'gitlab':\n        annotationPrefix = 'gitlab.com';\n        break;\n      default:\n        break;\n    }\n\n    const analyzer = this.analyzers.find(a =>\n      a.supports(request.location.target),\n    );\n    if (analyzer) {\n      const analyzerResult = await analyzer.analyze({\n        url: request.location.target,\n      });\n      if (analyzerResult.existing.length > 0) {\n        this.logger.debug(\n          `entity for ${request.location.target} already exists.`,\n        );\n        return {\n          existingEntityFiles: analyzerResult.existing,\n          generateEntities: [],\n        };\n      }\n    }\n\n    const entity: Entity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Component',\n      metadata: {\n        name: name,\n      },\n      spec: { type: 'other', lifecycle: 'unknown' },\n    };\n\n    if (annotationPrefix) {\n      entity.metadata.annotations = {\n        [`${annotationPrefix}/project-slug`]: `${owner}/${name}`,\n      };\n    }\n\n    this.logger.debug(`entity created for ${request.location.target}`);\n    return {\n      existingEntityFiles: [],\n      generateEntities: [{ entity, fields: [] }],\n    };\n  }\n}\n"],"names":["parseGitUrl"],"mappings":";;;;;;;;AA6BO,MAAM,oBAAA,CAAiD;AAAA,EAC3C,MAAA;AAAA,EACA,eAAA;AAAA,EACA,SAAA;AAAA,EAEjB,WAAA,CACE,MAAA,EACA,eAAA,EACA,SAAA,EACA;AACA,IAAA,IAAA,CAAK,MAAA,GAAS,MAAA;AACd,IAAA,IAAA,CAAK,eAAA,GAAkB,eAAA;AACvB,IAAA,IAAA,CAAK,SAAA,GAAY,SAAA;AAAA,EACnB;AAAA,EACA,MAAM,gBACJ,OAAA,EACkC;AAClC,IAAA,MAAM,cAAc,IAAA,CAAK,eAAA,CAAgB,KAAA,CAAM,OAAA,CAAQ,SAAS,MAAM,CAAA;AACtE,IAAA,MAAM,EAAE,KAAA,EAAO,IAAA,KAASA,4BAAA,CAAY,OAAA,CAAQ,SAAS,MAAM,CAAA;AAE3D,IAAA,IAAI,gBAAA;AACJ,IAAA,QAAQ,aAAa,IAAA;AAAM,MACzB,KAAK,OAAA;AACH,QAAA,gBAAA,GAAmB,eAAA;AACnB,QAAA;AAAA,MACF,KAAK,WAAA;AACH,QAAA,gBAAA,GAAmB,eAAA;AACnB,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAA,gBAAA,GAAmB,YAAA;AACnB,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAA,gBAAA,GAAmB,YAAA;AACnB,QAAA;AAEA;AAGJ,IAAA,MAAM,QAAA,GAAW,KAAK,SAAA,CAAU,IAAA;AAAA,MAAK,CAAA,CAAA,KACnC,CAAA,CAAE,QAAA,CAAS,OAAA,CAAQ,SAAS,MAAM;AAAA,KACpC;AACA,IAAA,IAAI,QAAA,EAAU;AACZ,MAAA,MAAM,cAAA,GAAiB,MAAM,QAAA,CAAS,OAAA,CAAQ;AAAA,QAC5C,GAAA,EAAK,QAAQ,QAAA,CAAS;AAAA,OACvB,CAAA;AACD,MAAA,IAAI,cAAA,CAAe,QAAA,CAAS,MAAA,GAAS,CAAA,EAAG;AACtC,QAAA,IAAA,CAAK,MAAA,CAAO,KAAA;AAAA,UACV,CAAA,WAAA,EAAc,OAAA,CAAQ,QAAA,CAAS,MAAM,CAAA,gBAAA;AAAA,SACvC;AACA,QAAA,OAAO;AAAA,UACL,qBAAqB,cAAA,CAAe,QAAA;AAAA,UACpC,kBAAkB;AAAC,SACrB;AAAA,MACF;AAAA,IACF;AAEA,IAAA,MAAM,MAAA,GAAiB;AAAA,MACrB,UAAA,EAAY,uBAAA;AAAA,MACZ,IAAA,EAAM,WAAA;AAAA,MACN,QAAA,EAAU;AAAA,QACR;AAAA,OACF;AAAA,MACA,IAAA,EAAM,EAAE,IAAA,EAAM,OAAA,EAAS,WAAW,SAAA;AAAU,KAC9C;AAEA,IAAA,IAAI,gBAAA,EAAkB;AACpB,MAAA,MAAA,CAAO,SAAS,WAAA,GAAc;AAAA,QAC5B,CAAC,GAAG,gBAAgB,CAAA,aAAA,CAAe,GAAG,CAAA,EAAG,KAAK,IAAI,IAAI,CAAA;AAAA,OACxD;AAAA,IACF;AAEA,IAAA,IAAA,CAAK,OAAO,KAAA,CAAM,CAAA,mBAAA,EAAsB,OAAA,CAAQ,QAAA,CAAS,MAAM,CAAA,CAAE,CAAA;AACjE,IAAA,OAAO;AAAA,MACL,qBAAqB,EAAC;AAAA,MACtB,kBAAkB,CAAC,EAAE,QAAQ,MAAA,EAAQ,IAAI;AAAA,KAC3C;AAAA,EACF;AACF;;;;"}