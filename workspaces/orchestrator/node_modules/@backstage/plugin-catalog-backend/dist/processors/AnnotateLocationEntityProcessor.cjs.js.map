{"version":3,"file":"AnnotateLocationEntityProcessor.cjs.js","sources":["../../src/processors/AnnotateLocationEntityProcessor.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  ANNOTATION_SOURCE_LOCATION,\n  ANNOTATION_VIEW_URL,\n  Entity,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { identity, merge, pickBy } from 'lodash';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n} from '@backstage/plugin-catalog-node';\n\nconst commitHashRegExp = /\\b[0-9a-f]{40,}\\b/;\n/** @public */\nexport class AnnotateLocationEntityProcessor implements CatalogProcessor {\n  constructor(\n    private readonly options: {\n      integrations: ScmIntegrationRegistry;\n    },\n  ) {}\n\n  getProcessorName(): string {\n    return 'AnnotateLocationEntityProcessor';\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n    _: CatalogProcessorEmit,\n    originLocation: LocationSpec,\n  ): Promise<Entity> {\n    const { integrations } = this.options;\n    let viewUrl;\n    let editUrl;\n    let sourceLocation;\n\n    if (location.type === 'url') {\n      const scmIntegration = integrations.byUrl(location.target);\n\n      viewUrl = location.target;\n\n      if (!commitHashRegExp.test(location.target)) {\n        editUrl = scmIntegration?.resolveEditUrl(location.target);\n      }\n\n      const sourceUrl = scmIntegration?.resolveUrl({\n        url: './',\n        base: location.target,\n      });\n\n      if (sourceUrl) {\n        sourceLocation = stringifyLocationRef({\n          type: 'url',\n          target: sourceUrl,\n        });\n      }\n    }\n\n    return merge(\n      {\n        metadata: {\n          annotations: pickBy(\n            {\n              [ANNOTATION_LOCATION]: stringifyLocationRef(location),\n              [ANNOTATION_ORIGIN_LOCATION]:\n                stringifyLocationRef(originLocation),\n              [ANNOTATION_VIEW_URL]: viewUrl,\n              [ANNOTATION_EDIT_URL]: editUrl,\n              [ANNOTATION_SOURCE_LOCATION]: sourceLocation,\n            },\n            identity,\n          ),\n        },\n      },\n      entity,\n    );\n  }\n}\n"],"names":["stringifyLocationRef","merge","pickBy","ANNOTATION_LOCATION","ANNOTATION_ORIGIN_LOCATION","ANNOTATION_VIEW_URL","ANNOTATION_EDIT_URL","ANNOTATION_SOURCE_LOCATION","identity"],"mappings":";;;;;AAiCA,MAAM,gBAAA,GAAmB,mBAAA;AAElB,MAAM,+BAAA,CAA4D;AAAA,EACvE,YACmB,OAAA,EAGjB;AAHiB,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA;AAAA,EAGhB;AAAA,EAEH,gBAAA,GAA2B;AACzB,IAAA,OAAO,iCAAA;AAAA,EACT;AAAA,EAEA,MAAM,gBAAA,CACJ,MAAA,EACA,QAAA,EACA,GACA,cAAA,EACiB;AACjB,IAAA,MAAM,EAAE,YAAA,EAAa,GAAI,IAAA,CAAK,OAAA;AAC9B,IAAA,IAAI,OAAA;AACJ,IAAA,IAAI,OAAA;AACJ,IAAA,IAAI,cAAA;AAEJ,IAAA,IAAI,QAAA,CAAS,SAAS,KAAA,EAAO;AAC3B,MAAA,MAAM,cAAA,GAAiB,YAAA,CAAa,KAAA,CAAM,QAAA,CAAS,MAAM,CAAA;AAEzD,MAAA,OAAA,GAAU,QAAA,CAAS,MAAA;AAEnB,MAAA,IAAI,CAAC,gBAAA,CAAiB,IAAA,CAAK,QAAA,CAAS,MAAM,CAAA,EAAG;AAC3C,QAAA,OAAA,GAAU,cAAA,EAAgB,cAAA,CAAe,QAAA,CAAS,MAAM,CAAA;AAAA,MAC1D;AAEA,MAAA,MAAM,SAAA,GAAY,gBAAgB,UAAA,CAAW;AAAA,QAC3C,GAAA,EAAK,IAAA;AAAA,QACL,MAAM,QAAA,CAAS;AAAA,OAChB,CAAA;AAED,MAAA,IAAI,SAAA,EAAW;AACb,QAAA,cAAA,GAAiBA,iCAAA,CAAqB;AAAA,UACpC,IAAA,EAAM,KAAA;AAAA,UACN,MAAA,EAAQ;AAAA,SACT,CAAA;AAAA,MACH;AAAA,IACF;AAEA,IAAA,OAAOC,YAAA;AAAA,MACL;AAAA,QACE,QAAA,EAAU;AAAA,UACR,WAAA,EAAaC,aAAA;AAAA,YACX;AAAA,cACE,CAACC,gCAAmB,GAAGH,iCAAA,CAAqB,QAAQ,CAAA;AAAA,cACpD,CAACI,uCAA0B,GACzBJ,iCAAA,CAAqB,cAAc,CAAA;AAAA,cACrC,CAACK,gCAAmB,GAAG,OAAA;AAAA,cACvB,CAACC,gCAAmB,GAAG,OAAA;AAAA,cACvB,CAACC,uCAA0B,GAAG;AAAA,aAChC;AAAA,YACAC;AAAA;AACF;AACF,OACF;AAAA,MACA;AAAA,KACF;AAAA,EACF;AACF;;;;"}