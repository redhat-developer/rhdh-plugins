{"version":3,"file":"AnnotateScmSlugEntityProcessor.cjs.js","sources":["../../src/processors/AnnotateScmSlugEntityProcessor.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  ScmIntegrationRegistry,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\nimport { identity, merge, pickBy } from 'lodash';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport { CatalogProcessor } from '@backstage/plugin-catalog-node';\n\nconst GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\nconst GITLAB_ACTIONS_ANNOTATION = 'gitlab.com/project-slug';\nconst AZURE_ACTIONS_ANNOTATION = 'dev.azure.com/project-repo';\n\n/** @public */\nexport class AnnotateScmSlugEntityProcessor implements CatalogProcessor {\n  constructor(\n    private readonly opts: {\n      scmIntegrationRegistry: ScmIntegrationRegistry;\n      kinds?: string[];\n    },\n  ) {}\n\n  getProcessorName(): string {\n    return 'AnnotateScmSlugEntityProcessor';\n  }\n\n  static fromConfig(\n    config: Config,\n    options?: { kinds?: string[] },\n  ): AnnotateScmSlugEntityProcessor {\n    return new AnnotateScmSlugEntityProcessor({\n      scmIntegrationRegistry: ScmIntegrations.fromConfig(config),\n      kinds: options?.kinds,\n    });\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n  ): Promise<Entity> {\n    const applicableKinds = (this.opts.kinds ?? ['Component']).map(k =>\n      k.toLocaleLowerCase('en-US'),\n    );\n    if (\n      !applicableKinds.includes(entity.kind.toLocaleLowerCase('en-US')) ||\n      location.type !== 'url'\n    ) {\n      return entity;\n    }\n\n    const scmIntegration = this.opts.scmIntegrationRegistry.byUrl(\n      location.target,\n    );\n\n    if (!scmIntegration) {\n      return entity;\n    }\n\n    let annotation;\n    switch (scmIntegration.type) {\n      case 'github':\n        annotation = GITHUB_ACTIONS_ANNOTATION;\n        break;\n      case 'gitlab':\n        annotation = GITLAB_ACTIONS_ANNOTATION;\n        break;\n      case 'azure':\n        annotation = AZURE_ACTIONS_ANNOTATION;\n        break;\n      default:\n        return entity;\n    }\n\n    let projectSlug = entity.metadata.annotations?.[annotation];\n    if (!projectSlug) {\n      const gitUrl = parseGitUrl(location.target);\n      projectSlug = `${gitUrl.owner}/${gitUrl.name}`;\n    }\n\n    return merge(\n      {\n        metadata: {\n          annotations: pickBy(\n            {\n              [annotation]: projectSlug,\n            },\n            identity,\n          ),\n        },\n      },\n      entity,\n    );\n  }\n}\n"],"names":["ScmIntegrations","parseGitUrl","merge","pickBy","identity"],"mappings":";;;;;;;;;;AA2BA,MAAM,yBAAA,GAA4B,yBAAA;AAClC,MAAM,yBAAA,GAA4B,yBAAA;AAClC,MAAM,wBAAA,GAA2B,4BAAA;AAG1B,MAAM,8BAAA,CAA2D;AAAA,EACtE,YACmB,IAAA,EAIjB;AAJiB,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AAAA,EAIhB;AAAA,EAEH,gBAAA,GAA2B;AACzB,IAAA,OAAO,gCAAA;AAAA,EACT;AAAA,EAEA,OAAO,UAAA,CACL,MAAA,EACA,OAAA,EACgC;AAChC,IAAA,OAAO,IAAI,8BAAA,CAA+B;AAAA,MACxC,sBAAA,EAAwBA,2BAAA,CAAgB,UAAA,CAAW,MAAM,CAAA;AAAA,MACzD,OAAO,OAAA,EAAS;AAAA,KACjB,CAAA;AAAA,EACH;AAAA,EAEA,MAAM,gBAAA,CACJ,MAAA,EACA,QAAA,EACiB;AACjB,IAAA,MAAM,mBAAmB,IAAA,CAAK,IAAA,CAAK,KAAA,IAAS,CAAC,WAAW,CAAA,EAAG,GAAA;AAAA,MAAI,CAAA,CAAA,KAC7D,CAAA,CAAE,iBAAA,CAAkB,OAAO;AAAA,KAC7B;AACA,IAAA,IACE,CAAC,eAAA,CAAgB,QAAA,CAAS,MAAA,CAAO,IAAA,CAAK,iBAAA,CAAkB,OAAO,CAAC,CAAA,IAChE,QAAA,CAAS,IAAA,KAAS,KAAA,EAClB;AACA,MAAA,OAAO,MAAA;AAAA,IACT;AAEA,IAAA,MAAM,cAAA,GAAiB,IAAA,CAAK,IAAA,CAAK,sBAAA,CAAuB,KAAA;AAAA,MACtD,QAAA,CAAS;AAAA,KACX;AAEA,IAAA,IAAI,CAAC,cAAA,EAAgB;AACnB,MAAA,OAAO,MAAA;AAAA,IACT;AAEA,IAAA,IAAI,UAAA;AACJ,IAAA,QAAQ,eAAe,IAAA;AAAM,MAC3B,KAAK,QAAA;AACH,QAAA,UAAA,GAAa,yBAAA;AACb,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAA,UAAA,GAAa,yBAAA;AACb,QAAA;AAAA,MACF,KAAK,OAAA;AACH,QAAA,UAAA,GAAa,wBAAA;AACb,QAAA;AAAA,MACF;AACE,QAAA,OAAO,MAAA;AAAA;AAGX,IAAA,IAAI,WAAA,GAAc,MAAA,CAAO,QAAA,CAAS,WAAA,GAAc,UAAU,CAAA;AAC1D,IAAA,IAAI,CAAC,WAAA,EAAa;AAChB,MAAA,MAAM,MAAA,GAASC,4BAAA,CAAY,QAAA,CAAS,MAAM,CAAA;AAC1C,MAAA,WAAA,GAAc,CAAA,EAAG,MAAA,CAAO,KAAK,CAAA,CAAA,EAAI,OAAO,IAAI,CAAA,CAAA;AAAA,IAC9C;AAEA,IAAA,OAAOC,YAAA;AAAA,MACL;AAAA,QACE,QAAA,EAAU;AAAA,UACR,WAAA,EAAaC,aAAA;AAAA,YACX;AAAA,cACE,CAAC,UAAU,GAAG;AAAA,aAChB;AAAA,YACAC;AAAA;AACF;AACF,OACF;AAAA,MACA;AAAA,KACF;AAAA,EACF;AACF;;;;"}