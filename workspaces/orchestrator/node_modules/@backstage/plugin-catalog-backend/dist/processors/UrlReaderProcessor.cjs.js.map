{"version":3,"file":"UrlReaderProcessor.cjs.js","sources":["../../src/processors/UrlReaderProcessor.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\nimport limiterFactory, { Limit } from 'p-limit';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport {\n  CatalogProcessor,\n  CatalogProcessorCache,\n  CatalogProcessorEmit,\n  CatalogProcessorEntityResult,\n  CatalogProcessorParser,\n  CatalogProcessorResult,\n  processingResult,\n} from '@backstage/plugin-catalog-node';\nimport { LoggerService, UrlReaderService } from '@backstage/backend-plugin-api';\n\nconst CACHE_KEY = 'v1';\n\n// WARNING: If you change this type, you likely need to bump the CACHE_KEY as well\ntype CacheItem = {\n  etag: string;\n  value: {\n    type: 'entity';\n    entity: Entity;\n    location: LocationSpec;\n  }[];\n};\n\n/** @public */\nexport class UrlReaderProcessor implements CatalogProcessor {\n  // This limiter is used for only consuming a limited number of read streams\n  // concurrently.\n  #limiter: Limit;\n\n  constructor(\n    private readonly options: {\n      reader: UrlReaderService;\n      logger: LoggerService;\n    },\n  ) {\n    this.#limiter = limiterFactory(5);\n  }\n\n  getProcessorName() {\n    return 'url-reader';\n  }\n\n  async readLocation(\n    location: LocationSpec,\n    optional: boolean,\n    emit: CatalogProcessorEmit,\n    parser: CatalogProcessorParser,\n    cache: CatalogProcessorCache,\n  ): Promise<boolean> {\n    if (location.type !== 'url') {\n      return false;\n    }\n\n    const cacheItem = await cache.get<CacheItem>(CACHE_KEY);\n\n    try {\n      const { response, etag: newEtag } = await this.doRead(\n        location.target,\n        cacheItem?.etag,\n      );\n\n      if (response.length === 0 && !optional) {\n        emit(\n          processingResult.notFoundError(\n            location,\n            `Unable to read ${location.type}, no matching files found for ${location.target}`,\n          ),\n        );\n      }\n\n      const parseResults: CatalogProcessorResult[] = [];\n      for (const item of response) {\n        for await (const parseResult of parser({\n          data: item.data,\n          location: { type: location.type, target: item.url },\n        })) {\n          parseResults.push(parseResult);\n          emit(parseResult);\n        }\n      }\n\n      const isOnlyEntities = parseResults.every(r => r.type === 'entity');\n      if (newEtag && isOnlyEntities) {\n        await cache.set<CacheItem>(CACHE_KEY, {\n          etag: newEtag,\n          value: parseResults as CatalogProcessorEntityResult[],\n        });\n      }\n\n      emit(processingResult.refresh(`${location.type}:${location.target}`));\n    } catch (error) {\n      assertError(error);\n      const message = `Unable to read ${location.type}, ${error}`.substring(\n        0,\n        5000,\n      );\n      if (error.name === 'NotModifiedError' && cacheItem) {\n        for (const parseResult of cacheItem.value) {\n          emit(parseResult);\n        }\n        emit(processingResult.refresh(`${location.type}:${location.target}`));\n        await cache.set(CACHE_KEY, cacheItem);\n      } else if (error.name === 'NotFoundError') {\n        if (!optional) {\n          emit(processingResult.notFoundError(location, message));\n        }\n      } else {\n        emit(processingResult.generalError(location, message));\n      }\n    }\n\n    return true;\n  }\n\n  private async doRead(\n    location: string,\n    etag?: string,\n  ): Promise<{ response: { data: Buffer; url: string }[]; etag?: string }> {\n    const response = await this.options.reader.search(location, { etag });\n\n    const output = response.files.map(async file => ({\n      url: file.url,\n      data: await this.#limiter(file.content),\n    }));\n\n    return { response: await Promise.all(output), etag: response.etag };\n  }\n}\n"],"names":["limiterFactory","processingResult","assertError"],"mappings":"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"}