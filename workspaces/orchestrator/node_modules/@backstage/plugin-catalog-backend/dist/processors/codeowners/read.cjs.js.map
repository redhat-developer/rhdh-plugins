{"version":3,"file":"read.cjs.js","sources":["../../../src/processors/codeowners/read.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError } from '@backstage/errors';\nimport { ScmIntegration } from '@backstage/integration';\nimport 'core-js/features/promise'; // NOTE: This can be removed when ES2021 is implemented\nimport { resolveCodeOwner } from './resolve';\nimport { scmCodeOwnersPaths } from './scm';\nimport { UrlReaderService } from '@backstage/backend-plugin-api';\n\nexport async function readCodeOwners(\n  reader: UrlReaderService,\n  sourceUrl: string,\n  codeownersPaths: string[],\n): Promise<string | undefined> {\n  const readOwnerLocation = async (path: string): Promise<string> => {\n    const url = `${sourceUrl}${path}`;\n    const data = await reader.readUrl(url);\n    const buffer = await data.buffer();\n    return buffer.toString();\n  };\n\n  const candidates = codeownersPaths.map(readOwnerLocation);\n\n  return Promise.any(candidates).catch((aggregateError: AggregateError) => {\n    const hardError = aggregateError.errors.find(\n      error => !(error instanceof NotFoundError),\n    );\n\n    if (hardError) {\n      throw hardError;\n    }\n\n    return undefined;\n  });\n}\n\nexport async function findCodeOwnerByTarget(\n  reader: UrlReaderService,\n  targetUrl: string,\n  scmIntegration: ScmIntegration,\n): Promise<string | undefined> {\n  const codeownersPaths = scmCodeOwnersPaths[scmIntegration?.type ?? ''];\n\n  const sourceUrl = scmIntegration?.resolveUrl({\n    url: '/',\n    base: targetUrl,\n  });\n\n  if (!sourceUrl || !codeownersPaths) {\n    return undefined;\n  }\n\n  const contents = await readCodeOwners(reader, sourceUrl, codeownersPaths);\n\n  if (!contents) {\n    return undefined;\n  }\n\n  const owner = resolveCodeOwner(contents, targetUrl);\n\n  return owner;\n}\n"],"names":["NotFoundError","scmCodeOwnersPaths","resolveCodeOwner"],"mappings":";;;;;;;AAuBA,eAAsB,cAAA,CACpB,MAAA,EACA,SAAA,EACA,eAAA,EAC6B;AAC7B,EAAA,MAAM,iBAAA,GAAoB,OAAO,IAAA,KAAkC;AACjE,IAAA,MAAM,GAAA,GAAM,CAAA,EAAG,SAAS,CAAA,EAAG,IAAI,CAAA,CAAA;AAC/B,IAAA,MAAM,IAAA,GAAO,MAAM,MAAA,CAAO,OAAA,CAAQ,GAAG,CAAA;AACrC,IAAA,MAAM,MAAA,GAAS,MAAM,IAAA,CAAK,MAAA,EAAO;AACjC,IAAA,OAAO,OAAO,QAAA,EAAS;AAAA,EACzB,CAAA;AAEA,EAAA,MAAM,UAAA,GAAa,eAAA,CAAgB,GAAA,CAAI,iBAAiB,CAAA;AAExD,EAAA,OAAO,QAAQ,GAAA,CAAI,UAAU,CAAA,CAAE,KAAA,CAAM,CAAC,cAAA,KAAmC;AACvE,IAAA,MAAM,SAAA,GAAY,eAAe,MAAA,CAAO,IAAA;AAAA,MACtC,CAAA,KAAA,KAAS,EAAE,KAAA,YAAiBA,oBAAA;AAAA,KAC9B;AAEA,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,MAAM,SAAA;AAAA,IACR;AAEA,IAAA,OAAO,MAAA;AAAA,EACT,CAAC,CAAA;AACH;AAEA,eAAsB,qBAAA,CACpB,MAAA,EACA,SAAA,EACA,cAAA,EAC6B;AAC7B,EAAA,MAAM,eAAA,GAAkBC,sBAAA,CAAmB,cAAA,EAAgB,IAAA,IAAQ,EAAE,CAAA;AAErE,EAAA,MAAM,SAAA,GAAY,gBAAgB,UAAA,CAAW;AAAA,IAC3C,GAAA,EAAK,GAAA;AAAA,IACL,IAAA,EAAM;AAAA,GACP,CAAA;AAED,EAAA,IAAI,CAAC,SAAA,IAAa,CAAC,eAAA,EAAiB;AAClC,IAAA,OAAO,MAAA;AAAA,EACT;AAEA,EAAA,MAAM,QAAA,GAAW,MAAM,cAAA,CAAe,MAAA,EAAQ,WAAW,eAAe,CAAA;AAExE,EAAA,IAAI,CAAC,QAAA,EAAU;AACb,IAAA,OAAO,MAAA;AAAA,EACT;AAEA,EAAA,MAAM,KAAA,GAAQC,wBAAA,CAAiB,QAAA,EAAU,SAAS,CAAA;AAElD,EAAA,OAAO,KAAA;AACT;;;;;"}