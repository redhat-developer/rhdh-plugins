{"version":3,"file":"BuiltinKindsEntityProcessor.cjs.js","sources":["../../src/processors/BuiltinKindsEntityProcessor.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiEntity,\n  apiEntityV1alpha1Validator,\n  ComponentEntity,\n  componentEntityV1alpha1Validator,\n  DomainEntity,\n  domainEntityV1alpha1Validator,\n  Entity,\n  getCompoundEntityRef,\n  GroupEntity,\n  groupEntityV1alpha1Validator,\n  locationEntityV1alpha1Validator,\n  parseEntityRef,\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CHILD_OF,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_MEMBER,\n  RELATION_HAS_PART,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n  RELATION_PARENT_OF,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n  ResourceEntity,\n  resourceEntityV1alpha1Validator,\n  SystemEntity,\n  systemEntityV1alpha1Validator,\n  UserEntity,\n  userEntityV1alpha1Validator,\n} from '@backstage/catalog-model';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  processingResult,\n} from '@backstage/plugin-catalog-node';\nimport { get, set } from 'lodash';\n\n/** @public */\nexport class BuiltinKindsEntityProcessor implements CatalogProcessor {\n  private readonly validators = [\n    apiEntityV1alpha1Validator,\n    componentEntityV1alpha1Validator,\n    resourceEntityV1alpha1Validator,\n    groupEntityV1alpha1Validator,\n    locationEntityV1alpha1Validator,\n    userEntityV1alpha1Validator,\n    systemEntityV1alpha1Validator,\n    domainEntityV1alpha1Validator,\n  ];\n\n  getProcessorName(): string {\n    return 'BuiltinKindsEntityProcessor';\n  }\n\n  async validateEntityKind(entity: Entity): Promise<boolean> {\n    for (const validator of this.validators) {\n      const results = await validator.check(entity);\n      if (results) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async preProcessEntity(entity: Entity): Promise<Entity> {\n    function sortField(field: string) {\n      const value = get(entity, field);\n      if (\n        value &&\n        Array.isArray(value) &&\n        value.every(v => typeof v === 'string')\n      ) {\n        set(entity, field, value.sort());\n      }\n    }\n\n    // Sort the fields of the entity to ensure consistent hash\n    sortField('spec.providesApis');\n    sortField('spec.consumesApis');\n    sortField('spec.dependsOn');\n    sortField('spec.dependencyOf');\n    sortField('spec.memberOf');\n    sortField('spec.children');\n    sortField('spec.members');\n\n    return entity;\n  }\n\n  async postProcessEntity(\n    entity: Entity,\n    _location: LocationSpec,\n    emit: CatalogProcessorEmit,\n  ): Promise<Entity> {\n    const selfRef = getCompoundEntityRef(entity);\n\n    /*\n     * Utilities\n     */\n\n    function doEmit(\n      targets: string | string[] | undefined,\n      context: { defaultKind?: string; defaultNamespace: string },\n      outgoingRelation: string,\n      incomingRelation: string,\n    ): void {\n      if (!targets) {\n        return;\n      }\n      for (const target of [targets].flat()) {\n        const targetRef = parseEntityRef(target, context);\n        emit(\n          processingResult.relation({\n            source: selfRef,\n            type: outgoingRelation,\n            target: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n          }),\n        );\n        emit(\n          processingResult.relation({\n            source: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n            type: incomingRelation,\n            target: selfRef,\n          }),\n        );\n      }\n    }\n\n    /*\n     * Emit relations for the Component kind\n     */\n\n    if (entity.kind === 'Component') {\n      const component = entity as ComponentEntity;\n      doEmit(\n        component.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        component.spec.subcomponentOf,\n        { defaultKind: 'Component', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n      doEmit(\n        component.spec.providesApis,\n        { defaultKind: 'API', defaultNamespace: selfRef.namespace },\n        RELATION_PROVIDES_API,\n        RELATION_API_PROVIDED_BY,\n      );\n      doEmit(\n        component.spec.consumesApis,\n        { defaultKind: 'API', defaultNamespace: selfRef.namespace },\n        RELATION_CONSUMES_API,\n        RELATION_API_CONSUMED_BY,\n      );\n      doEmit(\n        component.spec.dependsOn,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDS_ON,\n        RELATION_DEPENDENCY_OF,\n      );\n      doEmit(\n        component.spec.dependencyOf,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDENCY_OF,\n        RELATION_DEPENDS_ON,\n      );\n      doEmit(\n        component.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the API kind\n     */\n\n    if (entity.kind === 'API') {\n      const api = entity as ApiEntity;\n      doEmit(\n        api.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        api.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the Resource kind\n     */\n\n    if (entity.kind === 'Resource') {\n      const resource = entity as ResourceEntity;\n      doEmit(\n        resource.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        resource.spec.dependsOn,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDS_ON,\n        RELATION_DEPENDENCY_OF,\n      );\n      doEmit(\n        resource.spec.dependencyOf,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDENCY_OF,\n        RELATION_DEPENDS_ON,\n      );\n      doEmit(\n        resource.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the User kind\n     */\n\n    if (entity.kind === 'User') {\n      const user = entity as UserEntity;\n      doEmit(\n        user.spec.memberOf,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_MEMBER_OF,\n        RELATION_HAS_MEMBER,\n      );\n    }\n\n    /*\n     * Emit relations for the Group kind\n     */\n\n    if (entity.kind === 'Group') {\n      const group = entity as GroupEntity;\n      doEmit(\n        group.spec.parent,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_CHILD_OF,\n        RELATION_PARENT_OF,\n      );\n      doEmit(\n        group.spec.children,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_PARENT_OF,\n        RELATION_CHILD_OF,\n      );\n      doEmit(\n        group.spec.members,\n        { defaultKind: 'User', defaultNamespace: selfRef.namespace },\n        RELATION_HAS_MEMBER,\n        RELATION_MEMBER_OF,\n      );\n    }\n\n    /*\n     * Emit relations for the System kind\n     */\n\n    if (entity.kind === 'System') {\n      const system = entity as SystemEntity;\n      doEmit(\n        system.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        system.spec.domain,\n        { defaultKind: 'Domain', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the Domain kind\n     */\n\n    if (entity.kind === 'Domain') {\n      const domain = entity as DomainEntity;\n      doEmit(\n        domain.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        domain.spec.subdomainOf,\n        { defaultKind: 'Domain', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    return entity;\n  }\n}\n"],"names":["apiEntityV1alpha1Validator","componentEntityV1alpha1Validator","resourceEntityV1alpha1Validator","groupEntityV1alpha1Validator","locationEntityV1alpha1Validator","userEntityV1alpha1Validator","systemEntityV1alpha1Validator","domainEntityV1alpha1Validator","get","set","getCompoundEntityRef","parseEntityRef","processingResult","RELATION_OWNED_BY","RELATION_OWNER_OF","RELATION_PART_OF","RELATION_HAS_PART","RELATION_PROVIDES_API","RELATION_API_PROVIDED_BY","RELATION_CONSUMES_API","RELATION_API_CONSUMED_BY","RELATION_DEPENDS_ON","RELATION_DEPENDENCY_OF","RELATION_MEMBER_OF","RELATION_HAS_MEMBER","RELATION_CHILD_OF","RELATION_PARENT_OF"],"mappings":"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"}