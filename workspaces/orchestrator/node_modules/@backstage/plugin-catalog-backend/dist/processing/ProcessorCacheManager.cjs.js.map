{"version":3,"file":"ProcessorCacheManager.cjs.js","sources":["../../src/processing/ProcessorCacheManager.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  CatalogProcessor,\n  CatalogProcessorCache,\n} from '@backstage/plugin-catalog-node';\nimport { isObject } from './util';\n\nclass SingleProcessorSubCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  collect(): JsonObject | undefined {\n    return this.newState ?? this.existingState;\n  }\n}\n\nclass SingleProcessorCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n  private subCaches: Map<string, SingleProcessorSubCache> = new Map();\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  withKey(key: string) {\n    const existingSubCache = this.subCaches.get(key);\n    if (existingSubCache) {\n      return existingSubCache;\n    }\n    const existing = this.existingState?.[key];\n    const subCache = new SingleProcessorSubCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.subCaches.set(key, subCache);\n    return subCache;\n  }\n\n  collect(): JsonObject | undefined {\n    let obj = this.newState ?? this.existingState;\n    for (const [key, subCache] of this.subCaches) {\n      const subCacheValue = subCache.collect();\n      if (subCacheValue) {\n        obj = { ...obj, [key]: subCacheValue };\n      }\n    }\n    return obj;\n  }\n}\n\nexport class ProcessorCacheManager {\n  private caches = new Map<string, SingleProcessorCache>();\n\n  constructor(private readonly existingState: JsonObject) {}\n\n  forProcessor(\n    processor: CatalogProcessor,\n    key?: string,\n  ): CatalogProcessorCache {\n    // constructor name will be deprecated in the future when we make `getProcessorName` required in the implementation\n    const name = processor.getProcessorName();\n    const cache = this.caches.get(name);\n    if (cache) {\n      return key ? cache.withKey(key) : cache;\n    }\n\n    const existing = this.existingState[name];\n\n    const newCache = new SingleProcessorCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.caches.set(name, newCache);\n    return key ? newCache.withKey(key) : newCache;\n  }\n\n  collect(): JsonObject {\n    const result: JsonObject = {};\n    for (const [key, value] of this.caches.entries()) {\n      result[key] = value.collect();\n    }\n\n    return result;\n  }\n}\n"],"names":["isObject"],"mappings":"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"}