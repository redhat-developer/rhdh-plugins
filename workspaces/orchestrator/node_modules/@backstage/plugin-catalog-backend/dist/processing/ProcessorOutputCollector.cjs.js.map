{"version":3,"file":"ProcessorOutputCollector.cjs.js","sources":["../../src/processing/ProcessorOutputCollector.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  Entity,\n  stringifyEntityRef,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\nimport {\n  CatalogProcessor,\n  CatalogProcessorResult,\n  DeferredEntity,\n  EntityRelationSpec,\n} from '@backstage/plugin-catalog-node';\nimport { locationSpecToLocationEntity } from '../util/conversion';\nimport {\n  getEntityLocationRef,\n  getEntityOriginLocationRef,\n  validateEntityEnvelope,\n} from './util';\nimport { RefreshKeyData } from './types';\nimport { LoggerService } from '@backstage/backend-plugin-api';\n\n/**\n * Helper class for aggregating all of the emitted data from processors.\n */\nexport class ProcessorOutputCollector {\n  private readonly errors = new Array<Error>();\n  private readonly relations = new Array<EntityRelationSpec>();\n  private readonly deferredEntities = new Array<DeferredEntity>();\n  private readonly refreshKeys = new Array<RefreshKeyData>();\n  private done = false;\n\n  constructor(\n    private readonly logger: LoggerService,\n    private readonly parentEntity: Entity,\n  ) {}\n\n  generic(): (i: CatalogProcessorResult) => void {\n    return i => this.receive(this.logger, i);\n  }\n\n  forProcessor(\n    processor: CatalogProcessor,\n  ): (i: CatalogProcessorResult) => void {\n    const logger = this.logger.child({\n      processor: processor.getProcessorName(),\n    });\n    return i => this.receive(logger, i);\n  }\n\n  results() {\n    this.done = true;\n    return {\n      errors: this.errors,\n      relations: this.relations,\n      refreshKeys: this.refreshKeys,\n      deferredEntities: this.deferredEntities,\n    };\n  }\n\n  private receive(logger: LoggerService, i: CatalogProcessorResult) {\n    if (this.done) {\n      logger.warn(\n        `Item of type \"${\n          i.type\n        }\" was emitted after processing had completed. Stack trace: ${\n          new Error().stack\n        }`,\n      );\n      return;\n    }\n\n    if (i.type === 'entity') {\n      let entity: Entity;\n      const location = stringifyLocationRef(i.location);\n\n      try {\n        entity = validateEntityEnvelope(i.entity);\n      } catch (e) {\n        assertError(e);\n        logger.debug(`Envelope validation failed at ${location}, ${e}`);\n        this.errors.push(e);\n        return;\n      }\n\n      // The processor contract says you should return the \"trunk\" (current)\n      // entity, not emit it. But it happens that this is misunderstood or\n      // accidentally forgotten. This can lead to circular references which at\n      // best is wasteful, so we try to be helpful by ignoring such emitted\n      // entities.\n      const entityRef = stringifyEntityRef(entity);\n      if (entityRef === stringifyEntityRef(this.parentEntity)) {\n        logger.warn(\n          `Ignored emitted entity ${entityRef} whose ref was identical to the one being processed. This commonly indicates mistakenly emitting the input entity instead of returning it.`,\n        );\n        return;\n      }\n\n      // Note that at this point, we have only validated the envelope part of\n      // the entity data. Annotations are not part of that, so we have to be\n      // defensive and report an error if the annotations isn't a valid object, to avoid\n      // hiding errors when adding location annotations.\n      const annotations = entity.metadata.annotations || {};\n      if (typeof annotations !== 'object' || Array.isArray(annotations)) {\n        this.errors.push(\n          new Error('metadata.annotations must be a valid object'),\n        );\n        return;\n      }\n      const originLocation = getEntityOriginLocationRef(this.parentEntity);\n      entity = {\n        ...entity,\n        metadata: {\n          ...entity.metadata,\n          annotations: {\n            ...annotations,\n            [ANNOTATION_ORIGIN_LOCATION]: originLocation,\n            [ANNOTATION_LOCATION]: location,\n          },\n        },\n      };\n\n      const locationKey =\n        i.locationKey === undefined ? location : i.locationKey ?? undefined;\n      this.deferredEntities.push({ entity, locationKey });\n    } else if (i.type === 'location') {\n      const entity = locationSpecToLocationEntity({\n        location: i.location,\n        parentEntity: this.parentEntity,\n      });\n      const locationKey = getEntityLocationRef(entity);\n      this.deferredEntities.push({ entity, locationKey });\n    } else if (i.type === 'relation') {\n      this.relations.push(i.relation);\n    } else if (i.type === 'error') {\n      this.errors.push(i.error);\n    } else if (i.type === 'refresh') {\n      this.refreshKeys.push({ key: i.key });\n    }\n  }\n}\n"],"names":["stringifyLocationRef","validateEntityEnvelope","assertError","stringifyEntityRef","getEntityOriginLocationRef","ANNOTATION_ORIGIN_LOCATION","ANNOTATION_LOCATION","locationSpecToLocationEntity","getEntityLocationRef"],"mappings":"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"}