'use strict';

var alpha = require('@backstage/plugin-catalog-node/alpha');
var pluginPermissionNode = require('@backstage/plugin-permission-node');
var zod = require('zod');

const hasLabel = pluginPermissionNode.createPermissionRule({
  name: "HAS_LABEL",
  description: "Allow entities with the specified label",
  resourceRef: alpha.catalogEntityPermissionResourceRef,
  paramsSchema: zod.z.object({
    label: zod.z.string().describe("Name of the label to match on"),
    value: zod.z.string().optional().describe("Value of the label to match on")
  }),
  apply: (resource, { label, value }) => !!resource.metadata.labels?.hasOwnProperty(label) && (value === void 0 ? true : resource.metadata.labels?.[label] === value),
  toQuery: ({ label, value }) => value === void 0 ? {
    key: `metadata.labels.${label}`
  } : {
    key: `metadata.labels.${label}`,
    values: [value]
  }
});

exports.hasLabel = hasLabel;
//# sourceMappingURL=hasLabel.cjs.js.map
