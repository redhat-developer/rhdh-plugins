'use strict';

var alpha = require('@backstage/plugin-catalog-node/alpha');
var pluginPermissionNode = require('@backstage/plugin-permission-node');
var zod = require('zod');

const hasAnnotation = pluginPermissionNode.createPermissionRule({
  name: "HAS_ANNOTATION",
  description: "Allow entities with the specified annotation",
  resourceRef: alpha.catalogEntityPermissionResourceRef,
  paramsSchema: zod.z.object({
    annotation: zod.z.string().describe("Name of the annotation to match on"),
    value: zod.z.string().optional().describe("Value of the annotation to match on")
  }),
  apply: (resource, { annotation, value }) => !!resource.metadata.annotations?.hasOwnProperty(annotation) && (value === void 0 ? true : resource.metadata.annotations?.[annotation] === value),
  toQuery: ({ annotation, value }) => value === void 0 ? {
    key: `metadata.annotations.${annotation}`
  } : {
    key: `metadata.annotations.${annotation}`,
    values: [value]
  }
});

exports.hasAnnotation = hasAnnotation;
//# sourceMappingURL=hasAnnotation.cjs.js.map
