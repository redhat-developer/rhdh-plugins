{"version":3,"file":"DefaultLocationService.cjs.js","sources":["../../src/service/DefaultLocationService.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyEntityRef,\n  CompoundEntityRef,\n  parseEntityRef,\n} from '@backstage/catalog-model';\nimport { Location } from '@backstage/catalog-client';\nimport { CatalogProcessingOrchestrator } from '../processing/types';\nimport { LocationInput, LocationService, LocationStore } from './types';\nimport { locationSpecToMetadataName } from '../util/conversion';\nimport { InputError } from '@backstage/errors';\nimport { DeferredEntity } from '@backstage/plugin-catalog-node';\n\nexport type DefaultLocationServiceOptions = {\n  allowedLocationTypes: string[];\n};\n\nexport class DefaultLocationService implements LocationService {\n  constructor(\n    private readonly store: LocationStore,\n    private readonly orchestrator: CatalogProcessingOrchestrator,\n    private readonly options: DefaultLocationServiceOptions = {\n      allowedLocationTypes: ['url'],\n    },\n  ) {}\n\n  async createLocation(\n    input: LocationInput,\n    dryRun: boolean,\n  ): Promise<{ location: Location; entities: Entity[]; exists?: boolean }> {\n    if (!this.options.allowedLocationTypes.includes(input.type)) {\n      throw new InputError(\n        `Registered locations must be of an allowed type ${JSON.stringify(\n          this.options.allowedLocationTypes,\n        )}`,\n      );\n    }\n    if (dryRun) {\n      return this.dryRunCreateLocation(input);\n    }\n    const location = await this.store.createLocation(input);\n    return { location, entities: [] };\n  }\n\n  listLocations(): Promise<Location[]> {\n    return this.store.listLocations();\n  }\n  getLocation(id: string): Promise<Location> {\n    return this.store.getLocation(id);\n  }\n  deleteLocation(id: string): Promise<void> {\n    return this.store.deleteLocation(id);\n  }\n\n  getLocationByEntity(\n    entityRef: CompoundEntityRef | string,\n  ): Promise<Location> {\n    return this.store.getLocationByEntity(parseEntityRef(entityRef));\n  }\n\n  private async processEntities(\n    unprocessedEntities: DeferredEntity[],\n  ): Promise<Entity[]> {\n    const entities: Entity[] = [];\n    while (unprocessedEntities.length) {\n      const currentEntity = unprocessedEntities.pop();\n      if (!currentEntity) {\n        continue;\n      }\n      const processed = await this.orchestrator.process({\n        entity: currentEntity.entity,\n        state: {}, // we process without the existing cache\n      });\n\n      if (processed.ok) {\n        if (\n          entities.some(\n            e =>\n              stringifyEntityRef(e) ===\n              stringifyEntityRef(processed.completedEntity),\n          )\n        ) {\n          throw new InputError(\n            `Duplicate nested entity: ${stringifyEntityRef(\n              processed.completedEntity,\n            )}`,\n          );\n        }\n        unprocessedEntities.push(...processed.deferredEntities);\n        entities.push(processed.completedEntity);\n      } else {\n        throw new InputError(processed.errors.map(String).join(', '));\n      }\n    }\n    return entities;\n  }\n\n  private async dryRunCreateLocation(\n    spec: LocationInput,\n  ): Promise<{ location: Location; entities: Entity[]; exists?: boolean }> {\n    // Run the existence check in parallel with the processing\n    const existsPromise = this.store\n      .listLocations()\n      .then(locations =>\n        locations.some(l => l.type === spec.type && l.target === spec.target),\n      );\n\n    const entity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Location',\n      metadata: {\n        name: locationSpecToMetadataName({\n          type: spec.type,\n          target: spec.target,\n        }),\n        namespace: 'default',\n        annotations: {\n          [ANNOTATION_LOCATION]: `${spec.type}:${spec.target}`,\n          [ANNOTATION_ORIGIN_LOCATION]: `${spec.type}:${spec.target}`,\n        },\n      },\n      spec: {\n        type: spec.type,\n        target: spec.target,\n      },\n    };\n    const unprocessedEntities: DeferredEntity[] = [\n      { entity, locationKey: `${spec.type}:${spec.target}` },\n    ];\n    const entities: Entity[] = await this.processEntities(unprocessedEntities);\n\n    return {\n      exists: await existsPromise,\n      location: { ...spec, id: `${spec.type}:${spec.target}` },\n      entities,\n    };\n  }\n}\n"],"names":["InputError","parseEntityRef","stringifyEntityRef","locationSpecToMetadataName","ANNOTATION_LOCATION","ANNOTATION_ORIGIN_LOCATION"],"mappings":"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"}