{"version":3,"file":"basicEntityFilter.cjs.js","sources":["../../../src/service/request/basicEntityFilter.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EntitiesSearchFilter,\n  EntityFilter,\n} from '@backstage/plugin-catalog-node';\n\n/**\n * Forms a full EntityFilter based on a single key-value(s) object.\n */\nexport function basicEntityFilter(\n  items: Record<string, string | string[]>,\n): EntityFilter {\n  const filtersByKey: Record<string, EntitiesSearchFilter> = {};\n\n  for (const [key, value] of Object.entries(items)) {\n    const values = [value].flat();\n\n    const f =\n      key in filtersByKey\n        ? filtersByKey[key]\n        : (filtersByKey[key] = { key, values: [] });\n\n    f.values!.push(...values);\n  }\n\n  return { anyOf: [{ allOf: Object.values(filtersByKey) }] };\n}\n"],"names":[],"mappings":";;AAwBO,SAAS,kBACd,KAAA,EACc;AACd,EAAA,MAAM,eAAqD,EAAC;AAE5D,EAAA,KAAA,MAAW,CAAC,GAAA,EAAK,KAAK,KAAK,MAAA,CAAO,OAAA,CAAQ,KAAK,CAAA,EAAG;AAChD,IAAA,MAAM,MAAA,GAAS,CAAC,KAAK,CAAA,CAAE,IAAA,EAAK;AAE5B,IAAA,MAAM,CAAA,GACJ,GAAA,IAAO,YAAA,GACH,YAAA,CAAa,GAAG,CAAA,GACf,YAAA,CAAa,GAAG,CAAA,GAAI,EAAE,GAAA,EAAK,MAAA,EAAQ,EAAC,EAAE;AAE7C,IAAA,CAAA,CAAE,MAAA,CAAQ,IAAA,CAAK,GAAG,MAAM,CAAA;AAAA,EAC1B;AAEA,EAAA,OAAO,EAAE,KAAA,EAAO,CAAC,EAAE,KAAA,EAAO,OAAO,MAAA,CAAO,YAAY,CAAA,EAAG,CAAA,EAAE;AAC3D;;;;"}