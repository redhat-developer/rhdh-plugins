{"version":3,"file":"applyEntityFilterToQuery.cjs.js","sources":["../../../src/service/request/applyEntityFilterToQuery.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EntitiesSearchFilter,\n  EntityFilter,\n} from '@backstage/plugin-catalog-node';\nimport { Knex } from 'knex';\nimport { DbSearchRow } from '../../database/tables';\n\nfunction isEntitiesSearchFilter(\n  filter: EntitiesSearchFilter | EntityFilter,\n): filter is EntitiesSearchFilter {\n  return filter.hasOwnProperty('key');\n}\n\nfunction isOrEntityFilter(\n  filter: EntityFilter,\n): filter is { anyOf: EntityFilter[] } {\n  return filter.hasOwnProperty('anyOf');\n}\n\nfunction isNegationEntityFilter(\n  filter: EntityFilter,\n): filter is { not: EntityFilter } {\n  return filter.hasOwnProperty('not');\n}\n\n/**\n * Applies filtering through a number of WHERE IN subqueries. Example:\n *\n * ```\n * SELECT * FROM final_entities\n * WHERE\n *   entity_id IN (\n *     SELECT entity_id FROM search\n *     WHERE key = 'kind' AND value = 'component'\n *   )\n *   AND entity_id IN (\n *     SELECT entity_id FROM search\n *     WHERE key = 'spec.lifecycle' AND value = 'production'\n *   )\n *   AND final_entities.final_entity IS NOT NULL\n * ```\n *\n * This strategy is a good all-rounder, in the sense that it has medium-good\n * performance on most queries on all database engines. However, it does not\n * scale well down to very short runtimes as well as the JOIN strategy.\n */\nfunction applyInStrategy(\n  filter: EntityFilter,\n  targetQuery: Knex.QueryBuilder,\n  onEntityIdField: string,\n  knex: Knex,\n  negate: boolean,\n): Knex.QueryBuilder {\n  if (isNegationEntityFilter(filter)) {\n    return applyInStrategy(\n      filter.not,\n      targetQuery,\n      onEntityIdField,\n      knex,\n      !negate,\n    );\n  }\n\n  if (isEntitiesSearchFilter(filter)) {\n    const key = filter.key.toLowerCase();\n    const values = filter.values?.map(v => v.toLowerCase());\n    const matchQuery = knex<DbSearchRow>('search')\n      .select('search.entity_id')\n      .where({ key })\n      .andWhere(function keyFilter() {\n        if (values?.length === 1) {\n          this.where({ value: values.at(0) });\n        } else if (values) {\n          this.andWhere('value', 'in', values);\n        }\n      });\n    return targetQuery.andWhere(\n      onEntityIdField,\n      negate ? 'not in' : 'in',\n      matchQuery,\n    );\n  }\n\n  return targetQuery[negate ? 'andWhereNot' : 'andWhere'](\n    function filterFunction() {\n      if (isOrEntityFilter(filter)) {\n        for (const subFilter of filter.anyOf ?? []) {\n          this.orWhere(subQuery =>\n            applyInStrategy(subFilter, subQuery, onEntityIdField, knex, false),\n          );\n        }\n      } else {\n        for (const subFilter of filter.allOf ?? []) {\n          this.andWhere(subQuery =>\n            applyInStrategy(subFilter, subQuery, onEntityIdField, knex, false),\n          );\n        }\n      }\n    },\n  );\n}\n\n// The actual exported function\nexport function applyEntityFilterToQuery(options: {\n  filter: EntityFilter;\n  targetQuery: Knex.QueryBuilder;\n  onEntityIdField: string;\n  knex: Knex;\n  strategy?: 'in' | 'join';\n}): Knex.QueryBuilder {\n  const { filter, targetQuery, onEntityIdField, knex } = options;\n\n  return applyInStrategy(filter, targetQuery, onEntityIdField, knex, false);\n}\n"],"names":[],"mappings":";;AAuBA,SAAS,uBACP,MAAA,EACgC;AAChC,EAAA,OAAO,MAAA,CAAO,eAAe,KAAK,CAAA;AACpC;AAEA,SAAS,iBACP,MAAA,EACqC;AACrC,EAAA,OAAO,MAAA,CAAO,eAAe,OAAO,CAAA;AACtC;AAEA,SAAS,uBACP,MAAA,EACiC;AACjC,EAAA,OAAO,MAAA,CAAO,eAAe,KAAK,CAAA;AACpC;AAuBA,SAAS,eAAA,CACP,MAAA,EACA,WAAA,EACA,eAAA,EACA,MACA,MAAA,EACmB;AACnB,EAAA,IAAI,sBAAA,CAAuB,MAAM,CAAA,EAAG;AAClC,IAAA,OAAO,eAAA;AAAA,MACL,MAAA,CAAO,GAAA;AAAA,MACP,WAAA;AAAA,MACA,eAAA;AAAA,MACA,IAAA;AAAA,MACA,CAAC;AAAA,KACH;AAAA,EACF;AAEA,EAAA,IAAI,sBAAA,CAAuB,MAAM,CAAA,EAAG;AAClC,IAAA,MAAM,GAAA,GAAM,MAAA,CAAO,GAAA,CAAI,WAAA,EAAY;AACnC,IAAA,MAAM,SAAS,MAAA,CAAO,MAAA,EAAQ,IAAI,CAAA,CAAA,KAAK,CAAA,CAAE,aAAa,CAAA;AACtD,IAAA,MAAM,UAAA,GAAa,IAAA,CAAkB,QAAQ,CAAA,CAC1C,OAAO,kBAAkB,CAAA,CACzB,KAAA,CAAM,EAAE,GAAA,EAAK,CAAA,CACb,QAAA,CAAS,SAAS,SAAA,GAAY;AAC7B,MAAA,IAAI,MAAA,EAAQ,WAAW,CAAA,EAAG;AACxB,QAAA,IAAA,CAAK,MAAM,EAAE,KAAA,EAAO,OAAO,EAAA,CAAG,CAAC,GAAG,CAAA;AAAA,MACpC,WAAW,MAAA,EAAQ;AACjB,QAAA,IAAA,CAAK,QAAA,CAAS,OAAA,EAAS,IAAA,EAAM,MAAM,CAAA;AAAA,MACrC;AAAA,IACF,CAAC,CAAA;AACH,IAAA,OAAO,WAAA,CAAY,QAAA;AAAA,MACjB,eAAA;AAAA,MACA,SAAS,QAAA,GAAW,IAAA;AAAA,MACpB;AAAA,KACF;AAAA,EACF;AAEA,EAAA,OAAO,WAAA,CAAY,MAAA,GAAS,aAAA,GAAgB,UAAU,CAAA;AAAA,IACpD,SAAS,cAAA,GAAiB;AACxB,MAAA,IAAI,gBAAA,CAAiB,MAAM,CAAA,EAAG;AAC5B,QAAA,KAAA,MAAW,SAAA,IAAa,MAAA,CAAO,KAAA,IAAS,EAAC,EAAG;AAC1C,UAAA,IAAA,CAAK,OAAA;AAAA,YAAQ,cACX,eAAA,CAAgB,SAAA,EAAW,QAAA,EAAU,eAAA,EAAiB,MAAM,KAAK;AAAA,WACnE;AAAA,QACF;AAAA,MACF,CAAA,MAAO;AACL,QAAA,KAAA,MAAW,SAAA,IAAa,MAAA,CAAO,KAAA,IAAS,EAAC,EAAG;AAC1C,UAAA,IAAA,CAAK,QAAA;AAAA,YAAS,cACZ,eAAA,CAAgB,SAAA,EAAW,QAAA,EAAU,eAAA,EAAiB,MAAM,KAAK;AAAA,WACnE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,GACF;AACF;AAGO,SAAS,yBAAyB,OAAA,EAMnB;AACpB,EAAA,MAAM,EAAE,MAAA,EAAQ,WAAA,EAAa,eAAA,EAAiB,MAAK,GAAI,OAAA;AAEvD,EAAA,OAAO,eAAA,CAAgB,MAAA,EAAQ,WAAA,EAAa,eAAA,EAAiB,MAAM,KAAK,CAAA;AAC1E;;;;"}