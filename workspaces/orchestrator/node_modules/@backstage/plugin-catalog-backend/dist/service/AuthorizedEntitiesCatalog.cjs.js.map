{"version":3,"file":"AuthorizedEntitiesCatalog.cjs.js","sources":["../../src/service/AuthorizedEntitiesCatalog.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotAllowedError } from '@backstage/errors';\nimport {\n  catalogEntityDeletePermission,\n  catalogEntityReadPermission,\n} from '@backstage/plugin-catalog-common/alpha';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { AuthorizeResult } from '@backstage/plugin-permission-common';\nimport { ConditionTransformer } from '@backstage/plugin-permission-node';\nimport {\n  Cursor,\n  EntitiesBatchRequest,\n  EntitiesBatchResponse,\n  EntitiesCatalog,\n  EntitiesRequest,\n  EntitiesResponse,\n  EntityAncestryResponse,\n  EntityFacetsRequest,\n  EntityFacetsResponse,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n} from '../catalog/types';\nimport { basicEntityFilter } from './request';\nimport { isQueryEntitiesCursorRequest } from './util';\nimport { EntityFilter } from '@backstage/plugin-catalog-node';\nimport {\n  BackstageCredentials,\n  PermissionsService,\n} from '@backstage/backend-plugin-api';\n\nexport class AuthorizedEntitiesCatalog implements EntitiesCatalog {\n  constructor(\n    private readonly entitiesCatalog: EntitiesCatalog,\n    private readonly permissionApi: PermissionsService,\n    private readonly transformConditions: ConditionTransformer<EntityFilter>,\n  ) {}\n\n  async entities(request: EntitiesRequest): Promise<EntitiesResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        entities: { type: 'object', entities: [] },\n        pageInfo: { hasNextPage: false },\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.entities({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.entities(request);\n  }\n\n  async entitiesBatch(\n    request: EntitiesBatchRequest,\n  ): Promise<EntitiesBatchResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        items: {\n          type: 'object',\n          entities: new Array(request.entityRefs.length).fill(null),\n        },\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.entitiesBatch({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.entitiesBatch(request);\n  }\n\n  async queryEntities(\n    request: QueryEntitiesRequest,\n  ): Promise<QueryEntitiesResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        items: { type: 'object', entities: [] },\n        pageInfo: {},\n        totalItems: 0,\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n\n      let permissionedRequest: QueryEntitiesRequest;\n      let requestFilter: EntityFilter | undefined;\n\n      if (isQueryEntitiesCursorRequest(request)) {\n        requestFilter = request.cursor.filter;\n\n        permissionedRequest = {\n          ...request,\n          cursor: {\n            ...request.cursor,\n            filter: request.cursor.filter\n              ? { allOf: [permissionFilter, request.cursor.filter] }\n              : permissionFilter,\n          },\n        };\n      } else {\n        permissionedRequest = {\n          ...request,\n          filter: request.filter\n            ? { allOf: [permissionFilter, request.filter] }\n            : permissionFilter,\n        };\n        requestFilter = request.filter;\n      }\n\n      const response = await this.entitiesCatalog.queryEntities(\n        permissionedRequest,\n      );\n\n      const prevCursor: Cursor | undefined = response.pageInfo.prevCursor && {\n        ...response.pageInfo.prevCursor,\n        filter: requestFilter,\n      };\n\n      const nextCursor: Cursor | undefined = response.pageInfo.nextCursor && {\n        ...response.pageInfo.nextCursor,\n        filter: requestFilter,\n      };\n\n      return {\n        ...response,\n        pageInfo: {\n          prevCursor,\n          nextCursor,\n        },\n      };\n    }\n\n    return this.entitiesCatalog.queryEntities(request);\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options: { credentials: BackstageCredentials },\n  ): Promise<void> {\n    const authorizeResponse = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityDeletePermission }],\n        { credentials: options.credentials },\n      )\n    )[0];\n    if (authorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n    if (authorizeResponse.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeResponse.conditions,\n      );\n      const { entities } = await this.entitiesCatalog.entities({\n        credentials: options.credentials,\n        filter: {\n          allOf: [permissionFilter, basicEntityFilter({ 'metadata.uid': uid })],\n        },\n      });\n      if (entities.entities.length === 0) {\n        throw new NotAllowedError();\n      }\n    }\n    return this.entitiesCatalog.removeEntityByUid(uid, {\n      credentials: options.credentials,\n    });\n  }\n\n  async entityAncestry(\n    entityRef: string,\n    options: { credentials: BackstageCredentials },\n  ): Promise<EntityAncestryResponse> {\n    const rootEntityAuthorizeResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogEntityReadPermission, resourceRef: entityRef }],\n        { credentials: options.credentials },\n      )\n    )[0];\n    if (rootEntityAuthorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n\n    const ancestryResult = await this.entitiesCatalog.entityAncestry(\n      entityRef,\n      { credentials: options.credentials },\n    );\n    const authorizeResponse = await this.permissionApi.authorize(\n      ancestryResult.items.map(item => ({\n        permission: catalogEntityReadPermission,\n        resourceRef: stringifyEntityRef(item.entity),\n      })),\n      { credentials: options.credentials },\n    );\n    const unauthorizedAncestryItems = ancestryResult.items.filter(\n      (_, index) => authorizeResponse[index].result === AuthorizeResult.DENY,\n    );\n    if (unauthorizedAncestryItems.length === 0) {\n      return ancestryResult;\n    }\n    const rootUnauthorizedEntityRefs = unauthorizedAncestryItems.map(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity),\n    );\n    const allUnauthorizedEntityRefs = new Set(\n      rootUnauthorizedEntityRefs.flatMap(rootEntityRef =>\n        this.findParents(\n          rootEntityRef,\n          ancestryResult.items,\n          new Set(rootUnauthorizedEntityRefs),\n        ),\n      ),\n    );\n    return {\n      rootEntityRef: ancestryResult.rootEntityRef,\n      items: ancestryResult.items.filter(\n        ancestryItem =>\n          !allUnauthorizedEntityRefs.has(\n            stringifyEntityRef(ancestryItem.entity),\n          ),\n      ),\n    };\n  }\n\n  async facets(request: EntityFacetsRequest): Promise<EntityFacetsResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { credentials: request.credentials },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        facets: Object.fromEntries(request.facets.map(f => [f, []])),\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.facets({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.facets(request);\n  }\n\n  private findParents(\n    entityRef: string,\n    allAncestryItems: { entity: Entity; parentEntityRefs: string[] }[],\n    seenEntityRefs: Set<string>,\n  ): string[] {\n    const entity = allAncestryItems.find(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity) === entityRef,\n    );\n    if (!entity) return [];\n\n    const newSeenEntityRefs = new Set(seenEntityRefs);\n    entity.parentEntityRefs.forEach(parentRef =>\n      newSeenEntityRefs.add(parentRef),\n    );\n\n    return [\n      entityRef,\n      ...entity.parentEntityRefs.flatMap(parentRef =>\n        seenEntityRefs.has(parentRef)\n          ? []\n          : this.findParents(parentRef, allAncestryItems, newSeenEntityRefs),\n      ),\n    ];\n  }\n}\n"],"names":["catalogEntityReadPermission","AuthorizeResult","isQueryEntitiesCursorRequest","catalogEntityDeletePermission","NotAllowedError","basicEntityFilter","stringifyEntityRef"],"mappings":"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"}