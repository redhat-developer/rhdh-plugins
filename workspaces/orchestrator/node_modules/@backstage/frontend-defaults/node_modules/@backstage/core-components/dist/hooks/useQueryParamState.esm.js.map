{"version":3,"file":"useQueryParamState.esm.js","sources":["../../src/hooks/useQueryParamState.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEqual } from 'lodash';\nimport qs from 'qs';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDebouncedEffect } from '@react-hookz/web';\n\nfunction stringify(queryParams: any): string {\n  // Even though these setting don't look nice (e.g. escaped brackets), we should keep\n  // them this way. The current syntax handles all cases, including variable types with\n  // arrays or strings.\n  return qs.stringify(queryParams, {\n    strictNullHandling: true,\n  });\n}\n\nfunction parse(queryString: string): any {\n  return qs.parse(queryString, {\n    ignoreQueryPrefix: true,\n    strictNullHandling: true,\n  });\n}\n\nfunction extractState(queryString: string, stateName: string): any | undefined {\n  const queryParams = parse(queryString);\n\n  return queryParams[stateName];\n}\n\nfunction joinQueryString(\n  queryString: string,\n  stateName: string,\n  state: any,\n): string {\n  const queryParams = {\n    ...parse(queryString),\n    [stateName]: state,\n  };\n  return stringify(queryParams);\n}\n\ntype SetQueryParams<T> = (params: T) => void;\n\nexport function useQueryParamState<T>(\n  stateName: string,\n  /** @deprecated Don't configure a custom debounceTime */\n  debounceTime: number = 250,\n): [T | undefined, SetQueryParams<T>] {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchParamsString = searchParams.toString();\n  const [queryParamState, setQueryParamState] = useState<T>(\n    extractState(searchParamsString, stateName),\n  );\n\n  useEffect(() => {\n    const newState = extractState(searchParamsString, stateName);\n\n    setQueryParamState(oldState =>\n      isEqual(newState, oldState) ? oldState : newState,\n    );\n  }, [searchParamsString, setQueryParamState, stateName]);\n\n  useDebouncedEffect(\n    () => {\n      const queryString = joinQueryString(\n        searchParamsString,\n        stateName,\n        queryParamState,\n      );\n\n      if (searchParamsString !== queryString) {\n        setSearchParams(queryString, { replace: true });\n      }\n    },\n    [setSearchParams, queryParamState, searchParamsString, stateName],\n    debounceTime,\n  );\n\n  return [queryParamState, setQueryParamState];\n}\n"],"names":[],"mappings":";;;;;;AAsBA,SAAS,UAAU,WAAA,EAA0B;AAI3C,EAAA,OAAO,EAAA,CAAG,UAAU,WAAA,EAAa;AAAA,IAC/B,kBAAA,EAAoB;AAAA,GACrB,CAAA;AACH;AAEA,SAAS,MAAM,WAAA,EAA0B;AACvC,EAAA,OAAO,EAAA,CAAG,MAAM,WAAA,EAAa;AAAA,IAC3B,iBAAA,EAAmB,IAAA;AAAA,IACnB,kBAAA,EAAoB;AAAA,GACrB,CAAA;AACH;AAEA,SAAS,YAAA,CAAa,aAAqB,SAAA,EAAoC;AAC7E,EAAA,MAAM,WAAA,GAAc,MAAM,WAAW,CAAA;AAErC,EAAA,OAAO,YAAY,SAAS,CAAA;AAC9B;AAEA,SAAS,eAAA,CACP,WAAA,EACA,SAAA,EACA,KAAA,EACQ;AACR,EAAA,MAAM,WAAA,GAAc;AAAA,IAClB,GAAG,MAAM,WAAW,CAAA;AAAA,IACpB,CAAC,SAAS,GAAG;AAAA,GACf;AACA,EAAA,OAAO,UAAU,WAAW,CAAA;AAC9B;AAIO,SAAS,kBAAA,CACd,SAAA,EAEA,YAAA,GAAuB,GAAA,EACa;AACpC,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,eAAA,EAAgB;AACxD,EAAA,MAAM,kBAAA,GAAqB,aAAa,QAAA,EAAS;AACjD,EAAA,MAAM,CAAC,eAAA,EAAiB,kBAAkB,CAAA,GAAI,QAAA;AAAA,IAC5C,YAAA,CAAa,oBAAoB,SAAS;AAAA,GAC5C;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,QAAA,GAAW,YAAA,CAAa,kBAAA,EAAoB,SAAS,CAAA;AAE3D,IAAA,kBAAA;AAAA,MAAmB,CAAA,QAAA,KACjB,OAAA,CAAQ,QAAA,EAAU,QAAQ,IAAI,QAAA,GAAW;AAAA,KAC3C;AAAA,EACF,CAAA,EAAG,CAAC,kBAAA,EAAoB,kBAAA,EAAoB,SAAS,CAAC,CAAA;AAEtD,EAAA,kBAAA;AAAA,IACE,MAAM;AACJ,MAAA,MAAM,WAAA,GAAc,eAAA;AAAA,QAClB,kBAAA;AAAA,QACA,SAAA;AAAA,QACA;AAAA,OACF;AAEA,MAAA,IAAI,uBAAuB,WAAA,EAAa;AACtC,QAAA,eAAA,CAAgB,WAAA,EAAa,EAAE,OAAA,EAAS,IAAA,EAAM,CAAA;AAAA,MAChD;AAAA,IACF,CAAA;AAAA,IACA,CAAC,eAAA,EAAiB,eAAA,EAAiB,kBAAA,EAAoB,SAAS,CAAA;AAAA,IAChE;AAAA,GACF;AAEA,EAAA,OAAO,CAAC,iBAAiB,kBAAkB,CAAA;AAC7C;;;;"}