import * as _backstage_plugin_scaffolder_node from '@backstage/plugin-scaffolder-node';
import { ScmIntegrationRegistry } from '@backstage/integration';
import { Config } from '@backstage/config';
import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';

/**
 * Creates a new action that initializes a git repository of the content in the workspace
 * and publishes it to Bitbucket Cloud.
 * @public
 */
declare function createPublishBitbucketCloudAction(options: {
    integrations: ScmIntegrationRegistry;
    config: Config;
}): _backstage_plugin_scaffolder_node.TemplateAction<{
    repoUrl: string;
    description?: string | undefined;
    defaultBranch?: string | undefined;
    repoVisibility?: "private" | "public" | undefined;
    gitCommitMessage?: string | undefined;
    sourcePath?: string | undefined;
    token?: string | undefined;
    signCommit?: boolean | undefined;
}, {
    remoteUrl?: string | undefined;
    repoContentsUrl?: string | undefined;
    commitHash?: string | undefined;
}, "v2">;

/**
 * Creates a new action that triggers a run of a bitbucket pipeline
 *
 * @public
 */
declare const createBitbucketPipelinesRunAction: (options: {
    integrations: ScmIntegrationRegistry;
}) => _backstage_plugin_scaffolder_node.TemplateAction<{
    workspace: string;
    repo_slug: string;
    body?: {
        target?: {
            type?: string | undefined;
            source?: string | undefined;
            selector?: {
                type: string;
                pattern: string;
            } | undefined;
            pull_request?: {
                id: string;
            } | undefined;
            commit?: {
                type: string;
                hash: string;
            } | undefined;
            destination?: string | undefined;
            ref_name?: string | undefined;
            ref_type?: string | undefined;
            destination_commit?: {
                hash: string;
            } | undefined;
        } | undefined;
        variables?: {
            key: string;
            value: string;
            secured: boolean;
        }[] | undefined;
    } | undefined;
    token?: string | undefined;
}, {
    buildNumber?: number | undefined;
    repoUrl?: string | undefined;
    pipelinesUrl?: string | undefined;
}, "v2">;

/**
 * Creates a Bitbucket Cloud Pull Request action.
 * @public
 */
declare function createPublishBitbucketCloudPullRequestAction(options: {
    integrations: ScmIntegrationRegistry;
    config: Config;
}): _backstage_plugin_scaffolder_node.TemplateAction<{
    repoUrl: string;
    title: string;
    sourceBranch: string;
    description?: string | undefined;
    targetBranch?: string | undefined;
    token?: string | undefined;
    gitAuthorName?: string | undefined;
    gitAuthorEmail?: string | undefined;
}, {
    pullRequestUrl: string;
}, "v2">;

/**
 * @public
 * The Bitbucket Cloud Module for the Scaffolder Backend
 */
declare const bitbucketCloudModule: _backstage_backend_plugin_api.BackendFeature;

export { createBitbucketPipelinesRunAction, createPublishBitbucketCloudAction, createPublishBitbucketCloudPullRequestAction, bitbucketCloudModule as default };
