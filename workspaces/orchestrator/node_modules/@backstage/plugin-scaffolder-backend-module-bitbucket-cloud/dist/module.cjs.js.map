{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport {\n  scaffolderActionsExtensionPoint,\n  scaffolderAutocompleteExtensionPoint,\n} from '@backstage/plugin-scaffolder-node/alpha';\nimport { createBitbucketCloudBranchRestrictionAction } from './actions/bitbucketCloudBranchRestriction';\nimport {\n  createBitbucketPipelinesRunAction,\n  createPublishBitbucketCloudAction,\n  createPublishBitbucketCloudPullRequestAction,\n} from './actions';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { handleAutocompleteRequest } from './autocomplete/autocomplete';\n\n/**\n * @public\n * The Bitbucket Cloud Module for the Scaffolder Backend\n */\nexport const bitbucketCloudModule = createBackendModule({\n  moduleId: 'bitbucketCloud',\n  pluginId: 'scaffolder',\n  register({ registerInit }) {\n    registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        autocomplete: scaffolderAutocompleteExtensionPoint,\n        config: coreServices.rootConfig,\n      },\n      async init({ scaffolder, config, autocomplete }) {\n        const integrations = ScmIntegrations.fromConfig(config);\n\n        scaffolder.addActions(\n          createPublishBitbucketCloudAction({ integrations, config }),\n          createBitbucketPipelinesRunAction({ integrations }),\n          createPublishBitbucketCloudPullRequestAction({\n            integrations,\n            config,\n          }),\n          createBitbucketCloudBranchRestrictionAction({\n            integrations,\n          }),\n        );\n\n        autocomplete.addAutocompleteProvider({\n          id: 'bitbucket-cloud',\n          handler: handleAutocompleteRequest,\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","scaffolderActionsExtensionPoint","scaffolderAutocompleteExtensionPoint","coreServices","autocomplete","ScmIntegrations","createPublishBitbucketCloudAction","createBitbucketPipelinesRunAction","createPublishBitbucketCloudPullRequestAction","createBitbucketCloudBranchRestrictionAction","handleAutocompleteRequest"],"mappings":";;;;;;;;;;;AAoCO,MAAM,uBAAuBA,oCAAA,CAAoB;AAAA,EACtD,QAAA,EAAU,gBAAA;AAAA,EACV,QAAA,EAAU,YAAA;AAAA,EACV,QAAA,CAAS,EAAE,YAAA,EAAa,EAAG;AACzB,IAAA,YAAA,CAAa;AAAA,MACX,IAAA,EAAM;AAAA,QACJ,UAAA,EAAYC,qCAAA;AAAA,QACZ,YAAA,EAAcC,0CAAA;AAAA,QACd,QAAQC,6BAAA,CAAa;AAAA,OACvB;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,UAAA,EAAY,MAAA,gBAAQC,gBAAa,EAAG;AAC/C,QAAA,MAAM,YAAA,GAAeC,2BAAA,CAAgB,UAAA,CAAW,MAAM,CAAA;AAEtD,QAAA,UAAA,CAAW,UAAA;AAAA,UACTC,gDAAA,CAAkC,EAAE,YAAA,EAAc,MAAA,EAAQ,CAAA;AAAA,UAC1DC,4DAAA,CAAkC,EAAE,YAAA,EAAc,CAAA;AAAA,UAClDC,sEAAA,CAA6C;AAAA,YAC3C,YAAA;AAAA,YACA;AAAA,WACD,CAAA;AAAA,UACDC,2EAAA,CAA4C;AAAA,YAC1C;AAAA,WACD;AAAA,SACH;AAEA,QAAAL,cAAA,CAAa,uBAAA,CAAwB;AAAA,UACnC,EAAA,EAAI,iBAAA;AAAA,UACJ,OAAA,EAASM;AAAA,SACV,CAAA;AAAA,MACH;AAAA,KACD,CAAA;AAAA,EACH;AACF,CAAC;;;;"}