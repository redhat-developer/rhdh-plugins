{"version":3,"file":"bitbucketCloudPipelinesRun.examples.cjs.js","sources":["../../src/actions/bitbucketCloudPipelinesRun.examples.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Trigger a pipeline for a branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                ref_type: 'branch',\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a pipeline for a commit on a branch',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'ce5b7431602f7cbba007062eeb55225c6e18e956',\n                },\n                ref_type: 'branch',\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a specific pipeline definition for a commit',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'a3c4e02c9a3755eccdc3764e6ea13facdf30f923',\n                },\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n                type: 'pipeline_commit_target',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Trigger a specific pipeline definition for a commit on a branch or tag',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                commit: {\n                  type: 'commit',\n                  hash: 'a3c4e02c9a3755eccdc3764e6ea13facdf30f923',\n                },\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n                ref_type: 'branch',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a custom pipeline with variables',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                type: 'pipeline_ref_target',\n                ref_name: 'master',\n                ref_type: 'branch',\n                selector: {\n                  type: 'custom',\n                  pattern: 'Deploy to production',\n                },\n              },\n              variables: [\n                { key: 'var1key', value: 'var1value', secured: true },\n                {\n                  key: 'var2key',\n                  value: 'var2value',\n                },\n              ],\n            },\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Trigger a pull request pipeline',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'bitbucket:pipelines:run',\n          id: 'run-bitbucket-pipeline',\n          name: 'Run an example bitbucket pipeline',\n          input: {\n            workspace: 'test-workspace',\n            repo_slug: 'test-repo-slug',\n            body: {\n              target: {\n                type: 'pipeline_pullrequest_target',\n                source: 'pull-request-branch',\n                destination: 'master',\n                destination_commit: {\n                  hash: '9f848b7',\n                },\n                commit: {\n                  hash: '1a372fc',\n                },\n                pull_request: {\n                  id: '3',\n                },\n                selector: {\n                  type: 'pull-requests',\n                  pattern: '**',\n                },\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n"],"names":["yaml"],"mappings":"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"}