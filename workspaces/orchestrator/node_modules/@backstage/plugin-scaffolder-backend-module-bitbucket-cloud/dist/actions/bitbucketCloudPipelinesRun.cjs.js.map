{"version":3,"file":"bitbucketCloudPipelinesRun.cjs.js","sources":["../../src/actions/bitbucketCloudPipelinesRun.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { examples } from './bitbucketCloudPipelinesRun.examples';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport * as inputProps from './inputProperties';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { getAuthorizationHeader } from './helpers';\n\nconst id = 'bitbucket:pipelines:run';\n/**\n * Creates a new action that triggers a run of a bitbucket pipeline\n *\n * @public\n */\nexport const createBitbucketPipelinesRunAction = (options: {\n  integrations: ScmIntegrationRegistry;\n}) => {\n  const { integrations } = options;\n  return createTemplateAction({\n    id,\n    description: 'Run a bitbucket cloud pipeline',\n    examples,\n    schema: {\n      input: {\n        workspace: inputProps.workspace,\n        repo_slug: inputProps.repo_slug,\n        body: inputProps.pipelinesRunBody,\n        token: inputProps.token,\n      },\n      output: {\n        buildNumber: z =>\n          z\n            .number({\n              description: 'Build number',\n            })\n            .optional(),\n        repoUrl: z =>\n          z\n            .string({\n              description: 'A URL to the pipeline repository',\n            })\n            .optional(),\n        pipelinesUrl: z =>\n          z\n            .string({\n              description: 'A URL to the pipeline',\n            })\n            .optional(),\n      },\n    },\n    supportsDryRun: false,\n    async handler(ctx) {\n      const { workspace, repo_slug, body, token } = ctx.input;\n      const host = 'bitbucket.org';\n      const integrationConfig = integrations.bitbucketCloud.byHost(host);\n\n      const authorization = getAuthorizationHeader(\n        token ? { token } : integrationConfig!.config,\n      );\n      let response: Response;\n      try {\n        response = await fetch(\n          `https://api.bitbucket.org/2.0/repositories/${workspace}/${repo_slug}/pipelines`,\n          {\n            method: 'POST',\n            headers: {\n              Authorization: authorization,\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body) ?? {},\n          },\n        );\n      } catch (e) {\n        throw new Error(`Unable to run pipeline, ${e}`);\n      }\n\n      if (response.status !== 201) {\n        throw new Error(\n          `Unable to run pipeline, ${response.status} ${\n            response.statusText\n          }, ${await response.text()}`,\n        );\n      }\n\n      const responseObject = await response.json();\n\n      ctx.output('buildNumber', responseObject.build_number);\n      ctx.output('repoUrl', responseObject.repository.links.html.href);\n      ctx.output(\n        'pipelinesUrl',\n        `${responseObject.repository.links.html.href}/pipelines`,\n      );\n    },\n  });\n};\n"],"names":["createTemplateAction","examples","inputProps.workspace","inputProps.repo_slug","inputProps.pipelinesRunBody","inputProps.token","getAuthorizationHeader"],"mappings":";;;;;;;AAsBA,MAAM,EAAA,GAAK,yBAAA;AAMJ,MAAM,iCAAA,GAAoC,CAAC,OAAA,KAE5C;AACJ,EAAA,MAAM,EAAE,cAAa,GAAI,OAAA;AACzB,EAAA,OAAOA,yCAAA,CAAqB;AAAA,IAC1B,EAAA;AAAA,IACA,WAAA,EAAa,gCAAA;AAAA,cACbC,4CAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,KAAA,EAAO;AAAA,QACL,WAAWC,yBAAW;AAAA,QACtB,WAAWC,yBAAW;AAAA,QACtB,MAAMC,gCAAW;AAAA,QACjB,OAAOC;AAAW,OACpB;AAAA,MACA,MAAA,EAAQ;AAAA,QACN,WAAA,EAAa,CAAA,CAAA,KACX,CAAA,CACG,MAAA,CAAO;AAAA,UACN,WAAA,EAAa;AAAA,SACd,EACA,QAAA,EAAS;AAAA,QACd,OAAA,EAAS,CAAA,CAAA,KACP,CAAA,CACG,MAAA,CAAO;AAAA,UACN,WAAA,EAAa;AAAA,SACd,EACA,QAAA,EAAS;AAAA,QACd,YAAA,EAAc,CAAA,CAAA,KACZ,CAAA,CACG,MAAA,CAAO;AAAA,UACN,WAAA,EAAa;AAAA,SACd,EACA,QAAA;AAAS;AAChB,KACF;AAAA,IACA,cAAA,EAAgB,KAAA;AAAA,IAChB,MAAM,QAAQ,GAAA,EAAK;AACjB,MAAA,MAAM,EAAE,SAAA,EAAW,SAAA,EAAW,IAAA,EAAM,KAAA,KAAU,GAAA,CAAI,KAAA;AAClD,MAAA,MAAM,IAAA,GAAO,eAAA;AACb,MAAA,MAAM,iBAAA,GAAoB,YAAA,CAAa,cAAA,CAAe,MAAA,CAAO,IAAI,CAAA;AAEjE,MAAA,MAAM,aAAA,GAAgBC,8BAAA;AAAA,QACpB,KAAA,GAAQ,EAAE,KAAA,EAAM,GAAI,iBAAA,CAAmB;AAAA,OACzC;AACA,MAAA,IAAI,QAAA;AACJ,MAAA,IAAI;AACF,QAAA,QAAA,GAAW,MAAM,KAAA;AAAA,UACf,CAAA,2CAAA,EAA8C,SAAS,CAAA,CAAA,EAAI,SAAS,CAAA,UAAA,CAAA;AAAA,UACpE;AAAA,YACE,MAAA,EAAQ,MAAA;AAAA,YACR,OAAA,EAAS;AAAA,cACP,aAAA,EAAe,aAAA;AAAA,cACf,MAAA,EAAQ,kBAAA;AAAA,cACR,cAAA,EAAgB;AAAA,aAClB;AAAA,YACA,IAAA,EAAM,IAAA,CAAK,SAAA,CAAU,IAAI,KAAK;AAAC;AACjC,SACF;AAAA,MACF,SAAS,CAAA,EAAG;AACV,QAAA,MAAM,IAAI,KAAA,CAAM,CAAA,wBAAA,EAA2B,CAAC,CAAA,CAAE,CAAA;AAAA,MAChD;AAEA,MAAA,IAAI,QAAA,CAAS,WAAW,GAAA,EAAK;AAC3B,QAAA,MAAM,IAAI,KAAA;AAAA,UACR,CAAA,wBAAA,EAA2B,QAAA,CAAS,MAAM,CAAA,CAAA,EACxC,QAAA,CAAS,UACX,CAAA,EAAA,EAAK,MAAM,QAAA,CAAS,IAAA,EAAM,CAAA;AAAA,SAC5B;AAAA,MACF;AAEA,MAAA,MAAM,cAAA,GAAiB,MAAM,QAAA,CAAS,IAAA,EAAK;AAE3C,MAAA,GAAA,CAAI,MAAA,CAAO,aAAA,EAAe,cAAA,CAAe,YAAY,CAAA;AACrD,MAAA,GAAA,CAAI,OAAO,SAAA,EAAW,cAAA,CAAe,UAAA,CAAW,KAAA,CAAM,KAAK,IAAI,CAAA;AAC/D,MAAA,GAAA,CAAI,MAAA;AAAA,QACF,cAAA;AAAA,QACA,CAAA,EAAG,cAAA,CAAe,UAAA,CAAW,KAAA,CAAM,KAAK,IAAI,CAAA,UAAA;AAAA,OAC9C;AAAA,IACF;AAAA,GACD,CAAA;AACH;;;;"}