{"version":3,"file":"autocomplete.cjs.js","sources":["../../src/autocomplete/autocomplete.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { BitbucketCloudClient } from '@backstage/plugin-bitbucket-cloud-common';\n\nexport async function handleAutocompleteRequest({\n  resource,\n  token,\n  context,\n}: {\n  resource: string;\n  token: string;\n  context: Record<string, string>;\n}): Promise<{ results: { title?: string; id: string }[] }> {\n  const client = BitbucketCloudClient.fromConfig({\n    host: 'bitbucket.org',\n    apiBaseUrl: 'https://api.bitbucket.org/2.0',\n    token,\n  });\n\n  switch (resource) {\n    case 'workspaces': {\n      const results: { title?: string; id: string }[] = [];\n\n      for await (const page of client.listWorkspaces().iteratePages()) {\n        const slugs = [...page.values!].map(p => ({\n          id: p.slug!,\n        }));\n        results.push(...slugs);\n      }\n\n      return { results };\n    }\n    case 'projects': {\n      if (!context.workspace)\n        throw new InputError('Missing workspace context parameter');\n\n      const results: { title?: string; id: string }[] = [];\n\n      for await (const page of client\n        .listProjectsByWorkspace(context.workspace)\n        .iteratePages()) {\n        const keys = [...page.values!].map(p => ({\n          id: p.key!,\n        }));\n        results.push(...keys);\n      }\n\n      return { results };\n    }\n    case 'repositories': {\n      if (!context.workspace || !context.project)\n        throw new InputError(\n          'Missing workspace and/or project context parameter',\n        );\n\n      const results: { title?: string; id: string }[] = [];\n\n      for await (const page of client\n        .listRepositoriesByWorkspace(context.workspace, {\n          q: `project.key=\"${context.project}\"`,\n        })\n        .iteratePages()) {\n        const slugs = [...page.values!].map(p => ({\n          id: p.slug!,\n        }));\n        results.push(...slugs);\n      }\n\n      return { results };\n    }\n    case 'branches': {\n      if (!context.workspace || !context.repository)\n        throw new InputError(\n          'Missing workspace and/or repository context parameter',\n        );\n\n      const results: { title?: string; id: string }[] = [];\n\n      for await (const page of client\n        .listBranchesByRepository(context.repository, context.workspace)\n        .iteratePages()) {\n        const names = [...page.values!].map(p => ({\n          id: p.name!,\n        }));\n        results.push(...names);\n      }\n\n      return { results };\n    }\n    default:\n      throw new InputError(`Invalid resource: ${resource}`);\n  }\n}\n"],"names":["BitbucketCloudClient","InputError"],"mappings":"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"}