{"version":3,"file":"AnalyticsImplementationBlueprint.esm.js","sources":["../../src/blueprints/AnalyticsImplementationBlueprint.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnalyticsImplementation, TypesToApiRefs } from '../apis';\nimport {\n  createExtensionBlueprint,\n  createExtensionBlueprintParams,\n  createExtensionDataRef,\n} from '../wiring';\n\n/** @public */\nexport type AnalyticsImplementationFactory<\n  Deps extends { [name in string]: unknown } = {},\n> = {\n  deps: TypesToApiRefs<Deps>;\n  factory(deps: Deps): AnalyticsImplementation;\n};\n\nconst factoryDataRef =\n  createExtensionDataRef<AnalyticsImplementationFactory>().with({\n    id: 'core.analytics.factory',\n  });\n\n/**\n * Creates analytics implementations.\n *\n * @public\n */\nexport const AnalyticsImplementationBlueprint = createExtensionBlueprint({\n  kind: 'analytics',\n  attachTo: [{ id: 'api:app/analytics', input: 'implementations' }],\n  output: [factoryDataRef],\n  dataRefs: {\n    factory: factoryDataRef,\n  },\n  defineParams: <TDeps extends { [name in string]: unknown }>(\n    params: AnalyticsImplementationFactory<TDeps>,\n  ) => createExtensionBlueprintParams(params as AnalyticsImplementationFactory),\n  *factory(params) {\n    yield factoryDataRef(params);\n  },\n});\n"],"names":[],"mappings":";;;;;;AA+BA,MAAM,cAAA,GACJ,sBAAA,EAAuD,CAAE,IAAA,CAAK;AAAA,EAC5D,EAAA,EAAI;AACN,CAAC,CAAA;AAOI,MAAM,mCAAmC,wBAAA,CAAyB;AAAA,EACvE,IAAA,EAAM,WAAA;AAAA,EACN,UAAU,CAAC,EAAE,IAAI,mBAAA,EAAqB,KAAA,EAAO,mBAAmB,CAAA;AAAA,EAChE,MAAA,EAAQ,CAAC,cAAc,CAAA;AAAA,EACvB,QAAA,EAAU;AAAA,IACR,OAAA,EAAS;AAAA,GACX;AAAA,EACA,YAAA,EAAc,CACZ,MAAA,KACG,8BAAA,CAA+B,MAAwC,CAAA;AAAA,EAC5E,CAAC,QAAQ,MAAA,EAAQ;AACf,IAAA,MAAM,eAAe,MAAM,CAAA;AAAA,EAC7B;AACF,CAAC;;;;"}