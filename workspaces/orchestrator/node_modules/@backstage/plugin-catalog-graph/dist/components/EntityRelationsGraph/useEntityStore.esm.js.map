{"version":3,"file":"useEntityStore.esm.js","sources":["../../../src/components/EntityRelationsGraph/useEntityStore.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { Dispatch, useCallback, useRef, useState } from 'react';\nimport useAsyncFn from 'react-use/esm/useAsyncFn';\n\n// TODO: This is a good use case for a graphql API, once it is available in the\n// future.\n\n/**\n * Ensures that a set of requested entities is loaded.\n */\nexport function useEntityStore(): {\n  entities: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n  requestEntities: Dispatch<string[]>;\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const state = useRef({\n    requestedEntities: new Set<string>(),\n    outstandingEntities: new Map<string, Promise<Entity | undefined>>(),\n    cachedEntities: new Map<string, Entity>(),\n  });\n  const [entities, setEntities] = useState<{\n    [ref: string]: Entity;\n  }>({});\n\n  const updateEntities = useCallback(() => {\n    const { cachedEntities, requestedEntities } = state.current;\n    const filteredEntities: { [ref: string]: Entity } = {};\n    requestedEntities.forEach(entityRef => {\n      const entity = cachedEntities.get(entityRef);\n\n      if (entity) {\n        filteredEntities[entityRef] = entity;\n      }\n    });\n    setEntities(filteredEntities);\n  }, [state, setEntities]);\n\n  const [asyncState, fetch] = useAsyncFn(async () => {\n    const { requestedEntities, cachedEntities } = state.current;\n    const entityRefs: string[] = Array.from(requestedEntities).filter(\n      entityRef => !cachedEntities.has(entityRef),\n    );\n    if (entityRefs.length === 0) {\n      updateEntities();\n      return;\n    }\n\n    const { items } = await catalogClient.getEntitiesByRefs({ entityRefs });\n    items.forEach(ent => {\n      if (ent) {\n        const entityRef = stringifyEntityRef(ent);\n        cachedEntities.set(entityRef, ent);\n      }\n    });\n\n    updateEntities();\n  }, [state, updateEntities]);\n  const { loading, error } = asyncState;\n\n  const requestEntities = useCallback(\n    (entityRefs: string[]) => {\n      const n = new Set(entityRefs);\n      const { requestedEntities } = state.current;\n\n      if (\n        n.size !== requestedEntities.size ||\n        Array.from(n).some(e => !requestedEntities.has(e))\n      ) {\n        state.current.requestedEntities = n;\n        fetch();\n        updateEntities();\n      }\n    },\n    [state, fetch, updateEntities],\n  );\n\n  return {\n    entities,\n    loading,\n    error,\n    requestEntities,\n  };\n}\n"],"names":[],"mappings":";;;;;;AA2BO,SAAS,cAAA,GAKd;AACA,EAAA,MAAM,aAAA,GAAgB,OAAO,aAAa,CAAA;AAC1C,EAAA,MAAM,QAAQ,MAAA,CAAO;AAAA,IACnB,iBAAA,sBAAuB,GAAA,EAAY;AAAA,IACnC,mBAAA,sBAAyB,GAAA,EAAyC;AAAA,IAClE,cAAA,sBAAoB,GAAA;AAAoB,GACzC,CAAA;AACD,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,QAAA,CAE7B,EAAE,CAAA;AAEL,EAAA,MAAM,cAAA,GAAiB,YAAY,MAAM;AACvC,IAAA,MAAM,EAAE,cAAA,EAAgB,iBAAA,EAAkB,GAAI,KAAA,CAAM,OAAA;AACpD,IAAA,MAAM,mBAA8C,EAAC;AACrD,IAAA,iBAAA,CAAkB,QAAQ,CAAA,SAAA,KAAa;AACrC,MAAA,MAAM,MAAA,GAAS,cAAA,CAAe,GAAA,CAAI,SAAS,CAAA;AAE3C,MAAA,IAAI,MAAA,EAAQ;AACV,QAAA,gBAAA,CAAiB,SAAS,CAAA,GAAI,MAAA;AAAA,MAChC;AAAA,IACF,CAAC,CAAA;AACD,IAAA,WAAA,CAAY,gBAAgB,CAAA;AAAA,EAC9B,CAAA,EAAG,CAAC,KAAA,EAAO,WAAW,CAAC,CAAA;AAEvB,EAAA,MAAM,CAAC,UAAA,EAAY,KAAK,CAAA,GAAI,WAAW,YAAY;AACjD,IAAA,MAAM,EAAE,iBAAA,EAAmB,cAAA,EAAe,GAAI,KAAA,CAAM,OAAA;AACpD,IAAA,MAAM,UAAA,GAAuB,KAAA,CAAM,IAAA,CAAK,iBAAiB,CAAA,CAAE,MAAA;AAAA,MACzD,CAAA,SAAA,KAAa,CAAC,cAAA,CAAe,GAAA,CAAI,SAAS;AAAA,KAC5C;AACA,IAAA,IAAI,UAAA,CAAW,WAAW,CAAA,EAAG;AAC3B,MAAA,cAAA,EAAe;AACf,MAAA;AAAA,IACF;AAEA,IAAA,MAAM,EAAE,OAAM,GAAI,MAAM,cAAc,iBAAA,CAAkB,EAAE,YAAY,CAAA;AACtE,IAAA,KAAA,CAAM,QAAQ,CAAA,GAAA,KAAO;AACnB,MAAA,IAAI,GAAA,EAAK;AACP,QAAA,MAAM,SAAA,GAAY,mBAAmB,GAAG,CAAA;AACxC,QAAA,cAAA,CAAe,GAAA,CAAI,WAAW,GAAG,CAAA;AAAA,MACnC;AAAA,IACF,CAAC,CAAA;AAED,IAAA,cAAA,EAAe;AAAA,EACjB,CAAA,EAAG,CAAC,KAAA,EAAO,cAAc,CAAC,CAAA;AAC1B,EAAA,MAAM,EAAE,OAAA,EAAS,KAAA,EAAM,GAAI,UAAA;AAE3B,EAAA,MAAM,eAAA,GAAkB,WAAA;AAAA,IACtB,CAAC,UAAA,KAAyB;AACxB,MAAA,MAAM,CAAA,GAAI,IAAI,GAAA,CAAI,UAAU,CAAA;AAC5B,MAAA,MAAM,EAAE,iBAAA,EAAkB,GAAI,KAAA,CAAM,OAAA;AAEpC,MAAA,IACE,CAAA,CAAE,IAAA,KAAS,iBAAA,CAAkB,IAAA,IAC7B,MAAM,IAAA,CAAK,CAAC,CAAA,CAAE,IAAA,CAAK,OAAK,CAAC,iBAAA,CAAkB,GAAA,CAAI,CAAC,CAAC,CAAA,EACjD;AACA,QAAA,KAAA,CAAM,QAAQ,iBAAA,GAAoB,CAAA;AAClC,QAAA,KAAA,EAAM;AACN,QAAA,cAAA,EAAe;AAAA,MACjB;AAAA,IACF,CAAA;AAAA,IACA,CAAC,KAAA,EAAO,KAAA,EAAO,cAAc;AAAA,GAC/B;AAEA,EAAA,OAAO;AAAA,IACL,QAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}