import { jsxs, jsx } from 'react/jsx-runtime';
import Box from '@material-ui/core/Box';
import Checkbox from '@material-ui/core/Checkbox';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import TextField from '@material-ui/core/TextField';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import CheckBoxIcon from '@material-ui/icons/CheckBox';
import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import Autocomplete from '@material-ui/lab/Autocomplete';
import { useMemo, useCallback } from 'react';
import { useTranslationRef } from '@backstage/frontend-plugin-api';
import { catalogGraphTranslationRef } from '../../translation.esm.js';

const useStyles = makeStyles(
  {
    formControl: {
      maxWidth: 300
    }
  },
  { name: "PluginCatalogGraphSelectedRelationsFilter" }
);
const SelectedRelationsFilter = ({
  relationPairs,
  value,
  onChange
}) => {
  const classes = useStyles();
  const relations = useMemo(() => relationPairs.flat(), [relationPairs]);
  const { t } = useTranslationRef(catalogGraphTranslationRef);
  const handleChange = useCallback(
    (_, v) => {
      onChange(relations.every((r) => v.includes(r)) ? void 0 : v);
    },
    [relations, onChange]
  );
  const handleEmpty = useCallback(() => {
    onChange(value?.length ? value : void 0);
  }, [value, onChange]);
  return /* @__PURE__ */ jsxs(Box, { pb: 1, pt: 1, children: [
    /* @__PURE__ */ jsx(Typography, { variant: "button", children: t("catalogGraphPage.selectedRelationsFilter.title") }),
    /* @__PURE__ */ jsx(
      Autocomplete,
      {
        className: classes.formControl,
        multiple: true,
        limitTags: 4,
        disableCloseOnSelect: true,
        "aria-label": t("catalogGraphPage.selectedRelationsFilter.title"),
        options: relations,
        value: value ?? relations,
        onChange: handleChange,
        onBlur: handleEmpty,
        renderOption: (option, { selected }) => /* @__PURE__ */ jsx(
          FormControlLabel,
          {
            control: /* @__PURE__ */ jsx(
              Checkbox,
              {
                icon: /* @__PURE__ */ jsx(CheckBoxOutlineBlankIcon, { fontSize: "small" }),
                checkedIcon: /* @__PURE__ */ jsx(CheckBoxIcon, { fontSize: "small" }),
                checked: selected
              }
            ),
            label: option
          }
        ),
        size: "small",
        popupIcon: /* @__PURE__ */ jsx(ExpandMoreIcon, { "data-testid": "selected-relations-expand" }),
        renderInput: (params) => /* @__PURE__ */ jsx(TextField, { ...params, variant: "outlined" })
      }
    )
  ] });
};

export { SelectedRelationsFilter };
//# sourceMappingURL=SelectedRelationsFilter.esm.js.map
