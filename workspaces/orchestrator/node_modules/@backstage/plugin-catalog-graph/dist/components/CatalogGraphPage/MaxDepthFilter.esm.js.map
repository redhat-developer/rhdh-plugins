{"version":3,"file":"MaxDepthFilter.esm.js","sources":["../../../src/components/CatalogGraphPage/MaxDepthFilter.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { catalogGraphTranslationRef } from '../../translation';\n\nexport type Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\n/** @public */\nexport type MaxDepthFilterClassKey = 'formControl';\n\nconst useStyles = makeStyles(\n  {\n    formControl: {\n      width: '100%',\n      maxWidth: 300,\n    },\n  },\n  { name: 'PluginCatalogGraphMaxDepthFilter' },\n);\n\nexport const MaxDepthFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const onChangeRef = useRef(onChange);\n  const [currentValue, setCurrentValue] = useState(value);\n  const { t } = useTranslationRef(catalogGraphTranslationRef);\n\n  // Keep a fresh reference to the latest callback\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  // If the value changes externally, update ourselves\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  // When the entered text changes, update ourselves and communicate externally\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const newValueNumeric = Number(event.target.value);\n    const newValue =\n      Number.isFinite(newValueNumeric) && newValueNumeric > 0\n        ? newValueNumeric\n        : Number.POSITIVE_INFINITY;\n    setCurrentValue(newValue);\n    onChangeRef.current(newValue);\n  }, []);\n\n  const reset = useCallback(() => {\n    setCurrentValue(Number.POSITIVE_INFINITY);\n    onChangeRef.current(Number.POSITIVE_INFINITY);\n  }, [onChangeRef]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Typography variant=\"button\">\n          {t('catalogGraphPage.maxDepthFilter.title')}\n        </Typography>\n        <OutlinedInput\n          type=\"number\"\n          placeholder={t('catalogGraphPage.maxDepthFilter.inputPlaceholder')}\n          value={Number.isFinite(currentValue) ? String(currentValue) : ''}\n          onChange={handleChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label={t(\n                  'catalogGraphPage.maxDepthFilter.clearButtonAriaLabel',\n                )}\n                onClick={reset}\n                edge=\"end\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          inputProps={{\n            'aria-label': 'maxp',\n          }}\n          labelWidth={0}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAmCA,MAAM,SAAA,GAAY,UAAA;AAAA,EAChB;AAAA,IACE,WAAA,EAAa;AAAA,MACX,KAAA,EAAO,MAAA;AAAA,MACP,QAAA,EAAU;AAAA;AACZ,GACF;AAAA,EACA,EAAE,MAAM,kCAAA;AACV,CAAA;AAEO,MAAM,cAAA,GAAiB,CAAC,EAAE,KAAA,EAAO,UAAS,KAAa;AAC5D,EAAA,MAAM,UAAU,SAAA,EAAU;AAC1B,EAAA,MAAM,WAAA,GAAc,OAAO,QAAQ,CAAA;AACnC,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,SAAS,KAAK,CAAA;AACtD,EAAA,MAAM,EAAE,CAAA,EAAE,GAAI,iBAAA,CAAkB,0BAA0B,CAAA;AAG1D,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,WAAA,CAAY,OAAA,GAAU,QAAA;AAAA,EACxB,CAAA,EAAG,CAAC,QAAQ,CAAC,CAAA;AAGb,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,eAAA,CAAgB,KAAK,CAAA;AAAA,EACvB,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,YAAA,GAAe,WAAA,CAAY,CAAC,KAAA,KAAyC;AACzE,IAAA,MAAM,eAAA,GAAkB,MAAA,CAAO,KAAA,CAAM,MAAA,CAAO,KAAK,CAAA;AACjD,IAAA,MAAM,QAAA,GACJ,OAAO,QAAA,CAAS,eAAe,KAAK,eAAA,GAAkB,CAAA,GAClD,kBACA,MAAA,CAAO,iBAAA;AACb,IAAA,eAAA,CAAgB,QAAQ,CAAA;AACxB,IAAA,WAAA,CAAY,QAAQ,QAAQ,CAAA;AAAA,EAC9B,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,MAAM,KAAA,GAAQ,YAAY,MAAM;AAC9B,IAAA,eAAA,CAAgB,OAAO,iBAAiB,CAAA;AACxC,IAAA,WAAA,CAAY,OAAA,CAAQ,OAAO,iBAAiB,CAAA;AAAA,EAC9C,CAAA,EAAG,CAAC,WAAW,CAAC,CAAA;AAEhB,EAAA,uBACE,GAAA,CAAC,GAAA,EAAA,EAAI,EAAA,EAAI,CAAA,EAAG,EAAA,EAAI,CAAA,EACd,QAAA,kBAAA,IAAA,CAAC,WAAA,EAAA,EAAY,OAAA,EAAQ,UAAA,EAAW,SAAA,EAAW,OAAA,CAAQ,WAAA,EACjD,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,UAAA,EAAA,EAAW,OAAA,EAAQ,QAAA,EACjB,QAAA,EAAA,CAAA,CAAE,uCAAuC,CAAA,EAC5C,CAAA;AAAA,oBACA,GAAA;AAAA,MAAC,aAAA;AAAA,MAAA;AAAA,QACC,IAAA,EAAK,QAAA;AAAA,QACL,WAAA,EAAa,EAAE,kDAAkD,CAAA;AAAA,QACjE,OAAO,MAAA,CAAO,QAAA,CAAS,YAAY,CAAA,GAAI,MAAA,CAAO,YAAY,CAAA,GAAI,EAAA;AAAA,QAC9D,QAAA,EAAU,YAAA;AAAA,QACV,YAAA,kBACE,GAAA,CAAC,cAAA,EAAA,EAAe,QAAA,EAAS,KAAA,EACvB,QAAA,kBAAA,GAAA;AAAA,UAAC,UAAA;AAAA,UAAA;AAAA,YACC,YAAA,EAAY,CAAA;AAAA,cACV;AAAA,aACF;AAAA,YACA,OAAA,EAAS,KAAA;AAAA,YACT,IAAA,EAAK,KAAA;AAAA,YAEL,8BAAC,SAAA,EAAA,EAAU;AAAA;AAAA,SACb,EACF,CAAA;AAAA,QAEF,UAAA,EAAY;AAAA,UACV,YAAA,EAAc;AAAA,SAChB;AAAA,QACA,UAAA,EAAY;AAAA;AAAA;AACd,GAAA,EACF,CAAA,EACF,CAAA;AAEJ;;;;"}