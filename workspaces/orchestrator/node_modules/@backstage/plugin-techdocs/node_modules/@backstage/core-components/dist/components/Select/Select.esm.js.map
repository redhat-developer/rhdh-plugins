{"version":3,"file":"Select.esm.js","sources":["../../../src/components/Select/Select.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { ChangeEvent, useEffect, useState } from 'react';\n\nimport ClosedDropdown from './static/ClosedDropdown';\nimport OpenedDropdown from './static/OpenedDropdown';\n\n/** @public */\nexport type SelectInputBaseClassKey = 'root' | 'input';\n\nconst BootstrapInput = withStyles(\n  (theme: Theme) =>\n    createStyles({\n      root: {\n        'label + &': {\n          marginTop: theme.spacing(3),\n        },\n        '&.Mui-focused > div[role=button]': {\n          borderColor: theme.palette.primary.main,\n        },\n      },\n      input: {\n        borderRadius: theme.shape.borderRadius,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: theme.typography.body1.fontSize,\n        padding: theme.spacing(1.25, 3.25, 1.25, 1.5),\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n          background: theme.palette.background.paper,\n          borderRadius: theme.shape.borderRadius,\n        },\n      },\n    }),\n  { name: 'BackstageSelectInputBase' },\n)(InputBase);\n\n/** @public */\nexport type SelectClassKey =\n  | 'formControl'\n  | 'label'\n  | 'chips'\n  | 'chip'\n  | 'checkbox'\n  | 'root';\n\nconst useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      formControl: {\n        margin: theme.spacing(1, 0),\n      },\n      label: {\n        transform: 'initial',\n        fontWeight: 'bold',\n        fontSize: theme.typography.body2.fontSize,\n        fontFamily: theme.typography.fontFamily,\n        color: theme.palette.text.primary,\n        '&.Mui-focused': {\n          color: theme.palette.text.primary,\n        },\n      },\n      formLabel: {\n        transform: 'initial',\n        fontWeight: 'bold',\n        fontSize: theme.typography.body2.fontSize,\n        fontFamily: theme.typography.fontFamily,\n        color: theme.palette.text.primary,\n        '&.Mui-focused': {\n          color: theme.palette.text.primary,\n        },\n      },\n      chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      chip: {\n        margin: 2,\n      },\n      checkbox: {},\n\n      root: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n    }),\n  { name: 'BackstageSelect' },\n);\n\n/** @public */\nexport type SelectItem = {\n  label: string;\n  value: string | number;\n};\n\n/** @public */\nexport type SelectedItems = string | string[] | number | number[];\n\nexport type SelectProps = {\n  multiple?: boolean;\n  items: SelectItem[];\n  label: string;\n  placeholder?: string;\n  selected?: SelectedItems;\n  onChange: (arg: SelectedItems) => void;\n  triggerReset?: boolean;\n  native?: boolean;\n  disabled?: boolean;\n  margin?: 'dense' | 'none';\n  'data-testid'?: string;\n};\n\n/** @public */\nexport function SelectComponent(props: SelectProps) {\n  const {\n    multiple,\n    items,\n    label,\n    placeholder,\n    selected,\n    onChange,\n    triggerReset,\n    native = false,\n    disabled = false,\n    margin,\n    'data-testid': dataTestId = 'select',\n  } = props;\n  const classes = useStyles();\n  const [value, setValue] = useState<SelectedItems>(\n    selected || (multiple ? [] : ''),\n  );\n  const [isOpen, setOpen] = useState(false);\n\n  useEffect(() => {\n    setValue(multiple ? [] : '');\n  }, [triggerReset, multiple]);\n\n  useEffect(() => {\n    setValue(selected || (multiple ? [] : ''));\n  }, [selected, multiple]);\n\n  const handleChange = (event: ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as SelectedItems);\n    onChange(event.target.value as SelectedItems);\n  };\n\n  const handleOpen = (event: ChangeEvent<any>) => {\n    if (disabled) {\n      event.preventDefault();\n      return;\n    }\n    setOpen(previous => {\n      if (multiple && !(event.target instanceof HTMLElement)) {\n        return true;\n      }\n      return !previous;\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = (selectedValue: string | number) => () => {\n    const newValue = (value as any[]).filter(chip => chip !== selectedValue);\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel className={classes.formLabel}>{label}</InputLabel>\n        <Select\n          aria-label={label}\n          value={value}\n          native={native}\n          disabled={disabled}\n          data-testid={dataTestId}\n          displayEmpty\n          multiple={multiple}\n          margin={margin}\n          onChange={handleChange}\n          open={isOpen}\n          onOpen={handleOpen}\n          onClose={handleClose}\n          input={<BootstrapInput />}\n          label={label}\n          renderValue={s =>\n            multiple && (value as any[]).length !== 0 ? (\n              <Box className={classes.chips}>\n                {(s as string[]).map(selectedValue => {\n                  const item = items.find(el => el.value === selectedValue);\n                  return item ? (\n                    <Chip\n                      data-testid=\"chip\"\n                      key={item?.value}\n                      label={item?.label}\n                      clickable\n                      deleteIcon={\n                        <CancelIcon\n                          data-testid=\"cancel-icon\"\n                          onMouseDown={event => event.stopPropagation()}\n                        />\n                      }\n                      onDelete={handleDelete(selectedValue)}\n                      className={classes.chip}\n                    />\n                  ) : (\n                    false\n                  );\n                })}\n              </Box>\n            ) : (\n              <Typography>\n                {(value as any[]).length === 0\n                  ? placeholder || ''\n                  : items.find(el => el.value === s)?.label}\n              </Typography>\n            )\n          }\n          IconComponent={() =>\n            !isOpen ? <ClosedDropdown /> : <OpenedDropdown />\n          }\n          MenuProps={{\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left',\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left',\n            },\n            getContentAnchorEl: null,\n          }}\n        >\n          {!!placeholder && !multiple && (\n            <MenuItem value={[]}>{placeholder}</MenuItem>\n          )}\n          {native\n            ? items &&\n              items.map(item => (\n                <option value={item.value} key={item.value}>\n                  {item.label}\n                </option>\n              ))\n            : items &&\n              items.map(item => (\n                <MenuItem key={item.value} value={item.value}>\n                  {multiple && (\n                    <Checkbox\n                      color=\"primary\"\n                      checked={(value as any[]).includes(item.value) || false}\n                      className={classes.checkbox}\n                    />\n                  )}\n                  {item.label}\n                </MenuItem>\n              ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}