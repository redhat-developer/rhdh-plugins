{"version":3,"file":"TechDocsReaderPage.esm.js","sources":["../../../../src/reader/components/TechDocsReaderPage/TechDocsReaderPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Children,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { useOutlet, useNavigate } from 'react-router-dom';\nimport { Page } from '@backstage/core-components';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport {\n  TECHDOCS_ADDONS_KEY,\n  TECHDOCS_ADDONS_WRAPPER_KEY,\n  TechDocsReaderPageProvider,\n  buildTechDocsURL,\n} from '@backstage/plugin-techdocs-react';\nimport { TECHDOCS_EXTERNAL_ANNOTATION } from '@backstage/plugin-techdocs-common';\nimport useAsync from 'react-use/esm/useAsync';\nimport { TechDocsReaderPageRenderFunction } from '../../../types';\nimport { TechDocsReaderPageContent } from '../TechDocsReaderPageContent';\nimport { TechDocsReaderPageHeader } from '../TechDocsReaderPageHeader';\nimport { TechDocsReaderPageSubheader } from '../TechDocsReaderPageSubheader';\nimport { rootDocsRouteRef } from '../../../routes';\nimport {\n  getComponentData,\n  useRouteRefParams,\n  useApi,\n  useRouteRef,\n} from '@backstage/core-plugin-api';\nimport { CookieAuthRefreshProvider } from '@backstage/plugin-auth-react';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport {\n  createTheme,\n  styled,\n  ThemeOptions,\n  ThemeProvider,\n  useTheme,\n} from '@material-ui/core/styles';\nimport { Progress } from '@backstage/core-components';\n\n/* An explanation for the multiple ways of customizing the TechDocs reader page\n\nPlease refer to this page on the microsite for the latest recommended approach:\nhttps://backstage.io/docs/features/techdocs/how-to-guides#how-to-customize-the-techdocs-reader-page\n\nThe <TechDocsReaderPage> component is responsible for rendering the <TechDocsReaderPageProvider> and\nits contained version of a <Page>, which in turn renders the <TechDocsReaderPageContent>.\n\nHistorically, there have been different approaches on how this <Page> can be customized, and how the\n<TechDocsReaderPageContent> inside could be exchanged for a custom implementation (which was not\npossible before). Also, the current implementation supports every scenario to avoid breaking default\nconfigurations of TechDocs.\n\nIn particular, there are 4 different TechDocs page configurations:\n\nCONFIGURATION 1: <TechDocsReaderPage> only, no children\n\n<Route path=\"/docs/:namespace/:kind/:name/*\" element={<TechDocsReaderPage />} >\n\nThis is the simplest way to use TechDocs. Only a full page is passed, assuming that it comes with\nits content inside. Since we allowed customizing it, we started providing <TechDocsReaderLayout> as\na default implementation (which contains <TechDocsReaderPageContent>).\n\nCONFIGURATION 2 (not advised): <TechDocsReaderPage> with element children\n\n<Route\n  path=\"/docs/:namespace/:kind/:name/*\"\n  element={\n    <TechDocsReaderPage>\n      {techdocsPage}\n    </TechDocsReaderPage>\n  }\n/>\n\nPreviously, there were two ways of passing children to <TechDocsReaderPage>: either as elements (as\nshown above), or as a render function (described below in CONFIGURATION 3). The \"techdocsPage\" is\nlocated in packages/app/src/components/techdocs and is the default implementation of the content\ninside.\n\nCONFIGURATION 3 (not advised): <TechDocsReaderPage> with render function as child\n\n<Route\n  path=\"/docs/:namespace/:kind/:name/*\"\n  element={\n    <TechDocsReaderPage>\n      {({ metadata, entityMetadata, onReady }) => (\n        techdocsPage\n      )}\n    </TechDocsReaderPage>\n  }\n/>\n\nSimilar to CONFIGURATION 2, the direct children will be passed to the <TechDocsReaderPage> but in\nthis case interpreted as render prop.\n\nCONFIGURATION 4: <TechDocsReaderPage> and provided content in <Route>\n\n<Route\n  path=\"/docs/:namespace/:kind/:name/*\"\n  element={<TechDocsReaderPage />}\n>\n  {techDocsPage}\n  <TechDocsAddons>\n    <ExpandableNavigation />\n    <ReportIssue />\n    <TextSize />\n    <LightBox />\n  </TechDocsAddons>\n</Route>\n\nThis is the current state in packages/app/src/App.tsx and moved the location of children from inside\nthe element prop in the <Route> to the children of the <Route>. Then, in <TechDocsReaderPage> they\nare retrieved using the useOutlet hook from React Router.\n\nNOTE: Render functions are no longer supported in this approach.\n*/\n\n/**\n * Props for {@link TechDocsReaderLayout}\n * @public\n */\nexport type TechDocsReaderLayoutProps = {\n  /**\n   * Show or hide the header, defaults to true.\n   */\n  withHeader?: boolean;\n  /**\n   * Show or hide the content search bar, defaults to true.\n   */\n  withSearch?: boolean;\n};\n\n/**\n * Default TechDocs reader page structure composed with a header and content\n * @public\n */\nexport const TechDocsReaderLayout = (props: TechDocsReaderLayoutProps) => {\n  const { withSearch, withHeader = true } = props;\n  return (\n    <Page themeId=\"documentation\">\n      {withHeader && <TechDocsReaderPageHeader />}\n      <TechDocsReaderPageSubheader />\n      <TechDocsReaderPageContent withSearch={withSearch} />\n    </Page>\n  );\n};\n\n/**\n * @public\n */\nexport type TechDocsReaderPageProps = {\n  entityRef?: CompoundEntityRef;\n  children?: TechDocsReaderPageRenderFunction | ReactNode;\n  overrideThemeOptions?: Partial<ThemeOptions>;\n};\n\n/**\n * Styled Backstage Page that fills available vertical space\n */\nconst StyledPage = styled(Page)({\n  height: 'inherit',\n  overflowY: 'visible',\n});\n\n/**\n * An addon-aware implementation of the TechDocsReaderPage.\n *\n * @public\n */\nexport const TechDocsReaderPage = (props: TechDocsReaderPageProps) => {\n  const currentTheme = useTheme();\n\n  const readerPageTheme = useMemo(\n    () =>\n      createTheme({\n        ...currentTheme,\n        ...(props.overrideThemeOptions || {}),\n      }),\n    [currentTheme, props.overrideThemeOptions],\n  );\n\n  const { kind, name, namespace } = useRouteRefParams(rootDocsRouteRef);\n  const { children, entityRef = { kind, name, namespace } } = props;\n\n  const outlet = useOutlet();\n\n  const catalogApi = useApi(catalogApiRef);\n  const navigate = useNavigate();\n  const viewTechdocLink = useRouteRef(rootDocsRouteRef);\n\n  const memoizedEntityRef = useMemo(\n    () => ({\n      kind: entityRef.kind,\n      name: entityRef.name,\n      namespace: entityRef.namespace,\n    }),\n    [entityRef.kind, entityRef.name, entityRef.namespace],\n  );\n\n  const externalEntityTechDocsUrl = useAsync(async () => {\n    try {\n      const catalogEntity = await catalogApi.getEntityByRef(memoizedEntityRef);\n\n      if (\n        catalogEntity?.metadata?.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION]\n      ) {\n        return buildTechDocsURL(catalogEntity, viewTechdocLink);\n      }\n    } catch (error) {\n      // Ignore error and allow an attempt at loading the current entity's TechDocs when unable to fetch an external entity from the catalog.\n    }\n\n    return undefined;\n  }, [memoizedEntityRef, catalogApi, viewTechdocLink]);\n\n  const handleNavigation = useCallback(\n    (url: string) => {\n      navigate(url, { replace: true });\n    },\n    [navigate],\n  );\n\n  useEffect(() => {\n    if (!externalEntityTechDocsUrl.loading && externalEntityTechDocsUrl.value) {\n      handleNavigation(externalEntityTechDocsUrl.value);\n    }\n  }, [\n    externalEntityTechDocsUrl.loading,\n    externalEntityTechDocsUrl.value,\n    handleNavigation,\n  ]);\n\n  const page: ReactNode = useMemo(() => {\n    if (children) {\n      return null;\n    }\n\n    const childrenList = outlet ? Children.toArray(outlet.props.children) : [];\n\n    const grandChildren = childrenList.flatMap<ReactElement>(\n      child => (child as ReactElement)?.props?.children ?? [],\n    );\n\n    return grandChildren.find(\n      grandChild =>\n        !getComponentData(grandChild, TECHDOCS_ADDONS_WRAPPER_KEY) &&\n        !getComponentData(grandChild, TECHDOCS_ADDONS_KEY),\n    );\n  }, [children, outlet]);\n\n  if (externalEntityTechDocsUrl.loading || externalEntityTechDocsUrl.value) {\n    return <Progress />;\n  }\n\n  // As explained above, \"page\" is configuration 4 and <TechDocsReaderLayout> is 1\n  if (!children) {\n    return (\n      <ThemeProvider theme={readerPageTheme}>\n        <CookieAuthRefreshProvider pluginId=\"techdocs\">\n          <TechDocsReaderPageProvider entityRef={memoizedEntityRef}>\n            {(page as JSX.Element) || <TechDocsReaderLayout />}\n          </TechDocsReaderPageProvider>\n        </CookieAuthRefreshProvider>\n      </ThemeProvider>\n    );\n  }\n\n  // As explained above, a render function is configuration 3 and React element is 2\n  return (\n    <ThemeProvider theme={readerPageTheme}>\n      <CookieAuthRefreshProvider pluginId=\"techdocs\">\n        <TechDocsReaderPageProvider entityRef={memoizedEntityRef}>\n          {({ metadata, entityMetadata, onReady }) => (\n            <StyledPage\n              themeId=\"documentation\"\n              className=\"techdocs-reader-page\"\n            >\n              {children instanceof Function\n                ? children({\n                    entityRef: memoizedEntityRef,\n                    techdocsMetadataValue: metadata.value,\n                    entityMetadataValue: entityMetadata.value,\n                    onReady,\n                  })\n                : children}\n            </StyledPage>\n          )}\n        </TechDocsReaderPageProvider>\n      </CookieAuthRefreshProvider>\n    </ThemeProvider>\n  );\n};\n"],"names":[],"mappings":"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"}