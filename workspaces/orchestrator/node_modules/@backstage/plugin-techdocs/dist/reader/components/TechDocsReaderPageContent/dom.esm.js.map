{"version":3,"file":"dom.esm.js","sources":["../../../../src/reader/components/TechDocsReaderPageContent/dom.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  // useRef,\n  useState,\n} from 'react';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { configApiRef, useAnalytics, useApi } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\n\nimport {\n  techdocsStorageApiRef,\n  useShadowDomStylesLoading,\n} from '@backstage/plugin-techdocs-react';\n\nimport { useTechDocsReader } from '../TechDocsReaderProvider';\n\nimport {\n  addBaseUrl,\n  addGitFeedbackLink,\n  addLinkClickListener,\n  addSidebarToggle,\n  onCssReady,\n  removeMkdocsHeader,\n  rewriteDocLinks,\n  simplifyMkdocsFooter,\n  scrollIntoNavigation,\n  transform as transformer,\n  copyToClipboard,\n  useSanitizerTransformer,\n  useStylesTransformer,\n  handleMetaRedirects,\n  addNavLinkKeyboardToggle,\n} from '../../transformers';\nimport { useNavigateUrl } from './useNavigateUrl';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nconst MOBILE_MEDIA_QUERY = 'screen and (max-width: 76.1875em)';\n\n// If a defaultPath is specified then we should navigate to that path replacing the\n// current location in the history. This should only happen on the initial load so\n// navigating to the root of the docs doesn't also redirect.\nexport const useInitialRedirect = (defaultPath?: string) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { '*': currPath = '' } = useParams();\n\n  useLayoutEffect(() => {\n    if (currPath === '' && defaultPath) {\n      navigate(`${location.pathname}${defaultPath}`, { replace: true });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\n/**\n * Hook that encapsulates the behavior of getting raw HTML and applying\n * transforms to it in order to make it function at a basic level in the\n * Backstage UI.\n */\nexport const useTechDocsReaderDom = (\n  entityRef: CompoundEntityRef,\n  defaultPath?: string,\n): Element | null => {\n  const navigate = useNavigateUrl();\n  const theme = useTheme();\n  const isMobileMedia = useMediaQuery(MOBILE_MEDIA_QUERY);\n  const sanitizerTransformer = useSanitizerTransformer();\n  const stylesTransformer = useStylesTransformer();\n  const analytics = useAnalytics();\n\n  const techdocsStorageApi = useApi(techdocsStorageApiRef);\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n  const configApi = useApi(configApiRef);\n\n  const { state, path, content: rawPage } = useTechDocsReader();\n  const { '*': currPath = '' } = useParams();\n\n  const [dom, setDom] = useState<HTMLElement | null>(null);\n  const isStyleLoading = useShadowDomStylesLoading(dom);\n\n  useInitialRedirect(defaultPath);\n\n  const updateSidebarPositionAndHeight = useCallback(() => {\n    if (!dom) return;\n\n    const sidebars = dom.querySelectorAll<HTMLElement>('.md-sidebar');\n\n    sidebars.forEach(element => {\n      // set sidebar position to render in correct position\n      if (isMobileMedia) {\n        element.style.top = '0px';\n      } else {\n        const page = document?.querySelector('.techdocs-reader-page');\n        const pageTop = page?.getBoundingClientRect().top ?? 0;\n        let domTop = dom.getBoundingClientRect().top ?? 0;\n\n        const tabs = dom.querySelector('.md-container > .md-tabs');\n        const tabsHeight = tabs?.getBoundingClientRect().height ?? 0;\n\n        // the sidebars should not scroll beyond the total height of the header and tabs\n        if (domTop < pageTop) {\n          domTop = pageTop;\n        }\n\n        const scrollbarTopPx = Math.max(domTop, 0) + tabsHeight;\n\n        element.style.top = `${scrollbarTopPx}px`;\n\n        // set scrollbar height to ensure all links can be seen when content is small\n        const footer = dom.querySelector('.md-container > .md-footer');\n        // if no footer, fallback to using the bottom of the window\n        const scrollbarEndPx =\n          footer?.getBoundingClientRect().top ?? window.innerHeight;\n\n        element.style.height = `${scrollbarEndPx - scrollbarTopPx}px`;\n      }\n\n      // show the sidebar only after updating its position\n      element.style.setProperty('opacity', '1');\n    });\n  }, [dom, isMobileMedia]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateSidebarPositionAndHeight);\n    window.addEventListener('scroll', updateSidebarPositionAndHeight, true);\n    return () => {\n      window.removeEventListener('resize', updateSidebarPositionAndHeight);\n      window.removeEventListener(\n        'scroll',\n        updateSidebarPositionAndHeight,\n        true,\n      );\n    };\n  }, [dom, updateSidebarPositionAndHeight]);\n\n  // dynamically set width of footer to accommodate for pinning of the sidebar\n  const updateFooterWidth = useCallback(() => {\n    if (!dom) return;\n    const footer = dom.querySelector<HTMLElement>('.md-footer');\n    if (footer) {\n      footer.style.width = `${dom.getBoundingClientRect().width}px`;\n    }\n  }, [dom]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateFooterWidth);\n    return () => {\n      window.removeEventListener('resize', updateFooterWidth);\n    };\n  }, [dom, updateFooterWidth]);\n\n  // an update to \"state\" might lead to an updated UI so we include it as a trigger\n  useEffect(() => {\n    if (!isStyleLoading) {\n      updateFooterWidth();\n      updateSidebarPositionAndHeight();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    state,\n    isStyleLoading,\n    updateFooterWidth,\n    updateSidebarPositionAndHeight,\n  ]);\n\n  // a function that performs transformations that are executed prior to adding it to the DOM\n  const preRender = useCallback(\n    (rawContent: string, contentPath: string) =>\n      transformer(rawContent, [\n        sanitizerTransformer,\n        addBaseUrl({\n          techdocsStorageApi,\n          entityId: entityRef,\n          path: contentPath,\n        }),\n        rewriteDocLinks(),\n        addSidebarToggle(),\n        removeMkdocsHeader(),\n        simplifyMkdocsFooter(),\n        addGitFeedbackLink(scmIntegrationsApi),\n        stylesTransformer,\n      ]),\n    [\n      // only add dependencies that are in state or memorized variables to avoid unnecessary calls between re-renders\n      entityRef,\n      scmIntegrationsApi,\n      techdocsStorageApi,\n      sanitizerTransformer,\n      stylesTransformer,\n    ],\n  );\n\n  // a function that performs transformations that are executed after adding it to the DOM\n  const postRender = useCallback(\n    async (transformedElement: Element) =>\n      transformer(transformedElement, [\n        handleMetaRedirects(navigate, entityRef.name),\n        scrollIntoNavigation(),\n        copyToClipboard(theme),\n        addLinkClickListener({\n          baseUrl:\n            configApi.getOptionalString('app.baseUrl') ||\n            window.location.origin,\n          onClick: (event: MouseEvent, url: string) => {\n            // detect if CTRL or META keys are pressed so that links can be opened in a new tab with `window.open`\n            const modifierActive = event.ctrlKey || event.metaKey;\n            const parsedUrl = new URL(url);\n\n            // capture link clicks within documentation\n            const linkText =\n              (event.target as HTMLAnchorElement | undefined)?.innerText || url;\n            const to = url.replace(window.location.origin, '');\n            analytics.captureEvent('click', linkText, { attributes: { to } });\n\n            // hash exists when anchor is clicked on secondary sidebar\n            if (parsedUrl.hash) {\n              if (modifierActive) {\n                window.open(url, '_blank');\n              } else {\n                // If it's in a different page, we navigate to it\n                if (window.location.pathname !== parsedUrl.pathname) {\n                  navigate(url);\n                } else {\n                  // If it's in the same page we avoid using navigate that causes\n                  // the page to rerender.\n                  window.history.pushState(\n                    null,\n                    document.title,\n                    parsedUrl.hash,\n                  );\n                }\n                // Scroll to hash if it's on the current page\n                transformedElement\n                  ?.querySelector(`[id=\"${parsedUrl.hash.slice(1)}\"]`)\n                  ?.scrollIntoView();\n\n                // Focus first focusable element in the target section\n                (\n                  transformedElement\n                    ?.querySelector(`[id=\"${parsedUrl.hash.slice(1)}\"]`)\n                    ?.querySelector('a, button, [tabindex]') as HTMLElement\n                )?.focus();\n              }\n            } else {\n              if (modifierActive) {\n                window.open(url, '_blank');\n              } else {\n                navigate(url);\n              }\n            }\n          },\n        }),\n        // disable MkDocs drawer toggling ('for' attribute => checkbox mechanism)\n        onCssReady({\n          onLoading: () => {},\n          onLoaded: () => {\n            transformedElement\n              .querySelector('.md-nav__title')\n              ?.removeAttribute('for');\n          },\n        }),\n        // hide sidebars until their positions are updated\n        onCssReady({\n          onLoading: () => {\n            const sidebars = Array.from(\n              transformedElement.querySelectorAll<HTMLElement>('.md-sidebar'),\n            );\n            sidebars.forEach(element => {\n              element.style.setProperty('opacity', '0');\n            });\n          },\n          onLoaded: () => {},\n        }),\n        addNavLinkKeyboardToggle(),\n      ]),\n    [theme, navigate, analytics, entityRef.name, configApi],\n  );\n\n  useEffect(() => {\n    if (!rawPage) return () => {};\n\n    // if false, there is already a newer execution of this effect\n    let shouldReplaceContent = true;\n\n    // Pre-render\n    preRender(rawPage, path).then(async preTransformedDomElement => {\n      if (!preTransformedDomElement?.innerHTML) {\n        return; // An unexpected error occurred\n      }\n\n      // don't manipulate the shadow dom if this isn't the latest effect execution\n      if (!shouldReplaceContent) {\n        return;\n      }\n\n      // Skip this update if the location's path has changed but the state\n      // contains a page that isn't loaded yet.\n      if (currPath !== path) {\n        return;\n      }\n\n      // Scroll to top after render\n      window.scroll({ top: 0 });\n\n      // Post-render\n      const postTransformedDomElement = await postRender(\n        preTransformedDomElement,\n      );\n\n      setDom(postTransformedDomElement as HTMLElement);\n    });\n\n    // cancel this execution\n    return () => {\n      shouldReplaceContent = false;\n    };\n  }, [rawPage, currPath, path, preRender, postRender]);\n\n  return dom;\n};\n"],"names":["transformer"],"mappings":"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"}