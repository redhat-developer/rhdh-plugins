{"version":3,"file":"TechDocsReaderProvider.esm.js","sources":["../../../src/reader/components/TechDocsReaderProvider.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentType, createContext, useContext, ReactNode } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTechDocsReaderPage } from '@backstage/plugin-techdocs-react';\n\nimport { useReaderState, ReaderState } from './useReaderState';\n\nconst TechDocsReaderContext = createContext<ReaderState>({} as ReaderState);\n\nexport const useTechDocsReader = () => useContext(TechDocsReaderContext);\n\n/**\n * @public Render function for {@link TechDocsReaderProvider}\n */\nexport type TechDocsReaderProviderRenderFunction = (\n  value: ReaderState,\n) => JSX.Element;\n\n/**\n * @public Props for {@link TechDocsReaderProvider}\n */\nexport type TechDocsReaderProviderProps = {\n  children: TechDocsReaderProviderRenderFunction | ReactNode;\n};\n\n/**\n * Provides shared building process state to the reader page components.\n *\n * @public\n */\nexport const TechDocsReaderProvider = (props: TechDocsReaderProviderProps) => {\n  const { children } = props;\n\n  const { '*': path = '' } = useParams();\n  const { entityRef } = useTechDocsReaderPage();\n  const { kind, namespace, name } = entityRef;\n  const value = useReaderState(kind, namespace, name, path);\n\n  return (\n    <TechDocsReaderContext.Provider value={value}>\n      {children instanceof Function ? children(value) : children}\n    </TechDocsReaderContext.Provider>\n  );\n};\n\nexport const withTechDocsReaderProvider =\n  <T extends {}>(Component: ComponentType<T>) =>\n  (props: T) =>\n    (\n      <TechDocsReaderProvider>\n        <Component {...props} />\n      </TechDocsReaderProvider>\n    );\n"],"names":[],"mappings":";;;;;;AAsBA,MAAM,qBAAA,GAAwB,aAAA,CAA2B,EAAiB,CAAA;AAEnE,MAAM,iBAAA,GAAoB,MAAM,UAAA,CAAW,qBAAqB;AAqBhE,MAAM,sBAAA,GAAyB,CAAC,KAAA,KAAuC;AAC5E,EAAA,MAAM,EAAE,UAAS,GAAI,KAAA;AAErB,EAAA,MAAM,EAAE,GAAA,EAAK,IAAA,GAAO,EAAA,KAAO,SAAA,EAAU;AACrC,EAAA,MAAM,EAAE,SAAA,EAAU,GAAI,qBAAA,EAAsB;AAC5C,EAAA,MAAM,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAK,GAAI,SAAA;AAClC,EAAA,MAAM,KAAA,GAAQ,cAAA,CAAe,IAAA,EAAM,SAAA,EAAW,MAAM,IAAI,CAAA;AAExD,EAAA,uBACE,GAAA,CAAC,qBAAA,CAAsB,QAAA,EAAtB,EAA+B,KAAA,EAC7B,8BAAoB,QAAA,GAAW,QAAA,CAAS,KAAK,CAAA,GAAI,QAAA,EACpD,CAAA;AAEJ;AAEO,MAAM,0BAAA,GACX,CAAe,SAAA,KACf,CAAC,KAAA,qBAEG,GAAA,CAAC,sBAAA,EAAA,EACC,QAAA,kBAAA,GAAA,CAAC,SAAA,EAAA,EAAW,GAAG,KAAA,EAAO,CAAA,EACxB;;;;"}