{"version":3,"file":"handleMetaRedirects.esm.js","sources":["../../../src/reader/transformers/handleMetaRedirects.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Transformer } from './transformer';\nimport { normalizeUrl } from './rewriteDocLinks';\nimport { renderReactElement } from './renderReactElement';\nimport { TechDocsRedirectNotification } from '../components/TechDocsRedirectNotification';\n\nexport const handleMetaRedirects = (\n  navigate: (to: string) => void,\n  entityName: string,\n): Transformer => {\n  const redirectAfterMs = 3000;\n\n  const determineRedirectURL = (metaUrl: string) => {\n    const normalizedCurrentUrl = normalizeUrl(window.location.href);\n    // When creating URL object, if the metaUrl is relative, it will be resolved with base href. If it is absolute, it will replace the base href.\n    const absoluteRedirectObj = new URL(metaUrl, normalizedCurrentUrl);\n    const isExternalRedirect =\n      absoluteRedirectObj.hostname !== window.location.hostname;\n\n    if (isExternalRedirect) {\n      const currentTechDocPath = window.location.pathname;\n      const indexOfSiteHome = currentTechDocPath.indexOf(entityName);\n      const siteHomePath = currentTechDocPath.slice(\n        0,\n        indexOfSiteHome + entityName.length,\n      );\n      return new URL(siteHomePath, normalizedCurrentUrl).href;\n    }\n    return absoluteRedirectObj.href;\n  };\n\n  return dom => {\n    for (const elem of Array.from(dom.querySelectorAll('meta'))) {\n      if (elem.getAttribute('http-equiv') === 'refresh') {\n        const metaContentParameters = elem\n          .getAttribute('content')\n          ?.split('url=');\n\n        if (!metaContentParameters || metaContentParameters.length < 2) {\n          return dom;\n        }\n\n        const metaUrl = metaContentParameters[1];\n        const redirectURL = determineRedirectURL(metaUrl);\n\n        // If the current URL is the same as the redirect URL, do not proceed with the redirect.\n        if (window.location.href === redirectURL) {\n          return dom;\n        }\n\n        const container = document.createElement('div');\n\n        renderReactElement(\n          <TechDocsRedirectNotification\n            message=\"This TechDocs page is no longer maintained. Will automatically redirect to the designated replacement.\"\n            handleButtonClick={() => navigate(redirectURL)}\n            autoHideDuration={redirectAfterMs}\n          />,\n          container,\n        );\n        document.body.appendChild(container);\n\n        setTimeout(() => {\n          navigate(redirectURL);\n        }, redirectAfterMs);\n\n        return dom;\n      }\n    }\n    return dom;\n  };\n};\n"],"names":[],"mappings":";;;;;AAqBO,MAAM,mBAAA,GAAsB,CACjC,QAAA,EACA,UAAA,KACgB;AAChB,EAAA,MAAM,eAAA,GAAkB,GAAA;AAExB,EAAA,MAAM,oBAAA,GAAuB,CAAC,OAAA,KAAoB;AAChD,IAAA,MAAM,oBAAA,GAAuB,YAAA,CAAa,MAAA,CAAO,QAAA,CAAS,IAAI,CAAA;AAE9D,IAAA,MAAM,mBAAA,GAAsB,IAAI,GAAA,CAAI,OAAA,EAAS,oBAAoB,CAAA;AACjE,IAAA,MAAM,kBAAA,GACJ,mBAAA,CAAoB,QAAA,KAAa,MAAA,CAAO,QAAA,CAAS,QAAA;AAEnD,IAAA,IAAI,kBAAA,EAAoB;AACtB,MAAA,MAAM,kBAAA,GAAqB,OAAO,QAAA,CAAS,QAAA;AAC3C,MAAA,MAAM,eAAA,GAAkB,kBAAA,CAAmB,OAAA,CAAQ,UAAU,CAAA;AAC7D,MAAA,MAAM,eAAe,kBAAA,CAAmB,KAAA;AAAA,QACtC,CAAA;AAAA,QACA,kBAAkB,UAAA,CAAW;AAAA,OAC/B;AACA,MAAA,OAAO,IAAI,GAAA,CAAI,YAAA,EAAc,oBAAoB,CAAA,CAAE,IAAA;AAAA,IACrD;AACA,IAAA,OAAO,mBAAA,CAAoB,IAAA;AAAA,EAC7B,CAAA;AAEA,EAAA,OAAO,CAAA,GAAA,KAAO;AACZ,IAAA,KAAA,MAAW,QAAQ,KAAA,CAAM,IAAA,CAAK,IAAI,gBAAA,CAAiB,MAAM,CAAC,CAAA,EAAG;AAC3D,MAAA,IAAI,IAAA,CAAK,YAAA,CAAa,YAAY,CAAA,KAAM,SAAA,EAAW;AACjD,QAAA,MAAM,wBAAwB,IAAA,CAC3B,YAAA,CAAa,SAAS,CAAA,EACrB,MAAM,MAAM,CAAA;AAEhB,QAAA,IAAI,CAAC,qBAAA,IAAyB,qBAAA,CAAsB,MAAA,GAAS,CAAA,EAAG;AAC9D,UAAA,OAAO,GAAA;AAAA,QACT;AAEA,QAAA,MAAM,OAAA,GAAU,sBAAsB,CAAC,CAAA;AACvC,QAAA,MAAM,WAAA,GAAc,qBAAqB,OAAO,CAAA;AAGhD,QAAA,IAAI,MAAA,CAAO,QAAA,CAAS,IAAA,KAAS,WAAA,EAAa;AACxC,UAAA,OAAO,GAAA;AAAA,QACT;AAEA,QAAA,MAAM,SAAA,GAAY,QAAA,CAAS,aAAA,CAAc,KAAK,CAAA;AAE9C,QAAA,kBAAA;AAAA,0BACE,GAAA;AAAA,YAAC,4BAAA;AAAA,YAAA;AAAA,cACC,OAAA,EAAQ,wGAAA;AAAA,cACR,iBAAA,EAAmB,MAAM,QAAA,CAAS,WAAW,CAAA;AAAA,cAC7C,gBAAA,EAAkB;AAAA;AAAA,WACpB;AAAA,UACA;AAAA,SACF;AACA,QAAA,QAAA,CAAS,IAAA,CAAK,YAAY,SAAS,CAAA;AAEnC,QAAA,UAAA,CAAW,MAAM;AACf,UAAA,QAAA,CAAS,WAAW,CAAA;AAAA,QACtB,GAAG,eAAe,CAAA;AAElB,QAAA,OAAO,GAAA;AAAA,MACT;AAAA,IACF;AACA,IAAA,OAAO,GAAA;AAAA,EACT,CAAA;AACF;;;;"}