{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  techdocsApiRef,\n  techdocsStorageApiRef,\n} from '@backstage/plugin-techdocs-react';\nimport { TechDocsClient, TechDocsStorageClient } from './client';\nimport {\n  rootDocsRouteRef,\n  rootRouteRef,\n  rootCatalogDocsRouteRef,\n} from './routes';\nimport {\n  configApiRef,\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  fetchApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  createSearchResultListItemExtension,\n  SearchResultListItemExtensionProps,\n} from '@backstage/plugin-search-react';\nimport { TechDocsSearchResultListItemProps } from './search/components/TechDocsSearchResultListItem';\n\n/**\n * The Backstage plugin that renders technical documentation for your components\n *\n * @public\n */\nexport const techdocsPlugin = createPlugin({\n  id: 'techdocs',\n  apis: [\n    createApiFactory({\n      api: techdocsStorageApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ configApi, discoveryApi, fetchApi }) =>\n        new TechDocsStorageClient({\n          configApi,\n          discoveryApi,\n          fetchApi,\n        }),\n    }),\n    createApiFactory({\n      api: techdocsApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ configApi, discoveryApi, fetchApi }) =>\n        new TechDocsClient({\n          configApi,\n          discoveryApi,\n          fetchApi,\n        }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n    docRoot: rootDocsRouteRef,\n    entityContent: rootCatalogDocsRouteRef,\n  },\n});\n\n/**\n * Routable extension used to render docs\n *\n * @public\n */\nexport const TechdocsPage = techdocsPlugin.provide(\n  createRoutableExtension({\n    name: 'TechdocsPage',\n    component: () => import('./Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * Routable extension used to render docs on Entity page\n *\n * @public\n */\nexport const EntityTechdocsContent = techdocsPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityTechdocsContent',\n    component: () => import('./Router').then(m => m.LegacyEmbeddedDocsRouter),\n    mountPoint: rootCatalogDocsRouteRef,\n  }),\n);\n\n/**\n * Component which takes a custom tabs config object and renders a documentation landing page.\n *\n * @public\n */\nexport const TechDocsCustomHome = techdocsPlugin.provide(\n  createRoutableExtension({\n    name: 'TechDocsCustomHome',\n    component: () =>\n      import('./home/components/TechDocsCustomHome').then(\n        m => m.TechDocsCustomHome,\n      ),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * Responsible for rendering the provided router element\n *\n * @public\n */\nexport const TechDocsIndexPage = techdocsPlugin.provide(\n  createRoutableExtension({\n    name: 'TechDocsIndexPage',\n    component: () =>\n      import('./home/components/TechDocsIndexPage').then(\n        m => m.TechDocsIndexPage,\n      ),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * Component responsible for composing a TechDocs reader page experience\n *\n * @public\n */\nexport const TechDocsReaderPage = techdocsPlugin.provide(\n  createRoutableExtension({\n    name: 'TechDocsReaderPage',\n    component: () =>\n      import('./reader/components/TechDocsReaderPage').then(\n        m => m.TechDocsReaderPage,\n      ),\n    mountPoint: rootDocsRouteRef,\n  }),\n);\n\n/**\n * React extension used to render results on Search page or modal\n *\n * @public\n */\nexport const TechDocsSearchResultListItem: (\n  props: SearchResultListItemExtensionProps<TechDocsSearchResultListItemProps>,\n) => JSX.Element | null = techdocsPlugin.provide(\n  createSearchResultListItemExtension({\n    name: 'TechDocsSearchResultListItem',\n    component: () =>\n      import('./search/components/TechDocsSearchResultListItem').then(\n        m => m.TechDocsSearchResultListItem,\n      ),\n    predicate: result => result.type === 'techdocs',\n  }),\n);\n"],"names":[],"mappings":"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"}