{"version":3,"file":"useTechDocsLocation.esm.js","sources":["../../../src/search/hooks/useTechDocsLocation.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useMemo } from 'react';\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { useRouteRef } from '@backstage/core-plugin-api';\n\nimport { rootCatalogDocsRouteRef, rootDocsRouteRef } from '../../routes';\n\nconst trimStartSlash = (path: string) => path.replace(/^\\/+/, '');\nconst trimEndSlash = (path: string) => path.replace(/\\/+$/, '');\n\n/**\n * Returns a function that takes a location to a Tech Docs entry, and returns a\n * new location, re-routed to the catalog page tab.\n *\n * @internal\n */\nexport function useEntityPageTechDocsRedirect(entityRef: CompoundEntityRef) {\n  const { kind, name, namespace } = entityRef;\n\n  const routeDocsRoot = useRouteRef(rootDocsRouteRef);\n  const routeDocsCatalog = useRouteRef(rootCatalogDocsRouteRef);\n\n  // Re-routes a /docs/:namespace/:kind/:name/* location into\n  // /catalog/:namespace/:kind/:name/docs/*, while handling situations where\n  // these defaults are changed.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const reRouteLocationToCatalog = useMemo(() => {\n    const rootDocsPath = trimEndSlash(routeDocsRoot({ kind, namespace, name }));\n    const catalogDocsPath = trimEndSlash(routeDocsCatalog());\n\n    return (url: string): string => {\n      if (\n        url\n          .toLocaleLowerCase('en-US')\n          .startsWith(rootDocsPath.toLocaleLowerCase('en-US'))\n      ) {\n        const suffix = trimStartSlash(url.slice(rootDocsPath.length));\n        return suffix.length === 0 || suffix.startsWith('#')\n          ? `${catalogDocsPath}${suffix}`\n          : `${catalogDocsPath}/${suffix}`;\n      }\n      return url;\n    };\n  }, [routeDocsRoot, routeDocsCatalog, kind, name, namespace]);\n\n  return reRouteLocationToCatalog;\n}\n"],"names":[],"mappings":";;;;AAsBA,MAAM,iBAAiB,CAAC,IAAA,KAAiB,IAAA,CAAK,OAAA,CAAQ,QAAQ,EAAE,CAAA;AAChE,MAAM,eAAe,CAAC,IAAA,KAAiB,IAAA,CAAK,OAAA,CAAQ,QAAQ,EAAE,CAAA;AAQvD,SAAS,8BAA8B,SAAA,EAA8B;AAC1E,EAAA,MAAM,EAAE,IAAA,EAAM,IAAA,EAAM,SAAA,EAAU,GAAI,SAAA;AAElC,EAAA,MAAM,aAAA,GAAgB,YAAY,gBAAgB,CAAA;AAClD,EAAA,MAAM,gBAAA,GAAmB,YAAY,uBAAuB,CAAA;AAM5D,EAAA,MAAM,wBAAA,GAA2B,QAAQ,MAAM;AAC7C,IAAA,MAAM,YAAA,GAAe,aAAa,aAAA,CAAc,EAAE,MAAM,SAAA,EAAW,IAAA,EAAM,CAAC,CAAA;AAC1E,IAAA,MAAM,eAAA,GAAkB,YAAA,CAAa,gBAAA,EAAkB,CAAA;AAEvD,IAAA,OAAO,CAAC,GAAA,KAAwB;AAC9B,MAAA,IACE,GAAA,CACG,kBAAkB,OAAO,CAAA,CACzB,WAAW,YAAA,CAAa,iBAAA,CAAkB,OAAO,CAAC,CAAA,EACrD;AACA,QAAA,MAAM,SAAS,cAAA,CAAe,GAAA,CAAI,KAAA,CAAM,YAAA,CAAa,MAAM,CAAC,CAAA;AAC5D,QAAA,OAAO,MAAA,CAAO,MAAA,KAAW,CAAA,IAAK,MAAA,CAAO,WAAW,GAAG,CAAA,GAC/C,CAAA,EAAG,eAAe,GAAG,MAAM,CAAA,CAAA,GAC3B,CAAA,EAAG,eAAe,IAAI,MAAM,CAAA,CAAA;AAAA,MAClC;AACA,MAAA,OAAO,GAAA;AAAA,IACT,CAAA;AAAA,EACF,GAAG,CAAC,aAAA,EAAe,kBAAkB,IAAA,EAAM,IAAA,EAAM,SAAS,CAAC,CAAA;AAE3D,EAAA,OAAO,wBAAA;AACT;;;;"}