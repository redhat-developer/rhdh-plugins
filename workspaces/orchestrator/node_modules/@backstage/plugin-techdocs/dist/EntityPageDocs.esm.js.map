{"version":3,"file":"EntityPageDocs.esm.js","sources":["../src/EntityPageDocs.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  getCompoundEntityRef,\n  parseEntityRef,\n} from '@backstage/catalog-model';\nimport { TECHDOCS_EXTERNAL_ANNOTATION } from '@backstage/plugin-techdocs-common';\nimport { getEntityRootTechDocsPath } from '@backstage/plugin-techdocs-react';\n\nimport { TechDocsReaderPage } from './plugin';\nimport { TechDocsReaderPageContent } from './reader/components/TechDocsReaderPageContent';\nimport { TechDocsReaderPageSubheader } from './reader/components/TechDocsReaderPageSubheader';\nimport { useEntityPageTechDocsRedirect } from './search/hooks/useTechDocsLocation';\n\ntype EntityPageDocsProps = {\n  entity: Entity;\n  /**\n   * Show or hide the content search bar, defaults to true.\n   */\n  withSearch?: boolean;\n};\n\nexport const EntityPageDocs = ({\n  entity,\n  withSearch = true,\n}: EntityPageDocsProps) => {\n  let entityRef = getCompoundEntityRef(entity);\n\n  const searchResultUrlMapper = useEntityPageTechDocsRedirect(entityRef);\n\n  if (entity.metadata.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION]) {\n    try {\n      entityRef = parseEntityRef(\n        entity.metadata.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION],\n      );\n    } catch {\n      // not a fan of this but we don't care if the parseEntityRef fails\n    }\n  }\n\n  const defaultPath = getEntityRootTechDocsPath(entity);\n\n  return (\n    <TechDocsReaderPage entityRef={entityRef}>\n      <TechDocsReaderPageSubheader />\n      <TechDocsReaderPageContent\n        withSearch={withSearch}\n        searchResultUrlMapper={searchResultUrlMapper}\n        defaultPath={defaultPath}\n      />\n    </TechDocsReaderPage>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAqCO,MAAM,iBAAiB,CAAC;AAAA,EAC7B,MAAA;AAAA,EACA,UAAA,GAAa;AACf,CAAA,KAA2B;AACzB,EAAA,IAAI,SAAA,GAAY,qBAAqB,MAAM,CAAA;AAE3C,EAAA,MAAM,qBAAA,GAAwB,8BAA8B,SAAS,CAAA;AAErE,EAAA,IAAI,MAAA,CAAO,QAAA,CAAS,WAAA,GAAc,4BAA4B,CAAA,EAAG;AAC/D,IAAA,IAAI;AACF,MAAA,SAAA,GAAY,cAAA;AAAA,QACV,MAAA,CAAO,QAAA,CAAS,WAAA,GAAc,4BAA4B;AAAA,OAC5D;AAAA,IACF,CAAA,CAAA,MAAQ;AAAA,IAER;AAAA,EACF;AAEA,EAAA,MAAM,WAAA,GAAc,0BAA0B,MAAM,CAAA;AAEpD,EAAA,uBACE,IAAA,CAAC,sBAAmB,SAAA,EAClB,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,2BAAA,EAAA,EAA4B,CAAA;AAAA,oBAC7B,GAAA;AAAA,MAAC,yBAAA;AAAA,MAAA;AAAA,QACC,UAAA;AAAA,QACA,qBAAA;AAAA,QACA;AAAA;AAAA;AACF,GAAA,EACF,CAAA;AAEJ;;;;"}