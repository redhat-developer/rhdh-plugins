{"version":3,"file":"DocsCardGrid.esm.js","sources":["../../../../src/home/components/Grids/DocsCardGrid.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { rootDocsRouteRef } from '../../../routes';\nimport { toLowerMaybe } from '../../../helpers';\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi, useRouteRef, configApiRef } from '@backstage/core-plugin-api';\nimport {\n  LinkButton,\n  ItemCardGrid,\n  ItemCardHeader,\n} from '@backstage/core-components';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n/**\n * Props for {@link DocsCardGrid}\n *\n * @public\n */\nexport type DocsCardGridProps = {\n  entities: Entity[] | undefined;\n};\n\n/**\n * Component which accepts a list of entities and renders a item card for each entity\n *\n * @public\n */\nexport const DocsCardGrid = (props: DocsCardGridProps) => {\n  const { entities } = props;\n  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);\n  const config = useApi(configApiRef);\n  if (!entities) return null;\n  return (\n    <ItemCardGrid data-testid=\"docs-explore\">\n      {!entities?.length\n        ? null\n        : entities.map((entity, index: number) => (\n            <Card key={index}>\n              <CardMedia>\n                <ItemCardHeader\n                  title={entity.metadata.title ?? entity.metadata.name}\n                />\n              </CardMedia>\n              <CardContent>{entity.metadata.description}</CardContent>\n              <CardActions>\n                <LinkButton\n                  to={getRouteToReaderPageFor({\n                    namespace: toLowerMaybe(\n                      entity.metadata.namespace ?? 'default',\n                      config,\n                    ),\n                    kind: toLowerMaybe(entity.kind, config),\n                    name: toLowerMaybe(entity.metadata.name, config),\n                  })}\n                  color=\"primary\"\n                  data-testid=\"read_docs\"\n                >\n                  Read Docs\n                </LinkButton>\n              </CardActions>\n            </Card>\n          ))}\n    </ItemCardGrid>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AA4CO,MAAM,YAAA,GAAe,CAAC,KAAA,KAA6B;AACxD,EAAA,MAAM,EAAE,UAAS,GAAI,KAAA;AACrB,EAAA,MAAM,uBAAA,GAA0B,YAAY,gBAAgB,CAAA;AAC5D,EAAA,MAAM,MAAA,GAAS,OAAO,YAAY,CAAA;AAClC,EAAA,IAAI,CAAC,UAAU,OAAO,IAAA;AACtB,EAAA,uBACE,GAAA,CAAC,YAAA,EAAA,EAAa,aAAA,EAAY,cAAA,EACvB,WAAC,QAAA,EAAU,MAAA,GACR,IAAA,GACA,QAAA,CAAS,GAAA,CAAI,CAAC,MAAA,EAAQ,KAAA,0BACnB,IAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,SAAA,EAAA,EACC,QAAA,kBAAA,GAAA;AAAA,MAAC,cAAA;AAAA,MAAA;AAAA,QACC,KAAA,EAAO,MAAA,CAAO,QAAA,CAAS,KAAA,IAAS,OAAO,QAAA,CAAS;AAAA;AAAA,KAClD,EACF,CAAA;AAAA,oBACA,GAAA,CAAC,WAAA,EAAA,EAAa,QAAA,EAAA,MAAA,CAAO,QAAA,CAAS,WAAA,EAAY,CAAA;AAAA,wBACzC,WAAA,EAAA,EACC,QAAA,kBAAA,GAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,IAAI,uBAAA,CAAwB;AAAA,UAC1B,SAAA,EAAW,YAAA;AAAA,YACT,MAAA,CAAO,SAAS,SAAA,IAAa,SAAA;AAAA,YAC7B;AAAA,WACF;AAAA,UACA,IAAA,EAAM,YAAA,CAAa,MAAA,CAAO,IAAA,EAAM,MAAM,CAAA;AAAA,UACtC,IAAA,EAAM,YAAA,CAAa,MAAA,CAAO,QAAA,CAAS,MAAM,MAAM;AAAA,SAChD,CAAA;AAAA,QACD,KAAA,EAAM,SAAA;AAAA,QACN,aAAA,EAAY,WAAA;AAAA,QACb,QAAA,EAAA;AAAA;AAAA,KAED,EACF;AAAA,GAAA,EAAA,EAtBS,KAuBX,CACD,CAAA,EACP,CAAA;AAEJ;;;;"}