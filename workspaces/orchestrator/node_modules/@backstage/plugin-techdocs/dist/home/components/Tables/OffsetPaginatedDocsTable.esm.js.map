{"version":3,"file":"OffsetPaginatedDocsTable.esm.js","sources":["../../../../src/home/components/Tables/OffsetPaginatedDocsTable.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect } from 'react';\n\nimport { Table, TableProps } from '@backstage/core-components';\nimport { DocsTableRow } from './types';\nimport {\n  EntityTextFilter,\n  useEntityList,\n} from '@backstage/plugin-catalog-react';\n\n/**\n * @internal\n */\nexport function OffsetPaginatedDocsTable(props: TableProps<DocsTableRow>) {\n  const { actions, columns, data, isLoading, options } = props;\n  const { updateFilters, setLimit, setOffset, limit, totalItems, offset } =\n    useEntityList();\n  const [page, setPage] = useState(\n    offset && limit ? Math.floor(offset / limit) : 0,\n  );\n\n  useEffect(() => {\n    if (totalItems && page * limit >= totalItems) {\n      setOffset!(Math.max(0, totalItems - limit));\n    } else {\n      setOffset!(Math.max(0, page * limit));\n    }\n  }, [setOffset, page, limit, totalItems]);\n\n  return (\n    <Table<DocsTableRow>\n      columns={columns}\n      data={data}\n      options={{\n        paginationPosition: 'both',\n        pageSizeOptions: [5, 10, 20, 50, 100],\n        pageSize: limit,\n        emptyRowsWhenPaging: false,\n        actionsColumnIndex: -1,\n        ...options,\n      }}\n      actions={actions}\n      onSearchChange={(searchText: string) =>\n        updateFilters({\n          text: searchText ? new EntityTextFilter(searchText) : undefined,\n        })\n      }\n      page={page}\n      onPageChange={newPage => {\n        setPage(newPage);\n      }}\n      onRowsPerPageChange={pageSize => {\n        setLimit(pageSize);\n      }}\n      totalCount={totalItems}\n      localization={{ pagination: { labelDisplayedRows: '' } }}\n      isLoading={isLoading}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;AA4BO,SAAS,yBAAyB,KAAA,EAAiC;AACxE,EAAA,MAAM,EAAE,OAAA,EAAS,OAAA,EAAS,IAAA,EAAM,SAAA,EAAW,SAAQ,GAAI,KAAA;AACvD,EAAA,MAAM,EAAE,eAAe,QAAA,EAAU,SAAA,EAAW,OAAO,UAAA,EAAY,MAAA,KAC7D,aAAA,EAAc;AAChB,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAI,QAAA;AAAA,IACtB,UAAU,KAAA,GAAQ,IAAA,CAAK,KAAA,CAAM,MAAA,GAAS,KAAK,CAAA,GAAI;AAAA,GACjD;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,UAAA,IAAc,IAAA,GAAO,KAAA,IAAS,UAAA,EAAY;AAC5C,MAAA,SAAA,CAAW,IAAA,CAAK,GAAA,CAAI,CAAA,EAAG,UAAA,GAAa,KAAK,CAAC,CAAA;AAAA,IAC5C,CAAA,MAAO;AACL,MAAA,SAAA,CAAW,IAAA,CAAK,GAAA,CAAI,CAAA,EAAG,IAAA,GAAO,KAAK,CAAC,CAAA;AAAA,IACtC;AAAA,EACF,GAAG,CAAC,SAAA,EAAW,IAAA,EAAM,KAAA,EAAO,UAAU,CAAC,CAAA;AAEvC,EAAA,uBACE,GAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,OAAA;AAAA,MACA,IAAA;AAAA,MACA,OAAA,EAAS;AAAA,QACP,kBAAA,EAAoB,MAAA;AAAA,QACpB,iBAAiB,CAAC,CAAA,EAAG,EAAA,EAAI,EAAA,EAAI,IAAI,GAAG,CAAA;AAAA,QACpC,QAAA,EAAU,KAAA;AAAA,QACV,mBAAA,EAAqB,KAAA;AAAA,QACrB,kBAAA,EAAoB,EAAA;AAAA,QACpB,GAAG;AAAA,OACL;AAAA,MACA,OAAA;AAAA,MACA,cAAA,EAAgB,CAAC,UAAA,KACf,aAAA,CAAc;AAAA,QACZ,IAAA,EAAM,UAAA,GAAa,IAAI,gBAAA,CAAiB,UAAU,CAAA,GAAI;AAAA,OACvD,CAAA;AAAA,MAEH,IAAA;AAAA,MACA,cAAc,CAAA,OAAA,KAAW;AACvB,QAAA,OAAA,CAAQ,OAAO,CAAA;AAAA,MACjB,CAAA;AAAA,MACA,qBAAqB,CAAA,QAAA,KAAY;AAC/B,QAAA,QAAA,CAAS,QAAQ,CAAA;AAAA,MACnB,CAAA;AAAA,MACA,UAAA,EAAY,UAAA;AAAA,MACZ,cAAc,EAAE,UAAA,EAAY,EAAE,kBAAA,EAAoB,IAAG,EAAE;AAAA,MACvD;AAAA;AAAA,GACF;AAEJ;;;;"}