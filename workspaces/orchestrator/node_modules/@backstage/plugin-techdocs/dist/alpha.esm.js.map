{"version":3,"file":"alpha.esm.js","sources":["../src/alpha/index.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LibraryBooks from '@material-ui/icons/LibraryBooks';\nimport {\n  createFrontendPlugin,\n  ApiBlueprint,\n  PageBlueprint,\n  NavItemBlueprint,\n  createExtensionInput,\n  coreExtensionData,\n  createExtension,\n} from '@backstage/frontend-plugin-api';\nimport {\n  configApiRef,\n  discoveryApiRef,\n  fetchApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n  convertLegacyRouteRefs,\n} from '@backstage/core-compat-api';\nimport {\n  EntityContentBlueprint,\n  EntityIconLinkBlueprint,\n} from '@backstage/plugin-catalog-react/alpha';\nimport { SearchResultListItemBlueprint } from '@backstage/plugin-search-react/alpha';\nimport { AddonBlueprint } from '@backstage/plugin-techdocs-react/alpha';\nimport { TechDocsClient, TechDocsStorageClient } from '../client';\nimport {\n  rootCatalogDocsRouteRef,\n  rootDocsRouteRef,\n  rootRouteRef,\n} from '../routes';\nimport { TechDocsReaderLayout } from '../reader';\nimport { attachTechDocsAddonComponentData } from '@backstage/plugin-techdocs-react/alpha';\nimport {\n  TechDocsAddons,\n  techdocsApiRef,\n  techdocsStorageApiRef,\n} from '@backstage/plugin-techdocs-react';\n\nimport { useTechdocsReaderIconLinkProps } from './hooks/useTechdocsReaderIconLinkProps';\n\n/** @alpha */\nconst techdocsEntityIconLink = EntityIconLinkBlueprint.make({\n  name: 'read-docs',\n  params: {\n    useProps: useTechdocsReaderIconLinkProps,\n  },\n});\n\n/** @alpha */\nconst techDocsStorageApi = ApiBlueprint.make({\n  name: 'storage',\n  params: defineParams =>\n    defineParams({\n      api: techdocsStorageApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ configApi, discoveryApi, fetchApi }) =>\n        new TechDocsStorageClient({\n          configApi,\n          discoveryApi,\n          fetchApi,\n        }),\n    }),\n});\n\n/** @alpha */\nconst techDocsClientApi = ApiBlueprint.make({\n  params: defineParams =>\n    defineParams({\n      api: techdocsApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ configApi, discoveryApi, fetchApi }) =>\n        new TechDocsClient({\n          configApi,\n          discoveryApi,\n          fetchApi,\n        }),\n    }),\n});\n\n/** @alpha */\nexport const techDocsSearchResultListItemExtension =\n  SearchResultListItemBlueprint.makeWithOverrides({\n    config: {\n      schema: {\n        title: z => z.string().optional(),\n        lineClamp: z => z.number().default(5),\n        asLink: z => z.boolean().default(true),\n        asListItem: z => z.boolean().default(true),\n      },\n    },\n    factory(originalFactory, { config }) {\n      return originalFactory({\n        predicate: result => result.type === 'techdocs',\n        component: async () => {\n          const { TechDocsSearchResultListItem } = await import(\n            '../search/components/TechDocsSearchResultListItem'\n          );\n          return props =>\n            compatWrapper(\n              <TechDocsSearchResultListItem {...props} {...config} />,\n            );\n        },\n      });\n    },\n  });\n\n/**\n * Responsible for rendering the provided router element\n *\n * @alpha\n */\nconst techDocsPage = PageBlueprint.make({\n  params: {\n    path: '/docs',\n    routeRef: convertLegacyRouteRef(rootRouteRef),\n    loader: () =>\n      import('../home/components/TechDocsIndexPage').then(m =>\n        compatWrapper(<m.TechDocsIndexPage />),\n      ),\n  },\n});\n\n/**\n * Component responsible for composing a TechDocs reader page experience\n *\n * @alpha\n */\nconst techDocsReaderPage = PageBlueprint.makeWithOverrides({\n  name: 'reader',\n  inputs: {\n    addons: createExtensionInput([AddonBlueprint.dataRefs.addon]),\n  },\n  factory(originalFactory, { inputs }) {\n    const addons = inputs.addons.map(output => {\n      const options = output.get(AddonBlueprint.dataRefs.addon);\n      const Addon = options.component;\n      attachTechDocsAddonComponentData(Addon, options);\n      return <Addon key={options.name} />;\n    });\n\n    return originalFactory({\n      path: '/docs/:namespace/:kind/:name',\n      routeRef: convertLegacyRouteRef(rootDocsRouteRef),\n      loader: async () =>\n        await import('../Router').then(({ TechDocsReaderRouter }) => {\n          return compatWrapper(\n            <TechDocsReaderRouter>\n              <TechDocsReaderLayout />\n              <TechDocsAddons>{addons}</TechDocsAddons>\n            </TechDocsReaderRouter>,\n          );\n        }),\n    });\n  },\n});\n\n/**\n * Component responsible for rendering techdocs on entity pages\n *\n * @alpha\n */\nconst techDocsEntityContent = EntityContentBlueprint.makeWithOverrides({\n  inputs: {\n    addons: createExtensionInput([AddonBlueprint.dataRefs.addon]),\n    emptyState: createExtensionInput(\n      [coreExtensionData.reactElement.optional()],\n      {\n        singleton: true,\n        optional: true,\n      },\n    ),\n  },\n  factory(originalFactory, context) {\n    return originalFactory(\n      {\n        path: 'docs',\n        title: 'TechDocs',\n        routeRef: convertLegacyRouteRef(rootCatalogDocsRouteRef),\n        loader: () =>\n          import('../Router').then(({ EmbeddedDocsRouter }) => {\n            const addons = context.inputs.addons.map(output => {\n              const options = output.get(AddonBlueprint.dataRefs.addon);\n              const Addon = options.component;\n              attachTechDocsAddonComponentData(Addon, options);\n              return <Addon key={options.name} />;\n            });\n            return compatWrapper(\n              <EmbeddedDocsRouter\n                emptyState={context.inputs.emptyState?.get(\n                  coreExtensionData.reactElement,\n                )}\n              >\n                <TechDocsAddons>{addons}</TechDocsAddons>\n              </EmbeddedDocsRouter>,\n            );\n          }),\n      },\n      context,\n    );\n  },\n});\n\nconst techDocsEntityContentEmptyState = createExtension({\n  kind: 'empty-state',\n  name: 'entity-content',\n  attachTo: { id: 'entity-content:techdocs', input: 'emptyState' },\n  output: [coreExtensionData.reactElement.optional()],\n  factory: () => [],\n});\n\n/** @alpha */\nconst techDocsNavItem = NavItemBlueprint.make({\n  params: {\n    icon: LibraryBooks,\n    title: 'Docs',\n    routeRef: convertLegacyRouteRef(rootRouteRef),\n  },\n});\n\n/** @alpha */\nexport default createFrontendPlugin({\n  pluginId: 'techdocs',\n  info: { packageJson: () => import('../../package.json') },\n  extensions: [\n    techDocsClientApi,\n    techDocsStorageApi,\n    techDocsNavItem,\n    techDocsPage,\n    techDocsReaderPage,\n    techdocsEntityIconLink,\n    techDocsEntityContent,\n    techDocsEntityContentEmptyState,\n    techDocsSearchResultListItemExtension,\n  ],\n  routes: convertLegacyRouteRefs({\n    root: rootRouteRef,\n    docRoot: rootDocsRouteRef,\n    entityContent: rootCatalogDocsRouteRef,\n  }),\n});\n"],"names":[],"mappings":"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"}