{"version":3,"file":"ScaffolderEntitiesProcessor.cjs.js","sources":["../../src/processor/ScaffolderEntitiesProcessor.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  getCompoundEntityRef,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n} from '@backstage/catalog-model';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  processingResult,\n} from '@backstage/plugin-catalog-node';\nimport { LocationSpec } from '@backstage/plugin-catalog-common';\nimport {\n  TemplateEntityV1beta3,\n  templateEntityV1beta3Validator,\n} from '@backstage/plugin-scaffolder-common';\n\n/**\n * Adds support for scaffolder specific entity kinds to the catalog.\n *\n * @public\n */\nexport class ScaffolderEntitiesProcessor implements CatalogProcessor {\n  getProcessorName(): string {\n    return 'ScaffolderEntitiesProcessor';\n  }\n\n  private readonly validators = [templateEntityV1beta3Validator];\n\n  async validateEntityKind(entity: Entity): Promise<boolean> {\n    for (const validator of this.validators) {\n      if (await validator.check(entity)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async postProcessEntity(\n    entity: Entity,\n    _location: LocationSpec,\n    emit: CatalogProcessorEmit,\n  ): Promise<Entity> {\n    const selfRef = getCompoundEntityRef(entity);\n\n    if (\n      entity.apiVersion === 'scaffolder.backstage.io/v1beta3' &&\n      entity.kind === 'Template'\n    ) {\n      const template = entity as TemplateEntityV1beta3;\n\n      const target = template.spec.owner;\n      if (target) {\n        const targetRef = parseEntityRef(target, {\n          defaultKind: 'Group',\n          defaultNamespace: selfRef.namespace,\n        });\n        emit(\n          processingResult.relation({\n            source: selfRef,\n            type: RELATION_OWNED_BY,\n            target: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n          }),\n        );\n        emit(\n          processingResult.relation({\n            source: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n            type: RELATION_OWNER_OF,\n            target: selfRef,\n          }),\n        );\n      }\n    }\n\n    return entity;\n  }\n}\n"],"names":["templateEntityV1beta3Validator","getCompoundEntityRef","parseEntityRef","processingResult","RELATION_OWNED_BY","RELATION_OWNER_OF"],"mappings":";;;;;;AAuCO,MAAM,2BAAA,CAAwD;AAAA,EACnE,gBAAA,GAA2B;AACzB,IAAA,OAAO,6BAAA;AAAA,EACT;AAAA,EAEiB,UAAA,GAAa,CAACA,qDAA8B,CAAA;AAAA,EAE7D,MAAM,mBAAmB,MAAA,EAAkC;AACzD,IAAA,KAAA,MAAW,SAAA,IAAa,KAAK,UAAA,EAAY;AACvC,MAAA,IAAI,MAAM,SAAA,CAAU,KAAA,CAAM,MAAM,CAAA,EAAG;AACjC,QAAA,OAAO,IAAA;AAAA,MACT;AAAA,IACF;AAEA,IAAA,OAAO,KAAA;AAAA,EACT;AAAA,EAEA,MAAM,iBAAA,CACJ,MAAA,EACA,SAAA,EACA,IAAA,EACiB;AACjB,IAAA,MAAM,OAAA,GAAUC,kCAAqB,MAAM,CAAA;AAE3C,IAAA,IACE,MAAA,CAAO,UAAA,KAAe,iCAAA,IACtB,MAAA,CAAO,SAAS,UAAA,EAChB;AACA,MAAA,MAAM,QAAA,GAAW,MAAA;AAEjB,MAAA,MAAM,MAAA,GAAS,SAAS,IAAA,CAAK,KAAA;AAC7B,MAAA,IAAI,MAAA,EAAQ;AACV,QAAA,MAAM,SAAA,GAAYC,4BAAe,MAAA,EAAQ;AAAA,UACvC,WAAA,EAAa,OAAA;AAAA,UACb,kBAAkB,OAAA,CAAQ;AAAA,SAC3B,CAAA;AACD,QAAA,IAAA;AAAA,UACEC,mCAAiB,QAAA,CAAS;AAAA,YACxB,MAAA,EAAQ,OAAA;AAAA,YACR,IAAA,EAAMC,8BAAA;AAAA,YACN,MAAA,EAAQ;AAAA,cACN,MAAM,SAAA,CAAU,IAAA;AAAA,cAChB,WAAW,SAAA,CAAU,SAAA;AAAA,cACrB,MAAM,SAAA,CAAU;AAAA;AAClB,WACD;AAAA,SACH;AACA,QAAA,IAAA;AAAA,UACED,mCAAiB,QAAA,CAAS;AAAA,YACxB,MAAA,EAAQ;AAAA,cACN,MAAM,SAAA,CAAU,IAAA;AAAA,cAChB,WAAW,SAAA,CAAU,SAAA;AAAA,cACrB,MAAM,SAAA,CAAU;AAAA,aAClB;AAAA,YACA,IAAA,EAAME,8BAAA;AAAA,YACN,MAAA,EAAQ;AAAA,WACT;AAAA,SACH;AAAA,MACF;AAAA,IACF;AAEA,IAAA,OAAO,MAAA;AAAA,EACT;AACF;;;;"}