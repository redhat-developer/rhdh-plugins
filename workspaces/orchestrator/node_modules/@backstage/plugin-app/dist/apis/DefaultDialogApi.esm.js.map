{"version":3,"file":"DefaultDialogApi.esm.js","sources":["../../src/apis/DefaultDialogApi.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DialogApi, DialogApiDialog } from '@backstage/frontend-plugin-api';\n\nexport type OnShowDialog = (options: {\n  component: (props: { dialog: DialogApiDialog<any> }) => React.JSX.Element;\n  modal: boolean;\n}) => DialogApiDialog<unknown>;\n\n/**\n * Default implementation for the {@link DialogApi}.\n * @internal\n */\nexport class DefaultDialogApi implements DialogApi {\n  #onShow?: OnShowDialog;\n\n  show<TResult = void>(\n    elementOrComponent:\n      | JSX.Element\n      | ((props: {\n          dialog: DialogApiDialog<TResult | undefined>;\n        }) => JSX.Element),\n  ): DialogApiDialog<TResult | undefined> {\n    if (!this.#onShow) {\n      throw new Error('Dialog API has not been connected');\n    }\n    return this.#onShow({\n      component:\n        typeof elementOrComponent === 'function'\n          ? elementOrComponent\n          : () => elementOrComponent,\n      modal: false,\n    }) as DialogApiDialog<TResult | undefined>;\n  }\n\n  showModal<TResult = void>(\n    elementOrComponent:\n      | JSX.Element\n      | ((props: { dialog: DialogApiDialog<TResult> }) => JSX.Element),\n  ): DialogApiDialog<TResult> {\n    if (!this.#onShow) {\n      throw new Error('Dialog API has not been connected');\n    }\n    return this.#onShow({\n      component:\n        typeof elementOrComponent === 'function'\n          ? elementOrComponent\n          : () => elementOrComponent,\n      modal: true,\n    }) as DialogApiDialog<TResult>;\n  }\n\n  connect(onShow: OnShowDialog): void {\n    this.#onShow = onShow;\n  }\n}\n"],"names":[],"mappings":"AA2BO,MAAM,gBAAA,CAAsC;AAAA,EACjD,OAAA;AAAA,EAEA,KACE,kBAAA,EAKsC;AACtC,IAAA,IAAI,CAAC,KAAK,OAAA,EAAS;AACjB,MAAA,MAAM,IAAI,MAAM,mCAAmC,CAAA;AAAA,IACrD;AACA,IAAA,OAAO,KAAK,OAAA,CAAQ;AAAA,MAClB,SAAA,EACE,OAAO,kBAAA,KAAuB,UAAA,GAC1B,qBACA,MAAM,kBAAA;AAAA,MACZ,KAAA,EAAO;AAAA,KACR,CAAA;AAAA,EACH;AAAA,EAEA,UACE,kBAAA,EAG0B;AAC1B,IAAA,IAAI,CAAC,KAAK,OAAA,EAAS;AACjB,MAAA,MAAM,IAAI,MAAM,mCAAmC,CAAA;AAAA,IACrD;AACA,IAAA,OAAO,KAAK,OAAA,CAAQ;AAAA,MAClB,SAAA,EACE,OAAO,kBAAA,KAAuB,UAAA,GAC1B,qBACA,MAAM,kBAAA;AAAA,MACZ,KAAA,EAAO;AAAA,KACR,CAAA;AAAA,EACH;AAAA,EAEA,QAAQ,MAAA,EAA4B;AAClC,IAAA,IAAA,CAAK,OAAA,GAAU,MAAA;AAAA,EACjB;AACF;;;;"}