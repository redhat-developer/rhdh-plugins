{"version":3,"file":"appModulePublicSignIn.esm.js","sources":["../../src/alpha/appModulePublicSignIn.tsx"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport appPlugin from '@backstage/plugin-app';\nimport { useAsync, useMountEffect } from '@react-hookz/web';\nimport {\n  coreExtensionData,\n  createFrontendModule,\n  identityApiRef,\n  useApi,\n} from '@backstage/frontend-plugin-api';\n\n// This is a copy of the CookieAuthRedirect component from the auth-react\n// plugin, to avoid a dependency on that package. Long-term we want this to be\n// the only implementation and remove the one in auth-react once the old frontend system is gone.\n\n// TODO(Rugvip): Should this be part of the app plugin instead? since it owns the backend part of it.\n\n/** @internal */\nexport function InternalCookieAuthRedirect() {\n  const identityApi = useApi(identityApiRef);\n\n  const [state, actions] = useAsync(async () => {\n    const { token } = await identityApi.getCredentials();\n    if (!token) {\n      throw new Error('Expected Backstage token in sign-in response');\n    }\n    return token;\n  });\n\n  useMountEffect(actions.execute);\n\n  if (state.status === 'error' && state.error) {\n    return <>An error occurred: {state.error.message}</>;\n  }\n\n  if (state.status === 'success' && state.result) {\n    return (\n      <form\n        ref={form => form?.submit()}\n        action={window.location.href}\n        method=\"POST\"\n        style={{ visibility: 'hidden' }}\n      >\n        <input type=\"hidden\" name=\"type\" value=\"sign-in\" />\n        <input type=\"hidden\" name=\"token\" value={state.result} />\n        <input type=\"submit\" value=\"Continue\" />\n      </form>\n    );\n  }\n\n  return null;\n}\n\n/**\n * This module is intended for use in public sign-in page apps, in the\n * `index-public-experimental.tsx` file.\n *\n * @remarks\n *\n * This module is used to enable the public sign-in flow where the build output\n * is split into one small publicly accessible app, and the full app protected\n * by auth.\n *\n * This module overrides the `app/layout` extension, which means that most\n * extension typically installed in an app will be ignored. However, you can\n * still for example install API and root element extensions.\n *\n * A typical setup of this app will only install a custom sign-in page.\n *\n * @example\n *\n *#### In `index-public-experimental.tsx`\n *\n *```ts\n *import { createApp } from '@backstage/frontend-defaults\n *import { appModulePublicSignIn } from '@backstage/plugin-app/alpha';\n *import { appModuleSignInPage } from './appModuleSignInPage';\n *\n *const app = createApp({\n *  features: [appModuleSignInPage, appModulePublicSignIn],\n *});\n *```\n *\n *#### In `appModuleSignInPage.tsx`\n *\n *```tsx\n *import { createFrontendModule, SignInPageBlueprint } from '@backstage/frontend-plugin-api';\n *\n *export const appModuleSignInPage = createFrontendModule({\n *  pluginId: 'app',\n *  extensions: [\n *    SignInPageBlueprint.make({\n *      params: {\n *        ...\n *      }\n *    }),\n *  ],\n *})\n *```\n *\n * @alpha\n */\nexport const appModulePublicSignIn = createFrontendModule({\n  pluginId: 'app',\n  extensions: [\n    appPlugin.getExtension('app/layout').override({\n      factory: () => [\n        coreExtensionData.reactElement(<InternalCookieAuthRedirect />),\n      ],\n    }),\n  ],\n});\n"],"names":[],"mappings":";;;;;AAgCO,SAAS,0BAAA,GAA6B;AAC3C,EAAA,MAAM,WAAA,GAAc,OAAO,cAAc,CAAA;AAEzC,EAAA,MAAM,CAAC,KAAA,EAAO,OAAO,CAAA,GAAI,SAAS,YAAY;AAC5C,IAAA,MAAM,EAAE,KAAA,EAAM,GAAI,MAAM,YAAY,cAAA,EAAe;AACnD,IAAA,IAAI,CAAC,KAAA,EAAO;AACV,MAAA,MAAM,IAAI,MAAM,8CAA8C,CAAA;AAAA,IAChE;AACA,IAAA,OAAO,KAAA;AAAA,EACT,CAAC,CAAA;AAED,EAAA,cAAA,CAAe,QAAQ,OAAO,CAAA;AAE9B,EAAA,IAAI,KAAA,CAAM,MAAA,KAAW,OAAA,IAAW,KAAA,CAAM,KAAA,EAAO;AAC3C,IAAA,uBAAO,IAAA,CAAA,QAAA,EAAA,EAAE,QAAA,EAAA;AAAA,MAAA,qBAAA;AAAA,MAAoB,MAAM,KAAA,CAAM;AAAA,KAAA,EAAQ,CAAA;AAAA,EACnD;AAEA,EAAA,IAAI,KAAA,CAAM,MAAA,KAAW,SAAA,IAAa,KAAA,CAAM,MAAA,EAAQ;AAC9C,IAAA,uBACE,IAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,GAAA,EAAK,CAAA,IAAA,KAAQ,IAAA,EAAM,MAAA,EAAO;AAAA,QAC1B,MAAA,EAAQ,OAAO,QAAA,CAAS,IAAA;AAAA,QACxB,MAAA,EAAO,MAAA;AAAA,QACP,KAAA,EAAO,EAAE,UAAA,EAAY,QAAA,EAAS;AAAA,QAE9B,QAAA,EAAA;AAAA,0BAAA,GAAA,CAAC,WAAM,IAAA,EAAK,QAAA,EAAS,IAAA,EAAK,MAAA,EAAO,OAAM,SAAA,EAAU,CAAA;AAAA,0BACjD,GAAA,CAAC,WAAM,IAAA,EAAK,QAAA,EAAS,MAAK,OAAA,EAAQ,KAAA,EAAO,MAAM,MAAA,EAAQ,CAAA;AAAA,0BACvD,GAAA,CAAC,OAAA,EAAA,EAAM,IAAA,EAAK,QAAA,EAAS,OAAM,UAAA,EAAW;AAAA;AAAA;AAAA,KACxC;AAAA,EAEJ;AAEA,EAAA,OAAO,IAAA;AACT;AAmDO,MAAM,wBAAwB,oBAAA,CAAqB;AAAA,EACxD,QAAA,EAAU,KAAA;AAAA,EACV,UAAA,EAAY;AAAA,IACV,SAAA,CAAU,YAAA,CAAa,YAAY,CAAA,CAAE,QAAA,CAAS;AAAA,MAC5C,SAAS,MAAM;AAAA,QACb,iBAAA,CAAkB,YAAA,iBAAa,GAAA,CAAC,0BAAA,EAAA,EAA2B,CAAE;AAAA;AAC/D,KACD;AAAA;AAEL,CAAC;;;;"}