import * as _backstage_frontend_plugin_api from '@backstage/frontend-plugin-api';

/**
 * This module is intended for use in public sign-in page apps, in the
 * `index-public-experimental.tsx` file.
 *
 * @remarks
 *
 * This module is used to enable the public sign-in flow where the build output
 * is split into one small publicly accessible app, and the full app protected
 * by auth.
 *
 * This module overrides the `app/layout` extension, which means that most
 * extension typically installed in an app will be ignored. However, you can
 * still for example install API and root element extensions.
 *
 * A typical setup of this app will only install a custom sign-in page.
 *
 * @example
 *
 *#### In `index-public-experimental.tsx`
 *
 *```ts
 *import { createApp } from '@backstage/frontend-defaults
 *import { appModulePublicSignIn } from '@backstage/plugin-app/alpha';
 *import { appModuleSignInPage } from './appModuleSignInPage';
 *
 *const app = createApp({
 *  features: [appModuleSignInPage, appModulePublicSignIn],
 *});
 *```
 *
 *#### In `appModuleSignInPage.tsx`
 *
 *```tsx
 *import { createFrontendModule, SignInPageBlueprint } from '@backstage/frontend-plugin-api';
 *
 *export const appModuleSignInPage = createFrontendModule({
 *  pluginId: 'app',
 *  extensions: [
 *    SignInPageBlueprint.make({
 *      params: {
 *        ...
 *      }
 *    }),
 *  ],
 *})
 *```
 *
 * @alpha
 */
declare const appModulePublicSignIn: _backstage_frontend_plugin_api.FrontendModule;

export { appModulePublicSignIn };
