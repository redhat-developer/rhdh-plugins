{"version":3,"file":"WebStorage.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/StorageApi/WebStorage.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StorageApi,\n  StorageValueSnapshot,\n  ErrorApi,\n} from '@backstage/core-plugin-api';\nimport { JsonValue, Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\n\nexport const buckets = new Map<string, WebStorage>();\n\n/**\n * An implementation of the storage API, that uses the browser's local storage.\n *\n * @public\n */\nexport class WebStorage implements StorageApi {\n  constructor(\n    private readonly namespace: string,\n    private readonly errorApi: ErrorApi,\n  ) {}\n\n  private static hasSubscribed = false;\n\n  static create(options: {\n    errorApi: ErrorApi;\n    namespace?: string;\n  }): WebStorage {\n    return new WebStorage(options.namespace ?? '', options.errorApi);\n  }\n\n  private static addStorageEventListener() {\n    window.addEventListener('storage', event => {\n      for (const [bucketPath, webStorage] of buckets.entries()) {\n        if (event.key?.startsWith(bucketPath)) {\n          webStorage.handleStorageChange(event.key);\n        }\n      }\n    });\n  }\n\n  get<T>(key: string): T | undefined {\n    return this.snapshot(key).value as T | undefined;\n  }\n\n  snapshot<T extends JsonValue>(key: string): StorageValueSnapshot<T> {\n    let value = undefined;\n    let presence: 'present' | 'absent' = 'absent';\n    try {\n      const item = localStorage.getItem(this.getKeyName(key));\n      if (item) {\n        value = JSON.parse(item, (_key, val) => {\n          if (typeof val === 'object' && val !== null) {\n            Object.freeze(val);\n          }\n          return val;\n        });\n        presence = 'present';\n      }\n    } catch (e) {\n      this.errorApi.post(\n        new Error(`Error when parsing JSON config from storage for: ${key}`),\n      );\n    }\n    return { key, value, presence };\n  }\n\n  forBucket(name: string): WebStorage {\n    const bucketPath = `${this.namespace}/${name}`;\n    if (!buckets.has(bucketPath)) {\n      buckets.set(bucketPath, new WebStorage(bucketPath, this.errorApi));\n    }\n    return buckets.get(bucketPath)!;\n  }\n\n  async set<T>(key: string, data: T): Promise<void> {\n    localStorage.setItem(this.getKeyName(key), JSON.stringify(data));\n    this.notifyChanges(key);\n  }\n\n  async remove(key: string): Promise<void> {\n    localStorage.removeItem(this.getKeyName(key));\n    this.notifyChanges(key);\n  }\n\n  observe$<T extends JsonValue>(\n    key: string,\n  ): Observable<StorageValueSnapshot<T>> {\n    if (!WebStorage.hasSubscribed) {\n      WebStorage.addStorageEventListener();\n      WebStorage.hasSubscribed = true;\n    }\n    return this.observable.filter(({ key: messageKey }) => messageKey === key);\n  }\n\n  private handleStorageChange(eventKey: StorageEvent['key']) {\n    if (!eventKey?.startsWith(this.namespace)) {\n      return;\n    }\n    // Grab the part of this key that is local to this bucket\n    const trimmedKey = eventKey?.slice(`${this.namespace}/`.length);\n\n    // If the key still contains a slash, it means it's a sub-bucket\n    if (!trimmedKey.includes('/')) {\n      this.notifyChanges(decodeURIComponent(trimmedKey));\n    }\n  }\n\n  private getKeyName(key: string) {\n    return `${this.namespace}/${encodeURIComponent(key)}`;\n  }\n\n  private notifyChanges(key: string) {\n    const snapshot = this.snapshot(key);\n    for (const subscription of this.subscribers) {\n      subscription.next(snapshot);\n    }\n  }\n\n  private subscribers = new Set<\n    ZenObservable.SubscriptionObserver<StorageValueSnapshot<JsonValue>>\n  >();\n\n  private readonly observable = new ObservableImpl<\n    StorageValueSnapshot<JsonValue>\n  >(subscriber => {\n    this.subscribers.add(subscriber);\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  });\n}\n"],"names":[],"mappings":"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"}