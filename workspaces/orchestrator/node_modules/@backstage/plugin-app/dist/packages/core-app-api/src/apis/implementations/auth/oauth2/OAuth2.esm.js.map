{"version":3,"file":"OAuth2.esm.js","sources":["../../../../../../../../../../packages/core-app-api/src/apis/implementations/auth/oauth2/OAuth2.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DefaultAuthConnector } from '../../../../lib/AuthConnector';\nimport { RefreshingAuthSessionManager } from '../../../../lib/AuthSessionManager';\nimport { SessionManager } from '../../../../lib/AuthSessionManager/types';\nimport {\n  AuthRequestOptions,\n  BackstageIdentityApi,\n  BackstageIdentityResponse,\n  BackstageUserIdentity,\n  OAuthApi,\n  OpenIdConnectApi,\n  ProfileInfo,\n  ProfileInfoApi,\n  SessionApi,\n  SessionState,\n} from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\nimport {\n  OAuth2CreateOptions,\n  OAuth2CreateOptionsWithAuthConnector,\n  OAuth2Session,\n} from './types';\n\nconst DEFAULT_PROVIDER = {\n  id: 'oauth2',\n  title: 'Your Identity Provider',\n  icon: () => null,\n};\n\nexport type OAuth2Response = {\n  providerInfo: {\n    accessToken: string;\n    idToken: string;\n    scope: string;\n    expiresInSeconds?: number;\n  };\n  profile: ProfileInfo;\n  backstageIdentity: {\n    token: string;\n    expiresInSeconds?: number;\n    identity: BackstageUserIdentity;\n  };\n};\n\n/**\n * Implements a generic OAuth2 flow for auth.\n *\n * @public\n */\nexport default class OAuth2\n  implements\n    OAuthApi,\n    OpenIdConnectApi,\n    ProfileInfoApi,\n    BackstageIdentityApi,\n    SessionApi\n{\n  private static createAuthConnector(\n    options: OAuth2CreateOptions | OAuth2CreateOptionsWithAuthConnector,\n  ) {\n    if ('authConnector' in options) {\n      return options.authConnector;\n    }\n    const {\n      scopeTransform = x => x,\n      configApi,\n      discoveryApi,\n      environment = 'development',\n      provider = DEFAULT_PROVIDER,\n      oauthRequestApi,\n      popupOptions,\n    } = options;\n\n    return new DefaultAuthConnector({\n      configApi,\n      discoveryApi,\n      environment,\n      provider,\n      oauthRequestApi: oauthRequestApi,\n      sessionTransform({\n        backstageIdentity,\n        ...res\n      }: OAuth2Response): OAuth2Session {\n        const session: OAuth2Session = {\n          ...res,\n          providerInfo: {\n            idToken: res.providerInfo.idToken,\n            accessToken: res.providerInfo.accessToken,\n            scopes: OAuth2.normalizeScopes(res.providerInfo.scope, {\n              scopeTransform,\n            }),\n            expiresAt: res.providerInfo.expiresInSeconds\n              ? new Date(Date.now() + res.providerInfo.expiresInSeconds * 1000)\n              : undefined,\n          },\n        };\n        if (backstageIdentity) {\n          session.backstageIdentity = {\n            token: backstageIdentity.token,\n            identity: backstageIdentity.identity,\n            expiresAt: backstageIdentity.expiresInSeconds\n              ? new Date(Date.now() + backstageIdentity.expiresInSeconds * 1000)\n              : undefined,\n          };\n        }\n        return session;\n      },\n      popupOptions,\n    });\n  }\n\n  static create(\n    options: OAuth2CreateOptions | OAuth2CreateOptionsWithAuthConnector,\n  ) {\n    const { defaultScopes = [], scopeTransform = x => x } = options;\n\n    const connector = OAuth2.createAuthConnector(options);\n\n    const sessionManager = new RefreshingAuthSessionManager({\n      connector,\n      defaultScopes: new Set(defaultScopes),\n      sessionScopes: (session: OAuth2Session) => session.providerInfo.scopes,\n      sessionShouldRefresh: (session: OAuth2Session) => {\n        // TODO(Rugvip): Optimize to use separate checks for provider vs backstage session expiration\n        let min = Infinity;\n        if (session.providerInfo?.expiresAt) {\n          min = Math.min(\n            min,\n            (session.providerInfo.expiresAt.getTime() - Date.now()) / 1000,\n          );\n        }\n        if (session.backstageIdentity?.expiresAt) {\n          min = Math.min(\n            min,\n            (session.backstageIdentity.expiresAt.getTime() - Date.now()) / 1000,\n          );\n        }\n        return min < 60 * 3;\n      },\n    });\n\n    return new OAuth2({ sessionManager, scopeTransform });\n  }\n\n  private readonly sessionManager: SessionManager<OAuth2Session>;\n  private readonly scopeTransform: (scopes: string[]) => string[];\n\n  private constructor(options: {\n    sessionManager: SessionManager<OAuth2Session>;\n    scopeTransform: (scopes: string[]) => string[];\n  }) {\n    this.sessionManager = options.sessionManager;\n    this.scopeTransform = options.scopeTransform;\n  }\n\n  async signIn() {\n    await this.getAccessToken();\n  }\n\n  async signOut() {\n    await this.sessionManager.removeSession();\n  }\n\n  sessionState$(): Observable<SessionState> {\n    return this.sessionManager.sessionState$();\n  }\n\n  async getAccessToken(\n    scope?: string | string[],\n    options?: AuthRequestOptions,\n  ) {\n    const normalizedScopes = OAuth2.normalizeScopes(scope, {\n      scopeTransform: this.scopeTransform,\n    });\n    const session = await this.sessionManager.getSession({\n      ...options,\n      scopes: normalizedScopes,\n    });\n    return session?.providerInfo.accessToken ?? '';\n  }\n\n  async getIdToken(options: AuthRequestOptions = {}) {\n    const session = await this.sessionManager.getSession({\n      ...options,\n      scopes: new Set(['openid']),\n    });\n    return session?.providerInfo.idToken ?? '';\n  }\n\n  async getBackstageIdentity(\n    options: AuthRequestOptions = {},\n  ): Promise<BackstageIdentityResponse | undefined> {\n    const session = await this.sessionManager.getSession(options);\n    return session?.backstageIdentity;\n  }\n\n  async getProfile(options: AuthRequestOptions = {}) {\n    const session = await this.sessionManager.getSession(options);\n    return session?.profile;\n  }\n\n  /**\n   * @public\n   */\n  public static normalizeScopes(\n    scopes?: string | string[],\n    options?: { scopeTransform: (scopes: string[]) => string[] },\n  ): Set<string> {\n    if (!scopes) {\n      return new Set();\n    }\n\n    const scopeList = Array.isArray(scopes)\n      ? scopes\n      : scopes.split(/[\\s|,]/).filter(Boolean);\n\n    const transformedScopes = options\n      ? options.scopeTransform(scopeList)\n      : scopeList;\n\n    return new Set(transformedScopes);\n  }\n}\n"],"names":[],"mappings":"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"}