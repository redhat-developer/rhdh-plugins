{"version":3,"file":"IdentityAuthInjectorFetchMiddleware.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/FetchApi/IdentityAuthInjectorFetchMiddleware.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { IdentityApi } from '@backstage/core-plugin-api';\nimport { FetchMiddleware } from './types';\n\n/**\n * A fetch middleware, which injects a Backstage token header when the user is\n * signed in.\n */\nexport class IdentityAuthInjectorFetchMiddleware implements FetchMiddleware {\n  static create(options: {\n    identityApi: IdentityApi;\n    config?: Config;\n    urlPrefixAllowlist?: string[];\n    allowUrl?: (url: string) => boolean;\n    header?: {\n      name: string;\n      value: (backstageToken: string) => string;\n    };\n  }): IdentityAuthInjectorFetchMiddleware {\n    const matcher = buildMatcher(options);\n    const headerName = options.header?.name || 'authorization';\n    const headerValue = options.header?.value || (token => `Bearer ${token}`);\n\n    return new IdentityAuthInjectorFetchMiddleware(\n      options.identityApi,\n      matcher,\n      headerName,\n      headerValue,\n    );\n  }\n\n  /**\n   * Returns an array of plugin URL prefixes derived from the static `discovery`\n   * configuration, to be used as `urlPrefixAllowlist` option of {@link create}.\n   */\n  static getDiscoveryUrlPrefixes(config: Config): string[] {\n    const endpointConfigs =\n      config.getOptionalConfigArray('discovery.endpoints') || [];\n    return endpointConfigs.flatMap(c => {\n      const target =\n        typeof c.get('target') === 'object'\n          ? c.getString('target.external')\n          : c.getString('target');\n      const plugins = c.getStringArray('plugins');\n      return plugins.map(pluginId =>\n        target.replace(/\\{\\{\\s*pluginId\\s*\\}\\}/g, pluginId),\n      );\n    });\n  }\n\n  constructor(\n    public readonly identityApi: IdentityApi,\n    public readonly allowUrl: (url: string) => boolean,\n    public readonly headerName: string,\n    public readonly headerValue: (pluginId: string) => string,\n  ) {}\n\n  apply(next: typeof fetch): typeof fetch {\n    return async (input, init) => {\n      // Skip this middleware if the header already exists, or if the URL\n      // doesn't match any of the allowlist items, or if there was no token.\n      // NOTE(freben): The \"as any\" casts here and below are because of subtle\n      // undici type differences that happened in a node types bump. Those are\n      // immaterial to the code at hand at runtime, as the global fetch and\n      // Request are always taken from the same place.\n      const request = new Request(input as any, init);\n      const { token } = await this.identityApi.getCredentials();\n      if (\n        request.headers.get(this.headerName) ||\n        typeof token !== 'string' ||\n        !token ||\n        !this.allowUrl(request.url)\n      ) {\n        return next(input as any, init);\n      }\n\n      request.headers.set(this.headerName, this.headerValue(token));\n      return next(request);\n    };\n  }\n}\n\nfunction buildMatcher(options: {\n  config?: Config;\n  urlPrefixAllowlist?: string[];\n  allowUrl?: (url: string) => boolean;\n}): (url: string) => boolean {\n  if (options.allowUrl) {\n    return options.allowUrl;\n  } else if (options.urlPrefixAllowlist) {\n    return buildPrefixMatcher(options.urlPrefixAllowlist);\n  } else if (options.config) {\n    return buildPrefixMatcher([\n      options.config.getString('backend.baseUrl'),\n      ...IdentityAuthInjectorFetchMiddleware.getDiscoveryUrlPrefixes(\n        options.config,\n      ),\n    ]);\n  }\n  return () => false;\n}\n\nfunction buildPrefixMatcher(prefixes: string[]): (url: string) => boolean {\n  const trimmedPrefixes = prefixes.map(prefix => prefix.replace(/\\/$/, ''));\n  return url =>\n    trimmedPrefixes.some(\n      prefix => url === prefix || url.startsWith(`${prefix}/`),\n    );\n}\n"],"names":[],"mappings":"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"}