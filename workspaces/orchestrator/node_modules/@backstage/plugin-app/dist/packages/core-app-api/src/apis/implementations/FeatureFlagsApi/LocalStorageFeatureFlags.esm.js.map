{"version":3,"file":"LocalStorageFeatureFlags.esm.js","sources":["../../../../../../../../../packages/core-app-api/src/apis/implementations/FeatureFlagsApi/LocalStorageFeatureFlags.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureFlagState,\n  FeatureFlagsApi,\n  FeatureFlag,\n  FeatureFlagsSaveOptions,\n} from '@backstage/core-plugin-api';\n\nexport function validateFlagName(name: string): void {\n  if (name.length < 3) {\n    throw new Error(\n      `The '${name}' feature flag must have a minimum length of three characters.`,\n    );\n  }\n\n  if (name.length > 150) {\n    throw new Error(\n      `The '${name}' feature flag must not exceed 150 characters.`,\n    );\n  }\n\n  if (!name.match(/^[a-z]+[a-z0-9-]+$/)) {\n    throw new Error(\n      `The '${name}' feature flag must start with a lowercase letter and only contain lowercase letters, numbers and hyphens. ` +\n        'Examples: feature-flag-one, alpha, release-2020',\n    );\n  }\n}\n\n/**\n * A feature flags implementation that stores the flags in the browser's local\n * storage.\n *\n * @public\n */\nexport class LocalStorageFeatureFlags implements FeatureFlagsApi {\n  private registeredFeatureFlags: FeatureFlag[] = [];\n  private flags?: Map<string, FeatureFlagState>;\n\n  registerFlag(flag: FeatureFlag) {\n    validateFlagName(flag.name);\n    this.registeredFeatureFlags.push(flag);\n  }\n\n  getRegisteredFlags(): FeatureFlag[] {\n    return this.registeredFeatureFlags.slice();\n  }\n\n  isActive(name: string): boolean {\n    if (!this.flags) {\n      this.flags = this.load();\n    }\n    return this.flags.get(name) === FeatureFlagState.Active;\n  }\n\n  save(options: FeatureFlagsSaveOptions): void {\n    if (!this.flags) {\n      this.flags = this.load();\n    }\n    if (!options.merge) {\n      this.flags.clear();\n    }\n    for (const [name, state] of Object.entries(options.states)) {\n      this.flags.set(name, state);\n    }\n\n    const enabled = Array.from(this.flags.entries()).filter(\n      ([, state]) => state === FeatureFlagState.Active,\n    );\n    window.localStorage.setItem(\n      'featureFlags',\n      JSON.stringify(Object.fromEntries(enabled)),\n    );\n  }\n\n  private load(): Map<string, FeatureFlagState> {\n    try {\n      const jsonStr = window.localStorage.getItem('featureFlags');\n      if (!jsonStr) {\n        return new Map();\n      }\n      const json = JSON.parse(jsonStr) as unknown;\n      if (typeof json !== 'object' || json === null || Array.isArray(json)) {\n        return new Map();\n      }\n\n      const entries = Object.entries(json).filter(([name, value]) => {\n        validateFlagName(name);\n        return value === FeatureFlagState.Active;\n      });\n\n      return new Map(entries);\n    } catch {\n      return new Map();\n    }\n  }\n}\n"],"names":[],"mappings":"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"}