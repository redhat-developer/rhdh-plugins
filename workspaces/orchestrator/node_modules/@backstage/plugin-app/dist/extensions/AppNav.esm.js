import { jsx } from 'react/jsx-runtime';
import { createExtension, coreExtensionData, createExtensionInput, NavContentBlueprint, NavItemBlueprint, useApi, routeResolutionApiRef } from '@backstage/frontend-plugin-api';
import { Sidebar, SidebarItem } from '@backstage/core-components';
import { useMemo } from 'react';

function DefaultNavContent(props) {
  return /* @__PURE__ */ jsx(Sidebar, { children: props.items.map((item, index) => /* @__PURE__ */ jsx(
    SidebarItem,
    {
      to: item.to,
      icon: item.icon,
      text: item.text
    },
    index
  )) });
}
function NavContentRenderer(props) {
  const routeResolutionApi = useApi(routeResolutionApiRef);
  const items = useMemo(() => {
    return props.items.flatMap((item) => {
      const link = routeResolutionApi.resolve(item.routeRef);
      if (!link) {
        console.warn(
          `NavItemBlueprint: unable to resolve route ref ${item.routeRef}`
        );
        return [];
      }
      return [
        {
          to: link(),
          text: item.title,
          icon: item.icon,
          title: item.title,
          routeRef: item.routeRef
        }
      ];
    });
  }, [props.items, routeResolutionApi]);
  return /* @__PURE__ */ jsx(props.Content, { items });
}
const AppNav = createExtension({
  name: "nav",
  attachTo: { id: "app/layout", input: "nav" },
  inputs: {
    items: createExtensionInput([NavItemBlueprint.dataRefs.target]),
    content: createExtensionInput([NavContentBlueprint.dataRefs.component], {
      singleton: true,
      optional: true
    })
  },
  output: [coreExtensionData.reactElement],
  *factory({ inputs }) {
    const Content = inputs.content?.get(NavContentBlueprint.dataRefs.component) ?? DefaultNavContent;
    yield coreExtensionData.reactElement(
      /* @__PURE__ */ jsx(
        NavContentRenderer,
        {
          items: inputs.items.map(
            (item) => item.get(NavItemBlueprint.dataRefs.target)
          ),
          Content
        }
      )
    );
  }
});

export { AppNav };
//# sourceMappingURL=AppNav.esm.js.map
