{"version":3,"file":"SwappableComponentsApi.esm.js","sources":["../../src/extensions/SwappableComponentsApi.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SwappableComponentBlueprint,\n  createExtensionInput,\n  ApiBlueprint,\n  swappableComponentsApiRef,\n} from '@backstage/frontend-plugin-api';\nimport { DefaultSwappableComponentsApi } from '../apis/SwappableComponentsApi';\n\n/**\n * Contains the shareable components installed into the app.\n */\nexport const SwappableComponentsApi = ApiBlueprint.makeWithOverrides({\n  name: 'swappable-components',\n  inputs: {\n    components: createExtensionInput([\n      SwappableComponentBlueprint.dataRefs.component,\n    ]),\n  },\n  factory: (originalFactory, { inputs }) => {\n    return originalFactory(defineParams =>\n      defineParams({\n        api: swappableComponentsApiRef,\n        deps: {},\n        factory: () => {\n          const nonAppExtensions = inputs.components.filter(\n            i => i.node.spec.plugin?.id !== 'app',\n          );\n\n          if (nonAppExtensions.length > 0) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `SwappableComponents should only be installed as an extension in the app plugin. You can either use appPlugin.override(), or provide a module for the app-plugin with the extension there instead. Invalid extensions: ${nonAppExtensions\n                .map(i => i.node.spec.id)\n                .join(', ')}`,\n            );\n          }\n\n          const appExtensions = inputs.components.filter(\n            i => i.node.spec.plugin?.id === 'app',\n          );\n\n          return DefaultSwappableComponentsApi.fromComponents(\n            appExtensions.map(i =>\n              i.get(SwappableComponentBlueprint.dataRefs.component),\n            ),\n          );\n        },\n      }),\n    );\n  },\n});\n"],"names":[],"mappings":";;;AA2BO,MAAM,sBAAA,GAAyB,aAAa,iBAAA,CAAkB;AAAA,EACnE,IAAA,EAAM,sBAAA;AAAA,EACN,MAAA,EAAQ;AAAA,IACN,YAAY,oBAAA,CAAqB;AAAA,MAC/B,4BAA4B,QAAA,CAAS;AAAA,KACtC;AAAA,GACH;AAAA,EACA,OAAA,EAAS,CAAC,eAAA,EAAiB,EAAE,QAAO,KAAM;AACxC,IAAA,OAAO,eAAA;AAAA,MAAgB,kBACrB,YAAA,CAAa;AAAA,QACX,GAAA,EAAK,yBAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,SAAS,MAAM;AACb,UAAA,MAAM,gBAAA,GAAmB,OAAO,UAAA,CAAW,MAAA;AAAA,YACzC,CAAA,CAAA,KAAK,CAAA,CAAE,IAAA,CAAK,IAAA,CAAK,QAAQ,EAAA,KAAO;AAAA,WAClC;AAEA,UAAA,IAAI,gBAAA,CAAiB,SAAS,CAAA,EAAG;AAE/B,YAAA,OAAA,CAAQ,IAAA;AAAA,cACN,CAAA,sNAAA,EAAyN,gBAAA,CACtN,GAAA,CAAI,CAAA,CAAA,KAAK,CAAA,CAAE,IAAA,CAAK,IAAA,CAAK,EAAE,CAAA,CACvB,IAAA,CAAK,IAAI,CAAC,CAAA;AAAA,aACf;AAAA,UACF;AAEA,UAAA,MAAM,aAAA,GAAgB,OAAO,UAAA,CAAW,MAAA;AAAA,YACtC,CAAA,CAAA,KAAK,CAAA,CAAE,IAAA,CAAK,IAAA,CAAK,QAAQ,EAAA,KAAO;AAAA,WAClC;AAEA,UAAA,OAAO,6BAAA,CAA8B,cAAA;AAAA,YACnC,aAAA,CAAc,GAAA;AAAA,cAAI,CAAA,CAAA,KAChB,CAAA,CAAE,GAAA,CAAI,2BAAA,CAA4B,SAAS,SAAS;AAAA;AACtD,WACF;AAAA,QACF;AAAA,OACD;AAAA,KACH;AAAA,EACF;AACF,CAAC;;;;"}