{"version":3,"file":"AppThemeApi.esm.js","sources":["../../src/extensions/AppThemeApi.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UnifiedThemeProvider,\n  themes as builtinThemes,\n} from '@backstage/theme';\nimport DarkIcon from '@material-ui/icons/Brightness2';\nimport LightIcon from '@material-ui/icons/WbSunny';\nimport {\n  createExtensionInput,\n  ThemeBlueprint,\n  ApiBlueprint,\n  appThemeApiRef,\n} from '@backstage/frontend-plugin-api';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppThemeSelector } from '../../../../packages/core-app-api/src/apis/implementations';\n\n/**\n * Contains the themes installed into the app.\n */\nexport const AppThemeApi = ApiBlueprint.makeWithOverrides({\n  name: 'app-theme',\n  inputs: {\n    themes: createExtensionInput([ThemeBlueprint.dataRefs.theme], {\n      replaces: [{ id: 'app', input: 'themes' }],\n    }),\n  },\n  factory: (originalFactory, { inputs }) => {\n    return originalFactory(defineParams =>\n      defineParams({\n        api: appThemeApiRef,\n        deps: {},\n        factory: () =>\n          AppThemeSelector.createWithStorage(\n            inputs.themes.map(i => i.get(ThemeBlueprint.dataRefs.theme)),\n          ),\n      }),\n    );\n  },\n});\n\nexport const LightTheme = ThemeBlueprint.make({\n  name: 'light',\n  params: {\n    theme: {\n      id: 'light',\n      title: 'Light Theme',\n      variant: 'light',\n      icon: <LightIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={builtinThemes.light} children={children} />\n      ),\n    },\n  },\n});\n\nexport const DarkTheme = ThemeBlueprint.make({\n  name: 'dark',\n  params: {\n    theme: {\n      id: 'dark',\n      title: 'Dark Theme',\n      variant: 'dark',\n      icon: <DarkIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={builtinThemes.dark} children={children} />\n      ),\n    },\n  },\n});\n"],"names":["builtinThemes"],"mappings":";;;;;;;;;;;AAkCO,MAAM,WAAA,GAAc,aAAa,iBAAA,CAAkB;AAAA,EACxD,IAAA,EAAM,WAAA;AAAA,EACN,MAAA,EAAQ;AAAA,IACN,QAAQ,oBAAA,CAAqB,CAAC,cAAA,CAAe,QAAA,CAAS,KAAK,CAAA,EAAG;AAAA,MAC5D,UAAU,CAAC,EAAE,IAAI,KAAA,EAAO,KAAA,EAAO,UAAU;AAAA,KAC1C;AAAA,GACH;AAAA,EACA,OAAA,EAAS,CAAC,eAAA,EAAiB,EAAE,QAAO,KAAM;AACxC,IAAA,OAAO,eAAA;AAAA,MAAgB,kBACrB,YAAA,CAAa;AAAA,QACX,GAAA,EAAK,cAAA;AAAA,QACL,MAAM,EAAC;AAAA,QACP,OAAA,EAAS,MACP,gBAAA,CAAiB,iBAAA;AAAA,UACf,MAAA,CAAO,OAAO,GAAA,CAAI,CAAA,CAAA,KAAK,EAAE,GAAA,CAAI,cAAA,CAAe,QAAA,CAAS,KAAK,CAAC;AAAA;AAC7D,OACH;AAAA,KACH;AAAA,EACF;AACF,CAAC;AAEM,MAAM,UAAA,GAAa,eAAe,IAAA,CAAK;AAAA,EAC5C,IAAA,EAAM,OAAA;AAAA,EACN,MAAA,EAAQ;AAAA,IACN,KAAA,EAAO;AAAA,MACL,EAAA,EAAI,OAAA;AAAA,MACJ,KAAA,EAAO,aAAA;AAAA,MACP,OAAA,EAAS,OAAA;AAAA,MACT,IAAA,sBAAO,SAAA,EAAA,EAAU,CAAA;AAAA,MACjB,QAAA,EAAU,CAAC,EAAE,QAAA,EAAS,yBACnB,oBAAA,EAAA,EAAqB,KAAA,EAAOA,MAAA,CAAc,KAAA,EAAO,QAAA,EAAoB;AAAA;AAE1E;AAEJ,CAAC;AAEM,MAAM,SAAA,GAAY,eAAe,IAAA,CAAK;AAAA,EAC3C,IAAA,EAAM,MAAA;AAAA,EACN,MAAA,EAAQ;AAAA,IACN,KAAA,EAAO;AAAA,MACL,EAAA,EAAI,MAAA;AAAA,MACJ,KAAA,EAAO,YAAA;AAAA,MACP,OAAA,EAAS,MAAA;AAAA,MACT,IAAA,sBAAO,QAAA,EAAA,EAAS,CAAA;AAAA,MAChB,QAAA,EAAU,CAAC,EAAE,QAAA,EAAS,yBACnB,oBAAA,EAAA,EAAqB,KAAA,EAAOA,MAAA,CAAc,IAAA,EAAM,QAAA,EAAoB;AAAA;AAEzE;AAEJ,CAAC;;;;"}