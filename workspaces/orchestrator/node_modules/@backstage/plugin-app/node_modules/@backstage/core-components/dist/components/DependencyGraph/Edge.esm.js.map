{"version":3,"file":"Edge.esm.js","sources":["../../../src/components/DependencyGraph/Edge.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useRef, useLayoutEffect, useMemo } from 'react';\nimport * as d3Shape from 'd3-shape';\nimport isFinite from 'lodash/isFinite';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { DependencyGraphTypes as Types } from './types';\nimport { ARROW_MARKER_ID, EDGE_TEST_ID, LABEL_TEST_ID } from './constants';\nimport { DefaultLabel } from './DefaultLabel';\nimport dagre from '@dagrejs/dagre';\n\n/* Based on: https://github.com/dagrejs/dagre/wiki#configuring-the-layout  */\nexport type EdgeProperties = {\n  label?: string;\n  width?: number;\n  height?: number;\n  labeloffset?: number;\n  labelpos?: Types.LabelPosition;\n  minlen?: number;\n  weight?: number;\n};\nexport type GraphEdge<T> = Types.DependencyEdge<T> &\n  dagre.GraphEdge &\n  EdgeProperties;\n\n/** @public */\nexport type DependencyGraphEdgeClassKey = 'path' | 'label';\n\nconst useStyles = makeStyles(\n  theme => ({\n    path: {\n      strokeWidth: 1.3,\n      stroke: theme.palette.textSubtle,\n      fill: 'none',\n      transition: `${theme.transitions.duration.shortest}ms`,\n    },\n    label: {\n      transition: `${theme.transitions.duration.shortest}ms`,\n    },\n  }),\n  { name: 'BackstageDependencyGraphEdge' },\n);\n\ntype EdgePoint = dagre.GraphEdge['points'][0];\n\n/** @public */\nexport type EdgeComponentProps<T = unknown> = {\n  id: dagre.Edge;\n  edge: GraphEdge<T>;\n  render?: Types.RenderLabelFunction<T>;\n  setEdge: (\n    id: dagre.Edge,\n    edge: Types.DependencyEdge<T>,\n  ) => dagre.graphlib.Graph<{}>;\n  curve: 'curveStepBefore' | 'curveMonotoneX';\n  showArrowHeads?: boolean;\n};\n\nconst renderDefault = (props: Types.RenderLabelProps<unknown>) => (\n  <DefaultLabel {...props} />\n);\n\nexport function Edge<EdgeData>({\n  render = renderDefault,\n  setEdge,\n  id,\n  edge,\n  curve,\n  showArrowHeads,\n}: EdgeComponentProps<EdgeData>) {\n  const { x = 0, y = 0, width, height, points } = edge;\n  const labelProps: Types.DependencyEdge<EdgeData> = edge;\n  const classes = useStyles();\n\n  const labelRef = useRef<SVGGElement>(null);\n\n  useLayoutEffect(() => {\n    // set the label width to the actual rendered width to properly layout graph\n    if (labelRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        labelRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setEdge(id, {\n          ...edge,\n          height: renderedHeight,\n          width: renderedWidth,\n        });\n      }\n    }\n  }, [edge, height, width, setEdge, id]);\n\n  let path: string = '';\n\n  const createPath = useMemo(\n    () =>\n      d3Shape\n        .line<EdgePoint>()\n        .x(d => d.x)\n        .y(d => d.y)\n        .curve(d3Shape[curve]),\n    [curve],\n  );\n\n  if (points) {\n    const finitePoints = points.filter(\n      (point: EdgePoint) => isFinite(point.x) && isFinite(point.y),\n    );\n    path = createPath(finitePoints) || '';\n  }\n\n  return (\n    <>\n      {path && (\n        <path\n          data-testid={EDGE_TEST_ID}\n          className={classes.path}\n          markerEnd={showArrowHeads ? `url(#${ARROW_MARKER_ID})` : undefined}\n          d={path}\n        />\n      )}\n      {labelProps.label ? (\n        <g\n          ref={labelRef}\n          data-testid={LABEL_TEST_ID}\n          className={classes.label}\n          transform={`translate(${x},${y})`}\n        >\n          {render({ edge: labelProps })}\n        </g>\n      ) : null}\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}