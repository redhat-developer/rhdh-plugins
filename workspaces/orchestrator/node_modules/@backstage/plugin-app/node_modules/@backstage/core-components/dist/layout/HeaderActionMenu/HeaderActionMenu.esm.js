import { jsxs, jsx } from 'react/jsx-runtime';
import { useState, useRef, Fragment } from 'react';
import IconButton from '@material-ui/core/IconButton';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import Popover from '@material-ui/core/Popover';
import MoreVert from '@material-ui/icons/MoreVert';
import { useTheme } from '@material-ui/core/styles';

const ActionItem = ({
  label,
  secondaryLabel,
  icon,
  disabled = false,
  onClick
}) => {
  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsxs(
    ListItem,
    {
      "data-testid": "header-action-item",
      disabled,
      button: true,
      onClick: (event) => {
        if (onClick) {
          onClick(event);
        }
      },
      children: [
        icon && /* @__PURE__ */ jsx(ListItemIcon, { children: icon }),
        /* @__PURE__ */ jsx(ListItemText, { primary: label, secondary: secondaryLabel })
      ]
    }
  ) });
};
function HeaderActionMenu(props) {
  const {
    palette: {
      common: { white }
    }
  } = useTheme();
  const { actionItems } = props;
  const [open, setOpen] = useState(false);
  const anchorElRef = useRef(null);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(
      IconButton,
      {
        onClick: () => setOpen(true),
        "data-testid": "header-action-menu",
        ref: anchorElRef,
        style: {
          color: white,
          height: 56,
          width: 56,
          marginRight: -4,
          padding: 0
        },
        children: /* @__PURE__ */ jsx(MoreVert, {})
      }
    ),
    /* @__PURE__ */ jsx(
      Popover,
      {
        open,
        anchorEl: anchorElRef.current,
        anchorOrigin: { horizontal: "right", vertical: "bottom" },
        transformOrigin: { horizontal: "right", vertical: "top" },
        onClose: () => setOpen(false),
        children: /* @__PURE__ */ jsx(List, { children: actionItems.map((actionItem, i) => {
          return /* @__PURE__ */ jsx(ActionItem, { ...actionItem }, `header-action-menu-${i}`);
        }) })
      }
    )
  ] });
}

export { HeaderActionMenu };
//# sourceMappingURL=HeaderActionMenu.esm.js.map
