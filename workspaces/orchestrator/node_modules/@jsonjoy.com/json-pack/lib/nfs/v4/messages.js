"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Nfsv4OpenDowngradeRequest = exports.Nfsv4OpenConfirmResponse = exports.Nfsv4OpenConfirmResOk = exports.Nfsv4OpenConfirmRequest = exports.Nfsv4OpenattrResponse = exports.Nfsv4OpenattrRequest = exports.Nfsv4OpenResponse = exports.Nfsv4OpenResOk = exports.Nfsv4OpenRequest = exports.Nfsv4NverifyResponse = exports.Nfsv4NverifyRequest = exports.Nfsv4LookuppResponse = exports.Nfsv4LookuppRequest = exports.Nfsv4LookupResponse = exports.Nfsv4LookupRequest = exports.Nfsv4LockuResponse = exports.Nfsv4LockuResOk = exports.Nfsv4LockuRequest = exports.Nfsv4LocktResponse = exports.Nfsv4LocktResDenied = exports.Nfsv4LocktRequest = exports.Nfsv4LockResponse = exports.Nfsv4LockResDenied = exports.Nfsv4LockResOk = exports.Nfsv4LockRequest = exports.Nfsv4LinkResponse = exports.Nfsv4LinkResOk = exports.Nfsv4LinkRequest = exports.Nfsv4GetfhResponse = exports.Nfsv4GetfhResOk = exports.Nfsv4GetfhRequest = exports.Nfsv4GetattrResponse = exports.Nfsv4GetattrResOk = exports.Nfsv4GetattrRequest = exports.Nfsv4DelegreturnResponse = exports.Nfsv4DelegreturnRequest = exports.Nfsv4DelegpurgeResponse = exports.Nfsv4DelegpurgeRequest = exports.Nfsv4CreateResponse = exports.Nfsv4CreateResOk = exports.Nfsv4CreateRequest = exports.Nfsv4CommitResponse = exports.Nfsv4CommitResOk = exports.Nfsv4CommitRequest = exports.Nfsv4CloseResponse = exports.Nfsv4CloseResOk = exports.Nfsv4CloseRequest = exports.Nfsv4AccessResponse = exports.Nfsv4AccessResOk = exports.Nfsv4AccessRequest = void 0;
exports.Nfsv4CompoundRequest = exports.Nfsv4IllegalResponse = exports.Nfsv4IllegalRequest = exports.Nfsv4ReleaseLockOwnerResponse = exports.Nfsv4ReleaseLockOwnerRequest = exports.Nfsv4WriteResponse = exports.Nfsv4WriteResOk = exports.Nfsv4WriteRequest = exports.Nfsv4VerifyResponse = exports.Nfsv4VerifyRequest = exports.Nfsv4SetclientidConfirmResponse = exports.Nfsv4SetclientidConfirmRequest = exports.Nfsv4SetclientidResponse = exports.Nfsv4SetclientidResOk = exports.Nfsv4SetclientidRequest = exports.Nfsv4SetattrResponse = exports.Nfsv4SetattrResOk = exports.Nfsv4SetattrRequest = exports.Nfsv4SecinfoResponse = exports.Nfsv4SecinfoResOk = exports.Nfsv4SecinfoRequest = exports.Nfsv4SavefhResponse = exports.Nfsv4SavefhRequest = exports.Nfsv4RestorefhResponse = exports.Nfsv4RestorefhRequest = exports.Nfsv4RenewResponse = exports.Nfsv4RenewRequest = exports.Nfsv4RenameResponse = exports.Nfsv4RenameResOk = exports.Nfsv4RenameRequest = exports.Nfsv4RemoveResponse = exports.Nfsv4RemoveResOk = exports.Nfsv4RemoveRequest = exports.Nfsv4ReadlinkResponse = exports.Nfsv4ReadlinkResOk = exports.Nfsv4ReadlinkRequest = exports.Nfsv4ReaddirResponse = exports.Nfsv4ReaddirResOk = exports.Nfsv4ReaddirRequest = exports.Nfsv4ReadResponse = exports.Nfsv4ReadResOk = exports.Nfsv4ReadRequest = exports.Nfsv4PutrootfhResponse = exports.Nfsv4PutrootfhRequest = exports.Nfsv4PutpubfhResponse = exports.Nfsv4PutpubfhRequest = exports.Nfsv4PutfhResponse = exports.Nfsv4PutfhRequest = exports.Nfsv4OpenDowngradeResponse = exports.Nfsv4OpenDowngradeResOk = void 0;
exports.Nfsv4CbCompoundResponse = exports.Nfsv4CbCompoundRequest = exports.Nfsv4CbIllegalResponse = exports.Nfsv4CbIllegalRequest = exports.Nfsv4CbRecallResponse = exports.Nfsv4CbRecallRequest = exports.Nfsv4CbGetattrResponse = exports.Nfsv4CbGetattrResOk = exports.Nfsv4CbGetattrRequest = exports.Nfsv4CompoundResponse = void 0;
class Nfsv4AccessRequest {
    constructor(access) {
        this.access = access;
    }
}
exports.Nfsv4AccessRequest = Nfsv4AccessRequest;
class Nfsv4AccessResOk {
    constructor(supported, access) {
        this.supported = supported;
        this.access = access;
    }
}
exports.Nfsv4AccessResOk = Nfsv4AccessResOk;
class Nfsv4AccessResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4AccessResponse = Nfsv4AccessResponse;
class Nfsv4CloseRequest {
    constructor(seqid, openStateid) {
        this.seqid = seqid;
        this.openStateid = openStateid;
    }
}
exports.Nfsv4CloseRequest = Nfsv4CloseRequest;
class Nfsv4CloseResOk {
    constructor(openStateid) {
        this.openStateid = openStateid;
    }
}
exports.Nfsv4CloseResOk = Nfsv4CloseResOk;
class Nfsv4CloseResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4CloseResponse = Nfsv4CloseResponse;
class Nfsv4CommitRequest {
    constructor(offset, count) {
        this.offset = offset;
        this.count = count;
    }
}
exports.Nfsv4CommitRequest = Nfsv4CommitRequest;
class Nfsv4CommitResOk {
    constructor(writeverf) {
        this.writeverf = writeverf;
    }
}
exports.Nfsv4CommitResOk = Nfsv4CommitResOk;
class Nfsv4CommitResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4CommitResponse = Nfsv4CommitResponse;
class Nfsv4CreateRequest {
    constructor(objtype, objname) {
        this.objtype = objtype;
        this.objname = objname;
    }
}
exports.Nfsv4CreateRequest = Nfsv4CreateRequest;
class Nfsv4CreateResOk {
    constructor(cinfo, attrset) {
        this.cinfo = cinfo;
        this.attrset = attrset;
    }
}
exports.Nfsv4CreateResOk = Nfsv4CreateResOk;
class Nfsv4CreateResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4CreateResponse = Nfsv4CreateResponse;
class Nfsv4DelegpurgeRequest {
    constructor(clientid) {
        this.clientid = clientid;
    }
}
exports.Nfsv4DelegpurgeRequest = Nfsv4DelegpurgeRequest;
class Nfsv4DelegpurgeResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4DelegpurgeResponse = Nfsv4DelegpurgeResponse;
class Nfsv4DelegreturnRequest {
    constructor(delegStateid) {
        this.delegStateid = delegStateid;
    }
}
exports.Nfsv4DelegreturnRequest = Nfsv4DelegreturnRequest;
class Nfsv4DelegreturnResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4DelegreturnResponse = Nfsv4DelegreturnResponse;
class Nfsv4GetattrRequest {
    constructor(attrRequest) {
        this.attrRequest = attrRequest;
    }
}
exports.Nfsv4GetattrRequest = Nfsv4GetattrRequest;
class Nfsv4GetattrResOk {
    constructor(objAttributes) {
        this.objAttributes = objAttributes;
    }
}
exports.Nfsv4GetattrResOk = Nfsv4GetattrResOk;
class Nfsv4GetattrResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4GetattrResponse = Nfsv4GetattrResponse;
class Nfsv4GetfhRequest {
}
exports.Nfsv4GetfhRequest = Nfsv4GetfhRequest;
class Nfsv4GetfhResOk {
    constructor(object) {
        this.object = object;
    }
}
exports.Nfsv4GetfhResOk = Nfsv4GetfhResOk;
class Nfsv4GetfhResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4GetfhResponse = Nfsv4GetfhResponse;
class Nfsv4LinkRequest {
    constructor(newname) {
        this.newname = newname;
    }
}
exports.Nfsv4LinkRequest = Nfsv4LinkRequest;
class Nfsv4LinkResOk {
    constructor(cinfo) {
        this.cinfo = cinfo;
    }
}
exports.Nfsv4LinkResOk = Nfsv4LinkResOk;
class Nfsv4LinkResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4LinkResponse = Nfsv4LinkResponse;
class Nfsv4LockRequest {
    constructor(locktype, reclaim, offset, length, locker) {
        this.locktype = locktype;
        this.reclaim = reclaim;
        this.offset = offset;
        this.length = length;
        this.locker = locker;
    }
}
exports.Nfsv4LockRequest = Nfsv4LockRequest;
class Nfsv4LockResOk {
    constructor(lockStateid) {
        this.lockStateid = lockStateid;
    }
}
exports.Nfsv4LockResOk = Nfsv4LockResOk;
class Nfsv4LockResDenied {
    constructor(offset, length, locktype, owner) {
        this.offset = offset;
        this.length = length;
        this.locktype = locktype;
        this.owner = owner;
    }
}
exports.Nfsv4LockResDenied = Nfsv4LockResDenied;
class Nfsv4LockResponse {
    constructor(status, resok, denied) {
        this.status = status;
        this.resok = resok;
        this.denied = denied;
    }
}
exports.Nfsv4LockResponse = Nfsv4LockResponse;
class Nfsv4LocktRequest {
    constructor(locktype, offset, length, owner) {
        this.locktype = locktype;
        this.offset = offset;
        this.length = length;
        this.owner = owner;
    }
}
exports.Nfsv4LocktRequest = Nfsv4LocktRequest;
class Nfsv4LocktResDenied {
    constructor(offset, length, locktype, owner) {
        this.offset = offset;
        this.length = length;
        this.locktype = locktype;
        this.owner = owner;
    }
}
exports.Nfsv4LocktResDenied = Nfsv4LocktResDenied;
class Nfsv4LocktResponse {
    constructor(status, denied) {
        this.status = status;
        this.denied = denied;
    }
}
exports.Nfsv4LocktResponse = Nfsv4LocktResponse;
class Nfsv4LockuRequest {
    constructor(locktype, seqid, lockStateid, offset, length) {
        this.locktype = locktype;
        this.seqid = seqid;
        this.lockStateid = lockStateid;
        this.offset = offset;
        this.length = length;
    }
}
exports.Nfsv4LockuRequest = Nfsv4LockuRequest;
class Nfsv4LockuResOk {
    constructor(lockStateid) {
        this.lockStateid = lockStateid;
    }
}
exports.Nfsv4LockuResOk = Nfsv4LockuResOk;
class Nfsv4LockuResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4LockuResponse = Nfsv4LockuResponse;
class Nfsv4LookupRequest {
    constructor(objname) {
        this.objname = objname;
    }
}
exports.Nfsv4LookupRequest = Nfsv4LookupRequest;
class Nfsv4LookupResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4LookupResponse = Nfsv4LookupResponse;
class Nfsv4LookuppRequest {
}
exports.Nfsv4LookuppRequest = Nfsv4LookuppRequest;
class Nfsv4LookuppResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4LookuppResponse = Nfsv4LookuppResponse;
class Nfsv4NverifyRequest {
    constructor(objAttributes) {
        this.objAttributes = objAttributes;
    }
}
exports.Nfsv4NverifyRequest = Nfsv4NverifyRequest;
class Nfsv4NverifyResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4NverifyResponse = Nfsv4NverifyResponse;
class Nfsv4OpenRequest {
    constructor(seqid, shareAccess, shareDeny, owner, openhow, claim) {
        this.seqid = seqid;
        this.shareAccess = shareAccess;
        this.shareDeny = shareDeny;
        this.owner = owner;
        this.openhow = openhow;
        this.claim = claim;
    }
}
exports.Nfsv4OpenRequest = Nfsv4OpenRequest;
class Nfsv4OpenResOk {
    constructor(stateid, cinfo, rflags, attrset, delegation) {
        this.stateid = stateid;
        this.cinfo = cinfo;
        this.rflags = rflags;
        this.attrset = attrset;
        this.delegation = delegation;
    }
}
exports.Nfsv4OpenResOk = Nfsv4OpenResOk;
class Nfsv4OpenResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4OpenResponse = Nfsv4OpenResponse;
class Nfsv4OpenattrRequest {
    constructor(createdir) {
        this.createdir = createdir;
    }
}
exports.Nfsv4OpenattrRequest = Nfsv4OpenattrRequest;
class Nfsv4OpenattrResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4OpenattrResponse = Nfsv4OpenattrResponse;
class Nfsv4OpenConfirmRequest {
    constructor(openStateid, seqid) {
        this.openStateid = openStateid;
        this.seqid = seqid;
    }
}
exports.Nfsv4OpenConfirmRequest = Nfsv4OpenConfirmRequest;
class Nfsv4OpenConfirmResOk {
    constructor(openStateid) {
        this.openStateid = openStateid;
    }
}
exports.Nfsv4OpenConfirmResOk = Nfsv4OpenConfirmResOk;
class Nfsv4OpenConfirmResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4OpenConfirmResponse = Nfsv4OpenConfirmResponse;
class Nfsv4OpenDowngradeRequest {
    constructor(openStateid, seqid, shareAccess, shareDeny) {
        this.openStateid = openStateid;
        this.seqid = seqid;
        this.shareAccess = shareAccess;
        this.shareDeny = shareDeny;
    }
}
exports.Nfsv4OpenDowngradeRequest = Nfsv4OpenDowngradeRequest;
class Nfsv4OpenDowngradeResOk {
    constructor(openStateid) {
        this.openStateid = openStateid;
    }
}
exports.Nfsv4OpenDowngradeResOk = Nfsv4OpenDowngradeResOk;
class Nfsv4OpenDowngradeResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4OpenDowngradeResponse = Nfsv4OpenDowngradeResponse;
class Nfsv4PutfhRequest {
    constructor(object) {
        this.object = object;
    }
}
exports.Nfsv4PutfhRequest = Nfsv4PutfhRequest;
class Nfsv4PutfhResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4PutfhResponse = Nfsv4PutfhResponse;
class Nfsv4PutpubfhRequest {
}
exports.Nfsv4PutpubfhRequest = Nfsv4PutpubfhRequest;
class Nfsv4PutpubfhResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4PutpubfhResponse = Nfsv4PutpubfhResponse;
class Nfsv4PutrootfhRequest {
}
exports.Nfsv4PutrootfhRequest = Nfsv4PutrootfhRequest;
class Nfsv4PutrootfhResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4PutrootfhResponse = Nfsv4PutrootfhResponse;
class Nfsv4ReadRequest {
    constructor(stateid, offset, count) {
        this.stateid = stateid;
        this.offset = offset;
        this.count = count;
    }
}
exports.Nfsv4ReadRequest = Nfsv4ReadRequest;
class Nfsv4ReadResOk {
    constructor(eof, data) {
        this.eof = eof;
        this.data = data;
    }
}
exports.Nfsv4ReadResOk = Nfsv4ReadResOk;
class Nfsv4ReadResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4ReadResponse = Nfsv4ReadResponse;
class Nfsv4ReaddirRequest {
    constructor(cookie, cookieverf, dircount, maxcount, attrRequest) {
        this.cookie = cookie;
        this.cookieverf = cookieverf;
        this.dircount = dircount;
        this.maxcount = maxcount;
        this.attrRequest = attrRequest;
    }
}
exports.Nfsv4ReaddirRequest = Nfsv4ReaddirRequest;
class Nfsv4ReaddirResOk {
    constructor(cookieverf, entries, eof) {
        this.cookieverf = cookieverf;
        this.entries = entries;
        this.eof = eof;
    }
}
exports.Nfsv4ReaddirResOk = Nfsv4ReaddirResOk;
class Nfsv4ReaddirResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4ReaddirResponse = Nfsv4ReaddirResponse;
class Nfsv4ReadlinkRequest {
}
exports.Nfsv4ReadlinkRequest = Nfsv4ReadlinkRequest;
class Nfsv4ReadlinkResOk {
    constructor(link) {
        this.link = link;
    }
}
exports.Nfsv4ReadlinkResOk = Nfsv4ReadlinkResOk;
class Nfsv4ReadlinkResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4ReadlinkResponse = Nfsv4ReadlinkResponse;
class Nfsv4RemoveRequest {
    constructor(target) {
        this.target = target;
    }
}
exports.Nfsv4RemoveRequest = Nfsv4RemoveRequest;
class Nfsv4RemoveResOk {
    constructor(cinfo) {
        this.cinfo = cinfo;
    }
}
exports.Nfsv4RemoveResOk = Nfsv4RemoveResOk;
class Nfsv4RemoveResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4RemoveResponse = Nfsv4RemoveResponse;
class Nfsv4RenameRequest {
    constructor(oldname, newname) {
        this.oldname = oldname;
        this.newname = newname;
    }
}
exports.Nfsv4RenameRequest = Nfsv4RenameRequest;
class Nfsv4RenameResOk {
    constructor(sourceCinfo, targetCinfo) {
        this.sourceCinfo = sourceCinfo;
        this.targetCinfo = targetCinfo;
    }
}
exports.Nfsv4RenameResOk = Nfsv4RenameResOk;
class Nfsv4RenameResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4RenameResponse = Nfsv4RenameResponse;
class Nfsv4RenewRequest {
    constructor(clientid) {
        this.clientid = clientid;
    }
}
exports.Nfsv4RenewRequest = Nfsv4RenewRequest;
class Nfsv4RenewResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4RenewResponse = Nfsv4RenewResponse;
class Nfsv4RestorefhRequest {
}
exports.Nfsv4RestorefhRequest = Nfsv4RestorefhRequest;
class Nfsv4RestorefhResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4RestorefhResponse = Nfsv4RestorefhResponse;
class Nfsv4SavefhRequest {
}
exports.Nfsv4SavefhRequest = Nfsv4SavefhRequest;
class Nfsv4SavefhResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4SavefhResponse = Nfsv4SavefhResponse;
class Nfsv4SecinfoRequest {
    constructor(name) {
        this.name = name;
    }
}
exports.Nfsv4SecinfoRequest = Nfsv4SecinfoRequest;
class Nfsv4SecinfoResOk {
    constructor(flavors) {
        this.flavors = flavors;
    }
}
exports.Nfsv4SecinfoResOk = Nfsv4SecinfoResOk;
class Nfsv4SecinfoResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4SecinfoResponse = Nfsv4SecinfoResponse;
class Nfsv4SetattrRequest {
    constructor(stateid, objAttributes) {
        this.stateid = stateid;
        this.objAttributes = objAttributes;
    }
}
exports.Nfsv4SetattrRequest = Nfsv4SetattrRequest;
class Nfsv4SetattrResOk {
    constructor(attrsset) {
        this.attrsset = attrsset;
    }
}
exports.Nfsv4SetattrResOk = Nfsv4SetattrResOk;
class Nfsv4SetattrResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4SetattrResponse = Nfsv4SetattrResponse;
class Nfsv4SetclientidRequest {
    constructor(client, callback, callbackIdent) {
        this.client = client;
        this.callback = callback;
        this.callbackIdent = callbackIdent;
    }
}
exports.Nfsv4SetclientidRequest = Nfsv4SetclientidRequest;
class Nfsv4SetclientidResOk {
    constructor(clientid, setclientidConfirm) {
        this.clientid = clientid;
        this.setclientidConfirm = setclientidConfirm;
    }
}
exports.Nfsv4SetclientidResOk = Nfsv4SetclientidResOk;
class Nfsv4SetclientidResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4SetclientidResponse = Nfsv4SetclientidResponse;
class Nfsv4SetclientidConfirmRequest {
    constructor(clientid, setclientidConfirm) {
        this.clientid = clientid;
        this.setclientidConfirm = setclientidConfirm;
    }
}
exports.Nfsv4SetclientidConfirmRequest = Nfsv4SetclientidConfirmRequest;
class Nfsv4SetclientidConfirmResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4SetclientidConfirmResponse = Nfsv4SetclientidConfirmResponse;
class Nfsv4VerifyRequest {
    constructor(objAttributes) {
        this.objAttributes = objAttributes;
    }
}
exports.Nfsv4VerifyRequest = Nfsv4VerifyRequest;
class Nfsv4VerifyResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4VerifyResponse = Nfsv4VerifyResponse;
class Nfsv4WriteRequest {
    constructor(stateid, offset, stable, data) {
        this.stateid = stateid;
        this.offset = offset;
        this.stable = stable;
        this.data = data;
    }
}
exports.Nfsv4WriteRequest = Nfsv4WriteRequest;
class Nfsv4WriteResOk {
    constructor(count, committed, writeverf) {
        this.count = count;
        this.committed = committed;
        this.writeverf = writeverf;
    }
}
exports.Nfsv4WriteResOk = Nfsv4WriteResOk;
class Nfsv4WriteResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4WriteResponse = Nfsv4WriteResponse;
class Nfsv4ReleaseLockOwnerRequest {
    constructor(lockOwner) {
        this.lockOwner = lockOwner;
    }
}
exports.Nfsv4ReleaseLockOwnerRequest = Nfsv4ReleaseLockOwnerRequest;
class Nfsv4ReleaseLockOwnerResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4ReleaseLockOwnerResponse = Nfsv4ReleaseLockOwnerResponse;
class Nfsv4IllegalRequest {
}
exports.Nfsv4IllegalRequest = Nfsv4IllegalRequest;
class Nfsv4IllegalResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4IllegalResponse = Nfsv4IllegalResponse;
class Nfsv4CompoundRequest {
    constructor(tag, minorversion, argarray) {
        this.tag = tag;
        this.minorversion = minorversion;
        this.argarray = argarray;
    }
}
exports.Nfsv4CompoundRequest = Nfsv4CompoundRequest;
class Nfsv4CompoundResponse {
    constructor(status, tag, resarray) {
        this.status = status;
        this.tag = tag;
        this.resarray = resarray;
    }
}
exports.Nfsv4CompoundResponse = Nfsv4CompoundResponse;
class Nfsv4CbGetattrRequest {
    constructor(fh, attrRequest) {
        this.fh = fh;
        this.attrRequest = attrRequest;
    }
}
exports.Nfsv4CbGetattrRequest = Nfsv4CbGetattrRequest;
class Nfsv4CbGetattrResOk {
    constructor(objAttributes) {
        this.objAttributes = objAttributes;
    }
}
exports.Nfsv4CbGetattrResOk = Nfsv4CbGetattrResOk;
class Nfsv4CbGetattrResponse {
    constructor(status, resok) {
        this.status = status;
        this.resok = resok;
    }
}
exports.Nfsv4CbGetattrResponse = Nfsv4CbGetattrResponse;
class Nfsv4CbRecallRequest {
    constructor(stateid, truncate, fh) {
        this.stateid = stateid;
        this.truncate = truncate;
        this.fh = fh;
    }
}
exports.Nfsv4CbRecallRequest = Nfsv4CbRecallRequest;
class Nfsv4CbRecallResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4CbRecallResponse = Nfsv4CbRecallResponse;
class Nfsv4CbIllegalRequest {
}
exports.Nfsv4CbIllegalRequest = Nfsv4CbIllegalRequest;
class Nfsv4CbIllegalResponse {
    constructor(status) {
        this.status = status;
    }
}
exports.Nfsv4CbIllegalResponse = Nfsv4CbIllegalResponse;
class Nfsv4CbCompoundRequest {
    constructor(tag, minorversion, callbackIdent, argarray) {
        this.tag = tag;
        this.minorversion = minorversion;
        this.callbackIdent = callbackIdent;
        this.argarray = argarray;
    }
}
exports.Nfsv4CbCompoundRequest = Nfsv4CbCompoundRequest;
class Nfsv4CbCompoundResponse {
    constructor(status, tag, resarray) {
        this.status = status;
        this.tag = tag;
        this.resarray = resarray;
    }
}
exports.Nfsv4CbCompoundResponse = Nfsv4CbCompoundResponse;
//# sourceMappingURL=messages.js.map