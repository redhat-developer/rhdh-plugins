{"version":3,"file":"mergeTheme.esm.js","sources":["../../src/utils/mergeTheme.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ThemeConfig } from '../types';\n\nfunction isObject(\n  objectOrValue: unknown,\n): objectOrValue is Record<string, unknown> {\n  return (\n    objectOrValue !== undefined &&\n    objectOrValue !== null &&\n    typeof objectOrValue === 'object' &&\n    !Array.isArray(objectOrValue)\n  );\n}\n\nconst deepCopyObject = (objectOrValue: unknown): unknown => {\n  if (isObject(objectOrValue)) {\n    const result: Record<string, unknown> = {};\n    for (const key of Object.keys(objectOrValue)) {\n      result[key] = deepCopyObject(objectOrValue[key]);\n    }\n    return result;\n  }\n  return objectOrValue;\n};\n\nexport const deepMergeObjects = (\n  defaultValue: unknown,\n  customValue: unknown,\n): unknown => {\n  if (isObject(defaultValue) || isObject(customValue)) {\n    const result: Record<string, unknown> = {};\n    if (isObject(defaultValue) && isObject(customValue)) {\n      for (const key of Object.keys(defaultValue)) {\n        result[key] = deepMergeObjects(defaultValue[key], customValue[key]);\n      }\n      for (const key of Object.keys(customValue)) {\n        result[key] = deepMergeObjects(defaultValue[key], customValue[key]);\n      }\n    } else if (customValue === null) {\n      return null;\n    } else if (isObject(customValue)) {\n      for (const key of Object.keys(customValue)) {\n        result[key] = deepCopyObject(customValue[key]);\n      }\n    } else if (isObject(defaultValue)) {\n      for (const key of Object.keys(defaultValue)) {\n        result[key] = deepCopyObject(defaultValue[key]);\n      }\n    }\n    return result;\n  }\n  return customValue !== undefined ? customValue : defaultValue;\n};\n\n/**\n * Merges two theme configurations with this priority:\n *\n * 1. Values will be picked up first from the `defaultThemeConfig` and\n *    then from the `customizedThemeConfig`.\n *    This means that if a value is set in the customized theme, it will 'override' the default.\n * 2. Null values in `customizedThemeConfig` the will override the default with `null`,\n *    while undefined values will be ignored.\n * 3. Objects will be merged recursively.\n *    All other values, esp. Arrays, will not be merged.\n *\n * @param defaultThemeConfig\n * @param customizedThemeConfig\n * @returns\n */\nexport const mergeUnifiedThemeOptions = (\n  defaultThemeConfig: ThemeConfig,\n  customizedThemeConfig: ThemeConfig,\n): ThemeConfig => {\n  return deepMergeObjects(\n    defaultThemeConfig,\n    customizedThemeConfig,\n  ) as ThemeConfig;\n};\n"],"names":[],"mappings":"AAkBA,SAAS,SACP,aAC0C,EAAA;AAC1C,EACE,OAAA,aAAA,KAAkB,SAClB,IAAA,aAAA,KAAkB,IAClB,IAAA,OAAO,kBAAkB,QACzB,IAAA,CAAC,KAAM,CAAA,OAAA,CAAQ,aAAa,CAAA;AAEhC;AAEA,MAAM,cAAA,GAAiB,CAAC,aAAoC,KAAA;AAC1D,EAAI,IAAA,QAAA,CAAS,aAAa,CAAG,EAAA;AAC3B,IAAA,MAAM,SAAkC,EAAC;AACzC,IAAA,KAAA,MAAW,GAAO,IAAA,MAAA,CAAO,IAAK,CAAA,aAAa,CAAG,EAAA;AAC5C,MAAA,MAAA,CAAO,GAAG,CAAA,GAAI,cAAe,CAAA,aAAA,CAAc,GAAG,CAAC,CAAA;AAAA;AAEjD,IAAO,OAAA,MAAA;AAAA;AAET,EAAO,OAAA,aAAA;AACT,CAAA;AAEa,MAAA,gBAAA,GAAmB,CAC9B,YAAA,EACA,WACY,KAAA;AACZ,EAAA,IAAI,QAAS,CAAA,YAAY,CAAK,IAAA,QAAA,CAAS,WAAW,CAAG,EAAA;AACnD,IAAA,MAAM,SAAkC,EAAC;AACzC,IAAA,IAAI,QAAS,CAAA,YAAY,CAAK,IAAA,QAAA,CAAS,WAAW,CAAG,EAAA;AACnD,MAAA,KAAA,MAAW,GAAO,IAAA,MAAA,CAAO,IAAK,CAAA,YAAY,CAAG,EAAA;AAC3C,QAAO,MAAA,CAAA,GAAG,IAAI,gBAAiB,CAAA,YAAA,CAAa,GAAG,CAAG,EAAA,WAAA,CAAY,GAAG,CAAC,CAAA;AAAA;AAEpE,MAAA,KAAA,MAAW,GAAO,IAAA,MAAA,CAAO,IAAK,CAAA,WAAW,CAAG,EAAA;AAC1C,QAAO,MAAA,CAAA,GAAG,IAAI,gBAAiB,CAAA,YAAA,CAAa,GAAG,CAAG,EAAA,WAAA,CAAY,GAAG,CAAC,CAAA;AAAA;AACpE,KACF,MAAA,IAAW,gBAAgB,IAAM,EAAA;AAC/B,MAAO,OAAA,IAAA;AAAA,KACT,MAAA,IAAW,QAAS,CAAA,WAAW,CAAG,EAAA;AAChC,MAAA,KAAA,MAAW,GAAO,IAAA,MAAA,CAAO,IAAK,CAAA,WAAW,CAAG,EAAA;AAC1C,QAAA,MAAA,CAAO,GAAG,CAAA,GAAI,cAAe,CAAA,WAAA,CAAY,GAAG,CAAC,CAAA;AAAA;AAC/C,KACF,MAAA,IAAW,QAAS,CAAA,YAAY,CAAG,EAAA;AACjC,MAAA,KAAA,MAAW,GAAO,IAAA,MAAA,CAAO,IAAK,CAAA,YAAY,CAAG,EAAA;AAC3C,QAAA,MAAA,CAAO,GAAG,CAAA,GAAI,cAAe,CAAA,YAAA,CAAa,GAAG,CAAC,CAAA;AAAA;AAChD;AAEF,IAAO,OAAA,MAAA;AAAA;AAET,EAAO,OAAA,WAAA,KAAgB,YAAY,WAAc,GAAA,YAAA;AACnD;AAiBa,MAAA,wBAAA,GAA2B,CACtC,kBAAA,EACA,qBACgB,KAAA;AAChB,EAAO,OAAA,gBAAA;AAAA,IACL,kBAAA;AAAA,IACA;AAAA,GACF;AACF;;;;"}