{"version":3,"file":"createPageTheme.esm.js","sources":["../../src/utils/createPageTheme.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PageTheme, genPageTheme, shapes } from '@backstage/theme';\nimport { ThemeConfigPageTheme } from '../types';\n\n/**\n * Creates a page theme from a page theme configuration (app-config.yaml).\n *\n * This allows the user to specificy a custom header with:\n *\n *  * `backgroundColor` or `colors` like `'#ff0000'`, `['#ff0000']` or `['#ff0000', '#00ff00', '#0000ff']`.\n *\n *    More then one color will create a gradient from left to right.\n *\n *  * a `shape` like `round`, `wave`, `wave2`, or `none`.\n *\n *  * or an `backgroundImage` that supports different types of images references:\n *\n *    1. CSS urls like `data:image/svg+xml,...` or `url(data:image/svg+xml,...)`\n *    2. Absolute or relative URLs starting with `http://`, `https://` or `/`\n *    3. Inline <svg>...</svg> images will be transformed to `url(data:image/svg+xml,<svg>...</svg>)`\n *\n *  * `fontColor` like `'#ffffff'` or `'#000000'`\n */\nexport const createPageTheme = (\n  pageThemeConfig: ThemeConfigPageTheme,\n): PageTheme => {\n  let colors = pageThemeConfig.backgroundColor ?? pageThemeConfig.colors;\n  if (typeof colors === 'string') {\n    colors = [colors];\n  } else if (!colors?.length) {\n    colors = ['transparent'];\n  }\n\n  let shape =\n    pageThemeConfig.backgroundImage ??\n    shapes[pageThemeConfig.shape as string] ??\n    pageThemeConfig.shape ??\n    'none';\n  if (\n    shape.startsWith('data:') ||\n    shape.startsWith('http://') ||\n    shape.startsWith('https://') ||\n    shape.startsWith('/')\n  ) {\n    shape = `url(\"${shape}\")`;\n  } else if (shape.startsWith('<svg') && shape.endsWith('>')) {\n    shape = `url(\"data:image/svg+xml,${encodeURIComponent(shape)}\")`;\n  }\n\n  // https://github.com/backstage/backstage/blob/master/packages/theme/src/base/pageTheme.ts#L59-L87\n  return genPageTheme({\n    colors,\n    shape,\n    options: {\n      fontColor: pageThemeConfig.fontColor, // default is white in genPageTheme!\n    },\n  });\n};\n"],"names":[],"mappings":";;AAsCa,MAAA,eAAA,GAAkB,CAC7B,eACc,KAAA;AACd,EAAI,IAAA,MAAA,GAAS,eAAgB,CAAA,eAAA,IAAmB,eAAgB,CAAA,MAAA;AAChE,EAAI,IAAA,OAAO,WAAW,QAAU,EAAA;AAC9B,IAAA,MAAA,GAAS,CAAC,MAAM,CAAA;AAAA,GAClB,MAAA,IAAW,CAAC,MAAA,EAAQ,MAAQ,EAAA;AAC1B,IAAA,MAAA,GAAS,CAAC,aAAa,CAAA;AAAA;AAGzB,EAAI,IAAA,KAAA,GACF,gBAAgB,eAChB,IAAA,MAAA,CAAO,gBAAgB,KAAe,CAAA,IACtC,gBAAgB,KAChB,IAAA,MAAA;AACF,EAAA,IACE,KAAM,CAAA,UAAA,CAAW,OAAO,CAAA,IACxB,MAAM,UAAW,CAAA,SAAS,CAC1B,IAAA,KAAA,CAAM,WAAW,UAAU,CAAA,IAC3B,KAAM,CAAA,UAAA,CAAW,GAAG,CACpB,EAAA;AACA,IAAA,KAAA,GAAQ,QAAQ,KAAK,CAAA,EAAA,CAAA;AAAA,GACvB,MAAA,IAAW,MAAM,UAAW,CAAA,MAAM,KAAK,KAAM,CAAA,QAAA,CAAS,GAAG,CAAG,EAAA;AAC1D,IAAQ,KAAA,GAAA,CAAA,wBAAA,EAA2B,kBAAmB,CAAA,KAAK,CAAC,CAAA,EAAA,CAAA;AAAA;AAI9D,EAAA,OAAO,YAAa,CAAA;AAAA,IAClB,MAAA;AAAA,IACA,KAAA;AAAA,IACA,OAAS,EAAA;AAAA,MACP,WAAW,eAAgB,CAAA;AAAA;AAAA;AAC7B,GACD,CAAA;AACH;;;;"}