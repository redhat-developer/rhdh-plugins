import { useMemo } from 'react';
import { useApi, configApiRef } from '@backstage/core-plugin-api';

const useThemeConfig = (themeName) => {
  let configApi = undefined;
  try {
    configApi = useApi(configApiRef);
  } catch (err) {
  }
  return useMemo(() => {
    if (!configApi) {
      return {
        mode: themeName.includes("dark") ? "dark" : "light"
      };
    }
    const themeConfig = configApi.getOptional(`app.branding.theme.${themeName}`) ?? {};
    if (!themeConfig.mode) {
      themeConfig.mode = themeName.includes("dark") ? "dark" : "light";
    }
    if (Array.isArray(themeConfig?.pageTheme?.default?.fontColor)) {
      themeConfig.pageTheme.default.fontColor = themeConfig.pageTheme.default.fontColor[0];
    }
    return themeConfig;
  }, [themeName, configApi]);
};

export { useThemeConfig };
//# sourceMappingURL=useThemeConfig.esm.js.map
