{"version":3,"file":"useThemeOptions.esm.js","sources":["../../src/hooks/useThemeOptions.ts"],"sourcesContent":["/*\n * Copyright Red Hat, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo } from 'react';\nimport { type UnifiedThemeOptions } from '@backstage/theme';\nimport type { ThemeConfig } from '../types';\nimport * as backstage from '../backstage';\nimport * as rhdh from '../rhdh';\nimport { migrateThemeConfig } from '../utils/migrateTheme';\nimport { mergeUnifiedThemeOptions } from '../utils/mergeTheme';\nimport { createPageThemes } from '../utils/createPageThemes';\nimport { createComponents } from '../utils/createComponents';\n\n/** Creates a memorized Backstage UnifiedThemeOptions based on the given ThemeConfig. */\nexport const useThemeOptions = (\n  themeConfig: ThemeConfig,\n): UnifiedThemeOptions => {\n  const theme = useMemo<UnifiedThemeOptions>(() => {\n    const mode = themeConfig.mode ?? 'light';\n    const variant = themeConfig.variant ?? 'rhdh';\n\n    let defaultThemeConfig: ThemeConfig;\n    if (variant === 'backstage') {\n      defaultThemeConfig = backstage.getDefaultThemeConfig(mode);\n    } else {\n      defaultThemeConfig = rhdh.getDefaultThemeConfig(mode);\n    }\n\n    const migratedThemeConfig = migrateThemeConfig(themeConfig);\n    const mergedThemeConfig = mergeUnifiedThemeOptions(\n      defaultThemeConfig,\n      migratedThemeConfig,\n    );\n\n    const unifiedThemeOption: UnifiedThemeOptions = {\n      palette: mergedThemeConfig.palette as UnifiedThemeOptions['palette'],\n      defaultPageTheme: mergedThemeConfig.defaultPageTheme,\n      fontFamily: mergedThemeConfig.fontFamily,\n      htmlFontSize: mergedThemeConfig.htmlFontSize,\n      typography: mergedThemeConfig.typography,\n    };\n\n    unifiedThemeOption.pageTheme = createPageThemes(mergedThemeConfig);\n\n    if (variant !== 'backstage') {\n      unifiedThemeOption.components = createComponents(mergedThemeConfig);\n    }\n\n    return unifiedThemeOption;\n  }, [themeConfig]);\n  return theme;\n};\n"],"names":["backstage.getDefaultThemeConfig","rhdh.getDefaultThemeConfig"],"mappings":";;;;;;;;AA2Ba,MAAA,eAAA,GAAkB,CAC7B,WACwB,KAAA;AACxB,EAAM,MAAA,KAAA,GAAQ,QAA6B,MAAM;AAC/C,IAAM,MAAA,IAAA,GAAO,YAAY,IAAQ,IAAA,OAAA;AACjC,IAAM,MAAA,OAAA,GAAU,YAAY,OAAW,IAAA,MAAA;AAEvC,IAAI,IAAA,kBAAA;AACJ,IAAA,IAAI,YAAY,WAAa,EAAA;AAC3B,MAAqB,kBAAA,GAAAA,sBAAgC,IAAI,CAAA;AAAA,KACpD,MAAA;AACL,MAAqB,kBAAA,GAAAC,wBAA2B,IAAI,CAAA;AAAA;AAGtD,IAAM,MAAA,mBAAA,GAAsB,mBAAmB,WAAW,CAAA;AAC1D,IAAA,MAAM,iBAAoB,GAAA,wBAAA;AAAA,MACxB,kBAAA;AAAA,MACA;AAAA,KACF;AAEA,IAAA,MAAM,kBAA0C,GAAA;AAAA,MAC9C,SAAS,iBAAkB,CAAA,OAAA;AAAA,MAC3B,kBAAkB,iBAAkB,CAAA,gBAAA;AAAA,MACpC,YAAY,iBAAkB,CAAA,UAAA;AAAA,MAC9B,cAAc,iBAAkB,CAAA,YAAA;AAAA,MAChC,YAAY,iBAAkB,CAAA;AAAA,KAChC;AAEA,IAAmB,kBAAA,CAAA,SAAA,GAAY,iBAAiB,iBAAiB,CAAA;AAEjE,IAAA,IAAI,YAAY,WAAa,EAAA;AAC3B,MAAmB,kBAAA,CAAA,UAAA,GAAa,iBAAiB,iBAAiB,CAAA;AAAA;AAGpE,IAAO,OAAA,kBAAA;AAAA,GACT,EAAG,CAAC,WAAW,CAAC,CAAA;AAChB,EAAO,OAAA,KAAA;AACT;;;;"}