import { jsx } from 'react/jsx-runtime';
import { useMemo } from 'react';
import { themes } from '@backstage/theme';
import LightIcon from '@mui/icons-material/WbSunnyRounded';
import DarkIcon from '@mui/icons-material/Brightness2Rounded';
import { createTheme } from '@mui/material/styles';
import { createThemeProviderForThemeName, createThemeProviderForThemeConfig, createThemeProvider } from './components/ThemeProvider.esm.js';
import { getDefaultThemeConfig } from './backstage.esm.js';
import { getDefaultThemeConfig as getDefaultThemeConfig$1 } from './rhdh.esm.js';

const lightThemeProvider = createThemeProviderForThemeName("light");
const darkThemeProvider = createThemeProviderForThemeName("dark");
const getAllThemes = () => {
  return [
    {
      id: "light",
      title: "RHDH Light (latest)",
      variant: "light",
      icon: /* @__PURE__ */ jsx(LightIcon, {}),
      Provider: createThemeProviderForThemeName("light")
    },
    {
      id: "dark",
      title: "RHDH Dark (latest)",
      variant: "dark",
      icon: /* @__PURE__ */ jsx(DarkIcon, {}),
      Provider: createThemeProviderForThemeName("dark")
    },
    {
      id: "light-customized",
      title: "RHDH Light (customized)",
      variant: "light",
      icon: /* @__PURE__ */ jsx(LightIcon, {}),
      Provider: createThemeProviderForThemeConfig({
        mode: "light",
        variant: "rhdh",
        palette: {
          primary: { main: "#ff0000" },
          secondary: { main: "#00ff00" }
        }
      })
    },
    {
      id: "dark-customized",
      title: "RHDH Dark (customized)",
      variant: "dark",
      icon: /* @__PURE__ */ jsx(DarkIcon, {}),
      Provider: createThemeProviderForThemeConfig({
        mode: "dark",
        variant: "rhdh",
        palette: {
          primary: { main: "#ff0000" },
          secondary: { main: "#00ff00" }
        }
      })
    },
    {
      id: "backstage-light",
      title: "Backstage Light",
      variant: "light",
      icon: /* @__PURE__ */ jsx(LightIcon, {}),
      Provider: createThemeProvider(themes.light)
    },
    {
      id: "backstage-dark",
      title: "Backstage Dark",
      variant: "dark",
      icon: /* @__PURE__ */ jsx(DarkIcon, {}),
      Provider: createThemeProvider(themes.dark)
    }
  ];
};
const useAllThemes = () => {
  return useMemo(() => getAllThemes(), []);
};
const getThemes = () => {
  return [
    {
      id: "light",
      title: "Light",
      variant: "light",
      icon: /* @__PURE__ */ jsx(LightIcon, {}),
      Provider: createThemeProviderForThemeName("light")
    },
    {
      id: "dark",
      title: "Dark",
      variant: "dark",
      icon: /* @__PURE__ */ jsx(DarkIcon, {}),
      Provider: createThemeProviderForThemeName("dark")
    }
  ];
};
const useThemes = () => {
  return useMemo(() => getThemes(), []);
};
const useLoaderTheme = () => {
  return useMemo(() => {
    const latestTheme = localStorage.getItem("theme");
    const mode = latestTheme?.includes("dark") ? "dark" : "light";
    const variant = latestTheme?.includes("backstage") ? "backstage" : "rhdh";
    const themeOptions = variant === "backstage" ? getDefaultThemeConfig(mode) : getDefaultThemeConfig$1(mode);
    return createTheme(themeOptions);
  }, []);
};

export { darkThemeProvider, getAllThemes, getThemes, lightThemeProvider, useAllThemes, useLoaderTheme, useThemes };
//# sourceMappingURL=themes.esm.js.map
