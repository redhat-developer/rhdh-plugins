import { ObjectDiff } from '../diff/diff';
import { RuleResult } from '../results';
import { FlatOpenAPIV3, FlatOpenAPIV3_1 } from '../flat-openapi-types';
type SerializedSourcemap = {
    rootFilePath: string;
    files: Array<{
        path: string;
        index: number;
        contents: string;
        sha256: string;
    }>;
    refMappings: {
        [key: string]: [number, string];
    };
};
type InputSpec = {
    jsonLike: FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document;
    sourcemap: SerializedSourcemap;
    isEmptySpec: boolean;
};
type RuleRunner = {
    runRules: (inputs: {
        context: any;
        diffs: ObjectDiff[];
        fromSpec: FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document;
        toSpec: FlatOpenAPIV3.Document | FlatOpenAPIV3_1.Document;
    }) => Promise<RuleResult[]>;
};
export declare const compareSpecs: (from: InputSpec, to: InputSpec, ruleRunner: RuleRunner, context: any) => Promise<CompareSpecResults>;
export type CompareSpecResults = {
    diffs: ObjectDiff[];
    results: RuleResult[];
    version: string;
};
export {};
//# sourceMappingURL=compare-specs.d.ts.map