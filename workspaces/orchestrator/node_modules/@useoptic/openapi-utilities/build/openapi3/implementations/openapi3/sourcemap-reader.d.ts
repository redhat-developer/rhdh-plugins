import { YAMLNode } from 'yaml-ast-parser';
import { ILookupFileResult, ILookupPathResult, JsonPath, SerializedSourcemap, SourcemapLine } from './types';
export declare function resolveJsonPointerInYamlAst(node: YAMLNode, // root ast
pointer: string): YAMLNode | undefined;
export declare function sourcemapReader(sourcemap: SerializedSourcemap): {
    findFile: (jsonPathFromRoot: JsonPath) => ILookupPathResult | undefined;
    findFilePosition: (jsonPathFromRoot: JsonPath) => ILookupFileResult;
    findFileAndLines: (jsonPathFromRoot: JsonPath) => SourcemapLine | undefined;
    findLinesForAstAndContents: (astNode: YAMLNode, contents: string) => {
        startLine: number;
        endLine: number;
        startPosition: number;
        endPosition: number;
    };
};
export type GetSourcemapOptions = {
    ciProvider: 'github' | 'gitlab';
    remote: string;
    sha: string;
    root: string;
} | {
    ciProvider?: undefined;
};
export declare function getSourcemapLink(sourcemap: SourcemapLine, options?: GetSourcemapOptions): string;
//# sourceMappingURL=sourcemap-reader.d.ts.map