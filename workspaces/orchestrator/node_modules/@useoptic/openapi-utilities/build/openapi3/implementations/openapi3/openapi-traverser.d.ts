import { OpenApiKind, Traverse, OperationLocation, ResponseHeaderLocation, RequestLocation, ResponseLocation, PathParameterLocation, HeaderParameterLocation, CookieParameterLocation, BodyLocation, BodyExampleLocation, QueryParameterLocation, FieldLocation, ComponentSchemaLocation, IFact, OpenApiSpecificationFact, FactVariant, OpenApi3SchemaFact } from '../../sdk/types';
import { IPathComponent } from '../../sdk/types';
import { OpenAPIV3, OpenAPIV3_1 } from 'openapi-types';
import { SchemaLocation } from '../../sdk/types/location';
export declare function normalizeOpenApiPath(path: string): string;
export declare class OpenAPITraverser implements Traverse<OpenAPIV3.Document> {
    format: string;
    input: (OpenAPIV3.Document | OpenAPIV3_1.Document) | undefined;
    warnings: string[];
    traverse(input: OpenAPIV3.Document | OpenAPIV3_1.Document): void;
    facts(): IterableIterator<IFact>;
    traverseOperations(operation: OpenAPIV3.OperationObject | OpenAPIV3_1.OperationObject, method: string, pathPattern: string, location: OperationLocation): IterableIterator<IFact>;
    traverseResponse(response: OpenAPIV3.ResponseObject, statusCode: string, jsonPath: string, conceptualPath: IPathComponent[], location: ResponseLocation): IterableIterator<IFact>;
    traverseParameters(operation: OpenAPIV3.OperationObject | OpenAPIV3_1.OperationObject, jsonPath: string, conceptualPath: IPathComponent[], location: OperationLocation): IterableIterator<IFact>;
    onRequestParameter(parameter: OpenAPIV3.ParameterObject | OpenAPIV3_1.ParameterObject, jsonPath: string, conceptualPath: IPathComponent[], location: PathParameterLocation | QueryParameterLocation | HeaderParameterLocation | CookieParameterLocation): undefined | FactVariant<OpenApiKind.HeaderParameter> | FactVariant<OpenApiKind.PathParameter> | FactVariant<OpenApiKind.QueryParameter> | FactVariant<OpenApiKind.CookieParameter>;
    traverseResponseHeaders(response: OpenAPIV3.ResponseObject | OpenAPIV3_1.ResponsesObject, jsonPath: string, conceptualPath: IPathComponent[], location: ResponseLocation): IterableIterator<IFact>;
    onResponseHeader(name: string, header: OpenAPIV3.HeaderObject | OpenAPIV3_1.HeaderObject, jsonPath: string, conceptualPath: IPathComponent[], location: ResponseHeaderLocation): FactVariant<OpenApiKind.ResponseHeader>;
    traverseBody(body: OpenAPIV3.MediaTypeObject | OpenAPIV3_1.MediaTypeObject, contentType: string, jsonPath: string, conceptualPath: IPathComponent[], location: BodyLocation): IterableIterator<IFact>;
    traverseField(key: string, schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject, required: boolean, jsonPath: string, conceptualPath: IPathComponent[], location: FieldLocation): IterableIterator<IFact>;
    traverseSchema(schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject, jsonPath: string, conceptualPath: IPathComponent[], location: FieldLocation): IterableIterator<IFact>;
    traverseComponentSchema(schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | OpenAPIV3_1.SchemaObject | OpenAPIV3_1.ReferenceObject, schemaName: string): IterableIterator<IFact>;
    onSpecification(specification: OpenAPIV3.Document | OpenAPIV3_1.Document): IterableIterator<FactVariant<OpenApiKind.Specification>>;
    getSpecificationFact(specification: OpenAPIV3.Document | OpenAPIV3_1.Document): OpenApiSpecificationFact;
    getSchemaFact(schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject): OpenApi3SchemaFact;
    onContentForBody(schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject, contentType: string, jsonPath: string, conceptualPath: IPathComponent[], location: BodyLocation): FactVariant<OpenApiKind.Body>;
    onSchema(schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject, jsonPath: string, conceptualPath: IPathComponent[], location: SchemaLocation): FactVariant<OpenApiKind.Schema>;
    onBodyExample(example: OpenAPIV3.ExampleObject | OpenAPIV3_1.ExampleObject, contentType: string, jsonPath: string, conceptualPath: IPathComponent[], conceptualLocation: BodyExampleLocation, name?: string): FactVariant<OpenApiKind.BodyExample>;
    onField(key: string, schema: OpenAPIV3.SchemaObject | OpenAPIV3_1.SchemaObject, required: boolean, jsonPath: string, conceptualPath: IPathComponent[], location: FieldLocation): FactVariant<OpenApiKind.Field>;
    getOperationFact(operation: OpenAPIV3.OperationObject | OpenAPIV3_1.OperationObject): Omit<OpenAPIV3.OperationObject, 'parameters' | 'responses' | 'requestBody'>;
    onOperation(operation: OpenAPIV3.OperationObject | OpenAPIV3_1.OperationObject, pathPattern: string, method: string, jsonPath: string, conceptualPath: IPathComponent[], location: OperationLocation): FactVariant<OpenApiKind.Operation>;
    onRequest(request: OpenAPIV3.RequestBodyObject | OpenAPIV3_1.RequestBodyObject, jsonPath: string, conceptualPath: IPathComponent[], location: RequestLocation): FactVariant<OpenApiKind.Request>;
    getRequestFact(request: OpenAPIV3.RequestBodyObject | OpenAPIV3_1.RequestBodyObject): Omit<OpenAPIV3.RequestBodyObject, 'content'>;
    onResponse(response: OpenAPIV3.ResponseObject | OpenAPIV3_1.ResponseObject, statusCode: string, jsonPath: string, conceptualPath: IPathComponent[], location: ResponseLocation): FactVariant<OpenApiKind.Response>;
    getResponseFact(response: OpenAPIV3.ResponseObject | OpenAPIV3_1.ResponseObject): Omit<OpenAPIV3.ResponseObject, 'headers' | 'content'>;
    onComponentSchemaExample(example: any, jsonPath: string, conceptualPath: IPathComponent[], conceptualLocation: ComponentSchemaLocation): FactVariant<OpenApiKind.ComponentSchemaExample>;
    checkJsonTrail<G>(jsonPath: string, mustShareIdentity: G): void;
}
//# sourceMappingURL=openapi-traverser.d.ts.map