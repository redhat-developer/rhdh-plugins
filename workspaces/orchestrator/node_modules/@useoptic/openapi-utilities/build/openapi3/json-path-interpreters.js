"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFactForJsonPath = exports.constructFactTree = void 0;
const json_pointer_helpers_1 = require("@useoptic/json-pointer-helpers");
// We need a special json path decoder since the leading / is significant and points to the root
const decodePathWithLeadingTrail = (pointer) => pointer.split('/').map(json_pointer_helpers_1.jsonPointerHelpers.unescape);
function constructFactTree(facts) {
    const factTree = {};
    for (const fact of facts) {
        let tree = factTree;
        const pathParts = decodePathWithLeadingTrail(fact.location.jsonPath);
        for (let i = 0; i < pathParts.length; i++) {
            const part = pathParts[i];
            if (!tree[part]) {
                tree[part] = { fact: null, children: {} };
            }
            // If it's the last iteration, it's the node where the fact should live
            if (i === pathParts.length - 1) {
                tree[part].fact = fact;
            }
            // Set up the next loop
            tree = tree[part].children;
        }
    }
    return factTree;
}
exports.constructFactTree = constructFactTree;
function getFactForJsonPath(jsonPath, factTree) {
    let fact = null;
    let tree = factTree;
    for (const part of decodePathWithLeadingTrail(jsonPath)) {
        const node = tree[part];
        if (!node) {
            break;
        }
        if (node.fact) {
            fact = node.fact;
        }
        tree = node.children;
    }
    return fact;
}
exports.getFactForJsonPath = getFactForJsonPath;
//# sourceMappingURL=json-path-interpreters.js.map