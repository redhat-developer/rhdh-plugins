{"version":3,"file":"useKubernetesObjects.esm.js","sources":["../../src/hooks/useKubernetesObjects.ts"],"sourcesContent":["// This file is a replica of useKubernetesObjects.ts & auth.ts from the Backstage upstream, created to address the issue https://issues.redhat.com/browse/RHIDP-3126\n\nimport { useCallback } from 'react';\nimport useAsyncRetry from 'react-use/esm/useAsyncRetry';\nimport useInterval from 'react-use/esm/useInterval';\n\nimport { Entity } from '@backstage/catalog-model';\nimport { ApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  KubernetesRequestBody,\n  ObjectsByEntityResponse,\n} from '@backstage/plugin-kubernetes-common';\nimport {\n  KubernetesApi,\n  KubernetesAuthProvidersApi,\n} from '@backstage/plugin-kubernetes-react';\n\n/**\n *\n * @public\n */\nexport interface KubernetesObjects {\n  kubernetesObjects?: ObjectsByEntityResponse;\n  loading: boolean;\n  error?: string;\n}\n\nconst generateAuth = async (\n  entity: Entity,\n  kubernetesApi: KubernetesApi,\n  kubernetesAuthProvidersApi: KubernetesAuthProvidersApi,\n) => {\n  const clusters = await kubernetesApi.getClusters();\n\n  const authProviders: string[] = [\n    ...new Set(\n      clusters.map(\n        c =>\n          `${c.authProvider}${\n            c.oidcTokenProvider ? `.${c.oidcTokenProvider}` : ''\n          }`,\n      ),\n    ),\n  ];\n\n  let requestBody: KubernetesRequestBody = {\n    entity,\n  };\n  for (const authProviderStr of authProviders) {\n    requestBody = await kubernetesAuthProvidersApi.decorateRequestBodyForAuth(\n      authProviderStr,\n      requestBody,\n    );\n  }\n  return requestBody.auth ?? {};\n};\n\n/**\n *\n * @public\n */\nexport const useKubernetesObjects = (\n  entity: Entity,\n  kubernetesApiRef: ApiRef<KubernetesApi>,\n  kubernetesAuthProvidersApiRef: ApiRef<KubernetesAuthProvidersApi>,\n  intervalMs: number = 10000,\n): KubernetesObjects => {\n  const kubernetesApi = useApi(kubernetesApiRef);\n  const kubernetesAuthProvidersApi = useApi(kubernetesAuthProvidersApiRef);\n  const getObjects = useCallback(async (): Promise<ObjectsByEntityResponse> => {\n    const auth = await generateAuth(\n      entity,\n      kubernetesApi,\n      kubernetesAuthProvidersApi,\n    );\n    return await kubernetesApi.getObjectsByEntity({\n      auth,\n      entity,\n    });\n  }, [kubernetesApi, entity, kubernetesAuthProvidersApi]);\n\n  const { value, loading, error, retry } = useAsyncRetry(\n    () => getObjects(),\n    [getObjects],\n  );\n\n  useInterval(() => retry(), intervalMs);\n\n  return {\n    kubernetesObjects: value,\n    loading,\n    error: error?.message,\n  };\n};\n"],"names":[],"mappings":";;;;;AA2BA,MAAM,YAAe,GAAA,OACnB,MACA,EAAA,aAAA,EACA,0BACG,KAAA;AACH,EAAM,MAAA,QAAA,GAAW,MAAM,aAAA,CAAc,WAAY,EAAA,CAAA;AAEjD,EAAA,MAAM,aAA0B,GAAA;AAAA,IAC9B,GAAG,IAAI,GAAA;AAAA,MACL,QAAS,CAAA,GAAA;AAAA,QACP,CAAA,CAAA,KACE,CAAG,EAAA,CAAA,CAAE,YAAY,CAAA,EACf,CAAE,CAAA,iBAAA,GAAoB,CAAI,CAAA,EAAA,CAAA,CAAE,iBAAiB,CAAA,CAAA,GAAK,EACpD,CAAA,CAAA;AAAA,OACJ;AAAA,KACF;AAAA,GACF,CAAA;AAEA,EAAA,IAAI,WAAqC,GAAA;AAAA,IACvC,MAAA;AAAA,GACF,CAAA;AACA,EAAA,KAAA,MAAW,mBAAmB,aAAe,EAAA;AAC3C,IAAA,WAAA,GAAc,MAAM,0BAA2B,CAAA,0BAAA;AAAA,MAC7C,eAAA;AAAA,MACA,WAAA;AAAA,KACF,CAAA;AAAA,GACF;AACA,EAAO,OAAA,WAAA,CAAY,QAAQ,EAAC,CAAA;AAC9B,CAAA,CAAA;AAMO,MAAM,uBAAuB,CAClC,MAAA,EACA,gBACA,EAAA,6BAAA,EACA,aAAqB,GACC,KAAA;AACtB,EAAM,MAAA,aAAA,GAAgB,OAAO,gBAAgB,CAAA,CAAA;AAC7C,EAAM,MAAA,0BAAA,GAA6B,OAAO,6BAA6B,CAAA,CAAA;AACvE,EAAM,MAAA,UAAA,GAAa,YAAY,YAA8C;AAC3E,IAAA,MAAM,OAAO,MAAM,YAAA;AAAA,MACjB,MAAA;AAAA,MACA,aAAA;AAAA,MACA,0BAAA;AAAA,KACF,CAAA;AACA,IAAO,OAAA,MAAM,cAAc,kBAAmB,CAAA;AAAA,MAC5C,IAAA;AAAA,MACA,MAAA;AAAA,KACD,CAAA,CAAA;AAAA,GACA,EAAA,CAAC,aAAe,EAAA,MAAA,EAAQ,0BAA0B,CAAC,CAAA,CAAA;AAEtD,EAAA,MAAM,EAAE,KAAA,EAAO,OAAS,EAAA,KAAA,EAAO,OAAU,GAAA,aAAA;AAAA,IACvC,MAAM,UAAW,EAAA;AAAA,IACjB,CAAC,UAAU,CAAA;AAAA,GACb,CAAA;AAEA,EAAY,WAAA,CAAA,MAAM,KAAM,EAAA,EAAG,UAAU,CAAA,CAAA;AAErC,EAAO,OAAA;AAAA,IACL,iBAAmB,EAAA,KAAA;AAAA,IACnB,OAAA;AAAA,IACA,OAAO,KAAO,EAAA,OAAA;AAAA,GAChB,CAAA;AACF;;;;"}