{"version":3,"file":"TaskStatusTooltip.cjs.js","sources":["../../../src/components/pipeline/TaskStatusTooltip.tsx"],"sourcesContent":["import React from 'react';\n\nimport { ComputedStatus, TaskStatusTypes } from '../../types';\nimport { getRunStatusColor } from '../../utils';\n\nimport './TaskStatusTooltip.css';\n\ninterface TaskStatusToolTipProps {\n  taskStatus: TaskStatusTypes;\n}\n\nexport const TaskStatusTooltip = ({ taskStatus }: TaskStatusToolTipProps) => {\n  return (\n    <div className=\"bs-shared-task-status-tooltip\">\n      {Object.keys(ComputedStatus).map(status => {\n        const { message, color } = getRunStatusColor(status);\n        return taskStatus[status as keyof TaskStatusTypes] ? (\n          <React.Fragment key={status}>\n            <div\n              className=\"bs-shared-task-status-tooltip__legend\"\n              style={{ background: color }}\n            />\n            <div>\n              {status === ComputedStatus.PipelineNotStarted ||\n              status === ComputedStatus.FailedToStart\n                ? message\n                : `${taskStatus[status as keyof TaskStatusTypes]} ${message}`}\n            </div>\n          </React.Fragment>\n        ) : null;\n      })}\n    </div>\n  );\n};\n"],"names":["React","ComputedStatus","getRunStatusColor"],"mappings":";;;;;;;;;;;;;;AAWO,MAAM,iBAAoB,GAAA,CAAC,EAAE,UAAA,EAAyC,KAAA;AAC3E,EACE,uBAAAA,sBAAA,CAAA,aAAA,CAAC,SAAI,SAAU,EAAA,+BAAA,EAAA,EACZ,OAAO,IAAK,CAAAC,6BAAc,CAAE,CAAA,GAAA,CAAI,CAAU,MAAA,KAAA;AACzC,IAAA,MAAM,EAAE,OAAA,EAAS,KAAM,EAAA,GAAIC,2BAAkB,MAAM,CAAA,CAAA;AACnD,IAAO,OAAA,UAAA,CAAW,MAA+B,CAC/C,mBAAAF,sBAAA,CAAA,aAAA,CAACA,uBAAM,QAAN,EAAA,EAAe,KAAK,MACnB,EAAA,kBAAAA,sBAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,uCAAA;AAAA,QACV,KAAA,EAAO,EAAE,UAAA,EAAY,KAAM,EAAA;AAAA,OAAA;AAAA,uBAE5BA,sBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,WAAWC,6BAAe,CAAA,kBAAA,IAC3B,WAAWA,6BAAe,CAAA,aAAA,GACtB,OACA,GAAA,CAAA,EAAG,WAAW,MAA+B,CAAC,IAAI,OAAO,CAAA,CAC/D,CACF,CACE,GAAA,IAAA,CAAA;AAAA,GACL,CACH,CAAA,CAAA;AAEJ;;;;"}