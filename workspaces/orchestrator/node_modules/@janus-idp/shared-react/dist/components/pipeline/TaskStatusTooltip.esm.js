import React from 'react';
import { ComputedStatus } from '../../types/pipeline/computedStatus.esm.js';
import 'date-fns';
import { getRunStatusColor } from '../../utils/pipeline/pipeline.esm.js';
import '../../utils/unit-conversion/format-byte-size.esm.js';
import 'file-saver';
import './TaskStatusTooltip.css.esm.js';

const TaskStatusTooltip = ({ taskStatus }) => {
  return /* @__PURE__ */ React.createElement("div", { className: "bs-shared-task-status-tooltip" }, Object.keys(ComputedStatus).map((status) => {
    const { message, color } = getRunStatusColor(status);
    return taskStatus[status] ? /* @__PURE__ */ React.createElement(React.Fragment, { key: status }, /* @__PURE__ */ React.createElement(
      "div",
      {
        className: "bs-shared-task-status-tooltip__legend",
        style: { background: color }
      }
    ), /* @__PURE__ */ React.createElement("div", null, status === ComputedStatus.PipelineNotStarted || status === ComputedStatus.FailedToStart ? message : `${taskStatus[status]} ${message}`)) : null;
  }));
};

export { TaskStatusTooltip };
//# sourceMappingURL=TaskStatusTooltip.esm.js.map
