'use strict';

var React = require('react');
var cx = require('classnames');
require('./HorizontalStackedBars.css.cjs.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);
var cx__default = /*#__PURE__*/_interopDefaultCompat(cx);

const HorizontalStackedBars = ({
  id,
  barGap,
  height,
  inline,
  values,
  width,
  onClick
}) => /* @__PURE__ */ React__default.default.createElement(
  "div",
  {
    id: `horizontal-stacked-bars-${id}`,
    "data-testid": `horizontal-stacked-bars-${id}`,
    className: cx__default.default("bs-shared-horizontal-stacked-bars", {
      "is-inline": inline
    }),
    style: { height, width, ["--bar-gap"]: barGap && `${barGap}px` },
    onClick
  },
  /* @__PURE__ */ React__default.default.createElement("div", { className: "bs-shared-horizontal-stacked-bars__bars" }, values.map(({ color, name, size }) => /* @__PURE__ */ React__default.default.createElement(
    "div",
    {
      key: name,
      className: "bs-shared-horizontal-stacked-bars__data-bar",
      style: {
        background: color,
        flexGrow: size
      }
    }
  )))
);

exports.HorizontalStackedBars = HorizontalStackedBars;
//# sourceMappingURL=HorizontalStackedBars.cjs.js.map
