import React, { createContext, useContext } from 'react';

const DrawerContext = createContext({
  drawerData: {},
  setDrawerData: () => {
  },
  openDrawer: false,
  setOpenDrawer: () => {
  }
});
const DrawerContextProvider = ({
  children
}) => {
  const [openDrawer, setOpenDrawer] = React.useState(false);
  const [drawerData, setDrawerData] = React.useState({});
  const drawerContextProviderValue = React.useMemo(
    () => ({
      openDrawer,
      setOpenDrawer,
      drawerData,
      setDrawerData
    }),
    [openDrawer, setOpenDrawer, drawerData, setDrawerData]
  );
  return /* @__PURE__ */ React.createElement(DrawerContext.Provider, { value: drawerContextProviderValue }, children);
};
const useDrawer = () => useContext(DrawerContext);

export { DrawerContext, DrawerContextProvider, useDrawer };
//# sourceMappingURL=DrawerContext.esm.js.map
