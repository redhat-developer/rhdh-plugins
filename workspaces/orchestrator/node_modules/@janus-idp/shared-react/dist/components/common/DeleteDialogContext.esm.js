import React, { createContext, useContext } from 'react';

const DeleteDialogContext = createContext({
  deleteComponent: {},
  setDeleteComponent: () => {
  },
  openDialog: false,
  setOpenDialog: () => {
  }
});
const DeleteDialogContextProvider = (props) => {
  const [openDialog, setOpenDialog] = React.useState(false);
  const [deleteComponent, setDeleteComponent] = React.useState({});
  const deleteDialogContextProviderValue = React.useMemo(
    () => ({
      openDialog,
      setOpenDialog,
      deleteComponent,
      setDeleteComponent
    }),
    [openDialog, setOpenDialog, deleteComponent, setDeleteComponent]
  );
  return /* @__PURE__ */ React.createElement(DeleteDialogContext.Provider, { value: deleteDialogContextProviderValue }, props.children);
};
const useDeleteDialog = () => useContext(DeleteDialogContext);

export { DeleteDialogContext, DeleteDialogContextProvider, useDeleteDialog };
//# sourceMappingURL=DeleteDialogContext.esm.js.map
