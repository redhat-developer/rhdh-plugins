import React from 'react';

const MEMO = {};
const CamelCaseWrap = ({ value, dataTest }) => {
  if (!value) {
    return "-";
  }
  if (MEMO[value]) {
    return MEMO[value];
  }
  const words = value.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g);
  const rendered = /* @__PURE__ */ React.createElement("span", { "data-testid": dataTest }, words?.map((word, i) => /* @__PURE__ */ React.createElement(React.Fragment, { key: word }, word, i !== words.length - 1 && /* @__PURE__ */ React.createElement("wbr", null))));
  MEMO[value] = rendered;
  return rendered;
};

export { CamelCaseWrap, CamelCaseWrap as default };
//# sourceMappingURL=CamelCaseWrap.esm.js.map
