{"version":3,"file":"Status.cjs.js","sources":["../../../src/components/common/Status.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  StatusClassKey,\n  StatusError,\n  StatusOK,\n  StatusPending,\n  StatusRunning,\n  StatusWarning,\n} from '@backstage/core-components';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport OffIcon from '@mui/icons-material/DoNotDisturbOnOutlined';\nimport UnknownIcon from '@mui/icons-material/HelpOutline';\nimport AngleDoubleRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\nimport BanIcon from '@mui/icons-material/NotInterestedOutlined';\nimport PauseIcon from '@mui/icons-material/PauseCircleOutlineOutlined';\nimport cx from 'classnames';\n\nimport { StatusIconAndText } from './StatusIconAndText';\n\nconst useStyles = makeStyles<Theme>(theme =>\n  createStyles({\n    iconStyles: {\n      height: '0.8em',\n      width: '0.8em',\n      top: '0.125em',\n      position: 'relative',\n      flexShrink: 0,\n      marginRight: theme.spacing(0.6),\n    },\n  }),\n);\n\nconst DASH = '-';\n\nconst useStatusStyles = makeStyles(theme => ({\n  success: {\n    '& svg': {\n      fill: theme.palette.status.ok,\n    },\n  },\n  running: {\n    '& svg': {\n      fill: theme.palette.status.running,\n    },\n  },\n  pending: {\n    '& svg': {\n      fill: theme.palette.status.pending,\n    },\n  },\n  warning: {\n    '& svg': {\n      fill: theme.palette.status.warning,\n    },\n  },\n  error: {\n    '& svg': {\n      fill: theme.palette.status.error,\n    },\n  },\n}));\n\nconst StatusIcon = ({\n  statusKey,\n  className,\n}: {\n  statusKey: StatusClassKey;\n  className?: string;\n}) => {\n  const statusStyles = useStatusStyles();\n\n  switch (statusKey) {\n    case 'ok':\n      return (\n        <g className={cx(statusStyles.success, className)}>\n          <StatusOK />{' '}\n        </g>\n      );\n    case 'pending':\n      return (\n        <g className={cx(statusStyles.pending, className)}>\n          <StatusPending />{' '}\n        </g>\n      );\n    case 'running':\n      return (\n        <g className={cx(statusStyles.running, className)}>\n          <StatusRunning />{' '}\n        </g>\n      );\n    case 'warning':\n      return (\n        <g className={cx(statusStyles.warning, className)}>\n          <StatusWarning />{' '}\n        </g>\n      );\n    case 'error':\n      return (\n        <g className={cx(statusStyles.error, className)}>\n          <StatusError />{' '}\n        </g>\n      );\n    default:\n      return null;\n  }\n};\n\n/**\n * Component for displaying a status message\n * @param {string} status - type of status to be displayed\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [displayStatusText] - (optional) use a different text to display the status\n\n * @example\n * ```tsx\n * <Status status='Warning' />\n * ```\n */\nexport const Status = ({\n  status,\n  iconOnly,\n  className,\n  displayStatusText,\n  dataTestId,\n  iconStyles,\n  iconClassName,\n}: {\n  status: string | null;\n  displayStatusText?: string;\n  iconOnly?: boolean;\n  className?: string;\n  dataTestId?: string;\n  iconStyles?: React.CSSProperties;\n  iconClassName?: string;\n}): React.ReactElement => {\n  const classes = useStyles();\n  const statusProps = {\n    title: displayStatusText || status || '',\n    iconOnly,\n    className,\n    dataTestId,\n  };\n\n  switch (status) {\n    case 'New':\n    case 'Idle':\n    case 'Pending':\n    case 'PipelineNotStarted':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<StatusIcon statusKey=\"pending\" className={iconClassName} />}\n        />\n      );\n\n    case 'In Progress':\n    case 'Progress':\n    case 'Progressing':\n    case 'Installing':\n    case 'InstallReady':\n    case 'Replacing':\n    case 'Running':\n    case 'Updating':\n    case 'Upgrading':\n    case 'PendingInstall':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<StatusIcon statusKey=\"running\" className={iconClassName} />}\n        />\n      );\n\n    case 'Cancelled':\n    case 'Deleting':\n    case 'Expired':\n    case 'Not Ready':\n    case 'Cancelling':\n    case 'Terminating':\n    case 'Superseded':\n    case 'Uninstalling':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<BanIcon className={classes.iconStyles} style={iconStyles} />}\n        />\n      );\n\n    case 'Warning':\n    case 'RequiresApproval':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<StatusIcon statusKey=\"warning\" className={iconClassName} />}\n        />\n      );\n\n    case 'ImagePullBackOff':\n    case 'Error':\n    case 'Failed':\n    case 'Failure':\n    case 'CrashLoopBackOff':\n    case 'ErrImagePull':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<StatusIcon statusKey=\"error\" className={iconClassName} />}\n        />\n      );\n\n    case 'Completed':\n    case 'Succeeded':\n    case 'Synced':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<StatusIcon statusKey=\"ok\" className={iconClassName} />}\n        />\n      );\n\n    case 'Skipped':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={\n            <AngleDoubleRightIcon\n              className={classes.iconStyles}\n              style={iconStyles}\n            />\n          }\n        />\n      );\n    case 'Paused':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<PauseIcon className={classes.iconStyles} style={iconStyles} />}\n        />\n      );\n    case 'Stopped':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={<OffIcon className={classes.iconStyles} style={iconStyles} />}\n        />\n      );\n\n    case 'Unknown':\n      return (\n        <StatusIconAndText\n          {...statusProps}\n          icon={\n            <UnknownIcon className={classes.iconStyles} style={iconStyles} />\n          }\n        />\n      );\n\n    default:\n      return <>{status || DASH}</>;\n  }\n};\n"],"names":["makeStyles","createStyles","React","cx","StatusOK","StatusPending","StatusRunning","StatusWarning","StatusError","StatusIconAndText","BanIcon","AngleDoubleRightIcon","PauseIcon","OffIcon","UnknownIcon"],"mappings":"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"}