'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var cx = require('classnames');
var CamelCaseWrap = require('./CamelCaseWrap.cjs.js');
require('./StatusIconAndText.css.cjs.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);
var cx__default = /*#__PURE__*/_interopDefaultCompat(cx);

const DASH = "-";
const StatusIconAndText = ({
  icon,
  title,
  spin,
  iconOnly,
  className,
  dataTestId
}) => {
  if (!title) {
    return /* @__PURE__ */ React__default.default.createElement(React__default.default.Fragment, null, DASH);
  }
  if (iconOnly) {
    return /* @__PURE__ */ React__default.default.createElement(React__default.default.Fragment, null, React__default.default.cloneElement(icon, {
      "data-testid": dataTestId ?? `icon-only-${title}`,
      className: icon.props.className
    }));
  }
  return /* @__PURE__ */ React__default.default.createElement(
    "span",
    {
      className: cx__default.default("bs-shared-icon-and-text", className),
      "data-testid": dataTestId ?? `icon-with-title-${title}`,
      title
    },
    React__default.default.cloneElement(icon, {
      className: cx__default.default(
        spin && "fa-spin",
        icon.props.className,
        "bs-shared-icon-and-text__icon bs-shared-icon-flex-child"
      )
    }),
    /* @__PURE__ */ React__default.default.createElement(CamelCaseWrap.CamelCaseWrap, { value: title, dataTest: "status-text" })
  );
};

exports.StatusIconAndText = StatusIconAndText;
exports.default = StatusIconAndText;
//# sourceMappingURL=StatusIconAndText.cjs.js.map
