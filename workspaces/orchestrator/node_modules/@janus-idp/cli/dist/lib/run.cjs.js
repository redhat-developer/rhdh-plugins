'use strict';

var errors = require('@backstage/errors');
var child_process = require('child_process');
var util = require('util');
var errors$1 = require('./errors.cjs.js');

const execFile = util.promisify(child_process.execFile);
async function runPlain(cmd, ...args) {
  try {
    const { stdout } = await execFile(cmd, args, { shell: true });
    return stdout.trim();
  } catch (error) {
    errors.assertError(error);
    if ("stderr" in error) {
      process.stderr.write(error.stderr);
    }
    if (typeof error.code === "number") {
      throw new errors$1.ExitCodeError(error.code, [cmd, ...args].join(" "));
    }
    throw new errors.ForwardedError("Unknown execution error", error);
  }
}

exports.execFile = execFile;
exports.runPlain = runPlain;
//# sourceMappingURL=run.cjs.js.map
