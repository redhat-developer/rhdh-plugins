{"version":3,"file":"useRole.esm.js","sources":["../../src/hooks/useRole.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useAsync } from 'react-use';\n\nimport { useApi } from '@backstage/core-plugin-api';\n\nimport { Role } from '@backstage-community/plugin-rbac-common';\n\nimport { rbacApiRef } from '../api/RBACBackendClient';\n\nexport const useRole = (\n  roleEntityRef: string,\n): {\n  loading: boolean;\n  role: Role | undefined;\n  roleError: Error;\n} => {\n  const rbacApi = useApi(rbacApiRef);\n  const {\n    value: roles,\n    loading,\n    error: roleError,\n  } = useAsync(async () => await rbacApi.getRole(roleEntityRef));\n\n  return {\n    loading,\n    role: Array.isArray(roles) ? roles[0] : undefined,\n    roleError: (roleError as Error) || {\n      name: (roles as Response)?.status,\n      message: `Error fetching the role. ${(roles as Response)?.statusText}`,\n    },\n  };\n};\n"],"names":[],"mappings":";;;;AAuBa,MAAA,OAAA,GAAU,CACrB,aAKG,KAAA;AACH,EAAM,MAAA,OAAA,GAAU,OAAO,UAAU,CAAA;AACjC,EAAM,MAAA;AAAA,IACJ,KAAO,EAAA,KAAA;AAAA,IACP,OAAA;AAAA,IACA,KAAO,EAAA;AAAA,MACL,QAAS,CAAA,YAAY,MAAM,OAAQ,CAAA,OAAA,CAAQ,aAAa,CAAC,CAAA;AAE7D,EAAO,OAAA;AAAA,IACL,OAAA;AAAA,IACA,MAAM,KAAM,CAAA,OAAA,CAAQ,KAAK,CAAI,GAAA,KAAA,CAAM,CAAC,CAAI,GAAA,KAAA,CAAA;AAAA,IACxC,WAAY,SAAuB,IAAA;AAAA,MACjC,MAAO,KAAoB,EAAA,MAAA;AAAA,MAC3B,OAAA,EAAS,CAA6B,yBAAA,EAAA,KAAA,EAAoB,UAAU,CAAA;AAAA;AACtE,GACF;AACF;;;;"}