{"version":3,"file":"plugin.esm.js","sources":["../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  configApiRef,\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\n\nimport {\n  LicensedUsersAPIClient,\n  licensedUsersApiRef,\n} from './api/LicensedUsersClient';\nimport { rbacApiRef, RBACBackendClient } from './api/RBACBackendClient';\nimport { createRoleRouteRef, roleRouteRef, rootRouteRef } from './routes';\n\nexport const rbacPlugin = createPlugin({\n  id: 'rbac',\n  routes: {\n    root: rootRouteRef,\n    role: roleRouteRef,\n    createRole: createRoleRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: rbacApiRef,\n      deps: {\n        configApi: configApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ configApi, identityApi }) =>\n        new RBACBackendClient({ configApi, identityApi }),\n    }),\n    createApiFactory({\n      api: licensedUsersApiRef,\n      deps: {\n        configApi: configApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ configApi, identityApi }) =>\n        new LicensedUsersAPIClient({ configApi, identityApi }),\n    }),\n  ],\n});\n\nexport const RbacPage = rbacPlugin.provide(\n  createRoutableExtension({\n    name: 'RbacPage',\n    component: () => import('./components').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const Administration = rbacPlugin.provide(\n  createComponentExtension({\n    name: 'Administration',\n    component: {\n      lazy: () => import('./components').then(m => m.Administration),\n    },\n  }),\n);\n"],"names":[],"mappings":";;;;;AA+BO,MAAM,aAAa,YAAa,CAAA;AAAA,EACrC,EAAI,EAAA,MAAA;AAAA,EACJ,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA,YAAA;AAAA,IACN,IAAM,EAAA,YAAA;AAAA,IACN,UAAY,EAAA;AAAA,GACd;AAAA,EACA,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,UAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,SAAW,EAAA,YAAA;AAAA,QACX,WAAa,EAAA;AAAA,OACf;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,SAAW,EAAA,WAAA,EACrB,KAAA,IAAI,iBAAkB,CAAA,EAAE,SAAW,EAAA,WAAA,EAAa;AAAA,KACnD,CAAA;AAAA,IACD,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,mBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,SAAW,EAAA,YAAA;AAAA,QACX,WAAa,EAAA;AAAA,OACf;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,SAAW,EAAA,WAAA,EACrB,KAAA,IAAI,sBAAuB,CAAA,EAAE,SAAW,EAAA,WAAA,EAAa;AAAA,KACxD;AAAA;AAEL,CAAC;AAEM,MAAM,WAAW,UAAW,CAAA,OAAA;AAAA,EACjC,uBAAwB,CAAA;AAAA,IACtB,IAAM,EAAA,UAAA;AAAA,IACN,SAAA,EAAW,MAAM,OAAO,2BAAc,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,MAAM,CAAA;AAAA,IAC1D,UAAY,EAAA;AAAA,GACb;AACH;AAEO,MAAM,iBAAiB,UAAW,CAAA,OAAA;AAAA,EACvC,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,gBAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAA,EAAM,MAAM,OAAO,2BAAc,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,cAAc;AAAA;AAC/D,GACD;AACH;;;;"}