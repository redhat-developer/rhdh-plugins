import React from 'react';
import { Routes, Route } from 'react-router-dom';
import { ErrorPage } from '@backstage/core-components';
import { useApi, configApiRef } from '@backstage/core-plugin-api';
import { RequirePermission } from '@backstage/plugin-permission-react';
import { policyEntityCreatePermission, policyEntityUpdatePermission } from '@backstage-community/plugin-rbac-common';
import { roleRouteRef, createRoleRouteRef, editRoleRouteRef } from '../routes.esm.js';
import { CreateRolePage } from './CreateRole/CreateRolePage.esm.js';
import { EditRolePage } from './CreateRole/EditRolePage.esm.js';
import { RbacPage } from './RbacPage.esm.js';
import { RoleOverviewPage } from './RoleOverview/RoleOverviewPage.esm.js';
import { ToastContextProvider } from './ToastContext.esm.js';

const Router = ({ useHeader = true }) => {
  const config = useApi(configApiRef);
  const isRBACPluginEnabled = config.getOptionalBoolean("permission.enabled");
  if (!isRBACPluginEnabled) {
    return /* @__PURE__ */ React.createElement(
      ErrorPage,
      {
        status: "404",
        statusMessage: "Enable the RBAC backend plugin to use this feature.",
        additionalInfo: "To enable RBAC, set `permission.enabled` to `true` in the app-config file."
      }
    );
  }
  return /* @__PURE__ */ React.createElement(ToastContextProvider, null, /* @__PURE__ */ React.createElement(Routes, null, /* @__PURE__ */ React.createElement(Route, { path: "/", element: /* @__PURE__ */ React.createElement(RbacPage, { useHeader }) }), /* @__PURE__ */ React.createElement(Route, { path: roleRouteRef.path, element: /* @__PURE__ */ React.createElement(RoleOverviewPage, null) }), /* @__PURE__ */ React.createElement(
    Route,
    {
      path: createRoleRouteRef.path,
      element: /* @__PURE__ */ React.createElement(
        RequirePermission,
        {
          permission: policyEntityCreatePermission,
          resourceRef: policyEntityCreatePermission.resourceType
        },
        /* @__PURE__ */ React.createElement(CreateRolePage, null)
      )
    }
  ), /* @__PURE__ */ React.createElement(
    Route,
    {
      path: editRoleRouteRef.path,
      element: /* @__PURE__ */ React.createElement(
        RequirePermission,
        {
          permission: policyEntityUpdatePermission,
          resourceRef: policyEntityUpdatePermission.resourceType
        },
        /* @__PURE__ */ React.createElement(EditRolePage, null)
      )
    }
  )));
};

export { Router };
//# sourceMappingURL=Router.esm.js.map
