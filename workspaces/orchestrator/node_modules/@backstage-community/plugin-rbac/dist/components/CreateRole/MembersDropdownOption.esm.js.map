{"version":3,"file":"MembersDropdownOption.esm.js","sources":["../../../src/components/CreateRole/MembersDropdownOption.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport { AutocompleteRenderOptionState } from '@mui/material/Autocomplete';\nimport Typography from '@mui/material/Typography';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\n\nimport { SelectedMember } from './types';\n\ntype MembersDropdownOptionProps = {\n  option: SelectedMember;\n  state: AutocompleteRenderOptionState;\n  props: React.HTMLAttributes<HTMLLIElement>;\n};\n\nexport const MembersDropdownOption = ({\n  props,\n  option,\n  state,\n}: MembersDropdownOptionProps) => {\n  const { inputValue } = state;\n  const { label, etag } = option;\n  const matches = match(label, inputValue, { insideWords: true });\n  const parts = parse(label, matches);\n\n  return (\n    <li\n      {...props}\n      key={`${etag}`}\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n      }}\n    >\n      <Typography component=\"span\">\n        {parts.map(part => (\n          <Typography\n            key={`${part.text}-${etag}`}\n            component=\"span\"\n            sx={{\n              fontWeight: part.highlight ? 400 : 700,\n              color: theme => theme.palette.text.primary,\n            }}\n            data-testid={option.label}\n          >\n            {part.text}\n          </Typography>\n        ))}\n      </Typography>\n      <Typography sx={{ color: theme => theme.palette.text.secondary }}>\n        {option.description}\n      </Typography>{' '}\n    </li>\n  );\n};\n"],"names":[],"mappings":";;;;;AA8BO,MAAM,wBAAwB,CAAC;AAAA,EACpC,KAAA;AAAA,EACA,MAAA;AAAA,EACA;AACF,CAAkC,KAAA;AAChC,EAAM,MAAA,EAAE,YAAe,GAAA,KAAA;AACvB,EAAM,MAAA,EAAE,KAAO,EAAA,IAAA,EAAS,GAAA,MAAA;AACxB,EAAA,MAAM,UAAU,KAAM,CAAA,KAAA,EAAO,YAAY,EAAE,WAAA,EAAa,MAAM,CAAA;AAC9D,EAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,KAAA,EAAO,OAAO,CAAA;AAElC,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,IAAA;AAAA,IAAA;AAAA,MACE,GAAG,KAAA;AAAA,MACJ,GAAA,EAAK,GAAG,IAAI,CAAA,CAAA;AAAA,MACZ,KAAO,EAAA;AAAA,QACL,OAAS,EAAA,MAAA;AAAA,QACT,aAAe,EAAA,QAAA;AAAA,QACf,UAAY,EAAA;AAAA;AACd,KAAA;AAAA,wCAEC,UAAW,EAAA,EAAA,SAAA,EAAU,MACnB,EAAA,EAAA,KAAA,CAAM,IAAI,CACT,IAAA,qBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,GAAK,EAAA,CAAA,EAAG,IAAK,CAAA,IAAI,IAAI,IAAI,CAAA,CAAA;AAAA,QACzB,SAAU,EAAA,MAAA;AAAA,QACV,EAAI,EAAA;AAAA,UACF,UAAA,EAAY,IAAK,CAAA,SAAA,GAAY,GAAM,GAAA,GAAA;AAAA,UACnC,KAAO,EAAA,CAAA,KAAA,KAAS,KAAM,CAAA,OAAA,CAAQ,IAAK,CAAA;AAAA,SACrC;AAAA,QACA,eAAa,MAAO,CAAA;AAAA,OAAA;AAAA,MAEnB,IAAK,CAAA;AAAA,KAET,CACH,CAAA;AAAA,oBACC,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,EAAI,EAAA,EAAE,KAAO,EAAA,CAAA,KAAA,KAAS,KAAM,CAAA,OAAA,CAAQ,IAAK,CAAA,SAAA,EAClD,EAAA,EAAA,MAAA,CAAO,WACV,CAAA;AAAA,IAAc;AAAA,GAChB;AAEJ;;;;"}