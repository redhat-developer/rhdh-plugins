{"version":3,"file":"PermissionPoliciesFormRow.esm.js","sources":["../../../src/components/CreateRole/PermissionPoliciesFormRow.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport ChecklistRtlIcon from '@mui/icons-material/ChecklistRtl';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport FormLabel from '@mui/material/FormLabel';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\nimport { FormikErrors } from 'formik';\n\nimport { PermissionsData } from '../../types';\nimport { getRulesNumber } from '../../utils/create-role-utils';\nimport { ConditionalAccessSidebar } from '../ConditionalAccess/ConditionalAccessSidebar';\nimport { ConditionRules, ConditionsData } from '../ConditionalAccess/types';\nimport { PoliciesCheckboxGroup } from './PoliciesCheckboxGroup';\nimport { PluginsPermissionPoliciesData } from './types';\n\ntype PermissionPoliciesFormRowProps = {\n  permissionPoliciesRowData: PermissionsData;\n  permissionPoliciesData?: PluginsPermissionPoliciesData;\n  permissionPoliciesRowError: FormikErrors<PermissionsData>;\n  rowCount: number;\n  rowName: string;\n  conditionRules: ConditionRules;\n  onRemove: () => void;\n  onChangePlugin: (plugin: string) => void;\n  onChangePermission: (\n    permission: string,\n    isResourced: boolean,\n    policies?: string[],\n  ) => void;\n  onChangePolicy: (isChecked: boolean, policyIndex: number) => void;\n  handleBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  getPermissionDisabled: (permission: string) => boolean;\n  onAddConditions: (conditions?: ConditionsData) => void;\n};\n\nexport const PermissionPoliciesFormRow = ({\n  permissionPoliciesRowData,\n  permissionPoliciesData,\n  permissionPoliciesRowError,\n  rowCount,\n  rowName,\n  conditionRules,\n  onRemove,\n  onChangePermission,\n  onChangePolicy,\n  onChangePlugin,\n  handleBlur,\n  getPermissionDisabled,\n  onAddConditions,\n}: PermissionPoliciesFormRowProps) => {\n  const { plugin: pluginError, permission: permissionError } =\n    permissionPoliciesRowError;\n  const { data: conditionRulesData, error: conditionRulesError } =\n    conditionRules;\n  const totalRules = getRulesNumber(permissionPoliciesRowData.conditions);\n\n  const [sidebarOpen, setSidebarOpen] = React.useState<boolean>(false);\n\n  const tooltipTitle = () => (\n    <div>\n      <Typography component=\"p\" align=\"center\">\n        Define access conditions for the selected resource type using Rules.\n        Rules vary by resource type.{' '}\n        <b>Users have access to the resource type content by default</b> unless\n        configured otherwise.\n      </Typography>\n    </div>\n  );\n\n  const getTotalRules = (): string => {\n    let accessMessage = 'Configure access';\n\n    if (totalRules > 0) {\n      accessMessage += ` (${totalRules} ${totalRules > 1 ? 'rules' : 'rule'})`;\n    }\n    return accessMessage;\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex', flexFlow: 'column', gap: '15px' }}>\n        <FormLabel\n          style={{\n            fontWeight: 800,\n            fontSize: '0.8rem',\n          }}\n        >\n          What can users/groups access?\n        </FormLabel>\n        <div\n          style={{\n            display: 'flex',\n            gap: '20px',\n            marginBottom: '15px',\n          }}\n        >\n          <Autocomplete\n            options={permissionPoliciesData?.plugins ?? []}\n            style={{ width: '35%', flexGrow: '1' }}\n            value={permissionPoliciesRowData.plugin || null}\n            onChange={(_e, value) => {\n              onChangePlugin(value ?? '');\n            }}\n            renderInput={(params: any) => (\n              <TextField\n                {...params}\n                label=\"Plugin\"\n                name={`${rowName}.plugin`}\n                variant=\"outlined\"\n                placeholder=\"Select a plugin\"\n                error={!!pluginError}\n                helperText={pluginError ?? ''}\n                onBlur={handleBlur}\n                required\n              />\n            )}\n          />\n          <Autocomplete\n            disabled={!permissionPoliciesRowData.plugin}\n            options={\n              permissionPoliciesData?.pluginsPermissions?.[\n                permissionPoliciesRowData.plugin\n              ]?.permissions ?? []\n            }\n            style={{ width: '35%', flexGrow: '1' }}\n            value={permissionPoliciesRowData.permission || null}\n            onChange={(_e, value) =>\n              onChangePermission(\n                value ?? '',\n                permissionPoliciesData?.pluginsPermissions?.[\n                  permissionPoliciesRowData.plugin\n                ]?.policies[value ?? '']?.isResourced ?? false,\n                value\n                  ? permissionPoliciesData?.pluginsPermissions?.[\n                      permissionPoliciesRowData.plugin\n                    ]?.policies?.[value].policies\n                  : undefined,\n              )\n            }\n            getOptionDisabled={getPermissionDisabled}\n            getOptionLabel={option => option || ''}\n            renderInput={(params: any) => (\n              <TextField\n                {...params}\n                label=\"Resource type\"\n                name={`${rowName}.permission`}\n                variant=\"outlined\"\n                placeholder=\"Select a resource type\"\n                error={!!permissionError}\n                helperText={permissionError ?? ''}\n                onBlur={handleBlur}\n                required\n              />\n            )}\n          />\n          <div style={{ width: '23%', alignSelf: 'center', flexGrow: 1 }}>\n            {permissionPoliciesRowData.isResourced &&\n              !!conditionRulesData?.[`${permissionPoliciesRowData.plugin}`]?.[\n                `${permissionPoliciesRowData.permission}`\n              ]?.rules.length && (\n                <IconButton\n                  title=\"\"\n                  color=\"primary\"\n                  hidden={\n                    !permissionPoliciesData?.pluginsPermissions[\n                      permissionPoliciesRowData.plugin\n                    ]?.policies[permissionPoliciesRowData.permission]\n                      ?.isResourced\n                  }\n                  aria-label=\"configure-access\"\n                  sx={{\n                    fontSize: theme => theme.typography.fontSize,\n                  }}\n                  onClick={() => setSidebarOpen(true)}\n                  disabled={!!conditionRulesError}\n                >\n                  <ChecklistRtlIcon fontSize=\"small\" />\n                  {getTotalRules()}\n                  &nbsp;\n                  <Tooltip title={tooltipTitle()} placement=\"top\">\n                    <HelpOutlineIcon fontSize=\"inherit\" />\n                  </Tooltip>\n                </IconButton>\n              )}\n          </div>\n          <IconButton\n            title=\"Remove\"\n            sx={{\n              color: theme => theme.palette.grey[500],\n              flexGrow: 0,\n              alignSelf: 'center',\n            }}\n            onClick={() => onRemove()}\n            disabled={rowCount === 1}\n            data-testid={`${rowName}-remove`}\n          >\n            <RemoveIcon id={`${rowName}-remove`} />\n          </IconButton>\n        </div>\n      </div>\n      <PoliciesCheckboxGroup\n        permissionPoliciesRowData={permissionPoliciesRowData}\n        onChangePolicy={onChangePolicy}\n        rowName={rowName}\n      />\n      <ConditionalAccessSidebar\n        open={sidebarOpen}\n        onClose={() => {\n          setSidebarOpen(false);\n        }}\n        onSave={(conditions?: ConditionsData) => {\n          onAddConditions(conditions);\n          setSidebarOpen(false);\n        }}\n        conditionsFormVal={permissionPoliciesRowData.conditions}\n        selPluginResourceType={permissionPoliciesRowData.permission}\n        conditionRulesData={\n          conditionRulesData?.[`${permissionPoliciesRowData.plugin}`]?.[\n            `${permissionPoliciesRowData.permission}`\n          ]\n        }\n      />\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}