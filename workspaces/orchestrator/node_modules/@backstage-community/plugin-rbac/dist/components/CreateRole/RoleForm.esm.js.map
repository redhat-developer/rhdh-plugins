{"version":3,"file":"RoleForm.esm.js","sources":["../../../src/components/CreateRole/RoleForm.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { SimpleStepper, SimpleStepperStep } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Divider from '@mui/material/Divider';\nimport Paper from '@mui/material/Paper';\nimport { FormikErrors, FormikHelpers, useFormik } from 'formik';\n\nimport { rbacApiRef } from '../../api/RBACBackendClient';\nimport { MemberEntity, PermissionsData, RoleError } from '../../types';\nimport {\n  getConditionalPermissionPoliciesData,\n  getNewConditionalPolicies,\n  getPermissionPoliciesData,\n  getRemovedConditionalPoliciesIds,\n  getRoleData,\n  getUpdatedConditionalPolicies,\n  validationSchema,\n} from '../../utils/create-role-utils';\nimport { isSamePermissionPolicy, onlyInLeft } from '../../utils/rbac-utils';\nimport {\n  createConditions,\n  createPermissions,\n  modifyConditions,\n  removeConditions,\n  removePermissions,\n} from '../../utils/role-form-utils';\nimport { AddedMembersTable } from './AddedMembersTable';\nimport { AddMembersForm } from './AddMembersForm';\nimport { PermissionPoliciesForm } from './PermissionPoliciesForm';\nimport { ReviewStep } from './ReviewStep';\nimport { RoleDetailsForm } from './RoleDetailsForm';\nimport { RoleFormValues } from './types';\n\ntype RoleFormProps = {\n  membersData: { members: MemberEntity[]; loading: boolean; error: Error };\n  titles: {\n    formTitle: string;\n    nameAndDescriptionTitle: string;\n    usersAndGroupsTitle: string;\n    permissionPoliciesTitle: string;\n  };\n  submitLabel?: string;\n  roleName?: string;\n  step?: number;\n  initialValues: RoleFormValues;\n};\n\nexport const RoleForm = ({\n  roleName,\n  step,\n  titles,\n  membersData,\n  submitLabel,\n  initialValues,\n}: RoleFormProps) => {\n  const [activeStep, setActiveStep] = React.useState<number>(step || 0);\n  const navigate = useNavigate();\n  const rbacApi = useApi(rbacApiRef);\n\n  const navigateTo = (rName?: string, action?: string) => {\n    const currentRoleName = rName || roleName;\n    const stateProp =\n      currentRoleName && action\n        ? {\n            state: {\n              toastMessage: `Role ${currentRoleName} ${action} successfully`,\n            },\n          }\n        : undefined;\n    if (step && currentRoleName) {\n      const { kind, namespace, name } = parseEntityRef(currentRoleName);\n      navigate(`../roles/${kind}/${namespace}/${name}`, stateProp);\n    } else {\n      navigate('..', stateProp);\n    }\n  };\n\n  const updateRole = async (\n    name: string,\n    values: RoleFormValues,\n    formikHelpers: FormikHelpers<RoleFormValues>,\n  ) => {\n    try {\n      const newData = getRoleData(values);\n      const newName = newData.name;\n      const newPermissionsData = getPermissionPoliciesData(values);\n      const newConditions = getNewConditionalPolicies(values);\n      const deleteConditions = getRemovedConditionalPoliciesIds(\n        values,\n        initialValues,\n      );\n      const updateConditions = getUpdatedConditionalPolicies(\n        values,\n        initialValues,\n      );\n\n      const oldData = getRoleData(initialValues);\n      const res = await rbacApi.updateRole(oldData, newData);\n      if ((res as RoleError).error) {\n        throw new Error(\n          `${'Unable to edit the role. '}${(res as RoleError).error.message}`,\n        );\n      } else {\n        const oldPermissionsData = getPermissionPoliciesData(initialValues);\n        const newPermissions = onlyInLeft(\n          newPermissionsData,\n          oldPermissionsData,\n          isSamePermissionPolicy,\n        );\n        const deletePermissions = onlyInLeft(\n          oldPermissionsData,\n          newPermissionsData,\n          isSamePermissionPolicy,\n        );\n\n        await removePermissions(name, deletePermissions, rbacApi);\n        await createPermissions(newPermissions, rbacApi);\n\n        await removeConditions(deleteConditions, rbacApi);\n        await modifyConditions(updateConditions, rbacApi);\n        await createConditions(newConditions, rbacApi);\n\n        navigateTo(newName, 'updated');\n      }\n    } catch (e) {\n      formikHelpers.setStatus({ submitError: e });\n    }\n  };\n\n  const newRole = async (\n    values: RoleFormValues,\n    formikHelpers: FormikHelpers<RoleFormValues>,\n  ) => {\n    try {\n      const newData = getRoleData(values);\n      const newPermissionsData = getPermissionPoliciesData(values);\n      const newConditionalPermissionPoliciesData =\n        getConditionalPermissionPoliciesData(values);\n\n      const res = await rbacApi.createRole(newData);\n      if ((res as RoleError).error) {\n        throw new Error(\n          `${'Unable to create role. '}${(res as RoleError).error.message}`,\n        );\n      }\n\n      await createPermissions(\n        newPermissionsData,\n        rbacApi,\n        'Role was created successfully but unable to add permission policies to the role.',\n      );\n\n      await createConditions(\n        newConditionalPermissionPoliciesData,\n        rbacApi,\n        'Role created successfully but unable to add conditions to the role.',\n      );\n\n      navigateTo(newData.name, 'created');\n    } catch (e) {\n      formikHelpers.setStatus({ submitError: e });\n    }\n  };\n\n  const formik = useFormik<RoleFormValues>({\n    enableReinitialize: true,\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (\n      values: RoleFormValues,\n      formikHelpers: FormikHelpers<RoleFormValues>,\n    ) => {\n      if (roleName) {\n        updateRole(roleName, values, formikHelpers);\n      } else {\n        newRole(values, formikHelpers);\n      }\n    },\n  });\n\n  const validateStepField = (fieldName: string) => {\n    switch (fieldName) {\n      case 'name': {\n        formik.validateField(fieldName);\n        return formik.errors.name;\n      }\n      case 'selectedMembers': {\n        formik.validateField(fieldName);\n        return formik.errors.selectedMembers;\n      }\n      case 'permissionPoliciesRows': {\n        formik.values.permissionPoliciesRows.forEach((_pp, index) => {\n          formik.validateField(`permissionPoliciesRows[${index}].plugin`);\n          formik.validateField(`permissionPoliciesRows[${index}].permission`);\n        });\n        return formik.errors.permissionPoliciesRows;\n      }\n      default:\n        return undefined;\n    }\n  };\n\n  const handleNext = (fieldName?: string) => {\n    const error = fieldName && validateStepField(fieldName);\n    if (!fieldName || !error) {\n      formik.setErrors({});\n      const stepNum = Math.min(activeStep + 1, 3);\n      setActiveStep(stepNum);\n    }\n  };\n\n  const canNextPermissionPoliciesStep = () => {\n    return (\n      formik.values.permissionPoliciesRows.filter(pp => !!pp.plugin).length ===\n        formik.values.permissionPoliciesRows.length &&\n      (!formik.errors.permissionPoliciesRows ||\n        (\n          formik.errors.permissionPoliciesRows as unknown as FormikErrors<\n            PermissionsData[]\n          >[]\n        )?.filter(err => !!err)?.length === 0)\n    );\n  };\n\n  const handleBack = () => setActiveStep(Math.max(activeStep - 1, 0));\n  const handleCancel = () => {\n    navigateTo();\n  };\n\n  const handleReset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setActiveStep(0);\n    formik.handleReset(e);\n  };\n\n  return (\n    <Card style={{ overflow: 'auto' }}>\n      <CardHeader title={titles.formTitle} />\n      <Divider />\n      <CardContent\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        style={{ position: 'relative' }}\n      >\n        <SimpleStepper activeStep={activeStep}>\n          <SimpleStepperStep\n            title={titles.nameAndDescriptionTitle}\n            actions={{\n              showBack: false,\n              showNext: true,\n              nextText: 'Next',\n              canNext: () => !!formik.values.name && !formik.errors.name,\n              onNext: () => handleNext('name'),\n            }}\n          >\n            <RoleDetailsForm\n              name={formik.values.name}\n              description={formik.values.description}\n              handleBlur={formik.handleBlur}\n              handleChange={formik.handleChange}\n              nameError={formik.errors.name}\n            />\n          </SimpleStepperStep>\n          <SimpleStepperStep\n            title={titles.usersAndGroupsTitle}\n            actions={{\n              showNext: true,\n              nextText: 'Next',\n              canNext: () =>\n                formik.values.selectedMembers?.length > 0 &&\n                !formik.errors.selectedMembers,\n              onNext: () => handleNext('selectedMembers'),\n              showBack: true,\n              backText: 'Back',\n              onBack: handleBack,\n            }}\n          >\n            <Box>\n              <AddMembersForm\n                selectedMembers={formik.values.selectedMembers}\n                selectedMembersError={formik.errors.selectedMembers as string}\n                setFieldValue={formik.setFieldValue}\n                membersData={membersData}\n              />\n              <br />\n              <AddedMembersTable\n                selectedMembers={formik.values.selectedMembers}\n                setFieldValue={formik.setFieldValue}\n              />\n            </Box>\n          </SimpleStepperStep>\n          <SimpleStepperStep\n            title={titles.permissionPoliciesTitle}\n            actions={{\n              showNext: true,\n              nextText: 'Next',\n              canNext: () => canNextPermissionPoliciesStep(),\n              onNext: () => handleNext('permissionPoliciesRows'),\n              showBack: true,\n              backText: 'Back',\n              onBack: handleBack,\n            }}\n          >\n            <PermissionPoliciesForm\n              permissionPoliciesRows={formik.values.permissionPoliciesRows}\n              permissionPoliciesRowsError={\n                formik.errors\n                  .permissionPoliciesRows as FormikErrors<PermissionsData>[]\n              }\n              setFieldValue={formik.setFieldValue}\n              setFieldError={formik.setFieldError}\n              handleBlur={formik.handleBlur}\n            />\n          </SimpleStepperStep>\n          <SimpleStepperStep title=\"\" end>\n            <Paper square elevation={0}>\n              <ReviewStep values={formik.values} isEditing={!!roleName} />\n              <br />\n              <Button onClick={handleBack}>Back</Button>\n              <Button onClick={e => handleReset(e)}>Reset</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={\n                  !!formik.errors.name ||\n                  !!formik.errors.selectedMembers ||\n                  !formik.dirty\n                }\n              >\n                {submitLabel || 'Create'}\n              </Button>\n            </Paper>\n          </SimpleStepperStep>\n        </SimpleStepper>\n        {formik.status?.submitError && (\n          <Box style={{ paddingBottom: '16px' }}>\n            <Alert severity=\"error\">{`${formik.status.submitError}`}</Alert>\n          </Box>\n        )}\n        <Button\n          style={{ position: 'absolute', right: '2.75rem', bottom: '2.75rem' }}\n          onClick={handleCancel}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}