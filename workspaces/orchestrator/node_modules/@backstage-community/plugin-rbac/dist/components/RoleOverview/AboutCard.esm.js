import React from 'react';
import { Progress, WarningPanel, MarkdownContent } from '@backstage/core-components';
import { AboutField } from '@backstage/plugin-catalog';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import CardHeader from '@mui/material/CardHeader';
import Grid from '@mui/material/Grid';
import { makeStyles } from '@mui/styles';
import { useRole } from '../../hooks/useRole.esm.js';

const useStyles = makeStyles({
  text: {
    wordBreak: "break-word"
  }
});
const AboutCard = ({ roleName }) => {
  const classes = useStyles();
  const { role, roleError, loading } = useRole(roleName);
  if (loading) {
    return /* @__PURE__ */ React.createElement(Progress, null);
  }
  let lastModified = role?.metadata?.lastModified;
  if (lastModified) {
    const date = new Date(lastModified);
    const time = date.toLocaleString("en-US", {
      hour: "2-digit",
      minute: "2-digit",
      hour12: false,
      timeZone: "UTC"
    });
    lastModified = `${date.getUTCDate()} ${date.toLocaleString("default", {
      month: "short"
    })} ${date.getUTCFullYear()}, ${time}`;
  } else {
    lastModified = "No information";
  }
  return /* @__PURE__ */ React.createElement(
    Card,
    {
      sx: {
        display: "flex",
        flexDirection: "column",
        height: "calc(100% - 10px)",
        // for pages without content header
        marginBottom: "10px"
      }
    },
    /* @__PURE__ */ React.createElement(CardHeader, { title: "About" }),
    /* @__PURE__ */ React.createElement(
      CardContent,
      {
        sx: {
          flex: 1,
          padding: (theme) => theme.spacing(4)
        }
      },
      roleError.name ? /* @__PURE__ */ React.createElement("div", { style: { paddingBottom: "16px" } }, /* @__PURE__ */ React.createElement(
        WarningPanel,
        {
          message: roleError?.message,
          title: "Something went wrong while fetching role",
          severity: "error"
        }
      )) : /* @__PURE__ */ React.createElement(Grid, { container: true }, /* @__PURE__ */ React.createElement(AboutField, { label: "Description", gridSizes: { xs: 4, sm: 8, lg: 4 } }, /* @__PURE__ */ React.createElement(
        MarkdownContent,
        {
          className: classes.text,
          content: role?.metadata?.description ?? "No description"
        }
      )), /* @__PURE__ */ React.createElement(AboutField, { label: "Modified By", gridSizes: { xs: 4, sm: 8, lg: 4 } }, /* @__PURE__ */ React.createElement(
        MarkdownContent,
        {
          className: classes.text,
          content: role?.metadata?.modifiedBy ?? "No information"
        }
      )), /* @__PURE__ */ React.createElement(
        AboutField,
        {
          label: "Last Modified",
          gridSizes: { xs: 4, sm: 8, lg: 4 }
        },
        /* @__PURE__ */ React.createElement(
          MarkdownContent,
          {
            className: classes.text,
            content: lastModified
          }
        )
      ))
    )
  );
};

export { AboutCard };
//# sourceMappingURL=AboutCard.esm.js.map
