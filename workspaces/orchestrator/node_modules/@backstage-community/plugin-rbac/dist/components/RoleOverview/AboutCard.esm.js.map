{"version":3,"file":"AboutCard.esm.js","sources":["../../../src/components/RoleOverview/AboutCard.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport {\n  MarkdownContent,\n  Progress,\n  WarningPanel,\n} from '@backstage/core-components';\nimport { AboutField } from '@backstage/plugin-catalog';\n\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@mui/styles';\n\nimport { useRole } from '../../hooks/useRole';\n\nconst useStyles = makeStyles({\n  text: {\n    wordBreak: 'break-word',\n  },\n});\n\ntype AboutCardProps = {\n  roleName: string;\n};\n\nexport const AboutCard = ({ roleName }: AboutCardProps) => {\n  const classes = useStyles();\n  const { role, roleError, loading } = useRole(roleName);\n  if (loading) {\n    return <Progress />;\n  }\n\n  let lastModified = role?.metadata?.lastModified;\n  if (lastModified) {\n    const date = new Date(lastModified);\n    const time = date.toLocaleString('en-US', {\n      hour: '2-digit' as const,\n      minute: '2-digit' as const,\n      hour12: false,\n      timeZone: 'UTC',\n    });\n    lastModified = `${date.getUTCDate()} ${date.toLocaleString('default', {\n      month: 'short',\n    })} ${date.getUTCFullYear()}, ${time}`;\n  } else {\n    lastModified = 'No information';\n  }\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: 'calc(100% - 10px)', // for pages without content header\n        marginBottom: '10px',\n      }}\n    >\n      <CardHeader title=\"About\" />\n      <CardContent\n        sx={{\n          flex: 1,\n          padding: theme => theme.spacing(4),\n        }}\n      >\n        {roleError.name ? (\n          <div style={{ paddingBottom: '16px' }}>\n            <WarningPanel\n              message={roleError?.message}\n              title=\"Something went wrong while fetching role\"\n              severity=\"error\"\n            />\n          </div>\n        ) : (\n          <Grid container>\n            <AboutField label=\"Description\" gridSizes={{ xs: 4, sm: 8, lg: 4 }}>\n              <MarkdownContent\n                className={classes.text}\n                content={role?.metadata?.description ?? 'No description'}\n              />\n            </AboutField>\n            <AboutField label=\"Modified By\" gridSizes={{ xs: 4, sm: 8, lg: 4 }}>\n              <MarkdownContent\n                className={classes.text}\n                content={role?.metadata?.modifiedBy ?? 'No information'}\n              />\n            </AboutField>\n            <AboutField\n              label=\"Last Modified\"\n              gridSizes={{ xs: 4, sm: 8, lg: 4 }}\n            >\n              <MarkdownContent\n                className={classes.text}\n                content={lastModified}\n              />\n            </AboutField>\n          </Grid>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}