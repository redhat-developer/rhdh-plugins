import React from 'react';
import { useParams } from 'react-router-dom';
import { Page, Header, TabbedLayout } from '@backstage/core-components';
import Grid from '@mui/material/Grid';
import { useLocationToast } from '../../hooks/useLocationToast.esm.js';
import { useMembers } from '../../hooks/useMembers.esm.js';
import { SnackbarAlert } from '../SnackbarAlert.esm.js';
import { useToast } from '../ToastContext.esm.js';
import { AboutCard } from './AboutCard.esm.js';
import { MembersCard } from './MembersCard.esm.js';
import { PermissionsCard } from './PermissionsCard.esm.js';

const RoleOverviewPage = () => {
  const { roleName, roleNamespace, roleKind } = useParams();
  const { toastMessage, setToastMessage } = useToast();
  const membersInfo = useMembers(`${roleKind}:${roleNamespace}/${roleName}`);
  useLocationToast(setToastMessage);
  const onAlertClose = () => {
    setToastMessage("");
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(SnackbarAlert, { toastMessage, onAlertClose }), /* @__PURE__ */ React.createElement(Page, { themeId: "tool" }, /* @__PURE__ */ React.createElement(
    Header,
    {
      title: `${roleKind}:${roleNamespace}/${roleName}`,
      type: "RBAC",
      typeLink: ".."
    }
  ), /* @__PURE__ */ React.createElement(TabbedLayout, null, /* @__PURE__ */ React.createElement(TabbedLayout.Route, { path: "", title: "Overview" }, /* @__PURE__ */ React.createElement(Grid, { container: true, direction: "row" }, /* @__PURE__ */ React.createElement(Grid, { item: true, lg: 12, xs: 12 }, /* @__PURE__ */ React.createElement(
    AboutCard,
    {
      roleName: `${roleKind}:${roleNamespace}/${roleName}`
    }
  )), /* @__PURE__ */ React.createElement(Grid, { item: true, lg: 6, xs: 12 }, /* @__PURE__ */ React.createElement(
    MembersCard,
    {
      roleName: `${roleKind}:${roleNamespace}/${roleName}`,
      membersInfo
    }
  )), /* @__PURE__ */ React.createElement(Grid, { item: true, lg: 6, xs: 12 }, /* @__PURE__ */ React.createElement(
    PermissionsCard,
    {
      entityReference: `${roleKind}:${roleNamespace}/${roleName}`,
      canReadUsersAndGroups: membersInfo.canReadUsersAndGroups
    }
  )))))));
};

export { RoleOverviewPage };
//# sourceMappingURL=RoleOverviewPage.esm.js.map
