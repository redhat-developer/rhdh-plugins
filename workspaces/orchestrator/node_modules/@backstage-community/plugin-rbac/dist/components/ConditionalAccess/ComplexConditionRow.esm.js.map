{"version":3,"file":"ComplexConditionRow.esm.js","sources":["../../../src/components/ConditionalAccess/ComplexConditionRow.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport { PermissionCondition } from '@backstage/plugin-permission-common';\n\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport IconButton from '@mui/material/IconButton';\n\nimport {\n  getNestedRuleErrors,\n  getRowKey,\n  getRowStyle,\n  getSimpleRuleErrors,\n  isSimpleRule,\n} from '../../utils/conditional-access-utils';\nimport { ConditionsFormRowFields } from './ConditionsFormRowFields';\nimport { criterias } from './const';\nimport {\n  AccessConditionsErrors,\n  ComplexErrors,\n  Condition,\n  ConditionsData,\n  NestedCriteriaErrors,\n  NotConditionType,\n  RulesData,\n} from './types';\n\ntype ComplexConditionRowProps = {\n  conditionRow: ConditionsData;\n  nestedConditionRow: Condition[];\n  criteria: keyof ConditionsData;\n  onRuleChange: (newCondition: ConditionsData) => void;\n  updateRules: (updatedNestedConditionRow: Condition[] | Condition) => void;\n  setErrors: React.Dispatch<\n    React.SetStateAction<AccessConditionsErrors | undefined>\n  >;\n  setRemoveAllClicked: React.Dispatch<React.SetStateAction<boolean>>;\n  conditionRulesData?: RulesData;\n  notConditionType?: NotConditionType;\n  currentCondition: Condition;\n  ruleIndex: number;\n  activeCriteria?: 'allOf' | 'anyOf';\n  isNestedCondition?: boolean;\n  nestedConditionIndex?: number;\n  activeNestedCriteria?: 'allOf' | 'anyOf';\n};\n\nexport const ComplexConditionRow = ({\n  conditionRow,\n  nestedConditionRow,\n  criteria,\n  onRuleChange,\n  updateRules,\n  setErrors,\n  setRemoveAllClicked,\n  conditionRulesData,\n  notConditionType,\n  currentCondition,\n  ruleIndex,\n  activeCriteria,\n  isNestedCondition = false,\n  nestedConditionIndex,\n  activeNestedCriteria,\n}: ComplexConditionRowProps) => {\n  const handleRemoveSimpleConditionRule = (\n    index: number,\n    ruleList: PermissionCondition[],\n  ) => {\n    if (!activeCriteria) {\n      return;\n    }\n    const updatedSimpleRules = ruleList.filter(\n      (_r, rindex) => index !== rindex,\n    );\n    const nestedConditions =\n      (conditionRow[criteria] as PermissionCondition[])?.filter(\n        (con: PermissionCondition) =>\n          criterias.allOf in con ||\n          criterias.anyOf in con ||\n          criterias.not in con,\n      ) || [];\n\n    onRuleChange({\n      [activeCriteria as keyof ConditionsData]: [\n        ...updatedSimpleRules,\n        ...nestedConditions,\n      ],\n    });\n\n    setErrors(prevErrors => {\n      const updatedErrors = { ...prevErrors };\n\n      if (updatedErrors[activeCriteria]) {\n        const criteriaErrors = updatedErrors[activeCriteria] as ComplexErrors[];\n        const simpleRuleErrors = getSimpleRuleErrors(criteriaErrors);\n\n        if (Array.isArray(simpleRuleErrors) && simpleRuleErrors.length > 0) {\n          const updatedCriteriaErrors = [\n            ...simpleRuleErrors.filter((_, rindex) => rindex !== index),\n            ...getNestedRuleErrors(criteriaErrors),\n          ];\n\n          updatedErrors[activeCriteria] =\n            updatedCriteriaErrors.length > 0 ? updatedCriteriaErrors : [];\n        } else {\n          delete updatedErrors[activeCriteria];\n        }\n      }\n\n      return updatedErrors;\n    });\n  };\n\n  const handleRemoveNestedConditionRule = (nestedConditionCriteria: string) => {\n    const updatedNestedConditionRow: Condition[] = [];\n\n    nestedConditionRow.forEach((c, index) => {\n      if (index === nestedConditionIndex) {\n        const updatedRules = (\n          (c[\n            nestedConditionCriteria as keyof Condition\n          ] as PermissionCondition[]) || []\n        ).filter((_r, rindex) => rindex !== ruleIndex);\n        updatedNestedConditionRow.push({\n          [nestedConditionCriteria as keyof Condition]: updatedRules,\n        });\n      } else {\n        updatedNestedConditionRow.push(c);\n      }\n    });\n\n    updateRules(\n      criteria === criterias.not\n        ? updatedNestedConditionRow[0]\n        : updatedNestedConditionRow,\n    );\n\n    setErrors(prevErrors => {\n      const updatedErrors = { ...prevErrors };\n\n      if (updatedErrors[criteria] !== undefined) {\n        const criteriaErrors = updatedErrors[criteria] as ComplexErrors[];\n\n        if (\n          criteria === criterias.not &&\n          notConditionType === 'nested-condition'\n        ) {\n          (\n            (updatedErrors[criteria] as NestedCriteriaErrors)[\n              nestedConditionCriteria\n            ] as string[]\n          ).splice(ruleIndex, 1);\n          return updatedErrors;\n        }\n\n        const nestedConditionErrors = getNestedRuleErrors(criteriaErrors);\n\n        if (\n          Array.isArray(nestedConditionErrors) &&\n          nestedConditionIndex !== undefined\n        ) {\n          const nestedErrors = nestedConditionErrors[nestedConditionIndex];\n          if (nestedErrors[nestedConditionCriteria]) {\n            const updatedNestedErrors = (\n              nestedErrors[nestedConditionCriteria] as string[]\n            ).filter((_error, index) => index !== ruleIndex);\n\n            if (updatedNestedErrors.length > 0) {\n              nestedErrors[nestedConditionCriteria] = updatedNestedErrors;\n            } else {\n              delete nestedErrors[nestedConditionCriteria];\n            }\n\n            nestedConditionErrors[nestedConditionIndex] = nestedErrors;\n          }\n\n          updatedErrors[criteria] = [\n            ...getSimpleRuleErrors(criteriaErrors),\n            ...nestedConditionErrors,\n          ];\n        }\n      }\n\n      return updatedErrors;\n    });\n  };\n\n  const ruleList = isNestedCondition\n    ? (currentCondition[\n        activeCriteria as keyof Condition\n      ] as PermissionCondition[])\n    : ((conditionRow[activeCriteria as keyof Condition] as Condition[]).filter(\n        r => isSimpleRule(r),\n      ) as PermissionCondition[]);\n\n  const disabled =\n    !isNestedCondition &&\n    (conditionRow[criteria as keyof Condition] as Condition[]).length === 1 &&\n    nestedConditionRow.length === 0 &&\n    ruleIndex === 0;\n  const nestedDisabled =\n    isNestedCondition &&\n    (\n      nestedConditionRow[nestedConditionIndex ?? 0][\n        activeNestedCriteria as keyof Condition\n      ] as Condition[]\n    ).length === 1 &&\n    ruleIndex === 0;\n\n  return (\n    (currentCondition as PermissionCondition).resourceType && (\n      <div\n        style={getRowStyle(currentCondition, isNestedCondition)}\n        key={getRowKey(isNestedCondition, ruleIndex)}\n      >\n        <ConditionsFormRowFields\n          oldCondition={currentCondition}\n          index={isNestedCondition ? undefined : ruleIndex}\n          onRuleChange={onRuleChange}\n          conditionRow={conditionRow}\n          criteria={criteria}\n          conditionRulesData={conditionRulesData}\n          setErrors={setErrors}\n          setRemoveAllClicked={setRemoveAllClicked}\n          nestedConditionRow={\n            isNestedCondition ? nestedConditionRow : undefined\n          }\n          nestedConditionCriteria={\n            isNestedCondition ? activeNestedCriteria : undefined\n          }\n          nestedConditionIndex={\n            isNestedCondition ? nestedConditionIndex : undefined\n          }\n          nestedConditionRuleIndex={isNestedCondition ? ruleIndex : undefined}\n          updateRules={isNestedCondition ? updateRules : undefined}\n        />\n        <IconButton\n          title=\"Remove\"\n          sx={{\n            color: theme => theme.palette.grey[500],\n            flexGrow: 0,\n            alignSelf: 'baseline',\n            marginTop: theme => theme.spacing(3.3),\n          }}\n          disabled={isNestedCondition ? nestedDisabled : disabled}\n          onClick={\n            isNestedCondition &&\n            activeNestedCriteria &&\n            nestedConditionIndex !== undefined\n              ? () => handleRemoveNestedConditionRule(activeNestedCriteria)\n              : () => {\n                  handleRemoveSimpleConditionRule(ruleIndex, ruleList);\n                }\n          }\n        >\n          <RemoveIcon />\n        </IconButton>\n      </div>\n    )\n  );\n};\n"],"names":["ruleList"],"mappings":"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"}