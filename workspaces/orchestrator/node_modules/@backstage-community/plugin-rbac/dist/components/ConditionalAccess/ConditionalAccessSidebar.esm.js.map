{"version":3,"file":"ConditionalAccessSidebar.esm.js","sources":["../../../src/components/ConditionalAccess/ConditionalAccessSidebar.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { ConditionsForm } from './ConditionsForm';\nimport { ConditionsData, RulesData } from './types';\n\ntype ConditionalAccessSidebarProps = {\n  open: boolean;\n  onClose: () => void;\n  onSave: (conditions?: ConditionsData) => void;\n  selPluginResourceType: string;\n  conditionRulesData?: RulesData;\n  conditionsFormVal?: ConditionsData;\n};\n\nexport const ConditionalAccessSidebar = ({\n  open,\n  onClose,\n  onSave,\n  selPluginResourceType,\n  conditionRulesData,\n  conditionsFormVal,\n}: ConditionalAccessSidebarProps) => {\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      data-testid=\"rules-sidebar\"\n      PaperProps={{\n        sx: {\n          ['@media (max-width: 960px)']: {\n            width: '100%',\n          },\n          width: '50%',\n          height: '100%',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'space-between',\n          height: '100%',\n          backgroundColor: theme => `${theme.palette.background.paper}`,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'baseline',\n            padding: theme => theme.spacing(2.5),\n            fontFamily: theme => theme.typography.fontFamily,\n          }}\n        >\n          <Box>\n            <Box sx={{ display: 'flex', gap: '5px' }}>\n              <Typography sx={{ fontWeight: 500 }} variant=\"h5\">\n                Configure access for the\n              </Typography>\n              <Typography style={{ fontWeight: 600 }} variant=\"h5\">\n                {selPluginResourceType}\n              </Typography>\n            </Box>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                fontWeight: 400,\n                fontFamily: theme => theme.typography.fontFamily,\n                paddingTop: theme => theme.spacing(1),\n              }}\n              align=\"left\"\n            >\n              By default, the selected resource type will be visible to the\n              chosen users in step two. If you want to restrict or grant\n              permission to specific plugin resource type rule, select it and\n              add the required parameters.\n            </Typography>\n          </Box>\n          <IconButton\n            key=\"dismiss\"\n            title=\"Close the drawer\"\n            onClick={onClose}\n            color=\"inherit\"\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </Box>\n        <ConditionsForm\n          conditionRulesData={conditionRulesData}\n          selPluginResourceType={selPluginResourceType}\n          conditionsFormVal={conditionsFormVal}\n          onClose={onClose}\n          onSave={onSave}\n        />\n      </Box>\n    </Drawer>\n  );\n};\n"],"names":[],"mappings":"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"}