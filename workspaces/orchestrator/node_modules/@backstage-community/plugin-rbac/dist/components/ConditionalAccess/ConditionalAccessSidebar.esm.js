import React from 'react';
import CloseIcon from '@mui/icons-material/Close';
import Box from '@mui/material/Box';
import Drawer from '@mui/material/Drawer';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import { ConditionsForm } from './ConditionsForm.esm.js';

const ConditionalAccessSidebar = ({
  open,
  onClose,
  onSave,
  selPluginResourceType,
  conditionRulesData,
  conditionsFormVal
}) => {
  return /* @__PURE__ */ React.createElement(
    Drawer,
    {
      anchor: "right",
      open,
      "data-testid": "rules-sidebar",
      PaperProps: {
        sx: {
          ["@media (max-width: 960px)"]: {
            width: "100%"
          },
          width: "50%",
          height: "100%"
        }
      }
    },
    /* @__PURE__ */ React.createElement(
      Box,
      {
        sx: {
          display: "flex",
          flexFlow: "column",
          justifyContent: "space-between",
          height: "100%",
          backgroundColor: (theme) => `${theme.palette.background.paper}`
        }
      },
      /* @__PURE__ */ React.createElement(
        Box,
        {
          sx: {
            display: "flex",
            flexDirection: "row",
            justifyContent: "space-between",
            alignItems: "baseline",
            padding: (theme) => theme.spacing(2.5),
            fontFamily: (theme) => theme.typography.fontFamily
          }
        },
        /* @__PURE__ */ React.createElement(Box, null, /* @__PURE__ */ React.createElement(Box, { sx: { display: "flex", gap: "5px" } }, /* @__PURE__ */ React.createElement(Typography, { sx: { fontWeight: 500 }, variant: "h5" }, "Configure access for the"), /* @__PURE__ */ React.createElement(Typography, { style: { fontWeight: 600 }, variant: "h5" }, selPluginResourceType)), /* @__PURE__ */ React.createElement(
          Typography,
          {
            variant: "body2",
            sx: {
              fontWeight: 400,
              fontFamily: (theme) => theme.typography.fontFamily,
              paddingTop: (theme) => theme.spacing(1)
            },
            align: "left"
          },
          "By default, the selected resource type will be visible to the chosen users in step two. If you want to restrict or grant permission to specific plugin resource type rule, select it and add the required parameters."
        )),
        /* @__PURE__ */ React.createElement(
          IconButton,
          {
            key: "dismiss",
            title: "Close the drawer",
            onClick: onClose,
            color: "inherit"
          },
          /* @__PURE__ */ React.createElement(CloseIcon, { fontSize: "small" })
        )
      ),
      /* @__PURE__ */ React.createElement(
        ConditionsForm,
        {
          conditionRulesData,
          selPluginResourceType,
          conditionsFormVal,
          onClose,
          onSave
        }
      )
    )
  );
};

export { ConditionalAccessSidebar };
//# sourceMappingURL=ConditionalAccessSidebar.esm.js.map
