import React from 'react';
import { getDefaultRule, ruleOptionDisabled } from '../../utils/conditional-access-utils.esm.js';
import { ConditionsFormRowFields } from './ConditionsFormRowFields.esm.js';
import { criterias } from './const.esm.js';

const ConditionRule = ({
  conditionRow,
  selPluginResourceType,
  onRuleChange,
  criteria,
  conditionRulesData,
  setErrors,
  setRemoveAllClicked
}) => {
  return criteria === criterias.condition && /* @__PURE__ */ React.createElement(
    ConditionsFormRowFields,
    {
      oldCondition: conditionRow.condition ?? getDefaultRule(selPluginResourceType),
      onRuleChange,
      conditionRow,
      criteria,
      conditionRulesData,
      setErrors,
      optionDisabled: (ruleOption) => ruleOptionDisabled(
        ruleOption,
        conditionRow.condition ? [conditionRow.condition] : void 0
      ),
      setRemoveAllClicked
    }
  );
};

export { ConditionRule };
//# sourceMappingURL=ConditionRule.esm.js.map
