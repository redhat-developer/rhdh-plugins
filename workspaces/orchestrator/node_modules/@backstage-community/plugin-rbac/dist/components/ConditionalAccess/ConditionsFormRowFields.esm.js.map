{"version":3,"file":"ConditionsFormRowFields.esm.js","sources":["../../../src/components/ConditionalAccess/ConditionsFormRowFields.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport { PermissionCondition } from '@backstage/plugin-permission-common';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Box from '@mui/material/Box';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport Form from '@rjsf/mui';\nimport {\n  RegistryFieldsType,\n  RJSFSchema,\n  RJSFValidationError,\n  UiSchema,\n} from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nimport {\n  getNestedRuleErrors,\n  getSimpleRuleErrors,\n  isSimpleRule,\n  setErrorMessage,\n} from '../../utils/conditional-access-utils';\nimport { criterias } from './const';\nimport { CustomArrayField } from './CustomArrayField';\nimport { RulesDropdownOption } from './RulesDropdownOption';\nimport {\n  AccessConditionsErrors,\n  ComplexErrors,\n  Condition,\n  ConditionsData,\n  NestedCriteriaErrors,\n  RulesData,\n} from './types';\n\ntype ConditionFormRowFieldsProps = {\n  oldCondition: Condition;\n  index?: number;\n  criteria: string;\n  onRuleChange: (newCondition: ConditionsData) => void;\n  conditionRow: ConditionsData | Condition;\n  conditionRulesData?: RulesData;\n  setErrors: React.Dispatch<\n    React.SetStateAction<AccessConditionsErrors | undefined>\n  >;\n  optionDisabled?: (ruleOption: string) => boolean;\n  setRemoveAllClicked: React.Dispatch<React.SetStateAction<boolean>>;\n  nestedConditionRow?: Condition[];\n  nestedConditionCriteria?: string;\n  nestedConditionIndex?: number;\n  nestedConditionRuleIndex?: number;\n  updateRules?: (newCondition: Condition[] | Condition) => void;\n};\n\ninterface StyleProps {\n  isNotSimpleCondition: boolean;\n}\n\nconst makeConditionsFormRowFieldsStyles = makeStyles<Theme, StyleProps>(() => ({\n  inputFieldContainer: {\n    display: 'flex',\n    flexFlow: 'row',\n    gap: '10px',\n    flexGrow: 1,\n    margin: ({ isNotSimpleCondition }) =>\n      isNotSimpleCondition ? '-1.5rem 0 0 1.85rem' : '0',\n  },\n}));\n\nexport const getTextFieldStyles = (theme: Theme) => ({\n  '& div[class*=\"MuiInputBase-root\"]': {\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& span': {\n    color: theme.palette.textSubtle,\n  },\n  '& input': {\n    color: theme.palette.textContrast,\n  },\n  '& fieldset.MuiOutlinedInput-notchedOutline': {\n    borderColor: theme.palette.grey[500],\n  },\n  '& div.MuiOutlinedInput-root': {\n    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: theme.palette.primary.light,\n    },\n    '&.Mui-error .MuiOutlinedInput-notchedOutline': {\n      borderColor: theme.palette.status.error,\n      '&:hover': {\n        borderColor: theme.palette.status.error,\n      },\n    },\n  },\n  '& label.MuiFormLabel-root.Mui-focused': {\n    color: theme.palette.primary.light,\n  },\n  '& label.MuiFormLabel-root.Mui-error': {\n    color: theme.palette.status.error,\n  },\n  '& div.MuiOutlinedInput-root:hover fieldset': {\n    borderColor:\n      theme.palette.mode === 'dark' ? theme.palette.textContrast : 'unset',\n  },\n  '& label': {\n    color: theme.palette.textSubtle,\n  },\n});\n\nexport const ConditionsFormRowFields = ({\n  oldCondition,\n  index,\n  criteria,\n  onRuleChange,\n  conditionRow,\n  conditionRulesData,\n  setErrors,\n  optionDisabled,\n  setRemoveAllClicked,\n  nestedConditionRow,\n  nestedConditionCriteria,\n  nestedConditionIndex,\n  nestedConditionRuleIndex,\n  updateRules,\n}: ConditionFormRowFieldsProps) => {\n  const isNotSimpleCondition =\n    criteria === criterias.not && !nestedConditionCriteria;\n  const theme = useTheme();\n  const classes = makeConditionsFormRowFieldsStyles({\n    isNotSimpleCondition,\n  });\n\n  const rules = conditionRulesData?.rules ?? [];\n  const paramsSchema =\n    conditionRulesData?.[(oldCondition as PermissionCondition).rule]?.schema;\n\n  const schema: RJSFSchema = paramsSchema;\n\n  const uiSchema: UiSchema = {\n    'ui:submitButtonOptions': {\n      norender: true,\n    },\n    'ui:classNames': `{\n      '& div[class*=\"MuiInputBase-root\"]': {\n        backgroundColor: theme.palette.background.paper,\n      },\n      '& span': {\n        color: theme.palette.textSubtle,\n      },\n      '& input': {\n        color: theme.palette.textContrast,\n      },\n      '& fieldset.MuiOutlinedInput-notchedOutline': {\n        borderColor: theme.palette.grey[500],\n      },\n      '& div.MuiOutlinedInput-root': {\n        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n          borderColor: theme.palette.primary.light,\n        },\n        '&.Mui-error .MuiOutlinedInput-notchedOutline': {\n          borderColor: theme.palette.status.error,\n          '&:hover': {\n            borderColor: theme.palette.status.error,\n          },\n        },\n      },\n      '& label.MuiFormLabel-root.Mui-focused': {\n        color: theme.palette.primary.light,\n      },\n      '& label.MuiFormLabel-root.Mui-error': {\n        color: theme.palette.status.error,\n      },\n      '& div.MuiOutlinedInput-root:hover fieldset': {\n        borderColor:\n          theme.palette.mode === 'dark' ? theme.palette.textContrast : 'unset',\n      },\n      '& label': {\n        color: theme.palette.textSubtle,\n      },\n    }`,\n    'ui:field': 'array',\n  };\n\n  const customFields: RegistryFieldsType = { ArrayField: CustomArrayField };\n\n  const handleConditionChange = (newCondition: PermissionCondition) => {\n    setRemoveAllClicked(false);\n    switch (criteria) {\n      case criterias.condition: {\n        onRuleChange({ condition: newCondition });\n        break;\n      }\n      case criterias.allOf: {\n        const updatedCriteria = (conditionRow as ConditionsData).allOf ?? [];\n        updatedCriteria[index ?? 0] = newCondition;\n        onRuleChange({ allOf: updatedCriteria });\n        break;\n      }\n      case criterias.anyOf: {\n        const updatedCriteria = (conditionRow as ConditionsData).anyOf ?? [];\n        updatedCriteria[index ?? 0] = newCondition;\n        onRuleChange({ anyOf: updatedCriteria });\n        break;\n      }\n      case criterias.not: {\n        onRuleChange({ not: newCondition });\n        break;\n      }\n      default:\n    }\n  };\n\n  const handleNestedConditionChange = (newCondition: PermissionCondition) => {\n    if (\n      !nestedConditionRow ||\n      !nestedConditionCriteria ||\n      nestedConditionIndex === undefined ||\n      !updateRules\n    ) {\n      return;\n    }\n    const updatedNestedConditionRow: Condition[] = nestedConditionRow.map(\n      (c, i) => {\n        if (i === nestedConditionIndex) {\n          if (nestedConditionCriteria === criterias.not) {\n            return {\n              [nestedConditionCriteria]: newCondition,\n            };\n          }\n          const updatedNestedConditionRules = (\n            (c[\n              nestedConditionCriteria as keyof Condition\n            ] as PermissionCondition[]) || []\n          ).map((rule, rindex) => {\n            return rindex === nestedConditionRuleIndex ? newCondition : rule;\n          });\n\n          return {\n            [nestedConditionCriteria]: updatedNestedConditionRules,\n          };\n        }\n        return c;\n      },\n    );\n\n    updateRules(\n      criteria === criterias.not\n        ? updatedNestedConditionRow[0]\n        : updatedNestedConditionRow,\n    );\n  };\n\n  const handleTransformErrors = (errors: RJSFValidationError[]) => {\n    // criteria: condition or not simple-condition\n    if (\n      criteria === criterias.condition ||\n      (criteria === criterias.not &&\n        isSimpleRule(conditionRow[criteria as keyof Condition]))\n    ) {\n      setErrors(prevErrors => {\n        const updatedErrors = { ...prevErrors };\n        updatedErrors[criteria] = setErrorMessage(errors);\n\n        return updatedErrors;\n      });\n    }\n\n    // criteria: not nested-condition\n    if (\n      criteria === criterias.not &&\n      nestedConditionCriteria &&\n      !isSimpleRule(conditionRow[criteria as keyof Condition])\n    ) {\n      setErrors(prevErrors => {\n        const updatedErrors = { ...prevErrors };\n        const nestedErrors = (updatedErrors[criteria] as ComplexErrors)[\n          nestedConditionCriteria as keyof Condition\n        ] as NestedCriteriaErrors;\n\n        // nestedCriteria: allOf or anyOf\n        if (\n          Array.isArray(nestedErrors) &&\n          nestedConditionRuleIndex !== undefined\n        ) {\n          nestedErrors[nestedConditionRuleIndex] = setErrorMessage(errors);\n        } else {\n          // nestedCriteria: not\n          updatedErrors[criteria] = {\n            [nestedConditionCriteria]: setErrorMessage(errors),\n          };\n        }\n\n        return updatedErrors;\n      });\n    }\n\n    // criteria: allOf or anyOf\n    if (criteria === criterias.allOf || criteria === criterias.anyOf) {\n      setErrors(prevErrors => {\n        const updatedErrors = { ...prevErrors };\n        const simpleRuleErrors = getSimpleRuleErrors(\n          updatedErrors[\n            criteria as keyof AccessConditionsErrors\n          ] as ComplexErrors[],\n        );\n        if (\n          Array.isArray(simpleRuleErrors) &&\n          simpleRuleErrors.length > 0 &&\n          index !== undefined\n        ) {\n          simpleRuleErrors[index] = setErrorMessage(errors);\n        }\n\n        const nestedRuleErrors = getNestedRuleErrors(\n          updatedErrors[\n            criteria as keyof AccessConditionsErrors\n          ] as ComplexErrors[],\n        );\n\n        // nestedCriteria: allOf or anyOf\n        if (\n          nestedConditionCriteria &&\n          nestedConditionIndex !== undefined &&\n          nestedConditionRuleIndex !== undefined\n        ) {\n          const nestedConditionRuleList =\n            nestedRuleErrors[nestedConditionIndex][nestedConditionCriteria];\n\n          if (Array.isArray(nestedConditionRuleList)) {\n            nestedConditionRuleList[nestedConditionRuleIndex] =\n              setErrorMessage(errors);\n          }\n        }\n\n        // nestedCriteria: not\n        if (\n          Array.isArray(nestedRuleErrors) &&\n          nestedRuleErrors.length > 0 &&\n          nestedConditionCriteria === criterias.not &&\n          nestedConditionIndex !== undefined\n        ) {\n          nestedRuleErrors[nestedConditionIndex][nestedConditionCriteria] =\n            setErrorMessage(errors);\n        }\n\n        updatedErrors[criteria] = [...simpleRuleErrors, ...nestedRuleErrors];\n        return updatedErrors;\n      });\n    }\n\n    return errors;\n  };\n\n  const onConditionChange = (newCondition: PermissionCondition) => {\n    if (nestedConditionRow) {\n      handleNestedConditionChange(newCondition);\n    } else {\n      handleConditionChange(newCondition);\n    }\n  };\n\n  return (\n    <Box className={classes.inputFieldContainer}>\n      <Autocomplete\n        style={{ width: '50%', marginTop: '26px' }}\n        sx={getTextFieldStyles(theme)}\n        options={rules ?? []}\n        value={(oldCondition as PermissionCondition)?.rule || null}\n        getOptionDisabled={option =>\n          optionDisabled ? optionDisabled(option) : false\n        }\n        onChange={(_event, ruleVal?: string | null) =>\n          onConditionChange({\n            ...oldCondition,\n            rule: ruleVal ?? '',\n            params: {},\n          } as PermissionCondition)\n        }\n        renderOption={(props, option) => (\n          <RulesDropdownOption\n            props={props}\n            label={option ?? ''}\n            rulesData={conditionRulesData}\n          />\n        )}\n        renderInput={(params: any) => (\n          <TextField\n            {...params}\n            label=\"Rule\"\n            variant=\"outlined\"\n            placeholder=\"Select a rule\"\n            required\n          />\n        )}\n      />\n      <Box style={{ width: '50%' }}>\n        {schema ? (\n          <Form\n            schema={paramsSchema}\n            formData={(oldCondition as PermissionCondition)?.params || {}}\n            validator={validator}\n            uiSchema={uiSchema}\n            fields={customFields}\n            onChange={data =>\n              onConditionChange({\n                ...oldCondition,\n                params: data.formData || {},\n              } as PermissionCondition)\n            }\n            transformErrors={handleTransformErrors}\n            showErrorList={false}\n            liveValidate\n          />\n        ) : (\n          <TextField\n            style={{ width: '100%', marginTop: '26px' }}\n            sx={getTextFieldStyles(theme)}\n            disabled\n            label=\"string, string\"\n            required\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n"],"names":[],"mappings":"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"}