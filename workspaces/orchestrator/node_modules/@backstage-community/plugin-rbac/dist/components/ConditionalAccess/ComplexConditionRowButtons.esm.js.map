{"version":3,"file":"ComplexConditionRowButtons.esm.js","sources":["../../../src/components/ConditionalAccess/ComplexConditionRowButtons.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { getDefaultRule } from '../../utils/conditional-access-utils';\nimport { tooltipTitle } from './AddNestedConditionButton';\nimport { criterias } from './const';\nimport { Condition, ConditionsData } from './types';\n\ntype ComplexConditionRowButtonsProps = {\n  conditionRow: ConditionsData;\n  onRuleChange: (newCondition: ConditionsData) => void;\n  criteria: string;\n  selPluginResourceType: string;\n  updateErrors: (_index: number) => void;\n  isNestedConditionRule: (condition: Condition) => boolean;\n  handleAddNestedCondition: (criteria: string) => void;\n};\n\nexport const ComplexConditionRowButtons = ({\n  conditionRow,\n  onRuleChange,\n  criteria,\n  selPluginResourceType,\n  updateErrors,\n  isNestedConditionRule,\n  handleAddNestedCondition,\n}: ComplexConditionRowButtonsProps) => {\n  const findFirstNestedConditionIndex = (rules: Condition[]): number => {\n    return rules.findIndex(e => isNestedConditionRule(e)) || 0;\n  };\n  const handleAddRule = () => {\n    const updatedRules = [\n      ...(conditionRow.allOf ?? []),\n      ...(conditionRow.anyOf ?? []),\n    ];\n\n    const firstNestedConditionIndex =\n      findFirstNestedConditionIndex(updatedRules);\n    if (firstNestedConditionIndex !== -1) {\n      updatedRules.splice(\n        firstNestedConditionIndex,\n        0,\n        getDefaultRule(selPluginResourceType),\n      );\n    } else {\n      updatedRules.push(getDefaultRule(selPluginResourceType));\n    }\n\n    onRuleChange({ [criteria]: [...updatedRules] });\n    updateErrors(firstNestedConditionIndex);\n  };\n\n  return (\n    (criteria === criterias.allOf || criteria === criterias.anyOf) && (\n      <Box\n        mt={1}\n        mb={1}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        <Button\n          sx={{\n            color: theme => theme.palette.primary.light,\n          }}\n          size=\"small\"\n          onClick={handleAddRule}\n          startIcon={<AddIcon fontSize=\"small\" />}\n        >\n          Add rule\n        </Button>\n        <Button\n          sx={{\n            color: theme => theme.palette.primary.light,\n          }}\n          size=\"small\"\n          onClick={() => handleAddNestedCondition(criteria)}\n          startIcon={<AddIcon fontSize=\"small\" />}\n          endIcon={\n            <Tooltip title={tooltipTitle()} placement=\"top\">\n              <HelpOutlineIcon\n                fontSize=\"small\"\n                style={{ marginLeft: '0.25rem' }}\n              />\n            </Tooltip>\n          }\n        >\n          Add Nested Condition\n        </Button>\n      </Box>\n    )\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AAsCO,MAAM,6BAA6B,CAAC;AAAA,EACzC,YAAA;AAAA,EACA,YAAA;AAAA,EACA,QAAA;AAAA,EACA,qBAAA;AAAA,EACA,YAAA;AAAA,EACA,qBAAA;AAAA,EACA;AACF,CAAuC,KAAA;AACrC,EAAM,MAAA,6BAAA,GAAgC,CAAC,KAA+B,KAAA;AACpE,IAAA,OAAO,MAAM,SAAU,CAAA,CAAA,CAAA,KAAK,qBAAsB,CAAA,CAAC,CAAC,CAAK,IAAA,CAAA;AAAA,GAC3D;AACA,EAAA,MAAM,gBAAgB,MAAM;AAC1B,IAAA,MAAM,YAAe,GAAA;AAAA,MACnB,GAAI,YAAa,CAAA,KAAA,IAAS,EAAC;AAAA,MAC3B,GAAI,YAAa,CAAA,KAAA,IAAS;AAAC,KAC7B;AAEA,IAAM,MAAA,yBAAA,GACJ,8BAA8B,YAAY,CAAA;AAC5C,IAAA,IAAI,8BAA8B,CAAI,CAAA,EAAA;AACpC,MAAa,YAAA,CAAA,MAAA;AAAA,QACX,yBAAA;AAAA,QACA,CAAA;AAAA,QACA,eAAe,qBAAqB;AAAA,OACtC;AAAA,KACK,MAAA;AACL,MAAa,YAAA,CAAA,IAAA,CAAK,cAAe,CAAA,qBAAqB,CAAC,CAAA;AAAA;AAGzD,IAAa,YAAA,CAAA,EAAE,CAAC,QAAQ,GAAG,CAAC,GAAG,YAAY,GAAG,CAAA;AAC9C,IAAA,YAAA,CAAa,yBAAyB,CAAA;AAAA,GACxC;AAEA,EAAA,OAAA,CACG,QAAa,KAAA,SAAA,CAAU,KAAS,IAAA,QAAA,KAAa,UAAU,KACtD,qBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,GAAA;AAAA,IAAA;AAAA,MACC,EAAI,EAAA,CAAA;AAAA,MACJ,EAAI,EAAA,CAAA;AAAA,MACJ,EAAI,EAAA;AAAA,QACF,OAAS,EAAA,MAAA;AAAA,QACT,aAAe,EAAA,QAAA;AAAA,QACf,UAAY,EAAA;AAAA;AACd,KAAA;AAAA,oBAEA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,EAAI,EAAA;AAAA,UACF,KAAO,EAAA,CAAA,KAAA,KAAS,KAAM,CAAA,OAAA,CAAQ,OAAQ,CAAA;AAAA,SACxC;AAAA,QACA,IAAK,EAAA,OAAA;AAAA,QACL,OAAS,EAAA,aAAA;AAAA,QACT,SAAW,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAQ,EAAA,EAAA,QAAA,EAAS,OAAQ,EAAA;AAAA,OAAA;AAAA,MACtC;AAAA,KAED;AAAA,oBACA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,EAAI,EAAA;AAAA,UACF,KAAO,EAAA,CAAA,KAAA,KAAS,KAAM,CAAA,OAAA,CAAQ,OAAQ,CAAA;AAAA,SACxC;AAAA,QACA,IAAK,EAAA,OAAA;AAAA,QACL,OAAA,EAAS,MAAM,wBAAA,CAAyB,QAAQ,CAAA;AAAA,QAChD,SAAW,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAQ,EAAA,EAAA,QAAA,EAAS,OAAQ,EAAA,CAAA;AAAA,QACrC,yBACG,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAQ,OAAO,YAAa,EAAA,EAAG,WAAU,KACxC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,UAAC,eAAA;AAAA,UAAA;AAAA,YACC,QAAS,EAAA,OAAA;AAAA,YACT,KAAA,EAAO,EAAE,UAAA,EAAY,SAAU;AAAA;AAAA,SAEnC;AAAA,OAAA;AAAA,MAEH;AAAA;AAED,GACF;AAGN;;;;"}