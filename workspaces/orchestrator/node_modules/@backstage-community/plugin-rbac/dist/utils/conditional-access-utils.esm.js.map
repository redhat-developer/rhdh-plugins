{"version":3,"file":"conditional-access-utils.esm.js","sources":["../../src/utils/conditional-access-utils.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PermissionCondition } from '@backstage/plugin-permission-common';\n\nimport { RJSFValidationError } from '@rjsf/utils';\n\nimport {\n  conditionButtons,\n  criterias,\n} from '../components/ConditionalAccess/const';\nimport {\n  AccessConditionsErrors,\n  ComplexErrors,\n  Condition,\n  ConditionsData,\n  NestedCriteriaErrors,\n  NotConditionType,\n} from '../components/ConditionalAccess/types';\n\nexport const ruleOptionDisabled = (\n  ruleOption: string,\n  conditions?: PermissionCondition[],\n) => {\n  return !!(conditions || []).find(con => con.rule === ruleOption);\n};\n\nexport const nestedConditionButtons = conditionButtons.filter(\n  button => button.val !== 'condition',\n);\n\nexport const extractNestedConditions = (\n  conditions: Condition[],\n  criteriaTypes: string[],\n  nestedConditions: Condition[],\n) => {\n  conditions.forEach(c => {\n    criteriaTypes.forEach(ct => {\n      if (Object.keys(c).includes(ct)) {\n        nestedConditions.push(c);\n      }\n    });\n  });\n};\n\nexport const getDefaultRule = (selPluginResourceType: string) => ({\n  rule: '',\n  resourceType: selPluginResourceType,\n  params: {},\n});\n\nexport const getSimpleRulesCount = (\n  conditionRow: ConditionsData,\n  criteria: string,\n): number => {\n  if (criteria === criterias.not) {\n    return (conditionRow[criteria as keyof Condition] as PermissionCondition)\n      .resourceType\n      ? 1\n      : 0;\n  }\n  if (criteria === criterias.condition) {\n    return 1;\n  }\n  return (conditionRow[criteria as keyof Condition] as Condition[]).filter(\n    (e: Condition) => 'rule' in e,\n  ).length;\n};\n\nexport const initializeErrors = (\n  criteria: keyof ConditionsData,\n  conditions: ConditionsData,\n): AccessConditionsErrors => {\n  const errors: AccessConditionsErrors = {};\n  const initialize = (cond: Condition | ConditionsData): ComplexErrors => {\n    if ('rule' in cond) {\n      return '';\n    }\n\n    const nestedErrors: NestedCriteriaErrors = {};\n    if (cond.allOf) {\n      nestedErrors.allOf = (cond.allOf.map(initialize) as string[]) || [];\n    }\n    if (cond.anyOf) {\n      nestedErrors.anyOf = (cond.anyOf.map(initialize) as string[]) || [];\n    }\n    if (cond.not) {\n      nestedErrors.not = (initialize(cond.not) as string) || '';\n    }\n\n    return nestedErrors;\n  };\n\n  if (criteria === criterias.condition) {\n    errors.condition = '';\n  } else if (criteria === criterias.not) {\n    const notCondition = conditions.not;\n\n    let notConditionType;\n    if (notCondition === undefined) {\n      notConditionType = NotConditionType.SimpleCondition;\n    } else if ('rule' in notCondition) {\n      notConditionType = NotConditionType.SimpleCondition;\n    } else {\n      notConditionType = NotConditionType.NestedCondition;\n    }\n\n    if (notConditionType === NotConditionType.SimpleCondition) {\n      errors.not = '';\n    } else {\n      errors.not = initialize(conditions.not!);\n    }\n  } else if (criteria === criterias.allOf || criteria === criterias.anyOf) {\n    errors[criteria] = Array.isArray(conditions[criteria])\n      ? (conditions[criteria] as Condition[]).map(initialize)\n      : [''];\n  }\n\n  return errors;\n};\n\nexport const resetErrors = (\n  criteria: string,\n  notConditionType = NotConditionType.SimpleCondition,\n): AccessConditionsErrors => {\n  const errors: AccessConditionsErrors = {};\n\n  if (\n    criteria === criterias.condition ||\n    (criteria === criterias.not &&\n      notConditionType === NotConditionType.SimpleCondition)\n  ) {\n    errors[criteria] = '';\n  }\n\n  if (criteria === criterias.allOf || criteria === criterias.anyOf) {\n    errors[criteria] = [''] as ComplexErrors[];\n  }\n\n  if (\n    criteria === criterias.not &&\n    notConditionType === NotConditionType.NestedCondition\n  ) {\n    (errors[criteria] as ComplexErrors) = { [criterias.allOf]: [''] };\n  }\n\n  return errors;\n};\n\nexport const setErrorMessage = (errors: RJSFValidationError[]) =>\n  errors[0] ? `Error in the ${errors[0].property} field.` : '';\n\nexport const getSimpleRuleErrors = (errors: ComplexErrors[]): string[] =>\n  (errors.filter(\n    (err: ComplexErrors) => typeof err === 'string',\n  ) as string[]) || [];\n\nexport const getNestedRuleErrors = (\n  errors: ComplexErrors[],\n): NestedCriteriaErrors[] =>\n  (errors.filter(\n    (err: ComplexErrors) => typeof err !== 'string',\n  ) as NestedCriteriaErrors[]) || [];\n\nexport const isNestedConditionRule = (r: Condition): boolean => {\n  return (\n    criterias.allOf in (r as ConditionsData) ||\n    criterias.anyOf in (r as ConditionsData) ||\n    criterias.not in (r as ConditionsData)\n  );\n};\n\nexport const getNestedConditionSimpleRulesCount = (\n  nc: Condition,\n  c: string,\n): number => {\n  if (c === criterias.not) {\n    return (nc[c as keyof Condition] as PermissionCondition).resourceType\n      ? 1\n      : 0;\n  }\n\n  return (nc[c as keyof Condition] as Condition[]).filter(\n    r => 'resourceType' in r,\n  ).length;\n};\n\nexport const getRowStyle = (c: Condition, isNestedCondition: boolean) =>\n  isNestedCondition\n    ? {\n        display:\n          (c as PermissionCondition).rule !== undefined ? 'flex' : 'none',\n      }\n    : { display: 'flex', gap: '10px' };\n\nexport const getRowKey = (isNestedCondition: boolean, ruleIndex: number) =>\n  isNestedCondition\n    ? `nestedCondition-rule-${ruleIndex}`\n    : `condition-rule-${ruleIndex}`;\n\nexport const hasAllOfOrAnyOfErrors = (\n  errors: AccessConditionsErrors,\n  criteria: string,\n): boolean => {\n  if (!errors) return false;\n\n  const criteriaErrors = errors[\n    criteria as keyof AccessConditionsErrors\n  ] as ComplexErrors[];\n  const simpleRuleErrors = criteriaErrors.filter(\n    e => typeof e === 'string',\n  ) as string[];\n  const nestedRuleErrors = criteriaErrors.filter(\n    e => typeof e !== 'string',\n  ) as NestedCriteriaErrors[];\n\n  if (simpleRuleErrors.some(e => e.length > 0)) {\n    return true;\n  }\n\n  return nestedRuleErrors.some(err => {\n    const nestedCriteria = Object.keys(err)[0] as keyof NestedCriteriaErrors;\n    const nestedErrors = err[nestedCriteria];\n\n    if (Array.isArray(nestedErrors)) {\n      return nestedErrors.some(e => e.length > 0);\n    }\n    return nestedErrors?.length > 0;\n  });\n};\n\nexport const hasSimpleConditionOrNotErrors = (\n  errors: AccessConditionsErrors,\n  criteria: string,\n): boolean => {\n  if (!errors) return false;\n  return (\n    ((errors[criteria as keyof AccessConditionsErrors] as string) || '')\n      .length > 0\n  );\n};\n\nexport const hasNestedNotErrors = (\n  errors: AccessConditionsErrors,\n  conditions: ConditionsData,\n  criteria: keyof ConditionsData,\n): boolean => {\n  if (!errors) return false;\n  const nestedCriteria = Object.keys(conditions[criteria]!)[0];\n  const nestedErrors = (\n    errors[\n      criterias.not as keyof AccessConditionsErrors\n    ] as NestedCriteriaErrors\n  )[nestedCriteria];\n\n  if (Array.isArray(nestedErrors)) {\n    return nestedErrors.some(e => e.length > 0);\n  }\n  return nestedErrors?.length > 0;\n};\n\nexport const isSimpleRule = (con: Condition): boolean => 'rule' in con;\n"],"names":[],"mappings":"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"}