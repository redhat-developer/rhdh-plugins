{"version":3,"file":"permissions.cjs.js","sources":["../src/permissions.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createPermission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\nexport const RESOURCE_TYPE_POLICY_ENTITY = 'policy-entity';\n\n/**\n * Convenience type for permission entity\n */\nexport type PolicyEntityPermission = ResourcePermission<\n  typeof RESOURCE_TYPE_POLICY_ENTITY\n>;\n\n/**\n * This permission is used to authorize actions that involve reading\n * permission policies.\n */\nexport const policyEntityReadPermission = createPermission({\n  name: 'policy.entity.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_POLICY_ENTITY,\n});\n\n/**\n * This permission is used to authorize the creation of new permission policies.\n */\nexport const policyEntityCreatePermission = createPermission({\n  name: 'policy.entity.create',\n  attributes: {\n    action: 'create',\n  },\n  resourceType: RESOURCE_TYPE_POLICY_ENTITY,\n});\n\n/**\n * This permission is used to authorize actions that involve removing permission\n * policies.\n */\nexport const policyEntityDeletePermission = createPermission({\n  name: 'policy.entity.delete',\n  attributes: {\n    action: 'delete',\n  },\n  resourceType: RESOURCE_TYPE_POLICY_ENTITY,\n});\n\n/**\n * This permission is used to authorize updating permission policies\n */\nexport const policyEntityUpdatePermission = createPermission({\n  name: 'policy.entity.update',\n  attributes: {\n    action: 'update',\n  },\n  resourceType: RESOURCE_TYPE_POLICY_ENTITY,\n});\n\n/**\n * List of all permissions on permission polices.\n */\nexport const policyEntityPermissions = [\n  policyEntityReadPermission,\n  policyEntityCreatePermission,\n  policyEntityDeletePermission,\n  policyEntityUpdatePermission,\n];\n"],"names":["createPermission"],"mappings":";;;;AAoBO,MAAM,2BAA8B,GAAA,gBAAA;AAapC,MAAM,6BAA6BA,uCAAiB,CAAA;AAAA,EACzD,IAAM,EAAA,oBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,2BAAA;AAChB,CAAC,EAAA;AAKM,MAAM,+BAA+BA,uCAAiB,CAAA;AAAA,EAC3D,IAAM,EAAA,sBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,2BAAA;AAChB,CAAC,EAAA;AAMM,MAAM,+BAA+BA,uCAAiB,CAAA;AAAA,EAC3D,IAAM,EAAA,sBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,2BAAA;AAChB,CAAC,EAAA;AAKM,MAAM,+BAA+BA,uCAAiB,CAAA;AAAA,EAC3D,IAAM,EAAA,sBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,2BAAA;AAChB,CAAC,EAAA;AAKM,MAAM,uBAA0B,GAAA;AAAA,EACrC,0BAAA;AAAA,EACA,4BAAA;AAAA,EACA,4BAAA;AAAA,EACA,4BAAA;AACF;;;;;;;;;"}