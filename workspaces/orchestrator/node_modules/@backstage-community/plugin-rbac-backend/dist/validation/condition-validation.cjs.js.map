{"version":3,"file":"condition-validation.cjs.js","sources":["../../src/validation/condition-validation.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  PermissionCondition,\n  PermissionCriteria,\n  PermissionRuleParams,\n} from '@backstage/plugin-permission-common';\n\nimport type {\n  PermissionAction,\n  RoleConditionalPolicyDecision,\n} from '@backstage-community/plugin-rbac-common';\n\nimport { isPermissionAction } from '../helper';\n\nexport function validateRoleCondition(\n  condition: RoleConditionalPolicyDecision<PermissionAction>,\n) {\n  if (!condition.roleEntityRef) {\n    throw new Error(`'roleEntityRef' must be specified in the role condition`);\n  }\n  if (!condition.result) {\n    throw new Error(`'result' must be specified in the role condition`);\n  }\n  if (!condition.pluginId) {\n    throw new Error(`'pluginId' must be specified in the role condition`);\n  }\n  if (!condition.resourceType) {\n    throw new Error(`'resourceType' must be specified in the role condition`);\n  }\n\n  if (\n    !condition.permissionMapping ||\n    condition.permissionMapping.length === 0\n  ) {\n    throw new Error(\n      `'permissionMapping' must be non empty array in the role condition`,\n    );\n  }\n  const nonActionValue = condition.permissionMapping.find(\n    action => !isPermissionAction(action),\n  );\n  if (nonActionValue) {\n    throw new Error(\n      `'permissionMapping' array contains non action value: '${nonActionValue}'`,\n    );\n  }\n\n  if (!condition.conditions) {\n    throw new Error(`'conditions' must be specified in the role condition`);\n  }\n  if (condition.conditions) {\n    validatePermissionCondition(\n      condition.conditions,\n      'roleCondition.conditions',\n    );\n  }\n}\n\n/**\n * validatePermissionCondition validate conditional permission policies using validateCriteria and validateRule.\n * @param conditionOrCriteria The Permission Criteria of the conditional permission.\n * @param jsonPathLocator The location in the JSON of the current check.\n * @returns undefined.\n */\nfunction validatePermissionCondition(\n  conditionOrCriteria: PermissionCriteria<\n    PermissionCondition<string, PermissionRuleParams>\n  >,\n  jsonPathLocator: string,\n) {\n  validateCriteria(conditionOrCriteria, jsonPathLocator);\n\n  if ('not' in conditionOrCriteria) {\n    validatePermissionCondition(\n      conditionOrCriteria.not,\n      `${jsonPathLocator}.not`,\n    );\n    return;\n  }\n\n  if ('allOf' in conditionOrCriteria) {\n    if (\n      !Array.isArray(conditionOrCriteria.allOf) ||\n      conditionOrCriteria.allOf.length === 0\n    ) {\n      throw new Error(\n        `${jsonPathLocator}.allOf criteria must be non empty array`,\n      );\n    }\n    for (const [index, elem] of conditionOrCriteria.allOf.entries()) {\n      validatePermissionCondition(elem, `${jsonPathLocator}.allOf[${index}]`);\n    }\n    return;\n  }\n\n  if ('anyOf' in conditionOrCriteria) {\n    if (\n      !Array.isArray(conditionOrCriteria.anyOf) ||\n      conditionOrCriteria.anyOf.length === 0\n    ) {\n      throw new Error(\n        `${jsonPathLocator}.anyOf criteria must be non empty array`,\n      );\n    }\n    for (const [index, elem] of conditionOrCriteria.anyOf.entries()) {\n      validatePermissionCondition(elem, `${jsonPathLocator}.anyOf[${index}]`);\n    }\n  }\n}\n\n/**\n * validateRule ensures that there is a rule and resource type associated with each conditional permission.\n * @param conditionOrCriteria The Permission Criteria of the conditional permission.\n * @param jsonPathLocator The location in the JSON of the current check.\n */\nfunction validateRule(\n  conditionOrCriteria: PermissionCriteria<\n    PermissionCondition<string, PermissionRuleParams>\n  >,\n  jsonPathLocator: string,\n) {\n  if (!('resourceType' in conditionOrCriteria)) {\n    throw new Error(\n      `'resourceType' must be specified in the ${jsonPathLocator}.condition`,\n    );\n  }\n  if (!('rule' in conditionOrCriteria)) {\n    throw new Error(\n      `'rule' must be specified in the ${jsonPathLocator}.condition`,\n    );\n  }\n}\n\n/**\n * validateCriteria ensures that there is only one of the following criteria: allOf, anyOf, and not, at any given level.\n * We want to make sure that there are no parallel conditional criteria for conditional permission policies as this is\n * not support by the permission framework.\n *\n * If more than one criteria are at a given level, we throw an error about the inability to support parallel conditions.\n * If no criteria are found, we validate the rule.\n *\n * @param conditionOrCriteria The Permission Criteria of the conditional permission.\n * @param jsonPathLocator The location in the JSON of the current check.\n */\nfunction validateCriteria(\n  conditionOrCriteria: PermissionCriteria<\n    PermissionCondition<string, PermissionRuleParams>\n  >,\n  jsonPathLocator: string,\n) {\n  const criteriaList = ['allOf', 'anyOf', 'not'];\n  const found: string[] = [];\n\n  for (const crit of criteriaList) {\n    if (crit in conditionOrCriteria) {\n      found.push(crit);\n    }\n  }\n\n  if (found.length > 1) {\n    throw new Error(\n      `RBAC plugin does not support parallel conditions, consider reworking request to include nested condition criteria. Conditional criteria causing the error ${found}.`,\n    );\n  } else if (found.length === 0) {\n    validateRule(conditionOrCriteria, jsonPathLocator);\n  }\n\n  if (found.length === 1 && 'rule' in conditionOrCriteria) {\n    throw new Error(\n      `RBAC plugin does not support parallel conditions alongside rules, consider reworking request to include nested condition criteria. Conditional criteria causing the error ${found}, 'rule: ${conditionOrCriteria.rule}'.`,\n    );\n  }\n}\n"],"names":["isPermissionAction"],"mappings":"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"}