{"version":3,"file":"types.esm.js","sources":["../src/types.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NotAllowedError } from '@backstage/errors';\nimport {\n  ConditionalPolicyDecision,\n  PermissionAttributes,\n} from '@backstage/plugin-permission-common';\n\n// 'rest' created via REST API\n// 'csv-file' created via policies-csv-file with defined path in the application configuration\n// 'configuration' created from application configuration\n// 'legacy'; preexisting policies\nexport type Source = string;\n\nexport type PermissionPolicyMetadata = {\n  source: Source;\n};\n\nexport type RoleMetadata = {\n  description?: string;\n  source?: Source;\n  modifiedBy?: string;\n  author?: string;\n  lastModified?: string;\n  createdAt?: string;\n};\n\nexport type Policy = {\n  permission?: string;\n  policy?: string;\n};\n\nexport type RoleBasedPolicy = Policy & {\n  entityReference?: string;\n  effect?: string;\n  metadata?: PermissionPolicyMetadata;\n};\n\nexport type Role = {\n  memberReferences: string[];\n  name: string;\n  metadata?: RoleMetadata;\n};\n\nexport type UpdatePolicy = {\n  oldPolicy: Policy;\n  newPolicy: Policy;\n};\n\nexport type NamedPolicy = {\n  name: string;\n\n  policy: string;\n};\n\nexport type ResourcedPolicy = NamedPolicy & {\n  resourceType: string;\n};\n\nexport type PolicyDetails = NamedPolicy | ResourcedPolicy;\n\nexport function isResourcedPolicy(\n  policy: PolicyDetails,\n): policy is ResourcedPolicy {\n  return 'resourceType' in policy;\n}\n\nexport type PluginPermissionMetaData = {\n  pluginId: string;\n  policies: PolicyDetails[];\n};\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\n// Permission framework attributes action has values: 'create' | 'read' | 'update' | 'delete' | undefined.\n// But we are introducing an action named \"use\" when action does not exist('undefined') to avoid\n// a more complicated model with multiple policy and request shapes.\nexport const PermissionActionValues = [\n  'create',\n  'read',\n  'update',\n  'delete',\n  'use',\n] as const;\nexport type PermissionAction = (typeof PermissionActionValues)[number];\nexport const toPermissionAction = (\n  attr: PermissionAttributes,\n): PermissionAction => attr.action ?? 'use';\n\nexport function isValidPermissionAction(\n  action: string,\n): action is PermissionAction {\n  return (PermissionActionValues as readonly string[]).includes(action);\n}\n\nexport type PermissionInfo = {\n  name: string;\n  action: PermissionAction;\n};\n\n// Frontend should use RoleConditionalPolicyDecision<PermissionAction>\nexport type RoleConditionalPolicyDecision<\n  T extends PermissionAction | PermissionInfo,\n> = ConditionalPolicyDecision & {\n  id: number;\n  roleEntityRef: string;\n\n  permissionMapping: T[];\n};\n\nexport const ConditionalAliases = {\n  CURRENT_USER: 'currentUser',\n  OWNER_REFS: 'ownerRefs',\n} as const;\n\nexport const CONDITION_ALIAS_SIGN = '$';\n\n// UnauthorizedError should be uniformely used for authorization errors.\nexport class UnauthorizedError extends NotAllowedError {\n  constructor() {\n    super('Unauthorized');\n  }\n}\n"],"names":[],"mappings":";;AA0EO,SAAS,kBACd,MAC2B,EAAA;AAC3B,EAAA,OAAO,cAAkB,IAAA,MAAA,CAAA;AAC3B,CAAA;AAYO,MAAM,sBAAyB,GAAA;AAAA,EACpC,QAAA;AAAA,EACA,MAAA;AAAA,EACA,QAAA;AAAA,EACA,QAAA;AAAA,EACA,KAAA;AACF,EAAA;AAEO,MAAM,kBAAqB,GAAA,CAChC,IACqB,KAAA,IAAA,CAAK,MAAU,IAAA,MAAA;AAE/B,SAAS,wBACd,MAC4B,EAAA;AAC5B,EAAQ,OAAA,sBAAA,CAA6C,SAAS,MAAM,CAAA,CAAA;AACtE,CAAA;AAiBO,MAAM,kBAAqB,GAAA;AAAA,EAChC,YAAc,EAAA,aAAA;AAAA,EACd,UAAY,EAAA,WAAA;AACd,EAAA;AAEO,MAAM,oBAAuB,GAAA,IAAA;AAG7B,MAAM,0BAA0B,eAAgB,CAAA;AAAA,EACrD,WAAc,GAAA;AACZ,IAAA,KAAA,CAAM,cAAc,CAAA,CAAA;AAAA,GACtB;AACF;;;;"}